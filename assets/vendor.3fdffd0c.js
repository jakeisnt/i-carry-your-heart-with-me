var QS=Object.defineProperty,eT=Object.defineProperties;var tT=Object.getOwnPropertyDescriptors;var Fp=Object.getOwnPropertySymbols;var BA=Object.prototype.hasOwnProperty,VA=Object.prototype.propertyIsEnumerable;var WA=(e,t,a)=>t in e?QS(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,Ze=(e,t)=>{for(var a in t||(t={}))BA.call(t,a)&&WA(e,a,t[a]);if(Fp)for(var a of Fp(t))VA.call(t,a)&&WA(e,a,t[a]);return e},Sa=(e,t)=>eT(e,tT(t));var UA=(e,t)=>{var a={};for(var r in e)BA.call(e,r)&&t.indexOf(r)<0&&(a[r]=e[r]);if(e!=null&&Fp)for(var r of Fp(e))t.indexOf(r)<0&&VA.call(e,r)&&(a[r]=e[r]);return a};var W5=Object.defineProperty,aT=(e,t,a)=>t in e?W5(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,af=(e,t)=>{for(var a in t)W5(e,a,{get:t[a],enumerable:!0})},fe=(e,t,a)=>(aT(e,typeof t!="symbol"?t+"":t,a),a),B5=(e,t,a)=>{if(!t.has(e))throw TypeError("Cannot "+a)},$p=(e,t,a)=>(B5(e,t,"read from private field"),a?a.call(e):t.get(e)),Mp=(e,t,a)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,a)},_p=(e,t,a,r)=>(B5(e,t,"write to private field"),r?r.call(e,a):t.set(e,a),a);function de(...e){const t=new Date,a=`${t.getHours().toString().padStart(2,"0")}:${t.getMinutes().toString().padStart(2,"0")}:${t.getSeconds().toString().padStart(2,"0")}.${t.getMilliseconds().toString().padStart(3,"0")}`;e&&console.log(a,"Human:",...e)}function rT(e,t){const a=e.endsWith("/")?"":"/",n=t.startsWith(".")||t.startsWith("/")||t.startsWith("http:")||t.startsWith("https:")||t.startsWith("file:")?`${t}`:`${e}${a}${t}`;if(!n.toLocaleLowerCase().includes(".json"))throw new Error(`modelpath error: expecting json file: ${n}`);return n}var ue=()=>typeof performance!="undefined"?performance.now():parseInt((Number(process.hrtime.bigint())/1e3/1e3).toString());function V5(e,t,a="config",r=[]){for(const n of Object.keys(t))if(typeof t[n]=="object")V5(e[n],t[n],n,r);else{const s=e&&typeof e[n]!="undefined";s||r.push({reason:"unknown property",where:`${a}.${n} = ${t[n]}`});const i=e&&typeof e[n]==typeof t[n];s&&!i&&r.push({reason:"property type mismatch",where:`${a}.${n} = ${t[n]}`,expected:typeof e[n]})}return t.debug&&a==="config"&&r.length>0&&de("invalid configuration",r),r}function or(...e){const t=a=>a&&typeof a=="object";return e.reduce((a,r)=>(Object.keys(r||{}).forEach(n=>{const s=a[n],i=r[n];Array.isArray(s)&&Array.isArray(i)?a[n]=s.concat(...i):t(s)&&t(i)?a[n]=or(s,i):a[n]=i}),a),{})}var Ml={backend:"",modelBasePath:"",cacheModels:!0,wasmPath:"",wasmPlatformFetch:!1,debug:!0,async:!0,warmup:"full",cacheSensitivity:.7,skipAllowed:!1,deallocate:!1,filter:{enabled:!0,equalization:!1,width:0,height:0,flip:!1,return:!0,brightness:0,contrast:0,sharpness:0,blur:0,saturation:0,hue:0,negative:!1,sepia:!1,vintage:!1,kodachrome:!1,technicolor:!1,polaroid:!1,pixelate:0},gesture:{enabled:!0},face:{enabled:!0,detector:{modelPath:"blazeface.json",rotation:!0,maxDetected:1,skipFrames:99,skipTime:2500,minConfidence:.2,iouThreshold:.1,mask:!1,return:!1},mesh:{enabled:!0,modelPath:"facemesh.json"},iris:{enabled:!0,modelPath:"iris.json"},emotion:{enabled:!0,minConfidence:.1,skipFrames:99,skipTime:1500,modelPath:"emotion.json"},description:{enabled:!0,modelPath:"faceres.json",skipFrames:99,skipTime:3e3,minConfidence:.1},antispoof:{enabled:!1,skipFrames:99,skipTime:4e3,modelPath:"antispoof.json"},liveness:{enabled:!1,skipFrames:99,skipTime:4e3,modelPath:"liveness.json"}},body:{enabled:!0,modelPath:"movenet-lightning.json",maxDetected:-1,minConfidence:.3,skipFrames:1,skipTime:200},hand:{enabled:!0,rotation:!0,skipFrames:99,skipTime:1e3,minConfidence:.5,iouThreshold:.2,maxDetected:-1,landmarks:!0,detector:{modelPath:"handtrack.json"},skeleton:{modelPath:"handlandmark-full.json"}},object:{enabled:!1,modelPath:"mb3-centernet.json",minConfidence:.2,iouThreshold:.4,maxDetected:10,skipFrames:99,skipTime:2e3},segmentation:{enabled:!1,modelPath:"selfie.json",blur:8}},Qd={};af(Qd,{Abs:()=>Io,Acos:()=>ku,Acosh:()=>Iu,AdadeltaOptimizer:()=>r0,AdagradOptimizer:()=>n0,AdamOptimizer:()=>s0,AdamaxOptimizer:()=>i0,Add:()=>qn,AddN:()=>Ws,All:()=>Su,Any:()=>Tu,ArgMax:()=>Bs,ArgMin:()=>Cu,Asin:()=>Nu,Asinh:()=>Eu,Atan:()=>Ru,Atan2:()=>$u,Atanh:()=>Fu,AvgPool:()=>Vs,AvgPool3D:()=>mh,AvgPool3DGrad:()=>uf,AvgPoolGrad:()=>lf,BackendWasm:()=>O8,BatchMatMul:()=>Us,BatchToSpaceND:()=>So,Bincount:()=>df,BroadcastArgs:()=>hf,BroadcastTo:()=>rv,Callback:()=>Ok,CallbackList:()=>Ow,Cast:()=>Gs,Ceil:()=>js,ClipByValue:()=>Xn,Complex:()=>gh,ComplexAbs:()=>yh,Concat:()=>To,Conv2D:()=>Hs,Conv2DBackpropFilter:()=>pf,Conv2DBackpropInput:()=>qs,Conv3D:()=>Ah,Conv3DBackpropFilterV2:()=>cf,Conv3DBackpropInputV2:()=>ff,Cos:()=>Xs,Cosh:()=>Ks,CropAndResize:()=>No,Cumsum:()=>Co,CustomCallback:()=>Pw,DataStorage:()=>fh,DenseBincount:()=>mf,DepthToSpace:()=>Eo,DepthwiseConv2dNative:()=>Zs,DepthwiseConv2dNativeBackpropFilter:()=>gf,DepthwiseConv2dNativeBackpropInput:()=>yf,Diag:()=>Af,Dilation2D:()=>xh,Dilation2DBackpropFilter:()=>Tc,Dilation2DBackpropInput:()=>Sc,ENV:()=>Pn,EarlyStopping:()=>Dk,Einsum:()=>bh,Elu:()=>Js,EluGrad:()=>xf,Environment:()=>tv,Equal:()=>Ro,Erf:()=>Mu,Exp:()=>Qs,ExpandDims:()=>Fo,Expm1:()=>$o,FFT:()=>bf,Fill:()=>_u,FlipLeftRight:()=>Mo,Floor:()=>ei,FloorDiv:()=>ti,FromPixels:()=>th,FusedBatchNorm:()=>ai,FusedConv2D:()=>Ts,FusedDepthwiseConv2D:()=>Cs,GPGPUContext:()=>Zd,GatherNd:()=>zo,GatherV2:()=>_o,GraphModel:()=>Ty,Greater:()=>Oo,GreaterEqual:()=>ri,History:()=>Dw,IFFT:()=>vf,Identity:()=>ni,Imag:()=>vh,InputSpec:()=>Xt,IsFinite:()=>zu,IsInf:()=>Ou,IsNan:()=>Du,KernelBackend:()=>vu,LRN:()=>kh,LRNGrad:()=>kf,LayerVariable:()=>$w,LayersModel:()=>Un,LeakyRelu:()=>si,Less:()=>Do,LessEqual:()=>Po,LinSpace:()=>wf,Log:()=>ii,Log1p:()=>Pu,LogSoftmax:()=>nv,LogicalAnd:()=>Lo,LogicalNot:()=>Lu,LogicalOr:()=>wh,MathBackendCPU:()=>Ey,MathBackendWebGL:()=>_0,Max:()=>oi,MaxPool:()=>ui,MaxPool3D:()=>Ih,MaxPool3DGrad:()=>Sf,MaxPoolGrad:()=>If,MaxPoolWithArgmax:()=>Tf,Maximum:()=>li,Mean:()=>di,Min:()=>hi,Minimum:()=>pi,MirrorPad:()=>ci,Mod:()=>Wu,MomentumOptimizer:()=>o0,Multinomial:()=>Cf,Multiply:()=>fi,Neg:()=>Wo,NonMaxSuppressionV3:()=>Vo,NonMaxSuppressionV4:()=>Bu,NonMaxSuppressionV5:()=>Uo,NotEqual:()=>Bo,OP_SCOPE_SUFFIX:()=>xv,OneHot:()=>jo,OnesLike:()=>Go,Optimizer:()=>Jn,OptimizerConstructors:()=>us,Pack:()=>Ho,PadV2:()=>mi,Pool:()=>XT,Pow:()=>gi,Prelu:()=>yi,Prod:()=>qo,RMSPropOptimizer:()=>l0,RNN:()=>Qn,Range:()=>Vu,Rank:()=>uv,Real:()=>Sh,RealDiv:()=>Ys,Reciprocal:()=>Uu,Reduction:()=>hw,Relu:()=>Ai,Relu6:()=>bi,Reshape:()=>Xo,ResizeBilinear:()=>xi,ResizeBilinearGrad:()=>Ef,ResizeNearestNeighbor:()=>Gu,ResizeNearestNeighborGrad:()=>Nf,Reverse:()=>Ko,RotateWithOffset:()=>ul,Round:()=>Zo,Rsqrt:()=>vi,SGDOptimizer:()=>Gh,ScatterNd:()=>Yo,Select:()=>Jo,Selu:()=>ju,Sequential:()=>w0,Sigmoid:()=>ki,Sign:()=>Hu,Sin:()=>wi,Sinh:()=>el,Slice:()=>Qo,Softmax:()=>Ti,Softplus:()=>qu,SpaceToBatchND:()=>tl,SparseFillEmptyRows:()=>Th,SparseReshape:()=>Xu,SparseSegmentMean:()=>Ch,SparseSegmentSum:()=>Nh,SparseToDense:()=>Eh,SplitV:()=>al,Sqrt:()=>Ii,Square:()=>Ku,SquaredDifference:()=>Ci,Step:()=>Fi,StridedSlice:()=>rl,StringNGrams:()=>Rh,StringSplit:()=>Rf,StringToHashBucketFast:()=>Ff,Sub:()=>Ni,Sum:()=>Si,SymbolicTensor:()=>Kr,Tan:()=>nl,Tanh:()=>Ei,Tensor:()=>et,TensorBuffer:()=>aa,Tile:()=>Kn,TopK:()=>sl,Transform:()=>il,Transpose:()=>Ri,Unique:()=>$f,Unpack:()=>ol,UnsortedSegmentSum:()=>Fh,Variable:()=>nh,ZerosLike:()=>ll,_FusedMatMul:()=>Ss,abs:()=>Qt,acos:()=>r3,acosh:()=>n3,add:()=>ie,addN:()=>f2,all:()=>m2,any:()=>Mc,argMax:()=>Gn,argMin:()=>s3,asin:()=>i3,asinh:()=>o3,atan:()=>l3,atan2:()=>u3,atanh:()=>d3,avgPool:()=>zf,avgPool3d:()=>y2,backend:()=>Es,backend_util:()=>N,basicLSTMCell:()=>MN,batchNorm:()=>iu,batchNorm2d:()=>f3,batchNorm3d:()=>m3,batchNorm4d:()=>g3,batchToSpaceND:()=>Of,bincount:()=>A2,booleanMaskAsync:()=>jF,broadcastArgs:()=>y3,broadcastTo:()=>Xd,broadcast_util:()=>dl,browser:()=>Ur,buffer:()=>Le,callbacks:()=>AW,cast:()=>pe,ceil:()=>A3,clipByValue:()=>hr,clone:()=>Ha,complex:()=>Ns,concat:()=>Ct,concat1d:()=>x3,concat2d:()=>Df,concat3d:()=>b3,concat4d:()=>v3,constraints:()=>xw,conv1d:()=>x2,conv2d:()=>Fs,conv2dTranspose:()=>v2,conv3d:()=>w2,conv3dTranspose:()=>k3,copyRegisteredKernels:()=>JT,cos:()=>Pf,cosh:()=>k2,cosineWindow:()=>q2,cumsum:()=>I2,customGrad:()=>bn,data:()=>l7,denseBincount:()=>I3,deprecationWarn:()=>e3,depthToSpace:()=>S3,depthwiseConv2d:()=>Ph,deregisterOp:()=>vW,device_util:()=>zh,diag:()=>uE,dilation2d:()=>T3,disableDeprecationWarnings:()=>KC,dispose:()=>ne,disposeVariables:()=>ZC,div:()=>ge,divNoNan:()=>C3,dot:()=>gE,dropout:()=>aw,einsum:()=>N3,elu:()=>Lh,enableDebugMode:()=>XC,enableProdMode:()=>Qv,enclosingPowerOfTwo:()=>rw,engine:()=>sr,env:()=>J,equal:()=>xr,erf:()=>E3,exp:()=>br,expandDims:()=>ua,expm1:()=>R3,eye:()=>S2,fft:()=>Zf,fill:()=>Yu,findBackend:()=>a3,findBackendFactory:()=>eN,floor:()=>Wh,floorDiv:()=>_f,forceHalfFloat:()=>E4,fused:()=>Ms,gather:()=>ou,gatherND:()=>tw,gather_util:()=>l2,getBackend:()=>_r,getGradient:()=>Hm,getKernel:()=>Cc,getKernelsForBackend:()=>uo,getThreadsCount:()=>n0e,gpgpu_util:()=>i4,grad:()=>BE,grads:()=>VE,greater:()=>cr,greaterEqual:()=>hl,ifft:()=>lh,imag:()=>Lf,image:()=>De,inTopKAsync:()=>a$,initializers:()=>kw,input:()=>Jw,io:()=>Na,irfft:()=>V2,isFinite:()=>FE,isInf:()=>ME,isNaN:()=>F3,keep:()=>da,kernel_impls:()=>Pr,layers:()=>Rw,leakyRelu:()=>Wf,less:()=>T2,lessEqual:()=>pl,linalg:()=>pw,linspace:()=>$3,loadGraphModel:()=>IB,loadLayersModel:()=>EP,localResponseNormalization:()=>M3,log:()=>vr,log1p:()=>Bf,logSigmoid:()=>XE,logSoftmax:()=>C2,logSumExp:()=>P3,logicalAnd:()=>tn,logicalNot:()=>Uf,logicalOr:()=>R2,logicalXor:()=>iR,losses:()=>WM,matMul:()=>He,math:()=>Mv,max:()=>Fa,maxPool:()=>Gf,maxPool3d:()=>F2,maxPoolWithArgmax:()=>L3,maximum:()=>Zn,mean:()=>Pt,memory:()=>Fc,meshgrid:()=>pR,metrics:()=>Mk,min:()=>no,minimum:()=>Bh,mirrorPad:()=>W3,mod:()=>jf,model:()=>CP,models:()=>_k,moments:()=>Hf,movingAverage:()=>XF,mul:()=>V,multiRNNCell:()=>bR,multinomial:()=>B3,neg:()=>$t,nextFrame:()=>cw,norm:()=>j2,notEqual:()=>lu,oneHot:()=>ih,ones:()=>dr,onesLike:()=>wr,op:()=>G,outerProduct:()=>SR,pad:()=>kn,pad1d:()=>NR,pad2d:()=>RR,pad3d:()=>$R,pad4d:()=>_R,pool:()=>LR,pow:()=>$s,prelu:()=>Xf,print:()=>Ev,prod:()=>$2,profile:()=>YC,rand:()=>GR,randomGamma:()=>XR,randomNormal:()=>V3,randomUniform:()=>Qu,range:()=>uu,ready:()=>$c,real:()=>oh,reciprocal:()=>U3,registerBackend:()=>Zu,registerCallbackConstructor:()=>RP,registerGradient:()=>sv,registerKernel:()=>An,registerOp:()=>bW,regularizers:()=>zk,relu:()=>In,relu6:()=>z2,removeBackend:()=>QC,reshape:()=>q,reverse:()=>kr,reverse1d:()=>rF,reverse2d:()=>sF,reverse3d:()=>oF,reverse4d:()=>uF,rfft:()=>Yf,round:()=>O2,rsqrt:()=>D2,scalar:()=>Ie,scatterND:()=>ew,scatter_util:()=>u2,selu:()=>P2,separableConv2d:()=>G3,sequential:()=>NP,serialization:()=>oe,setBackend:()=>t3,setPlatform:()=>tN,setThreadsCount:()=>r0e,setWasmPath:()=>a0e,setWasmPaths:()=>D8,setWebGLContext:()=>Vy,setdiff1dAsync:()=>j3,shared:()=>F0,sigmoid:()=>Ar,sign:()=>H3,signal:()=>LM,sin:()=>L2,sinh:()=>W2,slice:()=>_e,slice1d:()=>Kf,slice2d:()=>B2,slice3d:()=>du,slice4d:()=>hu,slice_util:()=>Ft,softmax:()=>Vh,softplus:()=>Ju,spaceToBatchND:()=>qf,sparse:()=>zd,sparseToDense:()=>H2,spectral:()=>PM,split:()=>va,sqrt:()=>wa,square:()=>ct,squaredDifference:()=>U2,squeeze:()=>ft,stack:()=>_a,step:()=>Uh,stridedSlice:()=>q3,string:()=>uc,sub:()=>me,sum:()=>we,sumOutType:()=>_h,tan:()=>X3,tanh:()=>su,tensor:()=>lt,tensor1d:()=>Lt,tensor2d:()=>Vn,tensor3d:()=>zv,tensor4d:()=>zF,tensor5d:()=>OF,tensor6d:()=>DF,tensor_util:()=>Zr,test_util:()=>Kv,tidy:()=>Z,tile:()=>zr,time:()=>JC,topk:()=>K3,train:()=>qi,transpose:()=>Ye,truncatedNormal:()=>Jf,unique:()=>sg,unregisterGradient:()=>YT,unregisterKernel:()=>ZT,unsortedSegmentSum:()=>Z3,unstack:()=>Ir,upcastType:()=>$a,util:()=>w,valueAndGrad:()=>UE,valueAndGrads:()=>GE,variable:()=>Y3,variableGrads:()=>_3,version:()=>hA,version_converter:()=>SB,version_core:()=>Jv,version_cpu:()=>hU,version_layers:()=>A1,version_wasm:()=>s0e,version_webgl:()=>_Z,webgl:()=>zZ,webgl_util:()=>F6,webgpu:()=>$I,where:()=>Ma,whereAsync:()=>G2,zeros:()=>Ut,zerosLike:()=>Je});var nT=Object.create,rf=Object.defineProperty,sT=Object.getOwnPropertyDescriptor,U5=Object.getOwnPropertyNames,iT=Object.getPrototypeOf,oT=Object.prototype.hasOwnProperty,lT=e=>rf(e,"__esModule",{value:!0}),sa=(e,t)=>function(){return t||(0,e[U5(e)[0]])((t={exports:{}}).exports,t),t.exports},ze=(e,t)=>{for(var a in t)rf(e,a,{get:t[a],enumerable:!0})},uT=(e,t,a,r)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of U5(t))!oT.call(e,n)&&(a||n!=="default")&&rf(e,n,{get:()=>t[n],enumerable:!(r=sT(t,n))||r.enumerable});return e},wo=(e,t)=>uT(lT(rf(e!=null?nT(iT(e)):{},"default",!t&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),dT=sa({"src/node_modules/long/src/long.js"(e,t){t.exports=r;var a=null;try{a=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function r(k,D,_){this.low=k|0,this.high=D|0,this.unsigned=!!_}r.prototype.__isLong__,Object.defineProperty(r.prototype,"__isLong__",{value:!0});function n(k){return(k&&k.__isLong__)===!0}r.isLong=n;var s={},i={};function o(k,D){var _,P,j;return D?(k>>>=0,(j=0<=k&&k<256)&&(P=i[k],P)?P:(_=d(k,(k|0)<0?-1:0,!0),j&&(i[k]=_),_)):(k|=0,(j=-128<=k&&k<128)&&(P=s[k],P)?P:(_=d(k,k<0?-1:0,!1),j&&(s[k]=_),_))}r.fromInt=o;function l(k,D){if(isNaN(k))return D?b:x;if(D){if(k<0)return b;if(k>=g)return R}else{if(k<=-y)return z;if(k+1>=y)return E}return k<0?l(-k,D).neg():d(k%m|0,k/m|0,D)}r.fromNumber=l;function d(k,D,_){return new r(k,D,_)}r.fromBits=d;var u=Math.pow;function h(k,D,_){if(k.length===0)throw Error("empty string");if(k==="NaN"||k==="Infinity"||k==="+Infinity"||k==="-Infinity")return x;if(typeof D=="number"?(_=D,D=!1):D=!!D,_=_||10,_<2||36<_)throw RangeError("radix");var P;if((P=k.indexOf("-"))>0)throw Error("interior hyphen");if(P===0)return h(k.substring(1),D,_).neg();for(var j=l(u(_,8)),L=x,B=0;B<k.length;B+=8){var W=Math.min(8,k.length-B),ee=parseInt(k.substring(B,B+W),_);if(W<8){var te=l(u(_,W));L=L.mul(te).add(l(ee))}else L=L.mul(j),L=L.add(l(ee))}return L.unsigned=D,L}r.fromString=h;function p(k,D){return typeof k=="number"?l(k,D):typeof k=="string"?h(k,D):d(k.low,k.high,typeof D=="boolean"?D:k.unsigned)}r.fromValue=p;var c=1<<16,f=1<<24,m=c*c,g=m*m,y=g/2,A=o(f),x=o(0);r.ZERO=x;var b=o(0,!0);r.UZERO=b;var v=o(1);r.ONE=v;var T=o(1,!0);r.UONE=T;var C=o(-1);r.NEG_ONE=C;var E=d(-1,2147483647,!1);r.MAX_VALUE=E;var R=d(-1,-1,!0);r.MAX_UNSIGNED_VALUE=R;var z=d(0,-2147483648,!1);r.MIN_VALUE=z;var F=r.prototype;F.toInt=function(){return this.unsigned?this.low>>>0:this.low},F.toNumber=function(){return this.unsigned?(this.high>>>0)*m+(this.low>>>0):this.high*m+(this.low>>>0)},F.toString=function(k){if(k=k||10,k<2||36<k)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(z)){var D=l(k),_=this.div(D),P=_.mul(D).sub(this);return _.toString(k)+P.toInt().toString(k)}else return"-"+this.neg().toString(k);for(var j=l(u(k,6),this.unsigned),L=this,B="";;){var W=L.div(j),ee=L.sub(W.mul(j)).toInt()>>>0,te=ee.toString(k);if(L=W,L.isZero())return te+B;for(;te.length<6;)te="0"+te;B=""+te+B}},F.getHighBits=function(){return this.high},F.getHighBitsUnsigned=function(){return this.high>>>0},F.getLowBits=function(){return this.low},F.getLowBitsUnsigned=function(){return this.low>>>0},F.getNumBitsAbs=function(){if(this.isNegative())return this.eq(z)?64:this.neg().getNumBitsAbs();for(var k=this.high!=0?this.high:this.low,D=31;D>0&&(k&1<<D)==0;D--);return this.high!=0?D+33:D+1},F.isZero=function(){return this.high===0&&this.low===0},F.eqz=F.isZero,F.isNegative=function(){return!this.unsigned&&this.high<0},F.isPositive=function(){return this.unsigned||this.high>=0},F.isOdd=function(){return(this.low&1)===1},F.isEven=function(){return(this.low&1)===0},F.equals=function(k){return n(k)||(k=p(k)),this.unsigned!==k.unsigned&&this.high>>>31===1&&k.high>>>31===1?!1:this.high===k.high&&this.low===k.low},F.eq=F.equals,F.notEquals=function(k){return!this.eq(k)},F.neq=F.notEquals,F.ne=F.notEquals,F.lessThan=function(k){return this.comp(k)<0},F.lt=F.lessThan,F.lessThanOrEqual=function(k){return this.comp(k)<=0},F.lte=F.lessThanOrEqual,F.le=F.lessThanOrEqual,F.greaterThan=function(k){return this.comp(k)>0},F.gt=F.greaterThan,F.greaterThanOrEqual=function(k){return this.comp(k)>=0},F.gte=F.greaterThanOrEqual,F.ge=F.greaterThanOrEqual,F.compare=function(k){if(n(k)||(k=p(k)),this.eq(k))return 0;var D=this.isNegative(),_=k.isNegative();return D&&!_?-1:!D&&_?1:this.unsigned?k.high>>>0>this.high>>>0||k.high===this.high&&k.low>>>0>this.low>>>0?-1:1:this.sub(k).isNegative()?-1:1},F.comp=F.compare,F.negate=function(){return!this.unsigned&&this.eq(z)?z:this.not().add(v)},F.neg=F.negate,F.add=function(k){n(k)||(k=p(k));var D=this.high>>>16,_=this.high&65535,P=this.low>>>16,j=this.low&65535,L=k.high>>>16,B=k.high&65535,W=k.low>>>16,ee=k.low&65535,te=0,re=0,Y=0,ae=0;return ae+=j+ee,Y+=ae>>>16,ae&=65535,Y+=P+W,re+=Y>>>16,Y&=65535,re+=_+B,te+=re>>>16,re&=65535,te+=D+L,te&=65535,d(Y<<16|ae,te<<16|re,this.unsigned)},F.subtract=function(k){return n(k)||(k=p(k)),this.add(k.neg())},F.sub=F.subtract,F.multiply=function(k){if(this.isZero())return x;if(n(k)||(k=p(k)),a){var D=a.mul(this.low,this.high,k.low,k.high);return d(D,a.get_high(),this.unsigned)}if(k.isZero())return x;if(this.eq(z))return k.isOdd()?z:x;if(k.eq(z))return this.isOdd()?z:x;if(this.isNegative())return k.isNegative()?this.neg().mul(k.neg()):this.neg().mul(k).neg();if(k.isNegative())return this.mul(k.neg()).neg();if(this.lt(A)&&k.lt(A))return l(this.toNumber()*k.toNumber(),this.unsigned);var _=this.high>>>16,P=this.high&65535,j=this.low>>>16,L=this.low&65535,B=k.high>>>16,W=k.high&65535,ee=k.low>>>16,te=k.low&65535,re=0,Y=0,ae=0,le=0;return le+=L*te,ae+=le>>>16,le&=65535,ae+=j*te,Y+=ae>>>16,ae&=65535,ae+=L*ee,Y+=ae>>>16,ae&=65535,Y+=P*te,re+=Y>>>16,Y&=65535,Y+=j*ee,re+=Y>>>16,Y&=65535,Y+=L*W,re+=Y>>>16,Y&=65535,re+=_*te+P*ee+j*W+L*B,re&=65535,d(ae<<16|le,re<<16|Y,this.unsigned)},F.mul=F.multiply,F.divide=function(k){if(n(k)||(k=p(k)),k.isZero())throw Error("division by zero");if(a){if(!this.unsigned&&this.high===-2147483648&&k.low===-1&&k.high===-1)return this;var D=(this.unsigned?a.div_u:a.div_s)(this.low,this.high,k.low,k.high);return d(D,a.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?b:x;var _,P,j;if(this.unsigned){if(k.unsigned||(k=k.toUnsigned()),k.gt(this))return b;if(k.gt(this.shru(1)))return T;j=b}else{if(this.eq(z)){if(k.eq(v)||k.eq(C))return z;if(k.eq(z))return v;var L=this.shr(1);return _=L.div(k).shl(1),_.eq(x)?k.isNegative()?v:C:(P=this.sub(k.mul(_)),j=_.add(P.div(k)),j)}else if(k.eq(z))return this.unsigned?b:x;if(this.isNegative())return k.isNegative()?this.neg().div(k.neg()):this.neg().div(k).neg();if(k.isNegative())return this.div(k.neg()).neg();j=x}for(P=this;P.gte(k);){_=Math.max(1,Math.floor(P.toNumber()/k.toNumber()));for(var B=Math.ceil(Math.log(_)/Math.LN2),W=B<=48?1:u(2,B-48),ee=l(_),te=ee.mul(k);te.isNegative()||te.gt(P);)_-=W,ee=l(_,this.unsigned),te=ee.mul(k);ee.isZero()&&(ee=v),j=j.add(ee),P=P.sub(te)}return j},F.div=F.divide,F.modulo=function(k){if(n(k)||(k=p(k)),a){var D=(this.unsigned?a.rem_u:a.rem_s)(this.low,this.high,k.low,k.high);return d(D,a.get_high(),this.unsigned)}return this.sub(this.div(k).mul(k))},F.mod=F.modulo,F.rem=F.modulo,F.not=function(){return d(~this.low,~this.high,this.unsigned)},F.and=function(k){return n(k)||(k=p(k)),d(this.low&k.low,this.high&k.high,this.unsigned)},F.or=function(k){return n(k)||(k=p(k)),d(this.low|k.low,this.high|k.high,this.unsigned)},F.xor=function(k){return n(k)||(k=p(k)),d(this.low^k.low,this.high^k.high,this.unsigned)},F.shiftLeft=function(k){return n(k)&&(k=k.toInt()),(k&=63)===0?this:k<32?d(this.low<<k,this.high<<k|this.low>>>32-k,this.unsigned):d(0,this.low<<k-32,this.unsigned)},F.shl=F.shiftLeft,F.shiftRight=function(k){return n(k)&&(k=k.toInt()),(k&=63)===0?this:k<32?d(this.low>>>k|this.high<<32-k,this.high>>k,this.unsigned):d(this.high>>k-32,this.high>=0?0:-1,this.unsigned)},F.shr=F.shiftRight,F.shiftRightUnsigned=function(k){if(n(k)&&(k=k.toInt()),k&=63,k===0)return this;var D=this.high;if(k<32){var _=this.low;return d(_>>>k|D<<32-k,D>>>k,this.unsigned)}else return k===32?d(D,0,this.unsigned):d(D>>>k-32,0,this.unsigned)},F.shru=F.shiftRightUnsigned,F.shr_u=F.shiftRightUnsigned,F.toSigned=function(){return this.unsigned?d(this.low,this.high,!1):this},F.toUnsigned=function(){return this.unsigned?this:d(this.low,this.high,!0)},F.toBytes=function(k){return k?this.toBytesLE():this.toBytesBE()},F.toBytesLE=function(){var k=this.high,D=this.low;return[D&255,D>>>8&255,D>>>16&255,D>>>24,k&255,k>>>8&255,k>>>16&255,k>>>24]},F.toBytesBE=function(){var k=this.high,D=this.low;return[k>>>24,k>>>16&255,k>>>8&255,k&255,D>>>24,D>>>16&255,D>>>8&255,D&255]},r.fromBytes=function(k,D,_){return _?r.fromBytesLE(k,D):r.fromBytesBE(k,D)},r.fromBytesLE=function(k,D){return new r(k[0]|k[1]<<8|k[2]<<16|k[3]<<24,k[4]|k[5]<<8|k[6]<<16|k[7]<<24,D)},r.fromBytesBE=function(k,D){return new r(k[4]<<24|k[5]<<16|k[6]<<8|k[7],k[0]<<24|k[1]<<16|k[2]<<8|k[3],D)}}}),hT=sa({"(disabled):src/node_modules/node-fetch/browser.js"(){}}),pT=sa({"(disabled):util"(){}}),cT=sa({"src/node_modules/seedrandom/lib/alea.js"(e,t){(function(a,r,n){function s(d){var u=this,h=l();u.next=function(){var p=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=p-(u.c=p|0)},u.c=1,u.s0=h(" "),u.s1=h(" "),u.s2=h(" "),u.s0-=h(d),u.s0<0&&(u.s0+=1),u.s1-=h(d),u.s1<0&&(u.s1+=1),u.s2-=h(d),u.s2<0&&(u.s2+=1),h=null}function i(d,u){return u.c=d.c,u.s0=d.s0,u.s1=d.s1,u.s2=d.s2,u}function o(d,u){var h=new s(d),p=u&&u.state,c=h.next;return c.int32=function(){return h.next()*4294967296|0},c.double=function(){return c()+(c()*2097152|0)*11102230246251565e-32},c.quick=c,p&&(typeof p=="object"&&i(p,h),c.state=function(){return i(h,{})}),c}function l(){var d=4022871197,u=function(h){h=String(h);for(var p=0;p<h.length;p++){d+=h.charCodeAt(p);var c=.02519603282416938*d;d=c>>>0,c-=d,c*=d,d=c>>>0,c-=d,d+=c*4294967296}return(d>>>0)*23283064365386963e-26};return u}r&&r.exports?r.exports=o:n&&n.amd?n(function(){return o}):this.alea=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),fT=sa({"src/node_modules/seedrandom/lib/xor128.js"(e,t){(function(a,r,n){function s(l){var d=this,u="";d.x=0,d.y=0,d.z=0,d.w=0,d.next=function(){var p=d.x^d.x<<11;return d.x=d.y,d.y=d.z,d.z=d.w,d.w^=d.w>>>19^p^p>>>8},l===(l|0)?d.x=l:u+=l;for(var h=0;h<u.length+64;h++)d.x^=u.charCodeAt(h)|0,d.next()}function i(l,d){return d.x=l.x,d.y=l.y,d.z=l.z,d.w=l.w,d}function o(l,d){var u=new s(l),h=d&&d.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var c=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(c+f)/(1<<21);while(m===0);return m},p.int32=u.next,p.quick=p,h&&(typeof h=="object"&&i(h,u),p.state=function(){return i(u,{})}),p}r&&r.exports?r.exports=o:n&&n.amd?n(function(){return o}):this.xor128=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),mT=sa({"src/node_modules/seedrandom/lib/xorwow.js"(e,t){(function(a,r,n){function s(l){var d=this,u="";d.next=function(){var p=d.x^d.x>>>2;return d.x=d.y,d.y=d.z,d.z=d.w,d.w=d.v,(d.d=d.d+362437|0)+(d.v=d.v^d.v<<4^(p^p<<1))|0},d.x=0,d.y=0,d.z=0,d.w=0,d.v=0,l===(l|0)?d.x=l:u+=l;for(var h=0;h<u.length+64;h++)d.x^=u.charCodeAt(h)|0,h==u.length&&(d.d=d.x<<10^d.x>>>4),d.next()}function i(l,d){return d.x=l.x,d.y=l.y,d.z=l.z,d.w=l.w,d.v=l.v,d.d=l.d,d}function o(l,d){var u=new s(l),h=d&&d.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var c=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(c+f)/(1<<21);while(m===0);return m},p.int32=u.next,p.quick=p,h&&(typeof h=="object"&&i(h,u),p.state=function(){return i(u,{})}),p}r&&r.exports?r.exports=o:n&&n.amd?n(function(){return o}):this.xorwow=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),gT=sa({"src/node_modules/seedrandom/lib/xorshift7.js"(e,t){(function(a,r,n){function s(l){var d=this;d.next=function(){var h=d.x,p=d.i,c,f;return c=h[p],c^=c>>>7,f=c^c<<24,c=h[p+1&7],f^=c^c>>>10,c=h[p+3&7],f^=c^c>>>3,c=h[p+4&7],f^=c^c<<7,c=h[p+7&7],c=c^c<<13,f^=c^c<<9,h[p]=f,d.i=p+1&7,f};function u(h,p){var c,f=[];if(p===(p|0))f[0]=p;else for(p=""+p,c=0;c<p.length;++c)f[c&7]=f[c&7]<<15^p.charCodeAt(c)+f[c+1&7]<<13;for(;f.length<8;)f.push(0);for(c=0;c<8&&f[c]===0;++c);for(c==8?f[7]=-1:f[c],h.x=f,h.i=0,c=256;c>0;--c)h.next()}u(d,l)}function i(l,d){return d.x=l.x.slice(),d.i=l.i,d}function o(l,d){l==null&&(l=+new Date);var u=new s(l),h=d&&d.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var c=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(c+f)/(1<<21);while(m===0);return m},p.int32=u.next,p.quick=p,h&&(h.x&&i(h,u),p.state=function(){return i(u,{})}),p}r&&r.exports?r.exports=o:n&&n.amd?n(function(){return o}):this.xorshift7=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),yT=sa({"src/node_modules/seedrandom/lib/xor4096.js"(e,t){(function(a,r,n){function s(l){var d=this;d.next=function(){var h=d.w,p=d.X,c=d.i,f,m;return d.w=h=h+1640531527|0,m=p[c+34&127],f=p[c=c+1&127],m^=m<<13,f^=f<<17,m^=m>>>15,f^=f>>>12,m=p[c]=m^f,d.i=c,m+(h^h>>>16)|0};function u(h,p){var c,f,m,g,y,A=[],x=128;for(p===(p|0)?(f=p,p=null):(p=p+"\0",f=0,x=Math.max(x,p.length)),m=0,g=-32;g<x;++g)p&&(f^=p.charCodeAt((g+32)%p.length)),g===0&&(y=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,g>=0&&(y=y+1640531527|0,c=A[g&127]^=f+y,m=c==0?m+1:0);for(m>=128&&(A[(p&&p.length||0)&127]=-1),m=127,g=4*128;g>0;--g)f=A[m+34&127],c=A[m=m+1&127],f^=f<<13,c^=c<<17,f^=f>>>15,c^=c>>>12,A[m]=f^c;h.w=y,h.X=A,h.i=m}u(d,l)}function i(l,d){return d.i=l.i,d.w=l.w,d.X=l.X.slice(),d}function o(l,d){l==null&&(l=+new Date);var u=new s(l),h=d&&d.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var c=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(c+f)/(1<<21);while(m===0);return m},p.int32=u.next,p.quick=p,h&&(h.X&&i(h,u),p.state=function(){return i(u,{})}),p}r&&r.exports?r.exports=o:n&&n.amd?n(function(){return o}):this.xor4096=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),AT=sa({"src/node_modules/seedrandom/lib/tychei.js"(e,t){(function(a,r,n){function s(l){var d=this,u="";d.next=function(){var p=d.b,c=d.c,f=d.d,m=d.a;return p=p<<25^p>>>7^c,c=c-f|0,f=f<<24^f>>>8^m,m=m-p|0,d.b=p=p<<20^p>>>12^c,d.c=c=c-f|0,d.d=f<<16^c>>>16^m,d.a=m-p|0},d.a=0,d.b=0,d.c=-1640531527,d.d=1367130551,l===Math.floor(l)?(d.a=l/4294967296|0,d.b=l|0):u+=l;for(var h=0;h<u.length+20;h++)d.b^=u.charCodeAt(h)|0,d.next()}function i(l,d){return d.a=l.a,d.b=l.b,d.c=l.c,d.d=l.d,d}function o(l,d){var u=new s(l),h=d&&d.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var c=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(c+f)/(1<<21);while(m===0);return m},p.int32=u.next,p.quick=p,h&&(typeof h=="object"&&i(h,u),p.state=function(){return i(u,{})}),p}r&&r.exports?r.exports=o:n&&n.amd?n(function(){return o}):this.tychei=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),xT=sa({"(disabled):crypto"(){}}),bT=sa({"src/node_modules/seedrandom/seedrandom.js"(e,t){(function(a,r,n){var s=256,i=6,o=52,l="random",d=n.pow(s,i),u=n.pow(2,o),h=u*2,p=s-1,c;function f(v,T,C){var E=[];T=T==!0?{entropy:!0}:T||{};var R=A(y(T.entropy?[v,b(r)]:v==null?x():v,3),E),z=new m(E),F=function(){for(var k=z.g(i),D=d,_=0;k<u;)k=(k+_)*s,D*=s,_=z.g(1);for(;k>=h;)k/=2,D/=2,_>>>=1;return(k+_)/D};return F.int32=function(){return z.g(4)|0},F.quick=function(){return z.g(4)/4294967296},F.double=F,A(b(z.S),r),(T.pass||C||function(k,D,_,P){return P&&(P.S&&g(P,z),k.state=function(){return g(z,{})}),_?(n[l]=k,D):k})(F,R,"global"in T?T.global:this==n,T.state)}function m(v){var T,C=v.length,E=this,R=0,z=E.i=E.j=0,F=E.S=[];for(C||(v=[C++]);R<s;)F[R]=R++;for(R=0;R<s;R++)F[R]=F[z=p&z+v[R%C]+(T=F[R])],F[z]=T;(E.g=function(k){for(var D,_=0,P=E.i,j=E.j,L=E.S;k--;)D=L[P=p&P+1],_=_*s+L[p&(L[P]=L[j=p&j+D])+(L[j]=D)];return E.i=P,E.j=j,_})(s)}function g(v,T){return T.i=v.i,T.j=v.j,T.S=v.S.slice(),T}function y(v,T){var C=[],E=typeof v,R;if(T&&E=="object")for(R in v)try{C.push(y(v[R],T-1))}catch{}return C.length?C:E=="string"?v:v+"\0"}function A(v,T){for(var C=v+"",E,R=0;R<C.length;)T[p&R]=p&(E^=T[p&R]*19)+C.charCodeAt(R++);return b(T)}function x(){try{var v;return c&&(v=c.randomBytes)?v=v(s):(v=new Uint8Array(s),(a.crypto||a.msCrypto).getRandomValues(v)),b(v)}catch{var T=a.navigator,C=T&&T.plugins;return[+new Date,a,C,a.screen,b(r)]}}function b(v){return String.fromCharCode.apply(0,v)}if(A(n.random(),r),typeof t=="object"&&t.exports){t.exports=f;try{c=xT()}catch{}}else typeof define=="function"&&define.amd?define(function(){return f}):n["seed"+l]=f})(typeof self!="undefined"?self:e,[],Math)}}),nf=sa({"src/node_modules/seedrandom/index.js"(e,t){var a=cT(),r=fT(),n=mT(),s=gT(),i=yT(),o=AT(),l=bT();l.alea=a,l.xor128=r,l.xorwow=n,l.xorshift7=s,l.xor4096=i,l.tychei=o,t.exports=l}}),G5=sa({"(disabled):src/node_modules/string_decoder/index.js"(){}}),wc=sa({"(disabled):fs"(){}}),Hd=sa({"(disabled):path"(){}}),vT=sa({"(disabled):worker_threads"(){}}),wT=sa({"(disabled):perf_hooks"(){}}),kT=sa({"(disabled):os"(){}}),IT=sa({"src/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm-threaded-simd.js"(e,t){var a=function(){var r=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(r=r||__filename),function(n){n=n||{};function s(){return W.buffer!=Pe&&_t(W.buffer),ht}function i(){return W.buffer!=Pe&&_t(W.buffer),nt}function o(){return W.buffer!=Pe&&_t(W.buffer),st}function l(){return W.buffer!=Pe&&_t(W.buffer),pt}function d(){return W.buffer!=Pe&&_t(W.buffer),at}var u=typeof n!="undefined"?n:{},h,p;u.ready=new Promise(function(S,$){h=S,p=$});var c;typeof process!="undefined"&&process.listeners&&(c={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var f={},m;for(m in u)u.hasOwnProperty(m)&&(f[m]=u[m]);var g=function(S,$){throw $},y=!1,A=!1,x=!1,b=!1;y=typeof window=="object",A=typeof importScripts=="function",x=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",b=!y&&!x&&!A;var v=u.ENVIRONMENT_IS_PTHREAD||!1;v&&(Pe=u.buffer);var T="";function C(S){return u.locateFile?u.locateFile(S,T):T+S}var E,R,z,F,k;if(x){A?T=Hd().dirname(T)+"/":T=__dirname+"/",E=function(S,$){return F||(F=wc()),k||(k=Hd()),S=k.normalize(S),F.readFileSync(S,$?null:"utf8")},z=function(S){var $=E(S,!0);return $.buffer||($=new Uint8Array($)),re($.buffer),$},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),process.argv.slice(2),process.on("uncaughtException",function(S){if(!(S instanceof Nd))throw S}),process.on("unhandledRejection",Cn),g=function(S){process.exit(S)},u.inspect=function(){return"[Emscripten Module object]"};var D;try{D=vT()}catch(S){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),S}global.Worker=D.Worker}else b?(typeof read!="undefined"&&(E=function(S){return read(S)}),z=function(S){var $;return typeof readbuffer=="function"?new Uint8Array(readbuffer(S)):($=read(S,"binary"),re(typeof $=="object"),$)},typeof scriptArgs!="undefined"&&scriptArgs,typeof quit=="function"&&(g=function(S){quit(S)}),typeof print!="undefined"&&(typeof console=="undefined"&&(console={}),console.log=print,console.warn=console.error=typeof printErr!="undefined"?printErr:print)):(y||A)&&(A?T=self.location.href:typeof document!="undefined"&&document.currentScript&&(T=document.currentScript.src),typeof r!="undefined"&&r&&(T=r),T.indexOf("blob:")!==0?T=T.substr(0,T.lastIndexOf("/")+1):T="",x?(E=function(S,$){return F||(F=wc()),k||(k=Hd()),S=k.normalize(S),F.readFileSync(S,$?null:"utf8")},z=function(S){var $=E(S,!0);return $.buffer||($=new Uint8Array($)),re($.buffer),$}):(E=function(S){var $=new XMLHttpRequest;return $.open("GET",S,!1),$.send(null),$.responseText},A&&(z=function(S){var $=new XMLHttpRequest;return $.open("GET",S,!1),$.responseType="arraybuffer",$.send(null),new Uint8Array($.response)}),R=function(S,$,H){var Q=new XMLHttpRequest;Q.open("GET",S,!0),Q.responseType="arraybuffer",Q.onload=function(){if(Q.status==200||Q.status==0&&Q.response){$(Q.response);return}H()},Q.onerror=H,Q.send(null)}));x&&typeof performance=="undefined"&&(global.performance=wT().performance);var _=u.print||console.log.bind(console),P=u.printErr||console.warn.bind(console);for(m in f)f.hasOwnProperty(m)&&(u[m]=f[m]);f=null,u.arguments&&u.arguments,u.thisProgram&&u.thisProgram,u.quit&&(g=u.quit);function j(S){j.shown||(j.shown={}),j.shown[S]||(j.shown[S]=1,P(S))}var L;u.wasmBinary&&(L=u.wasmBinary);var B=u.noExitRuntime||!0;typeof WebAssembly!="object"&&Cn("no native wasm support detected");var W,ee,te=!1;function re(S,$){S||Cn("Assertion failed: "+$)}function Y(S){var $=u["_"+S];return re($,"Cannot call unknown function "+S+", make sure it is exported"),$}function ae(S,$,H,Q,Ae){var he={string:function(Ua){var $l=0;if(Ua!=null&&Ua!==0){var LA=(Ua.length<<2)+1;$l=El(LA),Ee(Ua,$l,LA)}return $l},array:function(Ua){var $l=El(Ua.length);return Oe(Ua,$l),$l}};function ce(Ua){return $==="string"?ye(Ua):$==="boolean"?Boolean(Ua):Ua}var Se=Y(S),it=[],ia=0;if(Q)for(var Jt=0;Jt<Q.length;Jt++){var os=he[H[Jt]];os?(ia===0&&(ia=Cd()),it[Jt]=os(Q[Jt])):it[Jt]=Q[Jt]}var Fl=Se.apply(null,it);return Fl=ce(Fl),ia!==0&&Nl(ia),Fl}function le(S,$,H,Q){H=H||[];var Ae=H.every(function(ce){return ce==="number"}),he=$!=="string";return he&&Ae&&!Q?Y(S):function(){return ae(S,$,H,arguments)}}function xe(S,$,H){for(var Q=$+H,Ae="";!($>=Q);){var he=S[$++];if(!he)return Ae;if(!(he&128)){Ae+=String.fromCharCode(he);continue}var ce=S[$++]&63;if((he&224)==192){Ae+=String.fromCharCode((he&31)<<6|ce);continue}var Se=S[$++]&63;if((he&240)==224?he=(he&15)<<12|ce<<6|Se:he=(he&7)<<18|ce<<12|Se<<6|S[$++]&63,he<65536)Ae+=String.fromCharCode(he);else{var it=he-65536;Ae+=String.fromCharCode(55296|it>>10,56320|it&1023)}}return Ae}function ye(S,$){return S?xe(i(),S,$):""}function ke(S,$,H,Q){if(!(Q>0))return 0;for(var Ae=H,he=H+Q-1,ce=0;ce<S.length;++ce){var Se=S.charCodeAt(ce);if(Se>=55296&&Se<=57343){var it=S.charCodeAt(++ce);Se=65536+((Se&1023)<<10)|it&1023}if(Se<=127){if(H>=he)break;$[H++]=Se}else if(Se<=2047){if(H+1>=he)break;$[H++]=192|Se>>6,$[H++]=128|Se&63}else if(Se<=65535){if(H+2>=he)break;$[H++]=224|Se>>12,$[H++]=128|Se>>6&63,$[H++]=128|Se&63}else{if(H+3>=he)break;$[H++]=240|Se>>18,$[H++]=128|Se>>12&63,$[H++]=128|Se>>6&63,$[H++]=128|Se&63}}return $[H]=0,H-Ae}function Ee(S,$,H){return ke(S,i(),$,H)}function Me(S){for(var $=0,H=0;H<S.length;++H){var Q=S.charCodeAt(H);Q>=55296&&Q<=57343&&(Q=65536+((Q&1023)<<10)|S.charCodeAt(++H)&1023),Q<=127?++$:Q<=2047?$+=2:Q<=65535?$+=3:$+=4}return $}function Oe(S,$){s().set(S,$)}function je(S,$){return S%$>0&&(S+=$-S%$),S}var Pe,ht,nt,st,pt,at;function _t(S){Pe=S,u.HEAP8=ht=new Int8Array(S),u.HEAP16=new Int16Array(S),u.HEAP32=st=new Int32Array(S),u.HEAPU8=nt=new Uint8Array(S),u.HEAPU16=new Uint16Array(S),u.HEAPU32=pt=new Uint32Array(S),u.HEAPF32=new Float32Array(S),u.HEAPF64=at=new Float64Array(S)}var Ht=u.INITIAL_MEMORY||16777216;if(v)W=u.wasmMemory,Pe=u.buffer;else if(u.wasmMemory)W=u.wasmMemory;else if(W=new WebAssembly.Memory({initial:Ht/65536,maximum:32768,shared:!0}),!(W.buffer instanceof SharedArrayBuffer))throw P("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),x&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");W&&(Pe=W.buffer),Ht=Pe.byteLength,_t(Pe);var xa,zt=[],ka=[],Cr=[],Ia=[];v||ka.push({func:function(){CA()}});function Ba(){if(!v){if(u.preRun)for(typeof u.preRun=="function"&&(u.preRun=[u.preRun]);u.preRun.length;)xd(u.preRun.shift());Nn(zt)}}function Ya(){!v&&Nn(ka)}function qt(){v||Nn(Cr)}function Tn(){if(!v){if(u.postRun)for(typeof u.postRun=="function"&&(u.postRun=[u.postRun]);u.postRun.length;)bd(u.postRun.shift());Nn(Ia)}}function xd(S){zt.unshift(S)}function bd(S){Ia.unshift(S)}var Ja=0,Nr=null;function vd(S){re(!v,"addRunDependency cannot be used in a pthread worker"),Ja++,u.monitorRunDependencies&&u.monitorRunDependencies(Ja)}function wd(S){if(Ja--,u.monitorRunDependencies&&u.monitorRunDependencies(Ja),Ja==0&&Nr){var $=Nr;Nr=null,$()}}u.preloadedImages={},u.preloadedAudios={};function Cn(S){u.onAbort&&u.onAbort(S),v&&console.error("Pthread aborting at "+new Error().stack),S+="",P(S),te=!0,S="abort("+S+"). Build with -s ASSERTIONS=1 for more info.";var $=new WebAssembly.RuntimeError(S);throw p($),$}function yp(S,$){return String.prototype.startsWith?S.startsWith($):S.indexOf($)===0}var kl="data:application/octet-stream;base64,";function Ap(S){return yp(S,kl)}var H0="file://";function xp(S){return yp(S,H0)}var Va="tfjs-backend-wasm-threaded-simd.wasm";Ap(Va)||(Va=C(Va));function bp(S){try{if(S==Va&&L)return new Uint8Array(L);if(z)return z(S);throw"both async and sync fetching of the wasm failed"}catch($){Cn($)}}function vp(){if(!L&&(y||A)){if(typeof fetch=="function"&&!xp(Va))return fetch(Va,{credentials:"same-origin"}).then(function(S){if(!S.ok)throw"failed to load wasm binary file at '"+Va+"'";return S.arrayBuffer()}).catch(function(){return bp(Va)});if(R)return new Promise(function(S,$){R(Va,function(H){S(new Uint8Array(H))},$)})}return Promise.resolve().then(function(){return bp(Va)})}function wp(){var S={a:ZS};function $(ce,Se){var it=ce.exports;if(u.asm=it,xa=u.asm.nb,ee=Se,!v){var ia=X.unusedWorkers.length;X.unusedWorkers.forEach(function(Jt){X.loadWasmModuleToWorker(Jt,function(){--ia||wd()})})}}v||vd();function H(ce){$(ce.instance,ce.module)}function Q(ce){return vp().then(function(Se){return WebAssembly.instantiate(Se,S)}).then(ce,function(Se){P("failed to asynchronously prepare wasm: "+Se),Cn(Se)})}function Ae(){return!L&&typeof WebAssembly.instantiateStreaming=="function"&&!Ap(Va)&&!xp(Va)&&typeof fetch=="function"?fetch(Va,{credentials:"same-origin"}).then(function(ce){var Se=WebAssembly.instantiateStreaming(ce,S);return Se.then(H,function(it){return P("wasm streaming compile failed: "+it),P("falling back to ArrayBuffer instantiation"),Q(H)})}):Q(H)}if(u.instantiateWasm)try{var he=u.instantiateWasm(S,$);return he}catch(ce){return P("Module.instantiateWasm callback failed with error: "+ce),!1}return Ae().catch(p),{}}var kd={10216:function(){throw"Canceled!"},10234:function(S,$){setTimeout(function(){MA(S,$)},0)}};function Id(){X.initRuntime()}function Nn(S){for(;S.length>0;){var $=S.shift();if(typeof $=="function"){$(u);continue}var H=$.func;typeof H=="number"?$.arg===void 0?xa.get(H)():xa.get(H)($.arg):H($.arg===void 0?null:$.arg)}}var ns={EPERM:63,ENOENT:44,ESRCH:71,EINTR:27,EIO:29,ENXIO:60,E2BIG:1,ENOEXEC:45,EBADF:8,ECHILD:12,EAGAIN:6,EWOULDBLOCK:6,ENOMEM:48,EACCES:2,EFAULT:21,ENOTBLK:105,EBUSY:10,EEXIST:20,EXDEV:75,ENODEV:43,ENOTDIR:54,EISDIR:31,EINVAL:28,ENFILE:41,EMFILE:33,ENOTTY:59,ETXTBSY:74,EFBIG:22,ENOSPC:51,ESPIPE:70,EROFS:69,EMLINK:34,EPIPE:64,EDOM:18,ERANGE:68,ENOMSG:49,EIDRM:24,ECHRNG:106,EL2NSYNC:156,EL3HLT:107,EL3RST:108,ELNRNG:109,EUNATCH:110,ENOCSI:111,EL2HLT:112,EDEADLK:16,ENOLCK:46,EBADE:113,EBADR:114,EXFULL:115,ENOANO:104,EBADRQC:103,EBADSLT:102,EDEADLOCK:16,EBFONT:101,ENOSTR:100,ENODATA:116,ETIME:117,ENOSR:118,ENONET:119,ENOPKG:120,EREMOTE:121,ENOLINK:47,EADV:122,ESRMNT:123,ECOMM:124,EPROTO:65,EMULTIHOP:36,EDOTDOT:125,EBADMSG:9,ENOTUNIQ:126,EBADFD:127,EREMCHG:128,ELIBACC:129,ELIBBAD:130,ELIBSCN:131,ELIBMAX:132,ELIBEXEC:133,ENOSYS:52,ENOTEMPTY:55,ENAMETOOLONG:37,ELOOP:32,EOPNOTSUPP:138,EPFNOSUPPORT:139,ECONNRESET:15,ENOBUFS:42,EAFNOSUPPORT:5,EPROTOTYPE:67,ENOTSOCK:57,ENOPROTOOPT:50,ESHUTDOWN:140,ECONNREFUSED:14,EADDRINUSE:3,ECONNABORTED:13,ENETUNREACH:40,ENETDOWN:38,ETIMEDOUT:73,EHOSTDOWN:142,EHOSTUNREACH:23,EINPROGRESS:26,EALREADY:7,EDESTADDRREQ:17,EMSGSIZE:35,EPROTONOSUPPORT:66,ESOCKTNOSUPPORT:137,EADDRNOTAVAIL:4,ENETRESET:39,EISCONN:30,ENOTCONN:53,ETOOMANYREFS:141,EUSERS:136,EDQUOT:19,ESTALE:72,ENOTSUP:138,ENOMEDIUM:148,EILSEQ:25,EOVERFLOW:61,ECANCELED:11,ENOTRECOVERABLE:56,EOWNERDEAD:62,ESTRPIPE:135};function Bi(S,$){if(S<=0||S>s().length||S&!0||$<0)return-28;if($==0)return 0;$>=2147483647&&($=1/0);var H=Atomics.load(o(),Rl>>2),Q=0;if(H==S){var Ae=Atomics.compareExchange(o(),Rl>>2,H,0);if(Ae==H&&(--$,Q=1,$<=0))return 1}var he=Atomics.notify(o(),S>>2,$);if(he>=0)return he+Q;throw"Atomics.notify returned an unexpected value "+he}u._emscripten_futex_wake=Bi;function Il(S){if(v)throw"Internal Error! killThread() can only ever be called from main application thread!";if(!S)throw"Internal Error! Null pthread_ptr in killThread!";o()[S+12>>2]=0;var $=X.pthreads[S];$.worker.terminate(),X.freeThreadData($),X.runningWorkers.splice(X.runningWorkers.indexOf($.worker),1),$.worker.pthread=void 0}function Sl(S){if(v)throw"Internal Error! cancelThread() can only ever be called from main application thread!";if(!S)throw"Internal Error! Null pthread_ptr in cancelThread!";var $=X.pthreads[S];$.worker.postMessage({cmd:"cancel"})}function kp(S){if(v)throw"Internal Error! cleanupThread() can only ever be called from main application thread!";if(!S)throw"Internal Error! Null pthread_ptr in cleanupThread!";var $=X.pthreads[S];if($){o()[S+12>>2]=0;var H=$.worker;X.returnWorkerToPool(H)}}var X={unusedWorkers:[],runningWorkers:[],initMainThreadBlock:function(){for(var S=8,$=0;$<S;++$)X.allocateUnusedWorker()},initRuntime:function(){for(var S=Vi(228),$=0;$<228/4;++$)l()[S/4+$]=0;o()[S+12>>2]=S;var H=S+152;o()[H>>2]=H;for(var Q=Vi(512),$=0;$<128;++$)l()[Q/4+$]=0;Atomics.store(l(),S+100>>2,Q),Atomics.store(l(),S+40>>2,S),Y0(S,!A,1),FA(S)},initWorker:function(){},pthreads:{},threadExitHandlers:[],setThreadStatus:function(){},runExitHandlers:function(){for(;X.threadExitHandlers.length>0;)X.threadExitHandlers.pop()();v&&is()&&RA()},runExitHandlersAndDeinitThread:function(S,$){Atomics.store(l(),S+56>>2,1),Atomics.store(l(),S+60>>2,0),X.runExitHandlers(),Atomics.store(l(),S+4>>2,$),Atomics.store(l(),S+0>>2,1),Bi(S+0,2147483647),Y0(0,0,0)},threadExit:function(S){var $=is();$&&(X.runExitHandlersAndDeinitThread($,S),v&&postMessage({cmd:"exit"}))},threadCancel:function(){X.runExitHandlersAndDeinitThread(is(),-1),postMessage({cmd:"cancelDone"})},terminateAllThreads:function(){for(var S in X.pthreads){var $=X.pthreads[S];$&&$.worker&&X.returnWorkerToPool($.worker)}X.pthreads={};for(var H=0;H<X.unusedWorkers.length;++H){var Q=X.unusedWorkers[H];Q.terminate()}X.unusedWorkers=[];for(var H=0;H<X.runningWorkers.length;++H){var Q=X.runningWorkers[H],$=Q.pthread;X.freeThreadData($),Q.terminate()}X.runningWorkers=[]},freeThreadData:function(S){if(S){if(S.threadInfoStruct){var $=o()[S.threadInfoStruct+100>>2];o()[S.threadInfoStruct+100>>2]=0,Td($),Td(S.threadInfoStruct)}S.threadInfoStruct=0,S.allocatedOwnStack&&S.stackBase&&Td(S.stackBase),S.stackBase=0,S.worker&&(S.worker.pthread=null)}},returnWorkerToPool:function(S){X.runWithoutMainThreadQueuedCalls(function(){delete X.pthreads[S.pthread.threadInfoStruct],X.unusedWorkers.push(S),X.runningWorkers.splice(X.runningWorkers.indexOf(S),1),X.freeThreadData(S.pthread),S.pthread=void 0})},runWithoutMainThreadQueuedCalls:function(S){o()[PA>>2]=0;try{S()}finally{o()[PA>>2]=1}},receiveObjectTransfer:function(S){},loadWasmModuleToWorker:function(S,$){S.onmessage=function(H){var Q=H.data,Ae=Q.cmd;if(S.pthread&&(X.currentProxiedOperationCallerThread=S.pthread.threadInfoStruct),Q.targetThread&&Q.targetThread!=is()){var he=X.pthreads[Q.targetThread];he?he.worker.postMessage(H.data,Q.transferList):console.error('Internal error! Worker sent a message "'+Ae+'" to target pthread '+Q.targetThread+", but that thread no longer exists!"),X.currentProxiedOperationCallerThread=void 0;return}if(Ae==="processQueuedMainThreadWork")Cp();else if(Ae==="spawnThread")SA(H.data);else if(Ae==="cleanupThread")kp(Q.thread);else if(Ae==="killThread")Il(Q.thread);else if(Ae==="cancelThread")Sl(Q.thread);else if(Ae==="loaded")S.loaded=!0,$&&$(S),S.runPthread&&(S.runPthread(),delete S.runPthread);else if(Ae==="print")_("Thread "+Q.threadId+": "+Q.text);else if(Ae==="printErr")P("Thread "+Q.threadId+": "+Q.text);else if(Ae==="alert")alert("Thread "+Q.threadId+": "+Q.text);else if(Ae==="exit"){var ce=S.pthread&&Atomics.load(l(),S.pthread.threadInfoStruct+64>>2);ce&&X.returnWorkerToPool(S)}else if(Ae==="exitProcess")try{YS(Q.returnCode)}catch(Se){if(Se instanceof Nd)return;throw Se}else Ae==="cancelDone"?X.returnWorkerToPool(S):Ae==="objectTransfer"?X.receiveObjectTransfer(H.data):H.data.target==="setimmediate"?S.postMessage(H.data):P("worker sent an unknown command "+Ae);X.currentProxiedOperationCallerThread=void 0},S.onerror=function(H){P("pthread sent an error! "+H.filename+":"+H.lineno+": "+H.message)},x&&(S.on("message",function(H){S.onmessage({data:H})}),S.on("error",function(H){S.onerror(H)}),S.on("exit",function(H){})),S.postMessage({cmd:"load",urlOrBlob:u.mainScriptUrlOrBlob||r,wasmMemory:W,wasmModule:ee})},allocateUnusedWorker:function(){var S=C("tfjs-backend-wasm-threaded-simd.worker.js");X.unusedWorkers.push(new Worker(S))},getNewWorker:function(){return X.unusedWorkers.length==0&&(X.allocateUnusedWorker(),X.loadWasmModuleToWorker(X.unusedWorkers[0])),X.unusedWorkers.length>0?X.unusedWorkers.pop():null},busySpinWait:function(S){for(var $=performance.now()+S;performance.now()<$;);}};function se(S,$){OA(S,$),Nl(S)}u.establishStackSpace=se;function Re(){return B}u.getNoExitRuntime=Re;function rt(S,$){return xa.get(S)($)}u.invokeEntryPoint=rt;function Ot(S,$,H,Q){Cn("Assertion failed: "+ye(S)+", at: "+[$?ye($):"unknown filename",H,Q?ye(Q):"unknown function"])}function It(S,$){_main(S,$)}var Ue;x?Ue=function(){var S=process.hrtime();return S[0]*1e3+S[1]/1e6}:v?Ue=function(){return performance.now()-u.__performance_now_clock_drift}:typeof dateNow!="undefined"?Ue=dateNow:Ue=function(){return performance.now()};function Ke(S){return o()[NA()>>2]=S,S}function ma(S,$){if(v)return Tl(1,1,S,$)}function En(S,$){if(S==$)postMessage({cmd:"processQueuedMainThreadWork"});else if(v)postMessage({targetThread:S,cmd:"processThreadQueue"});else{var H=X.pthreads[S],Q=H&&H.worker;if(!Q)return;Q.postMessage({cmd:"processThreadQueue"})}return 1}function Rn(){Cn()}function Ip(S,$,H){var Q=vS($,H);return kd[S].apply(null,Q)}function Sd(S,$){}function Qa(S,$,H){if(S<=0||S>s().length||S&!0)return-28;if(y){if(Atomics.load(o(),S>>2)!=$)return-6;for(var Q=performance.now(),Ae=Q+H,he=Atomics.exchange(o(),Rl>>2,S);;){if(Q=performance.now(),Q>Ae)return he=Atomics.exchange(o(),Rl>>2,0),-73;if(he=Atomics.exchange(o(),Rl>>2,0),he==0)break;if(Cp(),Atomics.load(o(),S>>2)!=$)return-6;he=Atomics.exchange(o(),Rl>>2,S)}return 0}else{var ce=Atomics.wait(o(),S>>2,$,H);if(ce==="timed-out")return-73;if(ce==="not-equal")return-6;if(ce==="ok")return 0;throw"Atomics.wait returned an unexpected value "+ce}}function ss(S,$,H){i().copyWithin(S,$,$+H)}function Sp(){return x?kT().cpus().length:navigator.hardwareConcurrency}function Tl(S,$){for(var H=arguments.length-2,Q=Cd(),Ae=H,he=El(Ae*8),ce=he>>3,Se=0;Se<H;Se++){var it=arguments[2+Se];d()[ce+Se]=it}var ia=zA(S,Ae,he,$);return Nl(Q),ia}var q0=[],X0=[];function vS(S,$){X0.length=0;var H;for($>>=2;H=i()[S++];){var Q=H<105;Q&&$&1&&$++,X0.push(Q?d()[$++>>1]:o()[$]),++$}return X0}function wS(S,$,H){q0.length=$;for(var Q=H>>3,Ae=0;Ae<$;Ae++)q0[Ae]=d()[Q+Ae];var he=S<0,ce=he?kd[-S-1]:KS[S];return ce.apply(null,q0)}function kS(){return i().length}function IS(S){try{return W.grow(S-Pe.byteLength+65535>>>16),_t(W.buffer),1}catch{}}function SS(S){var $=kS();if(S<=$)return!1;var H=2147483648;if(S>H)return!1;for(var Q=1;Q<=4;Q*=2){var Ae=$*(1+.2/Q);Ae=Math.min(Ae,S+100663296);var he=Math.min(H,je(Math.max(S,Ae),65536)),ce=IS(he);if(ce)return!0}return!1}var qe={inEventHandler:0,removeAllEventListeners:function(){for(var S=qe.eventHandlers.length-1;S>=0;--S)qe._removeHandler(S);qe.eventHandlers=[],qe.deferredCalls=[]},registerRemoveEventListeners:function(){qe.removeEventListenersRegistered||(qe.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(S,$,H){function Q(ce,Se){if(ce.length!=Se.length)return!1;for(var it in ce)if(ce[it]!=Se[it])return!1;return!0}for(var Ae in qe.deferredCalls){var he=qe.deferredCalls[Ae];if(he.targetFunction==S&&Q(he.argsList,H))return}qe.deferredCalls.push({targetFunction:S,precedence:$,argsList:H}),qe.deferredCalls.sort(function(ce,Se){return ce.precedence<Se.precedence})},removeDeferredCalls:function(S){for(var $=0;$<qe.deferredCalls.length;++$)qe.deferredCalls[$].targetFunction==S&&(qe.deferredCalls.splice($,1),--$)},canPerformEventHandlerRequests:function(){return qe.inEventHandler&&qe.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(qe.canPerformEventHandlerRequests())for(var S=0;S<qe.deferredCalls.length;++S){var $=qe.deferredCalls[S];qe.deferredCalls.splice(S,1),--S,$.targetFunction.apply(null,$.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(S,$){for(var H=0;H<qe.eventHandlers.length;++H)qe.eventHandlers[H].target==S&&(!$||$==qe.eventHandlers[H].eventTypeString)&&qe._removeHandler(H--)},_removeHandler:function(S){var $=qe.eventHandlers[S];$.target.removeEventListener($.eventTypeString,$.eventListenerFunc,$.useCapture),qe.eventHandlers.splice(S,1)},registerOrRemoveHandler:function(S){var $=function(Q){++qe.inEventHandler,qe.currentEventHandler=S,qe.runDeferredCalls(),S.handlerFunc(Q),qe.runDeferredCalls(),--qe.inEventHandler};if(S.callbackfunc)S.eventListenerFunc=$,S.target.addEventListener(S.eventTypeString,$,S.useCapture),qe.eventHandlers.push(S),qe.registerRemoveEventListeners();else for(var H=0;H<qe.eventHandlers.length;++H)qe.eventHandlers[H].target==S.target&&qe.eventHandlers[H].eventTypeString==S.eventTypeString&&qe._removeHandler(H--)},queueEventHandlerOnThread_iiii:function(S,$,H,Q,Ae){var he=Cd(),ce=El(12);o()[ce>>2]=H,o()[ce+4>>2]=Q,o()[ce+8>>2]=Ae,Z0(0,S,637534208,$,Q,ce),Nl(he)},getTargetThreadForEventCallback:function(S){switch(S){case 1:return 0;case 2:return X.currentProxiedOperationCallerThread;default:return S}},getNodeNameForTarget:function(S){return S?S==window?"#window":S==screen?"#screen":S&&S.nodeName?S.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function TS(S){var $=Me(S)+1,H=Vi($);return Ee(S,H,$),H}function CS(S,$,H,Q){var Ae=Cd(),he=El(12),ce=0;$&&(ce=TS($)),o()[he>>2]=ce,o()[he+4>>2]=H,o()[he+8>>2]=Q,Z0(0,S,657457152,0,ce,he),Nl(Ae)}function NS(S,$,H,Q){$=$?ye($):"",CS(S,$,H,Q)}function ES(S){return S>2?ye(S):S}var RS=[0,typeof document!="undefined"?document:0,typeof window!="undefined"?window:0];function FS(S){S=ES(S);var $=RS[S]||(typeof document!="undefined"?document.querySelector(S):void 0);return $}function K0(S){return FS(S)}function bA(S,$,H){var Q=K0(S);if(!Q)return-4;if(Q.canvasSharedPtr&&(o()[Q.canvasSharedPtr>>2]=$,o()[Q.canvasSharedPtr+4>>2]=H),Q.offscreenCanvas||!Q.controlTransferredOffscreen){Q.offscreenCanvas&&(Q=Q.offscreenCanvas);var Ae=!1;if(Q.GLctxObject&&Q.GLctxObject.GLctx){var he=Q.GLctxObject.GLctx.getParameter(2978);Ae=he[0]===0&&he[1]===0&&he[2]===Q.width&&he[3]===Q.height}Q.width=$,Q.height=H,Ae&&Q.GLctxObject.GLctx.viewport(0,0,$,H)}else if(Q.canvasSharedPtr){var ce=o()[Q.canvasSharedPtr+8>>2];return NS(ce,S,$,H),1}else return-4;return 0}function vA(S,$,H){return v?Tl(2,1,S,$,H):bA(S,$,H)}function $S(S,$,H){var Q=K0(S);return Q?bA(S,$,H):vA(S,$,H)}function MS(S){}function _S(S,$){}function zS(S){var $=S.getExtension("ANGLE_instanced_arrays");if($)return S.vertexAttribDivisor=function(H,Q){$.vertexAttribDivisorANGLE(H,Q)},S.drawArraysInstanced=function(H,Q,Ae,he){$.drawArraysInstancedANGLE(H,Q,Ae,he)},S.drawElementsInstanced=function(H,Q,Ae,he,ce){$.drawElementsInstancedANGLE(H,Q,Ae,he,ce)},1}function OS(S){var $=S.getExtension("OES_vertex_array_object");if($)return S.createVertexArray=function(){return $.createVertexArrayOES()},S.deleteVertexArray=function(H){$.deleteVertexArrayOES(H)},S.bindVertexArray=function(H){$.bindVertexArrayOES(H)},S.isVertexArray=function(H){return $.isVertexArrayOES(H)},1}function DS(S){var $=S.getExtension("WEBGL_draw_buffers");if($)return S.drawBuffers=function(H,Q){$.drawBuffersWEBGL(H,Q)},1}function PS(S){return!!(S.multiDrawWebgl=S.getExtension("WEBGL_multi_draw"))}var ot={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,recordError:function(S){ot.lastError||(ot.lastError=S)},getNewId:function(S){for(var $=ot.counter++,H=S.length;H<$;H++)S[H]=null;return $},getSource:function(S,$,H,Q){for(var Ae="",he=0;he<$;++he){var ce=Q?o()[Q+he*4>>2]:-1;Ae+=ye(o()[H+he*4>>2],ce<0?void 0:ce)}return Ae},createContext:function(S,$){var H=S.getContext("webgl",$);if(!H)return 0;var Q=ot.registerContext(H,$);return Q},registerContext:function(S,$){var H=Vi(8);o()[H+4>>2]=is();var Q={handle:H,attributes:$,version:$.majorVersion,GLctx:S};return S.canvas&&(S.canvas.GLctxObject=Q),ot.contexts[H]=Q,(typeof $.enableExtensionsByDefault=="undefined"||$.enableExtensionsByDefault)&&ot.initExtensions(Q),H},makeContextCurrent:function(S){return ot.currentContext=ot.contexts[S],u.ctx=Cl=ot.currentContext&&ot.currentContext.GLctx,!(S&&!Cl)},getContext:function(S){return ot.contexts[S]},deleteContext:function(S){ot.currentContext===ot.contexts[S]&&(ot.currentContext=null),typeof qe=="object"&&qe.removeAllHandlersOnTarget(ot.contexts[S].GLctx.canvas),ot.contexts[S]&&ot.contexts[S].GLctx.canvas&&(ot.contexts[S].GLctx.canvas.GLctxObject=void 0),Td(ot.contexts[S].handle),ot.contexts[S]=null},initExtensions:function(S){if(S||(S=ot.currentContext),!S.initExtensionsDone){S.initExtensionsDone=!0;var $=S.GLctx;zS($),OS($),DS($),$.disjointTimerQueryExt=$.getExtension("EXT_disjoint_timer_query"),PS($);var H=$.getSupportedExtensions()||[];H.forEach(function(Q){Q.indexOf("lose_context")<0&&Q.indexOf("debug")<0&&$.getExtension(Q)})}},populateUniformTable:function(S){for(var $=ot.programs[S],H=ot.programInfos[S]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1},Q=H.uniforms,Ae=Cl.getProgramParameter($,35718),he=0;he<Ae;++he){var ce=Cl.getActiveUniform($,he),Se=ce.name;H.maxUniformLength=Math.max(H.maxUniformLength,Se.length+1),Se.slice(-1)=="]"&&(Se=Se.slice(0,Se.lastIndexOf("[")));var it=Cl.getUniformLocation($,Se);if(it){var ia=ot.getNewId(ot.uniforms);Q[Se]=[ce.size,ia],ot.uniforms[ia]=it;for(var Jt=1;Jt<ce.size;++Jt){var os=Se+"["+Jt+"]";it=Cl.getUniformLocation($,os),ia=ot.getNewId(ot.uniforms),ot.uniforms[ia]=it}}}}},LS=["default","low-power","high-performance"];function WS(S,$){var H=$>>2,Q=o()[H+6],Ae={alpha:!!o()[H+0],depth:!!o()[H+1],stencil:!!o()[H+2],antialias:!!o()[H+3],premultipliedAlpha:!!o()[H+4],preserveDrawingBuffer:!!o()[H+5],powerPreference:LS[Q],failIfMajorPerformanceCaveat:!!o()[H+7],majorVersion:o()[H+8],minorVersion:o()[H+9],enableExtensionsByDefault:o()[H+10],explicitSwapControl:o()[H+11],proxyContextToMainThread:o()[H+12],renderViaOffscreenBackBuffer:o()[H+13]},he=K0(S);if(!he||Ae.explicitSwapControl)return 0;var ce=ot.createContext(he,Ae);return ce}function BS(S,$){return WS(S,$)}var Tp={mappings:{},buffers:[null,[],[]],printChar:function(S,$){var H=Tp.buffers[S];$===0||$===10?((S===1?_:P)(xe(H,0)),H.length=0):H.push($)},varargs:void 0,get:function(){Tp.varargs+=4;var S=o()[Tp.varargs-4>>2];return S},getStr:function(S){var $=ye(S);return $},get64:function(S,$){return S}};function wA(S){return v?Tl(3,1,S):0}function kA(S,$,H,Q,Ae){if(v)return Tl(4,1,S,$,H,Q,Ae)}function IA(S,$,H,Q){if(v)return Tl(5,1,S,$,H,Q);for(var Ae=0,he=0;he<H;he++){for(var ce=o()[$+he*8>>2],Se=o()[$+(he*8+4)>>2],it=0;it<Se;it++)Tp.printChar(S,i()[ce+it]);Ae+=Se}return o()[Q>>2]=Ae,0}function VS(S){var $=X.threadExitHandlers.pop();S&&$()}function US(S,$){X.threadExitHandlers.push(function(){xa.get(S)($)})}function SA(S){if(v)throw"Internal Error! spawnThread() can only ever be called from main application thread!";var $=X.getNewWorker();if($.pthread!==void 0)throw"Internal error!";if(!S.pthread_ptr)throw"Internal error, no pthread ptr!";X.runningWorkers.push($);for(var H=Vi(512),Q=0;Q<128;++Q)o()[H+Q*4>>2]=0;var Ae=S.stackBase+S.stackSize,he=X.pthreads[S.pthread_ptr]={worker:$,stackBase:S.stackBase,stackSize:S.stackSize,allocatedOwnStack:S.allocatedOwnStack,threadInfoStruct:S.pthread_ptr},ce=he.threadInfoStruct>>2;Atomics.store(l(),ce+16,S.detached),Atomics.store(l(),ce+25,H),Atomics.store(l(),ce+10,he.threadInfoStruct),Atomics.store(l(),ce+20,S.stackSize),Atomics.store(l(),ce+19,Ae),Atomics.store(l(),ce+26,S.stackSize),Atomics.store(l(),ce+28,Ae),Atomics.store(l(),ce+29,S.detached);var Se=EA(),it=Se+40;Atomics.store(l(),ce+43,it),$.pthread=he;var ia={cmd:"run",start_routine:S.startRoutine,arg:S.arg,threadInfoStruct:S.pthread_ptr,stackBase:S.stackBase,stackSize:S.stackSize};$.runPthread=function(){ia.time=performance.now(),$.postMessage(ia,S.transferList)},$.loaded&&($.runPthread(),delete $.runPthread)}function GS(S,$,H,Q){if(typeof SharedArrayBuffer=="undefined")return P("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;if(!S)return P("pthread_create called with a null thread pointer!"),28;var Ae=[],he=0;if(v&&(Ae.length===0||he))return _A(687865856,S,$,H,Q);var ce=0,Se=0,it=0;$&&$!=-1?(ce=o()[$>>2],ce+=81920,Se=o()[$+8>>2],it=o()[$+12>>2]!==0):ce=2097152;var ia=Se==0;ia?Se=DA(16,ce):(Se-=ce,re(Se>0));for(var Jt=Vi(228),os=0;os<57;++os)l()[(Jt>>2)+os]=0;o()[S>>2]=Jt,o()[Jt+12>>2]=Jt;var Fl=Jt+152;o()[Fl>>2]=Fl;var Ua={stackBase:Se,stackSize:ce,allocatedOwnStack:ia,detached:it,startRoutine:H,pthread_ptr:Jt,arg:Q,transferList:Ae};return v?(Ua.cmd="spawnThread",postMessage(Ua,Ae)):SA(Ua),0}function jS(){if(v){var S=is();if(S){var $=Atomics.load(l(),S+56>>2);if(!$){var H=Atomics.load(l(),S+0>>2);if(H==2)throw"Canceled!"}}}}function HS(){x||A||j("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function qS(S,$,H){if(!S)return P("pthread_join attempted on a null thread pointer!"),ns.ESRCH;if(v&&is()==S)return P("PThread "+S+" is attempting to join to itself!"),ns.EDEADLK;if(!v&&$A()==S)return P("Main thread "+S+" is attempting to join to itself!"),ns.EDEADLK;var Q=o()[S+12>>2];if(Q!==S)return P("pthread_join attempted on thread "+S+", which does not point to a valid thread, or does not exist anymore!"),ns.ESRCH;var Ae=Atomics.load(l(),S+64>>2);if(Ae)return P("Attempted to join thread "+S+", which was already detached!"),ns.EINVAL;for(H&&HS();;){var he=Atomics.load(l(),S+0>>2);if(he==1){var ce=Atomics.load(l(),S+4>>2);return $&&(o()[$>>2]=ce),Atomics.store(l(),S+64>>2,1),v?postMessage({cmd:"cleanupThread",thread:S}):kp(S),0}if(!H)return ns.EBUSY;jS(),v||Cp(),Qa(S+0,he,v?100:1)}}function XS(S,$){return qS(S,$,!0)}function TA(S){if(v)return Tl(6,1,S);switch(S){case 30:return 16384;case 85:var $=2147483648;return $/16384;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return typeof navigator=="object"&&navigator.hardwareConcurrency||1}return Ke(28),-1}v||X.initMainThreadBlock();var Cl,KS=[null,ma,vA,wA,kA,IA,TA],ZS={e:Ot,r:It,x:En,b:Rn,y:Ip,j:Sd,d:Qa,c:Bi,f:Ue,p:ss,A:Sp,u:wS,q:SS,v:$S,i:MS,s:_S,w:BS,l:wA,n:kA,g:IA,o:Id,a:W||u.wasmMemory,z:VS,k:US,h:GS,m:XS,t:TA};wp();var CA=u.___wasm_call_ctors=function(){return(CA=u.___wasm_call_ctors=u.asm.B).apply(null,arguments)};u._init=function(){return(u._init=u.asm.C).apply(null,arguments)},u._init_with_threads_count=function(){return(u._init_with_threads_count=u.asm.D).apply(null,arguments)},u._get_threads_count=function(){return(u._get_threads_count=u.asm.E).apply(null,arguments)},u._register_tensor=function(){return(u._register_tensor=u.asm.F).apply(null,arguments)},u._dispose_data=function(){return(u._dispose_data=u.asm.G).apply(null,arguments)},u._dispose=function(){return(u._dispose=u.asm.H).apply(null,arguments)},u._Abs=function(){return(u._Abs=u.asm.I).apply(null,arguments)},u._Add=function(){return(u._Add=u.asm.J).apply(null,arguments)},u._AddN=function(){return(u._AddN=u.asm.K).apply(null,arguments)},u._All=function(){return(u._All=u.asm.L).apply(null,arguments)},u._Any=function(){return(u._Any=u.asm.M).apply(null,arguments)},u._ArgMax=function(){return(u._ArgMax=u.asm.N).apply(null,arguments)},u._AvgPool=function(){return(u._AvgPool=u.asm.O).apply(null,arguments)},u._BatchMatMul=function(){return(u._BatchMatMul=u.asm.P).apply(null,arguments)},u._Ceil=function(){return(u._Ceil=u.asm.Q).apply(null,arguments)},u._ClipByValue=function(){return(u._ClipByValue=u.asm.R).apply(null,arguments)},u._Conv2D=function(){return(u._Conv2D=u.asm.S).apply(null,arguments)},u._Conv2DBackpropInput=function(){return(u._Conv2DBackpropInput=u.asm.T).apply(null,arguments)},u._Cos=function(){return(u._Cos=u.asm.U).apply(null,arguments)},u._Cosh=function(){return(u._Cosh=u.asm.V).apply(null,arguments)},u._CropAndResize=function(){return(u._CropAndResize=u.asm.W).apply(null,arguments)},u._Cumsum=function(){return(u._Cumsum=u.asm.X).apply(null,arguments)},u._DepthToSpace=function(){return(u._DepthToSpace=u.asm.Y).apply(null,arguments)},u._DepthwiseConv2dNative=function(){return(u._DepthwiseConv2dNative=u.asm.Z).apply(null,arguments)},u._Elu=function(){return(u._Elu=u.asm._).apply(null,arguments)},u._Equal=function(){return(u._Equal=u.asm.$).apply(null,arguments)},u._Exp=function(){return(u._Exp=u.asm.aa).apply(null,arguments)},u._FlipLeftRight=function(){return(u._FlipLeftRight=u.asm.ba).apply(null,arguments)},u._Floor=function(){return(u._Floor=u.asm.ca).apply(null,arguments)},u._FloorDiv=function(){return(u._FloorDiv=u.asm.da).apply(null,arguments)},u._FusedBatchNorm=function(){return(u._FusedBatchNorm=u.asm.ea).apply(null,arguments)},u._FusedConv2D=function(){return(u._FusedConv2D=u.asm.fa).apply(null,arguments)},u._FusedDepthwiseConv2D=function(){return(u._FusedDepthwiseConv2D=u.asm.ga).apply(null,arguments)},u._Gather=function(){return(u._Gather=u.asm.ha).apply(null,arguments)},u._GatherNd=function(){return(u._GatherNd=u.asm.ia).apply(null,arguments)},u._Greater=function(){return(u._Greater=u.asm.ja).apply(null,arguments)},u._GreaterEqual=function(){return(u._GreaterEqual=u.asm.ka).apply(null,arguments)},u._LeakyRelu=function(){return(u._LeakyRelu=u.asm.la).apply(null,arguments)},u._Less=function(){return(u._Less=u.asm.ma).apply(null,arguments)},u._LessEqual=function(){return(u._LessEqual=u.asm.na).apply(null,arguments)},u._Log=function(){return(u._Log=u.asm.oa).apply(null,arguments)},u._LogicalAnd=function(){return(u._LogicalAnd=u.asm.pa).apply(null,arguments)},u._Max=function(){return(u._Max=u.asm.qa).apply(null,arguments)},u._MaxPool=function(){return(u._MaxPool=u.asm.ra).apply(null,arguments)},u._Maximum=function(){return(u._Maximum=u.asm.sa).apply(null,arguments)},u._Mean=function(){return(u._Mean=u.asm.ta).apply(null,arguments)},u._Min=function(){return(u._Min=u.asm.ua).apply(null,arguments)},u._Minimum=function(){return(u._Minimum=u.asm.va).apply(null,arguments)},u._MirrorPad=function(){return(u._MirrorPad=u.asm.wa).apply(null,arguments)},u._Multiply=function(){return(u._Multiply=u.asm.xa).apply(null,arguments)},u._Neg=function(){return(u._Neg=u.asm.ya).apply(null,arguments)},u._NonMaxSuppressionV3=function(){return(u._NonMaxSuppressionV3=u.asm.za).apply(null,arguments)},u._NonMaxSuppressionV4=function(){return(u._NonMaxSuppressionV4=u.asm.Aa).apply(null,arguments)},u._NonMaxSuppressionV5=function(){return(u._NonMaxSuppressionV5=u.asm.Ba).apply(null,arguments)},u._NotEqual=function(){return(u._NotEqual=u.asm.Ca).apply(null,arguments)},u._OneHot=function(){return(u._OneHot=u.asm.Da).apply(null,arguments)},u._PadV2=function(){return(u._PadV2=u.asm.Ea).apply(null,arguments)},u._Pow=function(){return(u._Pow=u.asm.Fa).apply(null,arguments)},u._Prelu=function(){return(u._Prelu=u.asm.Ga).apply(null,arguments)},u._Prod=function(){return(u._Prod=u.asm.Ha).apply(null,arguments)},u._RealDiv=function(){return(u._RealDiv=u.asm.Ia).apply(null,arguments)},u._Relu=function(){return(u._Relu=u.asm.Ja).apply(null,arguments)},u._Relu6=function(){return(u._Relu6=u.asm.Ka).apply(null,arguments)},u._ResizeBilinear=function(){return(u._ResizeBilinear=u.asm.La).apply(null,arguments)},u._Reverse=function(){return(u._Reverse=u.asm.Ma).apply(null,arguments)},u._RotateWithOffset=function(){return(u._RotateWithOffset=u.asm.Na).apply(null,arguments)},u._Round=function(){return(u._Round=u.asm.Oa).apply(null,arguments)},u._Rsqrt=function(){return(u._Rsqrt=u.asm.Pa).apply(null,arguments)},u._ScatterNd=function(){return(u._ScatterNd=u.asm.Qa).apply(null,arguments)},u._SelectV2=function(){return(u._SelectV2=u.asm.Ra).apply(null,arguments)},u._Sigmoid=function(){return(u._Sigmoid=u.asm.Sa).apply(null,arguments)},u._Sin=function(){return(u._Sin=u.asm.Ta).apply(null,arguments)},u._Softmax=function(){return(u._Softmax=u.asm.Ua).apply(null,arguments)},u._SparseFillEmptyRows=function(){return(u._SparseFillEmptyRows=u.asm.Va).apply(null,arguments)},u._SparseReshape=function(){return(u._SparseReshape=u.asm.Wa).apply(null,arguments)},u._SparseSegmentReduction=function(){return(u._SparseSegmentReduction=u.asm.Xa).apply(null,arguments)},u._Sqrt=function(){return(u._Sqrt=u.asm.Ya).apply(null,arguments)},u._Square=function(){return(u._Square=u.asm.Za).apply(null,arguments)},u._SquaredDifference=function(){return(u._SquaredDifference=u.asm._a).apply(null,arguments)},u._Step=function(){return(u._Step=u.asm.$a).apply(null,arguments)},u._StridedSlice=function(){return(u._StridedSlice=u.asm.ab).apply(null,arguments)},u._Sub=function(){return(u._Sub=u.asm.bb).apply(null,arguments)},u._Sum=function(){return(u._Sum=u.asm.cb).apply(null,arguments)},u._Tan=function(){return(u._Tan=u.asm.db).apply(null,arguments)},u._Tanh=function(){return(u._Tanh=u.asm.eb).apply(null,arguments)},u._Tile=function(){return(u._Tile=u.asm.fb).apply(null,arguments)},u._TopK=function(){return(u._TopK=u.asm.gb).apply(null,arguments)},u._Transform=function(){return(u._Transform=u.asm.hb).apply(null,arguments)},u._Transpose=function(){return(u._Transpose=u.asm.ib).apply(null,arguments)},u.__FusedMatMul=function(){return(u.__FusedMatMul=u.asm.jb).apply(null,arguments)};var Vi=u._malloc=function(){return(Vi=u._malloc=u.asm.kb).apply(null,arguments)},Td=u._free=function(){return(Td=u._free=u.asm.lb).apply(null,arguments)},NA=u.___errno_location=function(){return(NA=u.___errno_location=u.asm.mb).apply(null,arguments)},EA=u._emscripten_get_global_libc=function(){return(EA=u._emscripten_get_global_libc=u.asm.ob).apply(null,arguments)},is=u._pthread_self=function(){return(is=u._pthread_self=u.asm.pb).apply(null,arguments)},RA=u.___pthread_tsd_run_dtors=function(){return(RA=u.___pthread_tsd_run_dtors=u.asm.qb).apply(null,arguments)},Cp=u._emscripten_main_thread_process_queued_calls=function(){return(Cp=u._emscripten_main_thread_process_queued_calls=u.asm.rb).apply(null,arguments)};u._emscripten_current_thread_process_queued_calls=function(){return(u._emscripten_current_thread_process_queued_calls=u.asm.sb).apply(null,arguments)};var FA=u._emscripten_register_main_browser_thread_id=function(){return(FA=u._emscripten_register_main_browser_thread_id=u.asm.tb).apply(null,arguments)},$A=u._emscripten_main_browser_thread_id=function(){return($A=u._emscripten_main_browser_thread_id=u.asm.ub).apply(null,arguments)},MA=u.__emscripten_do_dispatch_to_thread=function(){return(MA=u.__emscripten_do_dispatch_to_thread=u.asm.vb).apply(null,arguments)},_A=u._emscripten_sync_run_in_main_thread_4=function(){return(_A=u._emscripten_sync_run_in_main_thread_4=u.asm.wb).apply(null,arguments)},zA=u._emscripten_run_in_main_runtime_thread_js=function(){return(zA=u._emscripten_run_in_main_runtime_thread_js=u.asm.xb).apply(null,arguments)},Z0=u.__emscripten_call_on_thread=function(){return(Z0=u.__emscripten_call_on_thread=u.asm.yb).apply(null,arguments)};u._emscripten_tls_init=function(){return(u._emscripten_tls_init=u.asm.zb).apply(null,arguments)};var Y0=u.__emscripten_thread_init=function(){return(Y0=u.__emscripten_thread_init=u.asm.Ab).apply(null,arguments)},Cd=u.stackSave=function(){return(Cd=u.stackSave=u.asm.Bb).apply(null,arguments)},Nl=u.stackRestore=function(){return(Nl=u.stackRestore=u.asm.Cb).apply(null,arguments)},El=u.stackAlloc=function(){return(El=u.stackAlloc=u.asm.Db).apply(null,arguments)},OA=u._emscripten_stack_set_limits=function(){return(OA=u._emscripten_stack_set_limits=u.asm.Eb).apply(null,arguments)},DA=u._memalign=function(){return(DA=u._memalign=u.asm.Fb).apply(null,arguments)},PA=u.__emscripten_allow_main_runtime_queued_calls=10208,Rl=u.__emscripten_main_thread_futex=10412;u.cwrap=le,u.PThread=X,u.PThread=X,u.wasmMemory=W,u.ExitStatus=Nd;var Np;function Nd(S){this.name="ExitStatus",this.message="Program terminated with exit("+S+")",this.status=S}Nr=function S(){Np||J0(),Np||(Nr=S)};function J0(S){if(Ja>0)return;if(v){h(u),Ya(),postMessage({cmd:"loaded"});return}if(Ba(),Ja>0)return;function $(){Np||(Np=!0,u.calledRun=!0,!te&&(Ya(),qt(),h(u),u.onRuntimeInitialized&&u.onRuntimeInitialized(),Tn()))}u.setStatus?(u.setStatus("Running..."),setTimeout(function(){setTimeout(function(){u.setStatus("")},1),$()},1)):$()}u.run=J0;function YS(S,$){if(!($&&B&&S===0)){if(!$&&v)throw postMessage({cmd:"exitProcess",returnCode:S}),new Nd(S);B||(X.terminateAllThreads(),u.onExit&&u.onExit(S),te=!0),g(S,new Nd(S))}}if(u.preInit)for(typeof u.preInit=="function"&&(u.preInit=[u.preInit]);u.preInit.length>0;)u.preInit.pop()();v&&(B=!1,X.initWorker()),J0();var Ep;c&&(Ep={uncaughtException:process.listeners("uncaughtException").filter(function(S){return!c.uncaughtException.indexOf(S)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(S){return!c.unhandledRejection.indexOf(S)>-1})});var Rp;if(typeof WasmBackendModule!="undefined")Rp=WasmBackendModule;else if(typeof n!="undefined")Rp=n;else throw new Error("Could not find wasm module in post.js");if(Ep){var JS=Rp._dispose;Rp._dispose=function(){JS(),Ep.uncaughtException.forEach(function(S){process.removeListener("uncaughtException",S)}),Ep.unhandledRejection.forEach(function(S){process.removeListener("unhandledRejection",S)})}}return n.ready}}();typeof e=="object"&&typeof t=="object"?t.exports=a:typeof define=="function"&&define.amd?define([],function(){return a}):typeof e=="object"&&(e.WasmBackendModuleThreadedSimd=a)}}),ST=sa({"src/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm.js"(e,t){var a=function(){var r=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(r=r||__filename),function(n){n=n||{};var s=typeof n!="undefined"?n:{},i,o;s.ready=new Promise(function(X,se){i=X,o=se});var l;typeof process!="undefined"&&process.listeners&&(l={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var d={},u;for(u in s)s.hasOwnProperty(u)&&(d[u]=s[u]);var h=!1,p=!1,c=!1,f=!1;h=typeof window=="object",p=typeof importScripts=="function",c=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",f=!h&&!c&&!p;var m="";function g(X){return s.locateFile?s.locateFile(X,m):m+X}var y,A,x,b,v;c?(p?m=Hd().dirname(m)+"/":m=__dirname+"/",y=function(X,se){return b||(b=wc()),v||(v=Hd()),X=v.normalize(X),b.readFileSync(X,se?null:"utf8")},x=function(X){var se=y(X,!0);return se.buffer||(se=new Uint8Array(se)),F(se.buffer),se},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),process.argv.slice(2),process.on("uncaughtException",function(X){if(!(X instanceof ns))throw X}),process.on("unhandledRejection",zt),s.inspect=function(){return"[Emscripten Module object]"}):f?(typeof read!="undefined"&&(y=function(X){return read(X)}),x=function(X){var se;return typeof readbuffer=="function"?new Uint8Array(readbuffer(X)):(se=read(X,"binary"),F(typeof se=="object"),se)},typeof scriptArgs!="undefined"&&scriptArgs,typeof print!="undefined"&&(typeof console=="undefined"&&(console={}),console.log=print,console.warn=console.error=typeof printErr!="undefined"?printErr:print)):(h||p)&&(p?m=self.location.href:typeof document!="undefined"&&document.currentScript&&(m=document.currentScript.src),r&&(m=r),m.indexOf("blob:")!==0?m=m.substr(0,m.lastIndexOf("/")+1):m="",y=function(X){var se=new XMLHttpRequest;return se.open("GET",X,!1),se.send(null),se.responseText},p&&(x=function(X){var se=new XMLHttpRequest;return se.open("GET",X,!1),se.responseType="arraybuffer",se.send(null),new Uint8Array(se.response)}),A=function(X,se,Re){var rt=new XMLHttpRequest;rt.open("GET",X,!0),rt.responseType="arraybuffer",rt.onload=function(){if(rt.status==200||rt.status==0&&rt.response){se(rt.response);return}Re()},rt.onerror=Re,rt.send(null)});var T=s.print||console.log.bind(console),C=s.printErr||console.warn.bind(console);for(u in d)d.hasOwnProperty(u)&&(s[u]=d[u]);d=null,s.arguments&&s.arguments,s.thisProgram&&s.thisProgram,s.quit&&s.quit;var E;s.wasmBinary&&(E=s.wasmBinary),s.noExitRuntime,typeof WebAssembly!="object"&&zt("no native wasm support detected");var R,z=!1;function F(X,se){X||zt("Assertion failed: "+se)}function k(X){var se=s["_"+X];return F(se,"Cannot call unknown function "+X+", make sure it is exported"),se}function D(X,se,Re,rt,Ot){var It={string:function(Qa){var ss=0;if(Qa!=null&&Qa!==0){var Sp=(Qa.length<<2)+1;ss=Id(Sp),W(Qa,ss,Sp)}return ss},array:function(Qa){var ss=Id(Qa.length);return ee(Qa,ss),ss}};function Ue(Qa){return se==="string"?L(Qa):se==="boolean"?Boolean(Qa):Qa}var Ke=k(X),ma=[],En=0;if(rt)for(var Rn=0;Rn<rt.length;Rn++){var Ip=It[Re[Rn]];Ip?(En===0&&(En=wp()),ma[Rn]=Ip(rt[Rn])):ma[Rn]=rt[Rn]}var Sd=Ke.apply(null,ma);return Sd=Ue(Sd),En!==0&&kd(En),Sd}function _(X,se,Re,rt){Re=Re||[];var Ot=Re.every(function(Ue){return Ue==="number"}),It=se!=="string";return It&&Ot&&!rt?k(X):function(){return D(X,se,Re,arguments)}}var P=typeof TextDecoder!="undefined"?new TextDecoder("utf8"):void 0;function j(X,se,Re){for(var rt=se+Re,Ot=se;X[Ot]&&!(Ot>=rt);)++Ot;if(Ot-se>16&&X.subarray&&P)return P.decode(X.subarray(se,Ot));for(var It="";se<Ot;){var Ue=X[se++];if(!(Ue&128)){It+=String.fromCharCode(Ue);continue}var Ke=X[se++]&63;if((Ue&224)==192){It+=String.fromCharCode((Ue&31)<<6|Ke);continue}var ma=X[se++]&63;if((Ue&240)==224?Ue=(Ue&15)<<12|Ke<<6|ma:Ue=(Ue&7)<<18|Ke<<12|ma<<6|X[se++]&63,Ue<65536)It+=String.fromCharCode(Ue);else{var En=Ue-65536;It+=String.fromCharCode(55296|En>>10,56320|En&1023)}}return It}function L(X,se){return X?j(ae,X,se):""}function B(X,se,Re,rt){if(!(rt>0))return 0;for(var Ot=Re,It=Re+rt-1,Ue=0;Ue<X.length;++Ue){var Ke=X.charCodeAt(Ue);if(Ke>=55296&&Ke<=57343){var ma=X.charCodeAt(++Ue);Ke=65536+((Ke&1023)<<10)|ma&1023}if(Ke<=127){if(Re>=It)break;se[Re++]=Ke}else if(Ke<=2047){if(Re+1>=It)break;se[Re++]=192|Ke>>6,se[Re++]=128|Ke&63}else if(Ke<=65535){if(Re+2>=It)break;se[Re++]=224|Ke>>12,se[Re++]=128|Ke>>6&63,se[Re++]=128|Ke&63}else{if(Re+3>=It)break;se[Re++]=240|Ke>>18,se[Re++]=128|Ke>>12&63,se[Re++]=128|Ke>>6&63,se[Re++]=128|Ke&63}}return se[Re]=0,Re-Ot}function W(X,se,Re){return B(X,ae,se,Re)}function ee(X,se){Y.set(X,se)}function te(X,se){return X%se>0&&(X+=se-X%se),X}var re,Y,ae,le;function xe(X){re=X,s.HEAP8=Y=new Int8Array(X),s.HEAP16=new Int16Array(X),s.HEAP32=le=new Int32Array(X),s.HEAPU8=ae=new Uint8Array(X),s.HEAPU16=new Uint16Array(X),s.HEAPU32=new Uint32Array(X),s.HEAPF32=new Float32Array(X),s.HEAPF64=new Float64Array(X)}s.INITIAL_MEMORY;var ye,ke=[],Ee=[],Me=[],Oe=[];Ee.push({func:function(){vp()}});function je(){if(s.preRun)for(typeof s.preRun=="function"&&(s.preRun=[s.preRun]);s.preRun.length;)st(s.preRun.shift());Ja(ke)}function Pe(){Ja(Ee)}function ht(){Ja(Me)}function nt(){if(s.postRun)for(typeof s.postRun=="function"&&(s.postRun=[s.postRun]);s.postRun.length;)pt(s.postRun.shift());Ja(Oe)}function st(X){ke.unshift(X)}function pt(X){Oe.unshift(X)}var at=0,_t=null;function Ht(X){at++,s.monitorRunDependencies&&s.monitorRunDependencies(at)}function xa(X){if(at--,s.monitorRunDependencies&&s.monitorRunDependencies(at),at==0&&_t){var se=_t;_t=null,se()}}s.preloadedImages={},s.preloadedAudios={};function zt(X){s.onAbort&&s.onAbort(X),X+="",C(X),z=!0,X="abort("+X+"). Build with -s ASSERTIONS=1 for more info.";var se=new WebAssembly.RuntimeError(X);throw o(se),se}function ka(X,se){return String.prototype.startsWith?X.startsWith(se):X.indexOf(se)===0}var Cr="data:application/octet-stream;base64,";function Ia(X){return ka(X,Cr)}var Ba="file://";function Ya(X){return ka(X,Ba)}var qt="tfjs-backend-wasm.wasm";Ia(qt)||(qt=g(qt));function Tn(X){try{if(X==qt&&E)return new Uint8Array(E);if(x)return x(X);throw"both async and sync fetching of the wasm failed"}catch(se){zt(se)}}function xd(){if(!E&&(h||p)){if(typeof fetch=="function"&&!Ya(qt))return fetch(qt,{credentials:"same-origin"}).then(function(X){if(!X.ok)throw"failed to load wasm binary file at '"+qt+"'";return X.arrayBuffer()}).catch(function(){return Tn(qt)});if(A)return new Promise(function(X,se){A(qt,function(Re){X(new Uint8Array(Re))},se)})}return Promise.resolve().then(function(){return Tn(qt)})}function bd(){var X={a:bp};function se(Ue,Ke){var ma=Ue.exports;s.asm=ma,R=s.asm.h,xe(R.buffer),ye=s.asm.Va,xa()}Ht();function Re(Ue){se(Ue.instance)}function rt(Ue){return xd().then(function(Ke){return WebAssembly.instantiate(Ke,X)}).then(Ue,function(Ke){C("failed to asynchronously prepare wasm: "+Ke),zt(Ke)})}function Ot(){return!E&&typeof WebAssembly.instantiateStreaming=="function"&&!Ia(qt)&&!Ya(qt)&&typeof fetch=="function"?fetch(qt,{credentials:"same-origin"}).then(function(Ue){var Ke=WebAssembly.instantiateStreaming(Ue,X);return Ke.then(Re,function(ma){return C("wasm streaming compile failed: "+ma),C("falling back to ArrayBuffer instantiation"),rt(Re)})}):rt(Re)}if(s.instantiateWasm)try{var It=s.instantiateWasm(X,se);return It}catch(Ue){return C("Module.instantiateWasm callback failed with error: "+Ue),!1}return Ot().catch(o),{}}function Ja(X){for(;X.length>0;){var se=X.shift();if(typeof se=="function"){se(s);continue}var Re=se.func;typeof Re=="number"?se.arg===void 0?ye.get(Re)():ye.get(Re)(se.arg):Re(se.arg===void 0?null:se.arg)}}function Nr(){zt()}function vd(X,se,Re){ae.copyWithin(X,se,se+Re)}function wd(){return ae.length}function Cn(X){try{return R.grow(X-re.byteLength+65535>>>16),xe(R.buffer),1}catch{}}function yp(X){var se=wd(),Re=2147483648;if(X>Re)return!1;for(var rt=1;rt<=4;rt*=2){var Ot=se*(1+.2/rt);Ot=Math.min(Ot,X+100663296);var It=Math.min(Re,te(Math.max(X,Ot),65536)),Ue=Cn(It);if(Ue)return!0}return!1}var kl={mappings:{},buffers:[null,[],[]],printChar:function(X,se){var Re=kl.buffers[X];se===0||se===10?((X===1?T:C)(j(Re,0)),Re.length=0):Re.push(se)},varargs:void 0,get:function(){kl.varargs+=4;var X=le[kl.varargs-4>>2];return X},getStr:function(X){var se=L(X);return se},get64:function(X,se){return X}};function Ap(X){return 0}function H0(X,se,Re,rt,Ot){}function xp(X,se,Re,rt){for(var Ot=0,It=0;It<Re;It++){for(var Ue=le[se+It*8>>2],Ke=le[se+(It*8+4)>>2],ma=0;ma<Ke;ma++)kl.printChar(X,ae[Ue+ma]);Ot+=Ke}return le[rt>>2]=Ot,0}function Va(){return 28}var bp={a:Nr,d:vd,e:yp,f:Ap,c:H0,b:xp,g:Va};bd();var vp=s.___wasm_call_ctors=function(){return(vp=s.___wasm_call_ctors=s.asm.i).apply(null,arguments)};s._init=function(){return(s._init=s.asm.j).apply(null,arguments)},s._init_with_threads_count=function(){return(s._init_with_threads_count=s.asm.k).apply(null,arguments)},s._get_threads_count=function(){return(s._get_threads_count=s.asm.l).apply(null,arguments)},s._register_tensor=function(){return(s._register_tensor=s.asm.m).apply(null,arguments)},s._dispose_data=function(){return(s._dispose_data=s.asm.n).apply(null,arguments)},s._dispose=function(){return(s._dispose=s.asm.o).apply(null,arguments)},s._Abs=function(){return(s._Abs=s.asm.p).apply(null,arguments)},s._Add=function(){return(s._Add=s.asm.q).apply(null,arguments)},s._AddN=function(){return(s._AddN=s.asm.r).apply(null,arguments)},s._All=function(){return(s._All=s.asm.s).apply(null,arguments)},s._Any=function(){return(s._Any=s.asm.t).apply(null,arguments)},s._ArgMax=function(){return(s._ArgMax=s.asm.u).apply(null,arguments)},s._AvgPool=function(){return(s._AvgPool=s.asm.v).apply(null,arguments)},s._BatchMatMul=function(){return(s._BatchMatMul=s.asm.w).apply(null,arguments)},s._Ceil=function(){return(s._Ceil=s.asm.x).apply(null,arguments)},s._ClipByValue=function(){return(s._ClipByValue=s.asm.y).apply(null,arguments)},s._Conv2D=function(){return(s._Conv2D=s.asm.z).apply(null,arguments)},s._Conv2DBackpropInput=function(){return(s._Conv2DBackpropInput=s.asm.A).apply(null,arguments)},s._Cos=function(){return(s._Cos=s.asm.B).apply(null,arguments)},s._Cosh=function(){return(s._Cosh=s.asm.C).apply(null,arguments)},s._CropAndResize=function(){return(s._CropAndResize=s.asm.D).apply(null,arguments)},s._Cumsum=function(){return(s._Cumsum=s.asm.E).apply(null,arguments)},s._DepthToSpace=function(){return(s._DepthToSpace=s.asm.F).apply(null,arguments)},s._DepthwiseConv2dNative=function(){return(s._DepthwiseConv2dNative=s.asm.G).apply(null,arguments)},s._Elu=function(){return(s._Elu=s.asm.H).apply(null,arguments)},s._Equal=function(){return(s._Equal=s.asm.I).apply(null,arguments)},s._Exp=function(){return(s._Exp=s.asm.J).apply(null,arguments)},s._FlipLeftRight=function(){return(s._FlipLeftRight=s.asm.K).apply(null,arguments)},s._Floor=function(){return(s._Floor=s.asm.L).apply(null,arguments)},s._FloorDiv=function(){return(s._FloorDiv=s.asm.M).apply(null,arguments)},s._FusedBatchNorm=function(){return(s._FusedBatchNorm=s.asm.N).apply(null,arguments)},s._FusedConv2D=function(){return(s._FusedConv2D=s.asm.O).apply(null,arguments)},s._FusedDepthwiseConv2D=function(){return(s._FusedDepthwiseConv2D=s.asm.P).apply(null,arguments)},s._Gather=function(){return(s._Gather=s.asm.Q).apply(null,arguments)},s._GatherNd=function(){return(s._GatherNd=s.asm.R).apply(null,arguments)},s._Greater=function(){return(s._Greater=s.asm.S).apply(null,arguments)},s._GreaterEqual=function(){return(s._GreaterEqual=s.asm.T).apply(null,arguments)},s._LeakyRelu=function(){return(s._LeakyRelu=s.asm.U).apply(null,arguments)},s._Less=function(){return(s._Less=s.asm.V).apply(null,arguments)},s._LessEqual=function(){return(s._LessEqual=s.asm.W).apply(null,arguments)},s._Log=function(){return(s._Log=s.asm.X).apply(null,arguments)},s._LogicalAnd=function(){return(s._LogicalAnd=s.asm.Y).apply(null,arguments)},s._Max=function(){return(s._Max=s.asm.Z).apply(null,arguments)},s._MaxPool=function(){return(s._MaxPool=s.asm._).apply(null,arguments)},s._Maximum=function(){return(s._Maximum=s.asm.$).apply(null,arguments)},s._Mean=function(){return(s._Mean=s.asm.aa).apply(null,arguments)},s._Min=function(){return(s._Min=s.asm.ba).apply(null,arguments)},s._Minimum=function(){return(s._Minimum=s.asm.ca).apply(null,arguments)},s._MirrorPad=function(){return(s._MirrorPad=s.asm.da).apply(null,arguments)},s._Multiply=function(){return(s._Multiply=s.asm.ea).apply(null,arguments)},s._Neg=function(){return(s._Neg=s.asm.fa).apply(null,arguments)},s._NonMaxSuppressionV3=function(){return(s._NonMaxSuppressionV3=s.asm.ga).apply(null,arguments)},s._NonMaxSuppressionV4=function(){return(s._NonMaxSuppressionV4=s.asm.ha).apply(null,arguments)},s._NonMaxSuppressionV5=function(){return(s._NonMaxSuppressionV5=s.asm.ia).apply(null,arguments)},s._NotEqual=function(){return(s._NotEqual=s.asm.ja).apply(null,arguments)},s._OneHot=function(){return(s._OneHot=s.asm.ka).apply(null,arguments)},s._PadV2=function(){return(s._PadV2=s.asm.la).apply(null,arguments)},s._Pow=function(){return(s._Pow=s.asm.ma).apply(null,arguments)},s._Prelu=function(){return(s._Prelu=s.asm.na).apply(null,arguments)},s._Prod=function(){return(s._Prod=s.asm.oa).apply(null,arguments)},s._RealDiv=function(){return(s._RealDiv=s.asm.pa).apply(null,arguments)},s._Relu=function(){return(s._Relu=s.asm.qa).apply(null,arguments)},s._Relu6=function(){return(s._Relu6=s.asm.ra).apply(null,arguments)},s._ResizeBilinear=function(){return(s._ResizeBilinear=s.asm.sa).apply(null,arguments)},s._Reverse=function(){return(s._Reverse=s.asm.ta).apply(null,arguments)},s._RotateWithOffset=function(){return(s._RotateWithOffset=s.asm.ua).apply(null,arguments)},s._Round=function(){return(s._Round=s.asm.va).apply(null,arguments)},s._Rsqrt=function(){return(s._Rsqrt=s.asm.wa).apply(null,arguments)},s._ScatterNd=function(){return(s._ScatterNd=s.asm.xa).apply(null,arguments)},s._SelectV2=function(){return(s._SelectV2=s.asm.ya).apply(null,arguments)},s._Sigmoid=function(){return(s._Sigmoid=s.asm.za).apply(null,arguments)},s._Sin=function(){return(s._Sin=s.asm.Aa).apply(null,arguments)},s._Softmax=function(){return(s._Softmax=s.asm.Ba).apply(null,arguments)},s._SparseFillEmptyRows=function(){return(s._SparseFillEmptyRows=s.asm.Ca).apply(null,arguments)},s._SparseReshape=function(){return(s._SparseReshape=s.asm.Da).apply(null,arguments)},s._SparseSegmentReduction=function(){return(s._SparseSegmentReduction=s.asm.Ea).apply(null,arguments)},s._Sqrt=function(){return(s._Sqrt=s.asm.Fa).apply(null,arguments)},s._Square=function(){return(s._Square=s.asm.Ga).apply(null,arguments)},s._SquaredDifference=function(){return(s._SquaredDifference=s.asm.Ha).apply(null,arguments)},s._Step=function(){return(s._Step=s.asm.Ia).apply(null,arguments)},s._StridedSlice=function(){return(s._StridedSlice=s.asm.Ja).apply(null,arguments)},s._Sub=function(){return(s._Sub=s.asm.Ka).apply(null,arguments)},s._Sum=function(){return(s._Sum=s.asm.La).apply(null,arguments)},s._Tan=function(){return(s._Tan=s.asm.Ma).apply(null,arguments)},s._Tanh=function(){return(s._Tanh=s.asm.Na).apply(null,arguments)},s._Tile=function(){return(s._Tile=s.asm.Oa).apply(null,arguments)},s._TopK=function(){return(s._TopK=s.asm.Pa).apply(null,arguments)},s._Transform=function(){return(s._Transform=s.asm.Qa).apply(null,arguments)},s._Transpose=function(){return(s._Transpose=s.asm.Ra).apply(null,arguments)},s.__FusedMatMul=function(){return(s.__FusedMatMul=s.asm.Sa).apply(null,arguments)},s._malloc=function(){return(s._malloc=s.asm.Ta).apply(null,arguments)},s._free=function(){return(s._free=s.asm.Ua).apply(null,arguments)};var wp=s.stackSave=function(){return(wp=s.stackSave=s.asm.Wa).apply(null,arguments)},kd=s.stackRestore=function(){return(kd=s.stackRestore=s.asm.Xa).apply(null,arguments)},Id=s.stackAlloc=function(){return(Id=s.stackAlloc=s.asm.Ya).apply(null,arguments)};s.cwrap=_;var Nn;function ns(X){this.name="ExitStatus",this.message="Program terminated with exit("+X+")",this.status=X}_t=function X(){Nn||Bi(),Nn||(_t=X)};function Bi(X){if(at>0||(je(),at>0))return;function se(){Nn||(Nn=!0,s.calledRun=!0,!z&&(Pe(),ht(),i(s),s.onRuntimeInitialized&&s.onRuntimeInitialized(),nt()))}s.setStatus?(s.setStatus("Running..."),setTimeout(function(){setTimeout(function(){s.setStatus("")},1),se()},1)):se()}if(s.run=Bi,s.preInit)for(typeof s.preInit=="function"&&(s.preInit=[s.preInit]);s.preInit.length>0;)s.preInit.pop()();Bi();var Il;l&&(Il={uncaughtException:process.listeners("uncaughtException").filter(function(X){return!l.uncaughtException.indexOf(X)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(X){return!l.unhandledRejection.indexOf(X)>-1})});var Sl;if(typeof n!="undefined")Sl=n;else if(typeof WasmBackendModuleThreadedSimd!="undefined")Sl=WasmBackendModuleThreadedSimd;else throw new Error("Could not find wasm module in post.js");if(Il){var kp=Sl._dispose;Sl._dispose=function(){kp(),Il.uncaughtException.forEach(function(X){process.removeListener("uncaughtException",X)}),Il.unhandledRejection.forEach(function(X){process.removeListener("unhandledRejection",X)})}}return n.ready}}();typeof e=="object"&&typeof t=="object"?t.exports=a:typeof define=="function"&&define.amd?define([],function(){return a}):typeof e=="object"&&(e.WasmBackendModule=a)}}),TT=1e-7,CT=1e-4,fh=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},vu=class{refCount(e){return fr("refCount")}incRef(e){return fr("incRef")}timerAvailable(){return!0}time(e){return fr("time")}read(e){return fr("read")}readSync(e){return fr("readSync")}readToGPU(e,t){return fr("readToGPU")}numDataIds(){return fr("numDataIds")}disposeData(e,t){return fr("disposeData")}write(e,t,a){return fr("write")}move(e,t,a,r,n){return fr("move")}memory(){return fr("memory")}floatPrecision(){return fr("floatPrecision")}epsilon(){return this.floatPrecision()===32?TT:CT}dispose(){return fr("dispose")}};function fr(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function j5(e){let t=e.length,a=0;for(;t>0;)a=Math.random()*t|0,t--,kc(e,t,a)}function NT(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let a=e.length,r=0;for(;a>0;)r=Math.random()*a|0,a--,kc(e,a,r),kc(t,a,r)}function eh(e,t,a){return Math.max(e,Math.min(t,a))}function ET(e){return e%2===0?e:e+1}function kc(e,t,a){let r=e[t];e[t]=e[a],e[a]=r}function RT(e){let t=0;for(let a=0;a<e.length;a++)t+=e[a];return t}function FT(e,t){let a=Math.random();return t*a+(1-a)*e}function $T(e,t){let a=0;for(let r=0;r<e.length;r++){let n=Number(e[r])-Number(t[r]);a+=n*n}return a}function O(e,t){if(!e)throw new Error(typeof t=="string"?t:t())}function Oa(e,t,a=""){O(Ls(e,t),()=>a+` Shapes ${e} and ${t} must match`)}function ko(e){O(e!=null,()=>"The input to the tensor constructor must be a non-null value.")}function lo(e,t=[],a=!1){if(t==null&&(t=[]),Array.isArray(e)||ba(e)&&!a)for(let r=0;r<e.length;++r)lo(e[r],t,a);else t.push(e);return t}function kt(e){if(e.length===0)return 1;let t=e[0];for(let a=1;a<e.length;a++)t*=e[a];return t}function MT(e){return e.length===0}function Ls(e,t){if(e===t)return!0;if(e==null||t==null||e.length!==t.length)return!1;for(let a=0;a<e.length;a++)if(e[a]!==t[a])return!1;return!0}function ru(e){return e%1===0}function _T(e){if(Math.tanh!=null)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function zT(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function OT(e){let t=new Uint32Array(e);for(let a=0;a<e;++a)t[a]=a;return j5(t),t}function qd(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function DT(e,t=r=>0,a){return new Promise((r,n)=>{let s=0,i=()=>{if(e()){r();return}s++;let o=t(s);if(a!=null&&s>=a){n();return}setTimeout(i,o)};i()})}function PT(e,t){let a=1,r=-1;for(let s=0;s<e.length;++s)if(e[s]>=0)a*=e[s];else if(e[s]===-1){if(r!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${s}`);r=s}else if(e[s]<0)throw Error(`Shapes can not be < 0. Found ${e[s]} at dim ${s}`);if(r===-1){if(t>0&&t!==a)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(a===0)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%a!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${a}`);let n=e.slice();return n[r]=t/a,n}function Dr(e,t){let a=t.length;return e=e==null?t.map((r,n)=>n):[].concat(e),O(e.every(r=>r>=-a&&r<a),()=>`All values in axis param must be in range [-${a}, ${a}) but got axis ${e}`),O(e.every(r=>ru(r)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(r=>r<0?a+r:r)}function H5(e,t){let a=[],r=[],n=t!=null&&Array.isArray(t)&&t.length===0,s=t==null||n?null:Dr(t,e).sort(),i=0;for(let o=0;o<e.length;++o){if(s!=null){if(s[i]===o&&e[o]!==1)throw new Error(`Can't squeeze axis ${o} since its dim '${e[o]}' is not 1`);(s[i]==null||s[i]>o)&&e[o]===1&&(a.push(e[o]),r.push(o)),s[i]<=o&&i++}e[o]!==1&&(a.push(e[o]),r.push(o))}return{newShape:a,keptDims:r}}function q5(e,t){let a=null;if(e==null||e==="float32")a=new Float32Array(t);else if(e==="int32")a=new Int32Array(t);else if(e==="bool")a=new Uint8Array(t);else throw new Error(`Unknown data type ${e}`);return a}function X5(e,t){let a=null;if(e==null||e==="float32")a=new Float32Array(t);else if(e==="int32")a=new Int32Array(t);else if(e==="bool")a=new Uint8Array(t);else if(e==="string")a=new Array(t);else throw new Error(`Unknown data type ${e}`);return a}function K5(e,t){for(let a=0;a<e.length;a++){let r=e[a];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function Z5(e){return e==="bool"||e==="complex64"||e==="float32"||e==="int32"||e==="string"}function LT(e,t){return!(t==="complex64"||t==="float32"&&e!=="complex64"||t==="int32"&&e!=="float32"&&e!=="complex64"||t==="bool"&&e==="bool")}function ba(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function jm(e){if(e==="float32"||e==="int32")return 4;if(e==="complex64")return 8;if(e==="bool")return 1;throw new Error(`Unknown dtype ${e}`)}function Y5(e){if(e==null)return 0;let t=0;return e.forEach(a=>t+=a.length),t}function ms(e){return typeof e=="string"||e instanceof String}function J5(e){return typeof e=="boolean"}function Q5(e){return typeof e=="number"}function sf(e){return Array.isArray(e)?sf(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":Q5(e)?"float32":ms(e)?"string":J5(e)?"bool":"float32"}function Is(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Ic(e,t){for(let a=t;a<e;++a)if(e%a===0)return a;return e}function wu(e){let t=e.length;if(t<2)return[];let a=new Array(t-1);a[t-2]=e[t-1];for(let r=t-3;r>=0;--r)a[r]=a[r+1]*e[r+1];return a}function ev(e,t,a,r=!1){let n=new Array;if(t.length===1){let s=t[0]*(r?2:1);for(let i=0;i<s;i++)n[i]=a[e+i]}else{let s=t[0],i=t.slice(1),o=i.reduce((l,d)=>l*d)*(r?2:1);for(let l=0;l<s;l++)n[l]=ev(e+l*o,i,a,r)}return n}function Jl(e,t,a=!1){if(e.length===0)return t[0];let r=e.reduce((n,s)=>n*s)*(a?2:1);if(r===0)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${a?" for a complex tensor":""}.`);return ev(0,e,t,a)}function Zg(e,t){let a=of(e,t);for(let r=0;r<a.length;r++)a[r]=1;return a}function of(e,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool")return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function WT(e,t){let a=e.reduce((r,n)=>r*n,1);if(t==null||t==="float32")return Jl(e,new Float32Array(a));if(t==="int32")return Jl(e,new Int32Array(a));if(t==="bool")return Jl(e,new Uint8Array(a));throw new Error(`Unknown data type ${t}`)}function Yg(e){e.forEach(t=>{O(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function BT(e,t,a){if(t===0)return 0;if(t===1)return e[0];let r=e[e.length-1];for(let n=0;n<e.length-1;++n)r+=a[n]*e[n];return r}function VT(e,t,a){if(t===0)return[];if(t===1)return[e];let r=new Array(t);for(let n=0;n<r.length-1;++n)r[n]=Math.floor(e/a[n]),e-=r[n]*a[n];return r[r.length-1]=e,r}function Jg(e){return e&&e.then&&typeof e.then=="function"}var GA="tfjsflags",tv=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=UT,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(J().getBool("IS_TEST")||J().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,a){if(this.flagRegistry[e]={evaluationFn:t,setHook:a},this.urlFlags[e]!=null){let r=this.urlFlags[e];J().getBool("IS_TEST")||J().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${r}.`),this.set(e,r)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(Jg(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global=="undefined"||typeof this.global.location=="undefined"||typeof this.global.location.search=="undefined")return;let e=this.getQueryParams(this.global.location.search);GA in e&&e[GA].split(",").forEach(t=>{let[a,r]=t.split(":");this.urlFlags[a]=jT(a,r)})}};function UT(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(a,...r)=>(GT(t,r[0],r[1]),r.join("="))),t}function GT(e,t,a){e[decodeURIComponent(t)]=decodeURIComponent(a||"")}function jT(e,t){if(t=t.toLowerCase(),t==="true"||t==="false")return t==="true";if(`${+t}`===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}function J(){return Pn}var Pn=null;function HT(e){Pn=e}var Q0;function av(){if(Q0==null){let e;if(typeof window!="undefined")e=window;else if(typeof global!="undefined")e=global;else if(typeof process!="undefined")e=process;else if(typeof self!="undefined")e=self;else throw new Error("Could not find a global object");Q0=e}return Q0}function qT(){let e=av();return e._tfGlobals==null&&(e._tfGlobals=new Map),e._tfGlobals}function Qg(e,t){let a=qT();if(a.has(e))return a.get(e);{let r=t();return a.set(e,r),a.get(e)}}var Io="Abs",ku="Acos",Iu="Acosh",qn="Add",Ws="AddN",Su="All",Tu="Any",Bs="ArgMax",Cu="ArgMin",Nu="Asin",Eu="Asinh",Ru="Atan",Fu="Atanh",$u="Atan2",Vs="AvgPool",lf="AvgPoolGrad",mh="AvgPool3D",uf="AvgPool3DGrad",Us="BatchMatMul",So="BatchToSpaceND",df="Bincount",rv="BroadcastTo",hf="BroadcastArgs",Gs="Cast",js="Ceil",Xn="ClipByValue",gh="Complex",yh="ComplexAbs",To="Concat",Hs="Conv2D",pf="Conv2DBackpropFilter",qs="Conv2DBackpropInput",Ah="Conv3D",cf="Conv3DBackpropFilterV2",ff="Conv3DBackpropInputV2",Xs="Cos",Ks="Cosh",Co="Cumsum",No="CropAndResize",mf="DenseBincount",Eo="DepthToSpace",Zs="DepthwiseConv2dNative",gf="DepthwiseConv2dNativeBackpropFilter",yf="DepthwiseConv2dNativeBackpropInput",Af="Diag",xh="Dilation2D",Sc="Dilation2DBackpropInput",Tc="Dilation2DBackpropFilter",Ys="RealDiv",bh="Einsum",Js="Elu",xf="EluGrad",Mu="Erf",Ro="Equal",Qs="Exp",Fo="ExpandDims",$o="Expm1",bf="FFT",_u="Fill",Mo="FlipLeftRight",ei="Floor",ti="FloorDiv",ai="FusedBatchNorm",_o="GatherV2",zo="GatherNd",Oo="Greater",ri="GreaterEqual",ni="Identity",vf="IFFT",vh="Imag",zu="IsFinite",Ou="IsInf",Du="IsNan",si="LeakyRelu",Do="Less",Po="LessEqual",wf="LinSpace",ii="Log",Pu="Log1p",Lo="LogicalAnd",Lu="LogicalNot",wh="LogicalOr",nv="LogSoftmax",kh="LRN",kf="LRNGrad",oi="Max",li="Maximum",ui="MaxPool",If="MaxPoolGrad",Ih="MaxPool3D",Sf="MaxPool3DGrad",Tf="MaxPoolWithArgmax",di="Mean",hi="Min",pi="Minimum",ci="MirrorPad",Wu="Mod",Cf="Multinomial",fi="Multiply",Wo="Neg",Bo="NotEqual",Vo="NonMaxSuppressionV3",Bu="NonMaxSuppressionV4",Uo="NonMaxSuppressionV5",Go="OnesLike",jo="OneHot",Ho="Pack",mi="PadV2",XT="Pool",gi="Pow",yi="Prelu",qo="Prod",Vu="Range",Sh="Real",Uu="Reciprocal",Ai="Relu",Xo="Reshape",Gu="ResizeNearestNeighbor",Nf="ResizeNearestNeighborGrad",xi="ResizeBilinear",Ef="ResizeBilinearGrad",bi="Relu6",Ko="Reverse",Zo="Round",vi="Rsqrt",Yo="ScatterNd",Jo="Select",ju="Selu",Qo="Slice",wi="Sin",el="Sinh",Hu="Sign",ki="Sigmoid",qu="Softplus",Ii="Sqrt",Si="Sum",tl="SpaceToBatchND",al="SplitV",Ti="Softmax",Th="SparseFillEmptyRows",Xu="SparseReshape",Ch="SparseSegmentMean",Nh="SparseSegmentSum",Eh="SparseToDense",Ci="SquaredDifference",Ku="Square",rl="StridedSlice",Rh="StringNGrams",Rf="StringSplit",Ff="StringToHashBucketFast",Ni="Sub",nl="Tan",Ei="Tanh",Kn="Tile",sl="TopK",il="Transform",Ri="Transpose",$f="Unique",ol="Unpack",Fh="UnsortedSegmentSum",ll="ZerosLike",Fi="Step",th="FromPixels",ul="RotateWithOffset",Ss="_FusedMatMul",Ts="FusedConv2D",Cs="FusedDepthwiseConv2D";function cs(...e){J().getBool("IS_TEST")||J().getBool("PROD")||console.warn(...e)}function KT(...e){J().getBool("IS_TEST")||J().getBool("PROD")||console.log(...e)}var nu=Qg("kernelRegistry",()=>new Map),ah=Qg("gradRegistry",()=>new Map);function Cc(e,t){let a=e2(e,t);return nu.get(a)}function Hm(e){return ah.get(e)}function uo(e){let t=nu.entries(),a=[];for(;;){let{done:r,value:n}=t.next();if(r)break;let[s,i]=n,[o]=s.split("_");o===e&&a.push(i)}return a}function An(e){let{kernelName:t,backendName:a}=e,r=e2(t,a);nu.has(r)&&cs(`The kernel '${t}' for backend '${a}' is already registered`),nu.set(r,e)}function sv(e){let{kernelName:t}=e;ah.has(t)&&J().getBool("DEBUG")&&cs(`Overriding the gradient for '${t}'`),ah.set(t,e)}function ZT(e,t){let a=e2(e,t);if(!nu.has(a))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);nu.delete(a)}function YT(e){if(!ah.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);ah.delete(e)}function JT(e,t){uo(e).forEach(a=>{let r=Object.assign({},a,{backendName:t});An(r)})}function e2(e,t){return`${t}_${e}`}var w={};ze(w,{arraysEqual:()=>Ls,assert:()=>O,assertNonNegativeIntegerDimensions:()=>Yg,assertNonNull:()=>ko,assertShapesMatch:()=>Oa,bytesFromStringArray:()=>Y5,bytesPerElement:()=>jm,checkConversionForErrors:()=>K5,clamp:()=>eh,computeStrides:()=>wu,createScalarValue:()=>n9,createShuffledIndices:()=>OT,decodeString:()=>Nc,distSquared:()=>$T,encodeString:()=>Mh,fetch:()=>i9,fingerPrint64:()=>r9,flatten:()=>lo,getArrayFromDType:()=>X5,getTypedArrayFromDType:()=>q5,hasEncodingLoss:()=>LT,hexToLong:()=>$h,indexToLoc:()=>VT,inferDtype:()=>sf,inferFromImplicitShape:()=>PT,isBoolean:()=>J5,isFunction:()=>Is,isInt:()=>ru,isNumber:()=>Q5,isPromise:()=>Jg,isScalarShape:()=>MT,isString:()=>ms,isTypedArray:()=>ba,isValidDtype:()=>Z5,locToIndex:()=>BT,makeOnesTypedArray:()=>Zg,makeZerosNestedTypedArray:()=>WT,makeZerosTypedArray:()=>of,nearestDivisor:()=>Ic,nearestLargerEven:()=>ET,now:()=>rh,parseAxisParam:()=>Dr,randUniform:()=>FT,repeatedTry:()=>DT,rightPad:()=>qd,shuffle:()=>j5,shuffleCombo:()=>NT,sizeFromShape:()=>kt,sizeToSquarishShape:()=>zT,squeezeShape:()=>H5,sum:()=>RT,swap:()=>kc,tanh:()=>_T,toNestedArray:()=>Jl,toTypedArray:()=>Mf});var jA=wo(dT()),Xi=jA.default||jA;function $h(e){return Xi.fromString(e,!0,16)}var iv=$h("c3a5c85c97cb3127"),Hi=$h("b492b66fbe98f273"),Ca=$h("9ae16a3b2f90404f");function qm(e){return e.xor(e.shru(47))}function ov(e,t,a){let r=e.slice(t,t+a);return Xi.fromBytes(Array.from(r),!0,!0)}function At(e,t){return ov(e,t,8)}function HA(e,t){return ov(e,t,4)}function la(e,t){return t===0?e:e.shru(t).or(e.shl(64-t))}function xs(e,t,a=$h("9ddfea08eb382d69")){let r=e.xor(t).mul(a);r=r.xor(r.shru(47));let n=t.xor(r).mul(a);return n=n.xor(n.shru(47)),n=n.mul(a),n}function QT(e,t,a,r,n,s){n=n.add(e),s=la(s.add(n).add(r),21);let i=n;return n=n.add(t),n=n.add(a),s=s.add(la(n,44)),[n.add(r),s.add(i)]}function zp(e,t,a,r){return QT(At(e,t),At(e,t+8),At(e,t+16),At(e,t+24),a,r)}function e9(e,t=e.length){if(t>=8){let a=Ca.add(t*2),r=At(e,0).add(Ca),n=At(e,t-8),s=la(n,37).mul(a).add(r),i=la(r,25).add(n).mul(a);return xs(s,i,a)}if(t>=4){let a=Ca.add(t*2),r=HA(e,0);return xs(r.shl(3).add(t),HA(e,t-4),a)}if(t>0){let a=e[0],r=e[t>>1],n=e[t-1],s=a+(r<<8),i=t+(n<<2);return qm(Ca.mul(s).xor(iv.mul(i))).mul(Ca)}return Ca}function t9(e,t=e.length){let a=Ca.add(t*2),r=At(e,0).mul(Hi),n=At(e,8),s=At(e,t-8).mul(a),i=At(e,t-16).mul(Ca);return xs(la(r.add(n),43).add(la(s,30)).add(i),r.add(la(n.add(Ca),18)).add(s),a)}function a9(e,t=e.length){let a=Ca.add(t*2),r=At(e,0).mul(Ca),n=At(e,8),s=At(e,t-8).mul(a),i=At(e,t-16).mul(Ca),o=la(r.add(n),43).add(la(s,30)).add(i),l=xs(o,r.add(la(n.add(Ca),18)).add(s),a),d=At(e,16).mul(a),u=At(e,24),h=o.add(At(e,t-32)).mul(a),p=l.add(At(e,t-24)).mul(a);return xs(la(d.add(u),43).add(la(h,30)).add(p),d.add(la(u.add(r),18)).add(h),a)}function r9(e,t=e.length){let a=Xi.fromNumber(81,!0);if(t<=32)return t<=16?e9(e,t):t9(e,t);if(t<=64)return a9(e,t);let r=a,n=a.mul(Hi).add(113),s=qm(n.mul(Ca).add(113)).mul(Ca),i=[Xi.UZERO,Xi.UZERO],o=[Xi.UZERO,Xi.UZERO];r=r.mul(Ca).add(At(e,0));let l=0,d=(t-1>>6)*64,u=d+(t-1&63)-63;do r=la(r.add(n).add(i[0]).add(At(e,l+8)),37).mul(Hi),n=la(n.add(i[1]).add(At(e,l+48)),42).mul(Hi),r=r.xor(o[1]),n=n.add(i[0]).add(At(e,l+40)),s=la(s.add(o[0]),33).mul(Hi),i=zp(e,l,i[1].mul(Hi),r.add(o[0])),o=zp(e,l+32,s.add(o[1]),n.add(At(e,l+16))),[s,r]=[r,s],l+=64;while(l!==d);let h=Hi.add(s.and(255).shl(1));return l=u,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=la(r.add(n).add(i[0]).add(At(e,l+8)),37).mul(h),n=la(n.add(i[1]).add(At(e,l+48)),42).mul(h),r=r.xor(o[1].mul(9)),n=n.add(i[0].mul(9).add(At(e,l+40))),s=la(s.add(o[0]),33).mul(h),i=zp(e,l,i[1].mul(h),r.add(o[0])),o=zp(e,l+32,s.add(o[1]),n.add(At(e,l+16))),[s,r]=[r,s],xs(xs(i[0],o[0],h).add(qm(n).mul(iv)).add(s),xs(i[1],o[1],h).add(r),h)}function n9(e,t){return t==="string"?Mh(e):Mf([e],t)}function s9(e,t){return e instanceof Float32Array&&t==="float32"||e instanceof Int32Array&&t==="int32"||e instanceof Uint8Array&&t==="bool"}function Mf(e,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=lo(e)),J().getBool("DEBUG")&&K5(e,t),s9(e,t))return e;if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"){let a=new Uint8Array(e.length);for(let r=0;r<a.length;++r)Math.round(e[r])!==0&&(a[r]=1);return a}else throw new Error(`Unknown data type ${t}`)}function rh(){return J().platform.now()}function i9(e,t){return J().platform.fetch(e,t)}function Mh(e,t="utf-8"){return t=t||"utf-8",J().platform.encode(e,t)}function Nc(e,t="utf-8"){return t=t||"utf-8",J().platform.decode(e,t)}var o9=class{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new u9)}profileKernel(e,t,a){let r,n=()=>{r=a()},s,i=rh();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(n);else{n();for(let o of r)o.dataSync();s=Promise.resolve({kernelMs:rh()-i})}if(J().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let o=0;o<r.length;o++){let l=r[o];l.data().then(d=>{l9(d,l.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:s.then(o=>o.kernelMs),extraInfo:s.then(o=>o.getExtraProfileInfo!=null?o.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:a,timeMs:r,inputs:n,extraInfo:s}=e;a.forEach(i=>{Promise.all([i.data(),r,s]).then(o=>{this.logger.logKernelProfile(t,i,o[0],o[1],n,o[2])})})}};function l9(e,t,a){if(t!=="float32")return!1;for(let r=0;r<e.length;r++){let n=e[r];if(isNaN(n)||!isFinite(n))return console.warn(`Found ${n} in the result of '${a}'`),!0}return!1}var u9=class{logKernelProfile(e,t,a,r,n,s){let i=typeof r=="number"?qd(`${r}ms`,9):r.error,o=qd(e,25),l=t.rank,d=t.size,u=qd(t.shape.toString(),14),h="";for(let p in n){let c=n[p];if(c!=null){let f=c.shape||t.shape,m=f.length;h+=`${p}: ${m}D ${m>0?f:""} `}}console.log(`%c${o}	%c${i}	%c${l}D ${u}	%c${d}	%c${h}	%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function d9(e,t,a){let r={},n={};for(let l=0;l<t.length;l++)r[t[l].id]=!0;for(let l=0;l<e.length;l++){let d=e[l],u=d.inputs;for(let h in u){let p=u[h],c=!1;for(let f=0;f<t.length;f++)if(r[p.id]){d.outputs.forEach(m=>r[m.id]=!0),c=!0,n[d.id]=!0;break}if(c)break}}let s={};s[a.id]=!0;let i={};for(let l=e.length-1;l>=0;l--){let d=e[l],u=d.inputs;for(let h=0;h<d.outputs.length;h++)if(s[d.outputs[h].id]){for(let p in u)s[u[p].id]=!0,i[d.id]=!0;break}}let o=[];for(let l=0;l<e.length;l++){let d=e[l];if(n[d.id]&&i[d.id]){let u={};for(let p in d.inputs){let c=d.inputs[p];r[c.id]&&(u[p]=c)}let h=Object.assign({},d);h.inputs=u,h.outputs=d.outputs,o.push(h)}}return o}function h9(e,t,a,r){for(let n=t.length-1;n>=0;n--){let s=t[n],i=[];if(s.outputs.forEach(l=>{let d=e[l.id];d!=null?i.push(d):i.push(null)}),s.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let o=s.gradient(i);for(let l in s.inputs){if(!(l in o))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(o)}.`);let d=a(()=>o[l]());if(d.dtype!=="float32")throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${d.dtype}'`);let u=s.inputs[l];if(!Ls(d.shape,u.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${l}' has shape '${d.shape}', which does not match the shape of the input '${u.shape}'`);if(e[u.id]==null)e[u.id]=d;else{let h=e[u.id];e[u.id]=r(h,d),h.dispose()}}}}var qA=20,Ed=3,em=7;function p9(e,t,a,r){let n=wu(t),s=c9(e,t,a,n),i=t.length,o=oc(e,t,a,n,s),l=["Tensor"];return r&&(l.push(`  dtype: ${a}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map(d=>"    "+d).join(`
`)),l.join(`
`)}function c9(e,t,a,r){let n=kt(t),s=r[r.length-1],i=new Array(s).fill(0),o=t.length,l=a==="complex64"?_d(e):e;if(o>1)for(let d=0;d<n/s;d++){let u=d*s;for(let h=0;h<s;h++)i[h]=Math.max(i[h],Md(l[u+h],0,a).length)}return i}function Md(e,t,a){let r;return Array.isArray(e)?r=`${parseFloat(e[0].toFixed(em))} + ${parseFloat(e[1].toFixed(em))}j`:ms(e)?r=`'${e}'`:a==="bool"?r=lv(e):r=parseFloat(e.toFixed(em)).toString(),qd(r,t)}function lv(e){return e===0?"false":"true"}function oc(e,t,a,r,n,s=!0){let i=a==="complex64"?2:1,o=t[0],l=t.length;if(l===0){if(a==="complex64"){let m=_d(e);return[Md(m[0],0,a)]}return a==="bool"?[lv(e[0])]:[e[0].toString()]}if(l===1){if(o>qA){let g=Ed*i,y=Array.from(e.slice(0,g)),A=Array.from(e.slice((o-Ed)*i,o*i));return a==="complex64"&&(y=_d(y),A=_d(A)),["["+y.map((x,b)=>Md(x,n[b],a)).join(", ")+", ..., "+A.map((x,b)=>Md(x,n[o-Ed+b],a)).join(", ")+"]"]}let m=a==="complex64"?_d(e):Array.from(e);return["["+m.map((g,y)=>Md(g,n[y],a)).join(", ")+"]"]}let d=t.slice(1),u=r.slice(1),h=r[0]*i,p=[];if(o>qA){for(let m=0;m<Ed;m++){let g=m*h,y=g+h;p.push(...oc(e.slice(g,y),d,a,u,n,!1))}p.push("...");for(let m=o-Ed;m<o;m++){let g=m*h,y=g+h;p.push(...oc(e.slice(g,y),d,a,u,n,m===o-1))}}else for(let m=0;m<o;m++){let g=m*h,y=g+h;p.push(...oc(e.slice(g,y),d,a,u,n,m===o-1))}let c=l===2?",":"";p[0]="["+p[0]+c;for(let m=1;m<p.length-1;m++)p[m]=" "+p[m]+c;let f=`,
`;for(let m=2;m<l;m++)f+=`
`;return p[p.length-1]=" "+p[p.length-1]+"]"+(s?"":f),p}function _d(e){let t=[];for(let a=0;a<e.length;a+=2)t.push([e[a],e[a+1]]);return t}var aa=class{constructor(e,t,a){if(this.dtype=t,this.shape=e.slice(),this.size=kt(e),a!=null){let r=a.length;O(r===this.size,()=>`Length of values '${r}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=a||X5(t,this.size),this.strides=wu(e)}set(e,...t){t.length===0&&(t=[0]),O(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let a=this.locToIndex(t);this.values[a]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(let r of e){if(r<0||r>=this.shape[t]){let n=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(n)}t++}let a=e[e.length-1];for(let r=0;r<e.length-1;++r)a+=this.strides[r]*e[r];return this.values[a]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let a=0;a<e.length-1;++a)t+=this.strides[a]*e[a];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];let t=new Array(this.shape.length);for(let a=0;a<t.length-1;++a)t[a]=Math.floor(e/this.strides[a]),e-=t[a]*this.strides[a];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Vr().makeTensor(this.values,this.shape,this.dtype)}},Vr=null,Gl=null;function f9(e){Vr=e}function m9(e){Gl=e}var et=class{constructor(e,t,a,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=kt(e),this.strides=wu(e),this.dataId=a,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return Gl.buffer(this.shape,this.dtype,e)}bufferSync(){return Gl.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return Jl(this.shape,e,this.dtype==="complex64")}arraySync(){return Jl(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();let e=Vr().read(this.dataId);if(this.dtype==="string"){let t=await e;try{return t.map(a=>Nc(a))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Vr().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=Vr().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>Nc(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await Vr().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Vr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Gl.print(this,e)}clone(){return this.throwIfDisposed(),Gl.clone(this)}toString(e=!1){let t=this.dataSync();return p9(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Gl.cast(this,e)}variable(e=!0,t,a){return this.throwIfDisposed(),Vr().makeVariable(this,e,t,a)}};Object.defineProperty(et,Symbol.hasInstance,{value:e=>!!e&&e.data!=null&&e.dataSync!=null&&e.throwIfDisposed!=null});function g9(){return Qg("Tensor",()=>et)}g9();var nh=class extends et{constructor(e,t,a,r){super(e.shape,e.dtype,e.dataId,r);this.trainable=t,this.name=a}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Ls(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Vr().disposeTensor(this),this.dataId=e.dataId,Vr().incRef(this,null)}dispose(){Vr().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(nh,Symbol.hasInstance,{value:e=>e instanceof et&&e.assign!=null&&e.assign instanceof Function});var Zr={};ze(Zr,{assertTypesMatch:()=>fv,getTensorsInContainer:()=>t2,isTensorInList:()=>A9,makeTypesMatch:()=>Mt});var uv=(e=>(e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6",e))(uv||{}),dv=(e=>(e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64",e))(dv||{}),hv=(e=>(e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64",e))(hv||{}),pv=(e=>(e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64",e))(pv||{}),cv=(e=>(e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64",e))(cv||{}),y9={float32:pv,int32:dv,bool:hv,complex64:cv};function $a(e,t){if(e==="string"||t==="string"){if(e==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return y9[e][t]}function _h(e){return $a(e,"int32")}function Mt(e,t){if(e.dtype===t.dtype)return[e,t];let a=$a(e.dtype,t.dtype);return[e.cast(a),t.cast(a)]}function fv(e,t){O(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function A9(e,t){return t.some(a=>a.id===e.id)}function t2(e){let t=[];return mv(e,t,new Set),t}function mv(e,t,a){if(e==null)return;if(e instanceof et){t.push(e);return}if(!x9(e))return;let r=e;for(let n in r){let s=r[n];a.has(s)||(a.add(s),mv(s,t,a))}}function x9(e){return Array.isArray(e)||typeof e=="object"}function tm(e){return e.kernelName!=null}var XA=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},Xm=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new XA}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let a=e[t];if(await this.initializeBackend(a).success){await this.setBackend(a);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){let{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,a=1){return e in this.registryFactory?(cs(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:a},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;let{success:t,asyncInit:a}=this.initializeBackend(e);if(!(a?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new o9(this.backendInstance),!0}setupRegisteredKernels(){uo(this.backendName).forEach(e=>{e.setupFunc!=null&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){uo(e).forEach(t=>{t.disposeFunc!=null&&t.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let a=t.factory();if(a&&!(a instanceof vu)&&typeof a.then=="function"){let r=++this.pendingBackendInitId,n=a.then(s=>r<this.pendingBackendInitId?!1:(this.registry[e]=s,this.pendingBackendInit=null,!0)).catch(s=>(r<this.pendingBackendInitId||(this.pendingBackendInit=null,cs(`Initialization of backend ${e} failed`),cs(s.stack||s.message)),!1));return this.pendingBackendInit=n,{success:n,asyncInit:!0}}else return this.registry[e]=a,{success:!0,asyncInit:!1}}catch(a){return cs(`Initialization of backend ${e} failed`),cs(a.stack||a.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let a=e[t],{success:r,asyncInit:n}=this.initializeBackend(a);if(n||r)return{name:a,asyncInit:n}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let a=this.state.tensorInfo.get(t),r=a.backend,n=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),a.backend=e,e.move(t,n,a.shape,a.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let a=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");a=e}let r;return this.scopedRun(()=>this.startScope(a),()=>this.endScope(r),()=>(r=t(),r instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),r))}scopedRun(e,t,a){e();try{let r=a();return t(),r}catch(r){throw t(),r}}nextTensorId(){return Xm.nextTensorId++}nextVariableId(){return Xm.nextVariableId++}clone(e){let t=U.runKernel(ni,{x:e}),a={x:e},r=s=>({x:()=>{let i="float32",o={x:s},l={dtype:i};return U.runKernel(Gs,o,l)}}),n=[];return this.addTapeNode(this.state.activeScope.name,a,[t],r,n,{}),t}runKernel(e,t,a){if(this.backendName==null&&this.backend,Cc(e,this.backendName)==null)throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:a})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,a){let r=this.backend.numDataIds(),n=0;a.forEach(o=>{n+=o.dtype==="complex64"?3:1});let s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-n-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,a=[],r=this.isTapeOn(),n=this.state.numBytes,s=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let i;this.backendName==null&&this.backend;let o,l=tm(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(tm(e)){let{kernelName:c,inputs:f,attrs:m}=e;this.backendName==null&&this.backend;let g=Cc(c,this.backendName);O(g!=null,()=>`Cannot find registered kernel '${c}' for backend '${this.backendName}'`),i=()=>{let y=this.backend.numDataIds();o=g.kernelFunc({inputs:f,attrs:m,backend:this.backend});let A=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,y,A);let x=A.map(b=>{if(b.rank!=null)return b;let{dataId:v,shape:T,dtype:C}=b;return this.makeTensorFromDataId(v,T,C)});if(r){let b=this.getTensorsForGradient(c,f,x);a=this.saveTensorsForBackwardMode(b)}return x}}else{let{forwardFunc:c}=e,f=m=>{!r||(a=m.map(g=>this.keep(this.clone(g))))};i=()=>{let m=this.backend.numDataIds();o=this.tidy(()=>c(this.backend,f));let g=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,m,g),g}}let{inputs:d,attrs:u}=e,h=tm(e)?null:e.backwardsFunc,p;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=i():(p=this.profiler.profileKernel(l,d,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs)}),r&&this.addTapeNode(l,d,t,h,a,u),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-n,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map(c=>d[c]!=null?d[c].shape:null),outputShapes:t.map(c=>c.shape),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(t=>this.keep(this.clone(t)))}getTensorsForGradient(e,t,a){let r=Hm(e);if(r!=null){let n=r.inputsToSave||[],s=r.outputsToSave||[],i;r.saveAllInputs?(O(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(t).map(l=>t[l])):i=n.map(l=>t[l]);let o=a.filter((l,d)=>s[d]);return i.concat(o)}return[]}makeTensor(e,t,a,r){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");a=a||"float32",r=r||this.backend;let n=e;a==="string"&&ms(e[0])&&(n=e.map(o=>Mh(o)));let s=r.write(n,t,a),i=new et(t,a,s,this.nextTensorId());if(this.trackTensor(i,r),a==="string"){let o=this.state.tensorInfo.get(s),l=Y5(n);this.state.numBytes+=l-o.bytes,o.bytes=l}return i}makeTensorFromDataId(e,t,a,r){a=a||"float32";let n=new et(t,a,e,this.nextTensorId());return this.trackTensor(n,r),n}makeVariable(e,t=!0,a,r){a=a||this.nextVariableId().toString(),r!=null&&r!==e.dtype&&(e=e.cast(r));let n=new nh(e,t,a,this.nextTensorId());if(this.state.registeredVariables[n.name]!=null)throw new Error(`Variable with name ${n.name} was already registered`);return this.state.registeredVariables[n.name]=n,this.incRef(n,this.backend),n}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let a=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(a=e.size*jm(e.dtype)),this.state.numBytes+=a,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:a})),e instanceof nh||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){let a=e.size*jm(e.dtype);this.state.numBytes-=a}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,a=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(r=>r.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-a;for(let r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,a,r,n,s){let i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:a,saved:n},o=Hm(e);o!=null&&(r=o.gradFunc),r!=null&&(i.gradient=l=>(l=l.map((d,u)=>{if(d==null){let h=a[u],p=of(h.size,h.dtype);return this.makeTensor(p,h.shape,h.dtype)}return d}),r(l.length>1?l:l[0],n,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=t2(e),a=new Set(t.map(n=>n.id));for(let n=0;n<this.state.activeScope.track.length;n++){let s=this.state.activeScope.track[n];!s.kept&&!a.has(s.id)&&s.dispose()}let r=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(n=>{!n.kept&&n.scopeId===r.id&&this.track(n)})}gradients(e,t,a,r=!1){if(O(t.length>0,()=>"gradients() received an empty list of xs."),a!=null&&a.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${a.dtype}'`);let n=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));O(n instanceof et,()=>"The result y returned by f() must be a tensor.");let s=d9(this.state.activeTape,t,n);if(!r&&s.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let i={};i[n.id]=a==null?b9(n.shape):a,h9(i,s,l=>this.tidy(l),v9);let o=t.map(l=>i[l.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(l=>{for(let d of l.saved)d.dispose()}),this.state.activeTape=null),{value:n,grads:o}})}customGrad(e){return O(Is(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{O(t.every(i=>i instanceof et),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let a,r={};t.forEach((i,o)=>{r[o]=i});let n=(i,o)=>(a=e(...t,o),O(a.value instanceof et,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),O(Is(a.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),a.value),s=(i,o)=>{let l=a.gradFunc(i,o),d=Array.isArray(l)?l:[l];O(d.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),O(d.every(h=>h instanceof et),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let u={};return d.forEach((h,p)=>{u[p]=()=>h}),u};return this.runKernelFunc({forwardFunc:n,backwardsFunc:s,inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){let t=rh(),a=await this.backend.time(e);return a.wallMs=rh()-t,a}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new XA;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}},a2=Xm;a2.nextTensorId=0;a2.nextVariableId=0;function b9(e){let t=Zg(kt(e),"float32");return U.makeTensor(t,e,"float32")}function gv(){let e=av();if(e._tfengine==null){let t=new tv(e);e._tfengine=new a2(t)}return HT(e._tfengine.ENV),f9(()=>e._tfengine),e._tfengine}var U=gv();function v9(e,t){let a={a:e,b:t};return U.runKernel(qn,a)}var zh={};ze(zh,{isBrowser:()=>yv,isMobile:()=>I9,mockIsMobile:()=>k9});function w9(){return typeof navigator!="undefined"&&navigator!=null}var Km;function k9(e){Km=e}function I9(e){if(Km!==void 0)return Km;if(e||w9()){if(e||(e=navigator),e.product==="ReactNative")return!0;let t=e.userAgent||e.vendor||(typeof window!="undefined"?window.opera:"");if(!t){let a=e;return a.userAgentData&&a.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function yv(){return typeof window!="undefined"&&window.document!=null||typeof WorkerGlobalScope!="undefined"}var en=J();en.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});en.registerFlag("IS_BROWSER",()=>yv());en.registerFlag("IS_NODE",()=>typeof process!="undefined"&&typeof process.versions!="undefined"&&typeof process.versions.node!="undefined");en.registerFlag("IS_CHROME",()=>typeof navigator!="undefined"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));en.registerFlag("PROD",()=>!1);en.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>en.getBool("DEBUG"));en.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);en.registerFlag("IS_TEST",()=>!1);en.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);en.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);function xn(e,t){let a=e;if(ba(e))return t==="string"?[]:[e.length];if(!Array.isArray(e))return[];let r=[];for(;Array.isArray(a)||ba(a)&&t!=="string";)r.push(a.length),a=a[0];return Array.isArray(e)&&J().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Av(e,r,[]),r}function Av(e,t,a){if(a=a||[],!Array.isArray(e)&&!ba(e)){O(t.length===0,()=>`Element arr[${a.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}O(t.length>0,()=>`Element arr[${a.join("][")}] should be a primitive, but is an array of ${e.length} elements`),O(e.length===t[0],()=>`Element arr[${a.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);let r=t.slice(1);for(let n=0;n<e.length;++n)Av(e[n],r,a.concat(n))}function KA(e,t,a,r){if(e!=="string_or_numeric"){if(e==null)throw new Error("Expected dtype cannot be null.");if(e!=="numeric"&&e!==t||e==="numeric"&&t==="string")throw new Error(`Argument '${a}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function M(e,t,a,r="numeric"){if(e instanceof et)return KA(r,e.dtype,t,a),e;let n=sf(e);if(n!=="string"&&["bool","int32","float32"].indexOf(r)>=0&&(n=r),KA(r,n,t,a),e==null||!ba(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string"){let o=e==null?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${a}' must be a Tensor or TensorLike, but got '${o}'`)}let s=xn(e,n);!ba(e)&&!Array.isArray(e)&&(e=[e]);let i=n!=="string"?Mf(e,n):lo(e,[],!0);return U.makeTensor(i,s,n)}function sh(e,t,a,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${a} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((n,s)=>M(n,`${t}[${s}]`,a,r))}var xv="__op";function G(e){let t=Object.keys(e);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let a=t[0],r=e[a];a.endsWith("_")&&(a=a.substring(0,a.length-1)),a=a+xv;let n=(...s)=>{U.startScope(a);try{let i=r(...s);return Jg(i)&&console.error("Cannot return a Promise inside of tidy."),U.endScope(i),i}catch(i){throw U.endScope(null),i}};return Object.defineProperty(n,"name",{value:a,configurable:!0}),n}function S9(e,t){let a=M(e,"real","complex"),r=M(t,"imag","complex");Oa(a.shape,r.shape,`real and imag shapes, ${a.shape} and ${r.shape}, must match in call to tf.complex().`);let n={real:a,imag:r};return U.runKernel(gh,n)}var Ns=G({complex_:S9});function $i(e,t,a,r){if(r==null&&(r=sf(e)),r==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!ba(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){Yg(t);let n=kt(t),s=kt(a);O(n===s,()=>`Based on the provided shape, [${t}], the tensor should have ${n} values but has ${s}`);for(let i=0;i<a.length;++i){let o=a[i],l=i===a.length-1?o!==kt(t.slice(i)):!0;O(a[i]===t[i]||!l,()=>`Error creating a new Tensor. Inferred shape (${a}) does not match the provided shape (${t}). `)}}return!ba(e)&&!Array.isArray(e)&&(e=[e]),t=t||a,e=r!=="string"?Mf(e,r):lo(e,[],!0),U.makeTensor(e,t,r)}function lt(e,t,a){let r=xn(e,a);return $i(e,t,r,a)}var Zm={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},Ec=4;async function T9(e,t){let a=[],r=[],n=Array.isArray(e)?e.map(i=>i.name):Object.keys(e);for(let i=0;i<n.length;++i){let o=n[i],l=Array.isArray(e)?e[i].tensor:e[o];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${o}': ${l.dtype}`);let d={name:o,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){let u=new Promise(async h=>{let p=await l.bytes(),c=p.reduce((g,y)=>g+y.length,0)+Ec*p.length,f=new Uint8Array(c),m=0;for(let g=0;g<p.length;g++){let y=p[g],A=new Uint8Array(new Uint32Array([y.length]).buffer);f.set(A,m),m+=Ec,f.set(y,m),m+=y.length}h(f)});r.push(u)}else r.push(l.data());t!=null&&(d.group=t),a.push(d)}let s=await Promise.all(r);return{data:C9(s),specs:a}}function bv(e,t){let a={},r,n=0;for(let s of t){let i=s.name,o=s.dtype,l=s.shape,d=kt(l),u;if("quantization"in s){let h=s.quantization;if(h.dtype==="uint8"||h.dtype==="uint16"){if(!("min"in h&&"scale"in h))throw new Error(`Weight ${s.name} with quantization ${h.dtype} doesn't have corresponding metadata min and scale.`)}else if(h.dtype==="float16"){if(o!=="float32")throw new Error(`Weight ${s.name} is quantized with ${h.dtype} which only supports weights of type float32 not ${o}.`)}else throw new Error(`Weight ${s.name} has unknown quantization dtype ${h.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let p=Zm[h.dtype],c=e.slice(n,n+d*p),f=h.dtype==="uint8"?new Uint8Array(c):new Uint16Array(c);if(o==="float32")if(h.dtype==="uint8"||h.dtype==="uint16"){u=new Float32Array(f.length);for(let m=0;m<f.length;m++){let g=f[m];u[m]=g*h.scale+h.min}}else if(h.dtype==="float16")r===void 0&&(r=M9()),u=r(f);else throw new Error(`Unsupported quantization type ${h.dtype} for weight type float32.`);else if(o==="int32"){if(h.dtype!=="uint8"&&h.dtype!=="uint16")throw new Error(`Unsupported quantization type ${h.dtype} for weight type int32.`);u=new Int32Array(f.length);for(let m=0;m<f.length;m++){let g=f[m];u[m]=Math.round(g*h.scale+h.min)}}else throw new Error(`Unsupported dtype in weight '${i}': ${o}`);n+=d*p}else if(o==="string"){let h=kt(s.shape);u=[];for(let p=0;p<h;p++){let c=new Uint32Array(e.slice(n,n+Ec))[0];n+=Ec;let f=new Uint8Array(e.slice(n,n+c));u.push(f),n+=c}}else{let h=Zm[o],p=e.slice(n,n+d*h);if(o==="float32")u=new Float32Array(p);else if(o==="int32")u=new Int32Array(p);else if(o==="bool")u=new Uint8Array(p);else if(o==="complex64"){u=new Float32Array(p);let c=new Float32Array(u.length/2),f=new Float32Array(u.length/2);for(let y=0;y<c.length;y++)c[y]=u[y*2],f[y]=u[y*2+1];let m=lt(c,l,"float32"),g=lt(f,l,"float32");a[i]=Ns(m,g),m.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${i}': ${o}`);n+=d*h}o!=="complex64"&&(a[i]=lt(u,l,o))}return a}function C9(e){if(e===null)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,a=[];e.forEach(s=>{if(t+=s.byteLength,a.push(s.byteLength===s.buffer.byteLength?s:new s.constructor(s)),!(s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${s.constructor.name}`)});let r=new Uint8Array(t),n=0;return a.forEach(s=>{r.set(new Uint8Array(s.buffer),n),n+=s.byteLength}),r.buffer}var r2=typeof Buffer!="undefined"&&(typeof Blob=="undefined"||typeof atob=="undefined"||typeof btoa=="undefined");function ZA(e){return r2?Buffer.byteLength(e):new Blob([e]).size}function N9(e){if(r2)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),a="";for(let r=0,n=t.length;r<n;r++)a+=String.fromCharCode(t[r]);return btoa(a)}function E9(e){if(r2){let r=Buffer.from(e,"base64");return r.buffer.slice(r.byteOffset,r.byteOffset+r.byteLength)}let t=atob(e),a=new Uint8Array(t.length);for(let r=0;r<t.length;++r)a.set([t.charCodeAt(r)],r);return a.buffer}function n2(e){if(e.length===1)return e[0];let t=0;e.forEach(n=>{t+=n.byteLength});let a=new Uint8Array(t),r=0;return e.forEach(n=>{a.set(new Uint8Array(n),r),r+=n.byteLength}),a.buffer}function YA(e){let t="/";for(e=e.trim();e.endsWith(t);)e=e.slice(0,e.length-1);let a=e.split(t);return a[a.length-1]}function vv(e,t){let a={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return e.signature!=null&&(a.signature=e.signature),e.userDefinedMetadata!=null&&(a.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(a.modelInitializer=e.modelInitializer),e.trainingConfig!=null&&(a.trainingConfig=e.trainingConfig),a}async function s2(e,t){let a={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(e.trainingConfig!=null&&(a.trainingConfig=e.trainingConfig),e.weightsManifest!=null){let[r,n]=await t(e.weightsManifest);a.weightSpecs=r,a.weightData=n}return e.signature!=null&&(a.signature=e.signature),e.userDefinedMetadata!=null&&(a.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(a.modelInitializer=e.modelInitializer),a}function Oh(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:e.modelTopology==null?0:ZA(JSON.stringify(e.modelTopology)),weightSpecsBytes:e.weightSpecs==null?0:ZA(JSON.stringify(e.weightSpecs)),weightDataBytes:e.weightData==null?0:e.weightData.byteLength}}function R9(){let e=a=>{let r=a<<13,n=0;for(;(r&8388608)===0;)n-=8388608,r<<=1;return r&=-8388609,n+=947912704,r|n},t=new Uint32Array(2048);t[0]=0;for(let a=1;a<1024;a++)t[a]=e(a);for(let a=1024;a<2048;a++)t[a]=939524096+(a-1024<<13);return t}function F9(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}function $9(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}function M9(){let e=R9(),t=F9(),a=$9();return r=>{let n=new ArrayBuffer(4*r.length),s=new Uint32Array(n);for(let i=0;i<r.length;i++){let o=r[i],l=e[a[o>>10]+(o&1023)]+t[o>>10];s[i]=l}return new Float32Array(n)}}var Dt=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Dt.instance==null&&(Dt.instance=new Dt),Dt.instance}static registerSaveRouter(e){Dt.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Dt.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Dt.getHandlers(e,"save")}static getLoadHandlers(e,t){return Dt.getHandlers(e,"load",t)}static getHandlers(e,t,a){let r=[];return(t==="load"?Dt.getInstance().loadRouters:Dt.getInstance().saveRouters).forEach(n=>{let s=n(e,a);s!==null&&r.push(s)}),r}},_9=e=>Dt.registerSaveRouter(e),z9=e=>Dt.registerLoadRouter(e),O9=e=>Dt.getSaveHandlers(e),D9=(e,t)=>Dt.getLoadHandlers(e,t),Ym="tensorflowjs",Jm=1,Qi="models_store",gs="model_info_store";function wv(){if(!J().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e=typeof window=="undefined"?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Qm(e){let t=e.result;t.createObjectStore(Qi,{keyPath:"modelPath"}),t.createObjectStore(gs,{keyPath:"modelPath"})}var ho=class{constructor(e){if(this.indexedDB=wv(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((a,r)=>{let n=this.indexedDB.open(Ym,Jm);n.onupgradeneeded=()=>Qm(n),n.onsuccess=()=>{let s=n.result;if(t==null){let i=s.transaction(Qi,"readonly"),o=i.objectStore(Qi).get(this.modelPath);o.onsuccess=()=>{if(o.result==null)return s.close(),r(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));a(o.result.modelArtifacts)},o.onerror=l=>(s.close(),r(o.error)),i.oncomplete=()=>s.close()}else{let i=Oh(t),o=s.transaction(gs,"readwrite"),l=o.objectStore(gs),d=l.put({modelPath:this.modelPath,modelArtifactsInfo:i}),u;d.onsuccess=()=>{u=s.transaction(Qi,"readwrite");let h=u.objectStore(Qi).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:i});h.onsuccess=()=>a({modelArtifactsInfo:i}),h.onerror=p=>{l=o.objectStore(gs);let c=l.delete(this.modelPath);c.onsuccess=()=>(s.close(),r(h.error)),c.onerror=f=>(s.close(),r(h.error))}},d.onerror=h=>(s.close(),r(d.error)),o.oncomplete=()=>{u==null?s.close():u.oncomplete=()=>s.close()}}},n.onerror=s=>r(n.error)})}};ho.URL_SCHEME="indexeddb://";var kv=e=>J().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ho.URL_SCHEME)?P9(e.slice(ho.URL_SCHEME.length)):null;Dt.registerSaveRouter(kv);Dt.registerLoadRouter(kv);function P9(e){return new ho(e)}function L9(e){return e.startsWith(ho.URL_SCHEME)?e.slice(ho.URL_SCHEME.length):e}var W9=class{constructor(){this.indexedDB=wv()}async listModels(){return new Promise((e,t)=>{let a=this.indexedDB.open(Ym,Jm);a.onupgradeneeded=()=>Qm(a),a.onsuccess=()=>{let r=a.result,n=r.transaction(gs,"readonly"),s=n.objectStore(gs).getAll();s.onsuccess=()=>{let i={};for(let o of s.result)i[o.modelPath]=o.modelArtifactsInfo;e(i)},s.onerror=i=>(r.close(),t(s.error)),n.oncomplete=()=>r.close()},a.onerror=r=>t(a.error)})}async removeModel(e){return e=L9(e),new Promise((t,a)=>{let r=this.indexedDB.open(Ym,Jm);r.onupgradeneeded=()=>Qm(r),r.onsuccess=()=>{let n=r.result,s=n.transaction(gs,"readwrite"),i=s.objectStore(gs),o=i.get(e),l;o.onsuccess=()=>{if(o.result==null)return n.close(),a(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let d=i.delete(e),u=()=>{l=n.transaction(Qi,"readwrite");let h=l.objectStore(Qi).delete(e);h.onsuccess=()=>t(o.result.modelArtifactsInfo),h.onerror=p=>a(o.error)};d.onsuccess=u,d.onerror=h=>(u(),n.close(),a(o.error))}},o.onerror=d=>(n.close(),a(o.error)),s.oncomplete=()=>{l==null?n.close():l.oncomplete=()=>n.close()}},r.onerror=n=>a(r.error)})}},Ln="/",jl="tensorflowjs_models",Iv="info",B9="model_topology",V9="weight_specs",U9="weight_data",G9="model_metadata";function Sv(e){return{info:[jl,e,Iv].join(Ln),topology:[jl,e,B9].join(Ln),weightSpecs:[jl,e,V9].join(Ln),weightData:[jl,e,U9].join(Ln),modelMetadata:[jl,e,G9].join(Ln)}}function Tv(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}function j9(e){let t=e.split(Ln);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Ln)}function H9(e){return e.startsWith(po.URL_SCHEME)?e.slice(po.URL_SCHEME.length):e}var po=class{constructor(e){if(!J().getBool("IS_BROWSER")||typeof window=="undefined"||typeof window.localStorage=="undefined")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Sv(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),a=JSON.stringify(e.weightSpecs),r=Oh(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,a),this.LS.setItem(this.keys.weightData,N9(e.weightData));let n={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(n)),{modelArtifactsInfo:r}}catch{throw Tv(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},a=JSON.parse(this.LS.getItem(this.keys.topology));if(a==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=a;let r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(r==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;let n=this.LS.getItem(this.keys.modelMetadata);if(n!=null){let i=JSON.parse(n);t.format=i.format,t.generatedBy=i.generatedBy,t.convertedBy=i.convertedBy,i.signature!=null&&(t.signature=i.signature),i.userDefinedMetadata!=null&&(t.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(t.modelInitializer=i.modelInitializer),i.trainingConfig!=null&&(t.trainingConfig=i.trainingConfig)}let s=this.LS.getItem(this.keys.weightData);if(s==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=E9(s),t}};po.URL_SCHEME="localstorage://";var Cv=e=>J().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(po.URL_SCHEME)?q9(e.slice(po.URL_SCHEME.length)):null;Dt.registerSaveRouter(Cv);Dt.registerLoadRouter(Cv);function q9(e){return new po(e)}var X9=class{constructor(){O(J().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),O(typeof window=="undefined"||typeof window.localStorage!="undefined",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=jl+Ln,a=Ln+Iv;for(let r=0;r<this.LS.length;++r){let n=this.LS.key(r);if(n.startsWith(t)&&n.endsWith(a)){let s=j9(n);e[s]=JSON.parse(this.LS.getItem(n))}}return e}async removeModel(e){e=H9(e);let t=Sv(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);let a=JSON.parse(this.LS.getItem(t.info));return Tv(t),a}},Ql="://",gr=class{constructor(){this.managers={}}static getInstance(){return gr.instance==null&&(gr.instance=new gr),gr.instance}static registerManager(e,t){O(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Ql)&&(e=e.slice(0,e.indexOf(Ql))),O(e.length>0,()=>"scheme must not be an empty string.");let a=gr.getInstance();O(a.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),a.managers[e]=t}static getManager(e){let t=this.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}};function lc(e){if(e.indexOf(Ql)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${gr.getSchemes().join(",")}`);return{scheme:e.split(Ql)[0],path:e.split(Ql)[1]}}async function Nv(e,t,a=!1){O(e!==t,()=>`Old path and new path are the same: '${e}'`);let r=Dt.getLoadHandlers(e);O(r.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),O(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`);let n=r[0],s=Dt.getSaveHandlers(t);O(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),O(s.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`);let i=s[0],o=lc(e).scheme,l=lc(e).path,d=o===lc(e).scheme,u=await n.load();a&&d&&await gr.getManager(o).removeModel(l);let h=await i.save(u);return a&&!d&&await gr.getManager(o).removeModel(l),h.modelArtifactsInfo}async function K9(){let e=gr.getSchemes(),t={};for(let a of e){let r=await gr.getManager(a).listModels();for(let n in r){let s=a+Ql+n;t[s]=r[n]}}return t}async function Z9(e){let t=lc(e);return gr.getManager(t.scheme).removeModel(t.path)}async function Y9(e,t){return Nv(e,t,!1)}async function J9(e,t){return Nv(e,t,!0)}var Q9=class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}};if(J().get("IS_BROWSER")){J().setPlatform("browser",new Q9);try{gr.registerManager(po.URL_SCHEME,new X9)}catch{}try{gr.registerManager(ho.URL_SCHEME,new W9)}catch{}}var eC={importFetch:()=>hT()},am,tC=class{constructor(){this.util=pT(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return J().global.fetch!=null?J().global.fetch(e,t):(am==null&&(am=eC.importFetch()),am(e,t))}now(){let e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}};J().get("IS_NODE")&&!J().get("IS_BROWSER")&&J().setPlatform("node",new tC);function Le(e,t="float32",a){return t=t||"float32",Yg(e),new aa(e,t,a)}function aC(e,t){let a=M(e,"x","cast");if(!Z5(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&a.dtype!=="string"||t!=="string"&&a.dtype==="string")throw new Error("Only strings can be casted to strings");let r={x:a},n={dtype:t};return U.runKernel(Gs,r,n)}var pe=G({cast_:aC});function rC(e){let t={x:M(e,"x","clone","string_or_numeric")};return U.runKernel(ni,t)}var Ha=G({clone_:rC});function Ev(e,t=!1){console.log(e.toString(t))}gv();var nC={buffer:Le,cast:pe,clone:Ha,print:Ev};m9(nC);var Na={};ze(Na,{browserFiles:()=>hC,browserHTTPRequest:()=>gC,concatenateArrayBuffers:()=>n2,copyModel:()=>Y9,decodeWeights:()=>bv,encodeWeights:()=>T9,fromMemory:()=>AC,getLoadHandlers:()=>D9,getModelArtifactsForJSON:()=>s2,getModelArtifactsInfoForJSON:()=>Oh,getSaveHandlers:()=>O9,http:()=>o2,isHTTPScheme:()=>tg,listModels:()=>K9,loadWeights:()=>pC,moveModel:()=>J9,registerLoadRouter:()=>z9,registerSaveRouter:()=>_9,removeModel:()=>Z9,weightsLoaderFactory:()=>Fv,withSaveHandler:()=>xC});var sC="model",iC=".json",oC=".weights.bin";function JA(e){return new Promise(t=>setTimeout(t)).then(e)}var eg=class{constructor(e){if(!J().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(eg.URL_SCHEME)&&(e=e.slice(eg.URL_SCHEME.length)),(e==null||e.length===0)&&(e=sC),this.modelJsonFileName=e+iC,this.weightDataFileName=e+oC}async save(e){if(typeof document=="undefined")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let a=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r=vv(e,a),n=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),s=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=n,await JA(()=>s.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){let i=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;i.download=this.weightDataFileName,i.href=t,await JA(()=>i.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Oh(e)}}}},Rc=eg;Rc.URL_SCHEME="downloads://";var lC=class{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{let a=new FileReader;a.onload=r=>{let n=JSON.parse(r.target.result),s=n.modelTopology;if(s==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(n.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:s});return}let i=s2(n,o=>this.loadWeights(o));e(i)},a.onerror=r=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),a.readAsText(this.jsonFile)})}loadWeights(e){let t=[],a=[];for(let s of e)t.push(...s.weights),a.push(...s.paths);let r=this.checkManifestAndWeightFiles(e),n=a.map(s=>this.loadWeightsFile(s,r[s]));return Promise.all(n).then(s=>[t,n2(s)])}loadWeightsFile(e,t){return new Promise((a,r)=>{let n=new FileReader;n.onload=s=>{let i=s.target.result;a(i)},n.onerror=s=>r(`Failed to weights data from file of path '${e}'.`),n.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],a=this.weightsFiles.map(n=>YA(n.name)),r={};for(let n of e)n.paths.forEach(s=>{let i=YA(s);if(t.indexOf(i)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${i}'`);if(t.push(i),a.indexOf(i)===-1)throw new Error(`Weight file with basename '${i}' is not provided.`);r[s]=this.weightsFiles[a.indexOf(i)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}},uC=e=>J().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Rc.URL_SCHEME)?dC(e.slice(Rc.URL_SCHEME.length)):null;Dt.registerSaveRouter(uC);function dC(e="model"){return new Rc(e)}function hC(e){return new lC(e)}function QA(e,t,a,r){i(e),a=a==null?0:a,r=r==null?1:r,o(a,r);let n=0,s=l=>(l.then(d=>{let u=a+ ++n/e.length*(r-a);return t(u),d}),l);function i(l){O(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function o(l,d){O(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),O(d>=0&&d<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${d}`),O(d>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${d}`)}return Promise.all(e.map(s))}async function Rv(e,t){t==null&&(t={});let a=t.fetchFunc==null?J().platform.fetch:t.fetchFunc,r=e.map(d=>a(d,t.requestInit,{isBinary:!0})),n=0,s=.5,i=(t.onProgress==null?await Promise.all(r):await QA(r,t.onProgress,n,s)).map(d=>d.arrayBuffer()),o=.5,l=1;return t.onProgress==null?await Promise.all(i):await QA(i,t.onProgress,o,l)}async function pC(e,t="",a,r){return Fv(n=>Rv(n,{requestInit:r}))(e,t,a)}function Fv(e){return async(t,a="",r)=>{let n=t.map(()=>!1),s={},i=r!=null?r.map(()=>!1):[],o=[];if(t.forEach((c,f)=>{let m=0;c.weights.forEach(g=>{let y="quantization"in g?g.quantization.dtype:g.dtype,A=Zm[y]*kt(g.shape),x=()=>{n[f]=!0,s[f]==null&&(s[f]=[]),s[f].push({manifestEntry:g,groupOffset:m,sizeBytes:A})};r!=null?r.forEach((b,v)=>{b===g.name&&(x(),i[v]=!0)}):x(),o.push(g.name),m+=A})}),!i.every(c=>c)){let c=r.filter((f,m)=>!i[m]);throw new Error(`Could not find weights in manifest with names: ${c.join(", ")}. 
Manifest JSON has weights with names: ${o.join(", ")}.`)}let l=n.reduce((c,f,m)=>(f&&c.push(m),c),[]),d=[];l.forEach(c=>{t[c].paths.forEach(f=>{let m=a+(a.endsWith("/")?"":"/")+f;d.push(m)})});let u=await e(d),h={},p=0;return l.forEach(c=>{let f=t[c].paths.length,m=0;for(let x=0;x<f;x++)m+=u[p+x].byteLength;let g=new ArrayBuffer(m),y=new Uint8Array(g),A=0;for(let x=0;x<f;x++){let b=new Uint8Array(u[p+x]);y.set(b,A),A+=b.byteLength}s[c].forEach(x=>{let b=g.slice(x.groupOffset,x.groupOffset+x.sizeBytes),v=bv(b,[x.manifestEntry]);for(let T in v)h[T]=v[T]}),p+=f}),h}}var cC="application/octet-stream",fC="application/json",i2=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(O(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=J().platform.fetch,O(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&O(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let a=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=vv(e,a);t.body.append("model.json",new Blob([JSON.stringify(r)],{type:fC}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:cC}),"model.weights.bin");let n=await this.fetch(this.path,t);if(n.ok)return{modelArtifactsInfo:Oh(e),responses:[n]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${n.status}.`)}async load(){let e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let s=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?s+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":s+=" Please make sure the server is serving valid JSON for this request.",new Error(s)}let a=t.modelTopology,r=t.weightsManifest;if(a==null&&r==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return s2(t,n=>this.loadWeights(n))}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[a,r]=mC(t),n=this.weightPathPrefix||a,s=[];for(let d of e)s.push(...d.weights);let i=[],o=[];for(let d of e)for(let u of d.paths)this.weightUrlConverter!=null?o.push(this.weightUrlConverter(u)):i.push(n+u+r);this.weightUrlConverter&&i.push(...await Promise.all(o));let l=await Rv(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[s,n2(l)]}};i2.URL_SCHEME_REGEX=/^https?:\/\//;function mC(e){let t=e.lastIndexOf("/"),a=e.lastIndexOf("?"),r=e.substring(0,t),n=a>t?e.substring(a):"";return[r+"/",n]}function tg(e){return e.match(i2.URL_SCHEME_REGEX)!=null}var $v=(e,t)=>{if(typeof fetch=="undefined"&&(t==null||t.fetchFunc==null))return null;{let a=!0;if(Array.isArray(e)?a=e.every(r=>tg(r)):a=tg(e),a)return o2(e,t)}return null};Dt.registerSaveRouter($v);Dt.registerLoadRouter($v);function o2(e,t){return new i2(e,t)}function gC(e,t){return o2(e,t)}var rm=class{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}},yC=class{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}};function AC(e,t,a,r){return arguments.length===1?e.modelTopology!=null||e.weightSpecs!=null?new rm(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new rm({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new rm({modelTopology:e,weightSpecs:t,weightData:a,trainingConfig:r}))}function xC(e){return new yC(e)}var Mv={};ze(Mv,{confusionMatrix:()=>IC});function bC(e,t,a=!1,r=!1){let n=M(e,"a","matMul"),s=M(t,"b","matMul");[n,s]=Mt(n,s);let i={a:n,b:s},o={transposeA:a,transposeB:r};return U.runKernel(Us,i,o)}var He=G({matMul_:bC});function vC(e,t,a=1,r=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let n={indices:M(e,"indices","oneHot","int32")},s={depth:t,onValue:a,offValue:r};return U.runKernel(jo,n,s)}var ih=G({oneHot_:vC});function wC(e,t){let a=M(e,"x","transpose");if(t==null&&(t=a.shape.map((s,i)=>i).reverse()),O(a.rank===t.length,()=>`Error in transpose: rank of input ${a.rank} must match length of perm ${t}.`),t.forEach(s=>{O(s>=0&&s<a.rank,()=>`All entries in 'perm' must be between 0 and ${a.rank-1} but got ${t}`)}),a.rank<=1)return a.clone();let r={x:a},n={perm:t};return U.runKernel(Ri,r,n)}var Ye=G({transpose_:wC});function kC(e,t,a){let r=M(e,"labels","confusionMatrix"),n=M(t,"predictions","confusionMatrix");O(a==null||a>0&&Number.isInteger(a),()=>`If provided, numClasses must be a positive integer, but got ${a}`),O(r.rank===1,()=>`Expected the rank of labels to be 1, but got ${r.rank}`),O(n.rank===1,()=>`Expected the rank of predictions to be 1, but got ${n.rank}`),O(r.shape[0]===n.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${n.shape[0]}. Labels and predictions should have the same number of elements.`),O(a>0&&Number.isInteger(a),()=>`numClasses is required to be a positive integer, but got ${a}`);let s=ih(pe(r,"int32"),a),i=ih(pe(n,"int32"),a),o=Ye(s),l=He(o,i);return pe(l,"int32")}var IC=G({confusionMatrix_:kC}),dl={};ze(dl,{assertAndGetBroadcastShape:()=>gt,getBroadcastDims:()=>_v,getReductionAxes:()=>Kt});function _v(e,t){let a=e.length,r=[];for(let n=0;n<a;n++){let s=a-1-n,i=e[s]||1;(t[t.length-1-n]||1)>1&&i===1&&r.unshift(s)}return r}function Kt(e,t){let a=[];for(let r=0;r<t.length;r++){let n=e[e.length-r-1],s=t.length-r-1,i=t[s];(n==null||n===1&&i>1)&&a.unshift(s)}return a}function gt(e,t){let a=[],r=Math.max(e.length,t.length);for(let n=0;n<r;n++){let s=e[e.length-n-1];s==null&&(s=1);let i=t[t.length-n-1];if(i==null&&(i=1),s===1)a.unshift(i);else if(i===1)a.unshift(s);else if(s!==i){let o=`Operands could not be broadcast together with shapes ${e} and ${t}.`;throw Error(o)}else a.unshift(s)}return a}var Ur={};ze(Ur,{fromPixels:()=>FC,fromPixelsAsync:()=>EC,toPixels:()=>RC});function zv(e,t,a){if(ko(e),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let r=xn(e,a);if(r.length!==3&&r.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return $i(e,t,r,a)}var Ui;function Ov(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(e==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let a=!1,r=!1,n=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)a=!0;else if(typeof ImageData!="undefined"&&e instanceof ImageData)r=!0;else if(typeof HTMLVideoElement!="undefined"&&e instanceof HTMLVideoElement)n=!0;else if(typeof HTMLImageElement!="undefined"&&e instanceof HTMLImageElement)s=!0;else if(e.getContext!=null)i=!0;else if(typeof ImageBitmap!="undefined"&&e instanceof ImageBitmap)o=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);if(n&&n&&e.readyState<2)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.");if(Cc(th,U.backendName)!=null){let p={pixels:e},c={numChannels:t};return U.runKernel(th,p,c)}let[l,d]=n?[e.videoWidth,e.videoHeight]:[e.width,e.height],u;if(i)u=e.getContext("2d").getImageData(0,0,l,d).data;else if(r||a)u=e.data;else if(s||n||o){if(Ui==null)if(typeof document=="undefined")if(typeof OffscreenCanvas!="undefined"&&typeof OffscreenCanvasRenderingContext2D!="undefined")Ui=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else Ui=document.createElement("canvas").getContext("2d");Ui.canvas.width=l,Ui.canvas.height=d,Ui.drawImage(e,0,0,l,d),u=Ui.getImageData(0,0,l,d).data}let h;if(t===4)h=new Int32Array(u);else{let p=l*d;h=new Int32Array(p*t);for(let c=0;c<p;c++)for(let f=0;f<t;++f)h[c*t+f]=u[c*4+f]}return zv(h,[d,l,t],"int32")}function SC(e){return e!=null&&e.data instanceof Uint8Array}function TC(){return typeof window!="undefined"&&typeof ImageBitmap!="undefined"&&window.hasOwnProperty("createImageBitmap")}function CC(e){return e!=null&&e.width!==0&&e.height!==0}function NC(e){return TC()&&!(e instanceof ImageBitmap)&&CC(e)&&!SC(e)}async function EC(e,t=3){let a=null;if(J().getBool("WRAP_TO_IMAGEBITMAP")&&NC(e)){let r;try{r=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch{r=null}r!=null&&r.width===e.width&&r.height===e.height?a=r:a=e}else a=e;return Ov(a,t)}async function RC(e,t){let a=M(e,"img","toPixels");if(!(e instanceof et)){let d=a;a=pe(d,"int32"),d.dispose()}if(a.rank!==2&&a.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${a.rank}.`);let[r,n]=a.shape.slice(0,2),s=a.rank===2?1:a.shape[2];if(s>4||s===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if(a.dtype!=="float32"&&a.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${a.dtype}. Please use float32 or int32 tensors.`);let i=await a.data(),o=a.dtype==="float32"?255:1,l=new Uint8ClampedArray(n*r*4);for(let d=0;d<r*n;++d){let u=[0,0,0,255];for(let p=0;p<s;p++){let c=i[d*s+p];if(a.dtype==="float32"){if(c<0||c>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${c}.`)}else if(a.dtype==="int32"&&(c<0||c>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${c}.`);s===1?(u[0]=c*o,u[1]=c*o,u[2]=c*o):u[p]=c*o}let h=d*4;l[h+0]=Math.round(u[0]),l[h+1]=Math.round(u[1]),l[h+2]=Math.round(u[2]),l[h+3]=Math.round(u[3])}if(t!=null){t.width=n,t.height=r;let d=t.getContext("2d"),u=new ImageData(l,n,r);d.putImageData(u,0,0)}return a!==e&&a.dispose(),l}var FC=G({fromPixels_:Ov}),l2={};ze(l2,{prepareAndValidate:()=>Dv});function Dv(e,t){let a=e.shape.length,r=t.shape.length;if(a<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${a}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>a)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${a}`);if(kt(e.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let n=t.shape,s=n[n.length-1],i=1;for(let h=0;h<n.length-1;++h)i*=n[h];let o=e.shape,l=n.slice();l.pop();let d=1;for(let h=s;h<a;++h)d*=o[h],l.push(o[h]);let u=[...wu(e.shape).map(h=>h/d),1].slice(0,s);return[l,i,d,u]}var u2={};ze(u2,{calculateShapes:()=>Pv,validateInput:()=>h2,validateUpdateShape:()=>d2});function d2(e,t,a){let r=t.rank>1?t.shape[t.rank-1]:1,n=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${a.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${n}.`;if(a.rank<n)throw new Error(s+` update.rank < ${n}. `);if(e.length<r+(a.rank-n))throw new Error(s+` Output shape length < ${r+(a.rank-n)}`);if(a.rank!==n+e.length-r)throw new Error(s+` update.rank != ${n+e.length-r}`);for(let i=0;i<n;++i)if(a.shape[i]!==t.shape[i])throw new Error(s+` updates.shape[${i}] (${a.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<a.rank-n;++i)if(a.shape[i+n]!==e[i+r])throw new Error(s+` updates.shape[${i+n}] (${a.shape[i+n]}) != shape[${i+n}] (${e[i+n]})`)}function h2(e,t,a){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(a.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${a}`);if(a.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(e.size===0)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}d2(a,t,e)}function Pv(e,t,a){let r=t.shape.length,n=r>1?t.shape[r-1]:1,s=a.length,i=1;for(let h=n;h<s;++h)i*=a[h];let o=n<1?1:n,l=kt(t.shape)/o,d=[...wu(a.slice(0,n)),1],u=kt(a);return{sliceRank:n,numUpdates:l,sliceSize:i,strides:d,outputSize:u}}var Ft={};ze(Ft,{assertParamsValid:()=>MC,computeFlatOffset:()=>PC,computeOutShape:()=>zC,getNormalizedAxes:()=>OC,isSliceContinous:()=>DC,maskToAxes:()=>_C,parseSliceParams:()=>qv,sliceInfo:()=>LC,startForAxis:()=>jv,startIndicesWithElidedDims:()=>Vv,stopForAxis:()=>Hv,stopIndicesWithElidedDims:()=>Uv,stridesForAxis:()=>Gv,stridesWithElidedDims:()=>Lv});var ag=-2,$C=-1;function MC(e,t,a){let r=e.shape.length;O(r===t.length,()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`),O(r===a.length,()=>`Error in slice${r}D: Length of size ${a} must match the rank of the array (${r}).`);for(let n=0;n<r;++n)O(t[n]+a[n]<=e.shape[n],()=>`Error in slice${r}D: begin[${n}] + size[${n}] (${t[n]+a[n]}) would overflow input.shape[${n}] (${e.shape[n]})`)}function _C(e){let t=[],a=0;for(;e>0;)e&1&&t.push(a),e/=2,a++;return t}function zC(e,t,a){let r=[];for(let n=0;n<e.length;n++)r[n]=Math.ceil((t[n]-e[n])/a[n]);return r}function Lv(e,t,a,r){let n=[...e];for(let s=n.length;s<r.length;s++)n.push(1);for(let s=0;s<a;s++)s===0?n[t]=1:(n.splice(t,0,1),n.pop());return n}function Wv(e,t,a){return a<=e?a:a-(t-1)}function Bv(e,t){let a=[];for(let r=0;r<e;r++)a.push(t+r);return a}function OC(e,t,a,r,n,s,i,o,l){let d=e.length,u=new Array(d),h=new Array(d),p=new Array(d);if(t.length&&a>0){let c=t[0],f=a+1;u=Vv(i,c,f,r,e),h=Uv(o,c,f,n,e),p=Lv(s,c,f,e)}else for(let c=0;c<d;c++)u[c]=jv(i,r,s,e,c,l),h[c]=Hv(o,n,s,e,c,l),p[c]=Gv(s,c,l);return{begin:u,end:h,strides:p}}function Vv(e,t,a,r,n){let s=[...n],i=Bv(a,t);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=0;else{let l=Wv(t,a,o),d=r[l];e&1<<l&&(d=0),s[o]=d}return s}function Uv(e,t,a,r,n){let s=[...n],i=Bv(a,t);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=Number.MAX_SAFE_INTEGER;else{let l=Wv(t,a,o),d=r[l];e&1<<l&&(d=Number.MAX_SAFE_INTEGER),s[o]=d}for(let o=0;o<s.length;o++){let l=n[o];s[o]<0&&(s[o]+=l),s[o]=eh(0,s[o],n[o])}return s}function Gv(e,t,a){let r=e[t];return(a&1<<t||r==null)&&(r=1),r}function jv(e,t,a,r,n,s){let i=t[n],o=a[n]||1;(e&1<<n||s&1<<n||i==null)&&(o>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);let l=r[n];return i<0&&(i+=l),i=eh(0,i,l-1),i}function Hv(e,t,a,r,n,s){let i=t[n],o=a[n]||1;(e&1<<n||s&1<<n||i==null)&&(o>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);let l=r[n];return i<0&&(i+=l),o>0?i=eh(0,i,l):i=eh(-1,i,l-1),i}function DC(e,t,a){let r=a.length;for(let n=0;n<a.length;n++)if(a[n]>1){r=n;break}for(let n=r+1;n<a.length;n++)if(t[n]>0||a[n]!==e[n])return!1;return!0}function PC(e,t){let a=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)a+=e[r]*t[r];return a}function qv(e,t,a){let r,n=e.shape.length;typeof t=="number"?r=[t,...new Array(n-1).fill(0)]:t.length<n?r=t.concat(new Array(n-t.length).fill(0)):r=t.slice(),r.forEach(i=>{O(i!==-1,()=>"slice() does not support negative begin indexing.")});let s;return a==null?s=new Array(n).fill(-1):typeof a=="number"?s=[a,...new Array(n-1).fill(-1)]:a.length<n?s=a.concat(new Array(n-a.length).fill(-1)):s=a,s=s.map((i,o)=>i>=0?i:(O(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${o}.`),e.shape[o]-r[o])),[r,s]}function LC(e,t,a,r,n,s,i,o,l){let d;if(r==null?(d=new Array(t.length),d.fill(1)):d=r,i!=null&&(i&i-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let u=!1,h={dims:d.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:a.slice(),strides:d.slice(),beginMask:n,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let A=0;A<h.dims;A++)u&&(1<<A&o)!==0&&h.numAddAxisAfterEllipsis++,1<<A&i&&(u=!0);u||(h.ellipsisMask|=1<<h.dims,h.dims++);let p={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};WC(h,p);let c=!0,f=!0,m=!0,g=[],y=[];for(let A=0;A<e.length;++A){if(p.strides[A]===0)throw Error(`strides[${A}] must be non-zero`);let x=!!(p.shrinkAxisMask&1<<A),b=e[A];if(b===-1){g.push(x?1:-1);continue}let v=[p.beginMask&1<<A,p.endMask&1<<A],T=[p.strides[A]>0?0:-1,p.strides[A]>0?b:b-1];if(x&&p.strides[A]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&p.strides[A]===1;let C=!!(p.beginMask&1<<A&&p.endMask&1<<A);if(p.beginValid&&p.endValid){if(x){let F=p.begin[A]<0?b+p.begin[A]:p.begin[A];if(p.begin[A]=F,p.end[A]=p.begin[A]+1,F<0||F>=b)throw Error(`slice index ${p.begin[A]} of dimension ${A} out of bounds.`)}else p.begin[A]=ex(p.begin[A],0,p.strides[A],b,v,T),p.end[A]=ex(p.end[A],1,p.strides[A],b,v,T);let z=p.strides[A]===1&&p.begin[A]===0&&p.end[A]===b;c=c&&z,f=f&&(A===0&&p.strides[A]===1||z)}else c=c&&p.strides[A]===1&&C,f=f&&(A===0&&p.strides[A]===1||C);let E,R=!1;if(p.beginValid&&p.endValid?(E=p.end[A]-p.begin[A],R=!0):x?(E=1,R=!0):C&&b>=0&&(p.strides[A]<0?E=-b:E=b,R=!0),R){let z;E===0||E<0!=p.strides[A]<0?z=0:z=Math.trunc(E/p.strides[A])+(E%p.strides[A]!==0?1:0),g.push(z)}else g.push(-1)}for(let A=0;A<p.finalShapeGatherIndices.length;++A){let x=p.finalShapeGatherIndices[A];x>=0?y.push(g[x]):x===ag&&y.push(1)}return{finalShapeSparse:y.filter((A,x)=>p.finalShapeGatherIndices[x]!==ag),finalShape:y,isIdentity:c,sliceDim0:f,isSimpleSlice:m,begin:p.begin,end:p.end,strides:p.strides}}function WC(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let a=0;t.beginValid=e.begin!=null,t.endValid=e.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){let n=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;a<n;a++)t.begin[a]=0,t.end[a]=0,t.strides[a]=1,t.beginMask|=1<<a,t.endMask|=1<<a,t.finalShapeGatherIndices.push(a),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[a]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(ag),t.finalShapeGatherIndicesSparse.push(-1);else{if(a===t.begin.length)throw Error(`Index out of range using input dim ${a}; input has only ${t.dims} dims, ${t.begin.length}.`);e.begin!=null&&(t.begin[a]=e.begin[r]),e.end!=null&&(t.end[a]=e.end[r]),t.strides[a]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<a),e.endMask&1<<r&&(t.endMask|=1<<a),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push($C),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<a):(t.finalShapeGatherIndices.push(a),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[a]=r,a++}}function ex(e,t,a,r,n,s){if(n[t])return a>0?s[t]:s[t+1&1];{let i=e<0?r+e:e;return i<s[0]?s[0]:i>s[1]?s[1]:i}}var oe={};ze(oe,{Serializable:()=>Xv,SerializationMap:()=>Ki,registerClass:()=>Mi});var Xv=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},Ki=class{constructor(){this.classNameMap={}}static getMap(){return Ki.instance==null&&(Ki.instance=new Ki),Ki.instance}static register(e){Ki.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function Mi(e){O(e.className!=null,()=>"Class being registered does not have the static className property defined."),O(typeof e.className=="string",()=>"className is required to be a string, but got type "+typeof e.className),O(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),Ki.register(e)}var Kv={};ze(Kv,{TEST_EPSILON_FLOAT16:()=>Zv,encodeStrings:()=>Yv,expectArrayBuffersEqual:()=>qC,expectArraysClose:()=>VC,expectArraysEqual:()=>GC,expectNumbersClose:()=>jC,expectPromiseToFail:()=>UC,expectValuesInRange:()=>HC,testEpsilon:()=>p2});var BC=.001,Zv=.1;function VC(e,t,a){return a==null&&(a=p2()),rg(e,t,(r,n)=>c2(r,n,a))}function p2(){return U.backend.floatPrecision()===32?BC:Zv}function rg(e,t,a){let r=!0;if((ba(e)||ba(t))&&(r=!1),ba(e)&&ba(t)&&(r=!0),r){let i=e.constructor.name,o=t.constructor.name;if(i!==o)throw new Error(`Arrays are of different type. Actual: ${i}. Expected: ${o}`)}if(Array.isArray(e)&&Array.isArray(t)){let i=xn(e),o=xn(t);if(!Ls(i,o))throw new Error(`Arrays have different shapes. Actual: [${i}]. Expected: [${o}]`)}let n=ba(e)?e:lo(e),s=ba(t)?t:lo(t);if(n.length!==s.length)throw new Error(`Arrays have different lengths actual: ${n.length} vs expected: ${s.length}.
Actual:   ${n}.
Expected: ${s}.`);for(let i=0;i<s.length;++i){let o=n[i],l=s[i];if(!a(o,l))throw new Error(`Arrays differ: actual[${i}] = ${o}, expected[${i}] = ${l}.
Actual:   ${n}.
Expected: ${s}.`)}}function UC(e,t){e().then(()=>t.fail(),()=>t())}function GC(e,t){let a=typeof t=="string"||typeof t=="number"||typeof t=="boolean"?[t]:t;return ms(e)||ms(e[0])||ms(t)||ms(t[0])?rg(e,a,(r,n)=>r==n):rg(e,t,(r,n)=>c2(r,n,0))}function jC(e,t,a){if(a==null&&(a=p2()),!c2(e,t,a))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function c2(e,t,a){return!isFinite(e)&&!isFinite(t)?!0:!(isNaN(e)||isNaN(t)||Math.abs(e-t)>a)}function HC(e,t,a){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>a)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${a}`)}function qC(e,t){let a=new Float32Array(e),r=new Float32Array(t);if(a.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${a.length}`);for(let n=0;n<r.length;n++)if(a[n]!==r[n])throw new Error(`Expected ArrayBuffer value at ${n} to be ${r[n]} but got ${a[n]} instead`)}function Yv(e){for(let t=0;t<e.length;t++){let a=e[t];Array.isArray(a)?Yv(a):e[t]=Mh(a)}return e}var Jv="0.0.0";function Qv(){J().set("PROD",!0)}function XC(){J().set("DEBUG",!0)}function KC(){J().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function e3(e){J().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function ZC(){U.disposeVariables()}function sr(){return U}function Fc(){return U.memory()}function YC(e){return U.profile(e)}function Z(e,t){return U.tidy(e,t)}function ne(e){t2(e).forEach(t=>t.dispose())}function da(e){return U.keep(e)}function JC(e){return U.time(e)}function t3(e){return U.setBackend(e)}function $c(){return U.ready()}function _r(){return U.backendName}function QC(e){U.removeBackend(e)}function a3(e){return U.findBackend(e)}function eN(e){return U.findBackendFactory(e)}function Zu(e,t,a=1){return U.registerBackend(e,t,a)}function Es(){return U.backend}function tN(e,t){J().setPlatform(e,t)}function aN(e,t){let a=M(e,"a","add"),r=M(t,"b","add");[a,r]=Mt(a,r);let n={a,b:r};return U.runKernel(qn,n)}var ie=G({add_:aN});function rN(e,t){let a=M(e,"a","floorDiv"),r=M(t,"b","floorDiv");[a,r]=Mt(a,r);let n={a,b:r};return U.runKernel(ti,n)}var _f=G({floorDiv_:rN});function nN(e,t){let a=M(e,"a","div"),r=M(t,"b","div");if([a,r]=Mt(a,r),a.dtype==="int32"&&r.dtype==="int32")return _f(a,r);let n={a,b:r},s={};return U.runKernel(Ys,n,s)}var ge=G({div_:nN});function sN(e,t){let a=M(e,"a","mul"),r=M(t,"b","mul");[a,r]=Mt(a,r);let n={a,b:r};return U.runKernel(fi,n)}var V=G({mul_:sN});function iN(e){let t=M(e,"x","abs");if(t.dtype==="complex64"){let a={x:t};return U.runKernel(yh,a)}else{let a={x:t};return U.runKernel(Io,a)}}var Qt=G({abs_:iN});function oN(e){let t={x:M(e,"x","acos")};return U.runKernel(ku,t)}var r3=G({acos_:oN});function lN(e){let t={x:M(e,"x","acosh")};return U.runKernel(Iu,t)}var n3=G({acosh_:lN});function uN(e){O(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),O(e.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`);let t=e.map((n,s)=>M(n,`tensors${s}`,"addN")),a=t[0];t.forEach(n=>{if(n.dtype!==a.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(n=>{if(!Ls(n.shape,a.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let r=t;return U.runKernel(Ws,r)}var f2=G({addN_:uN});function dN(e,t=null,a=!1){let r={x:M(e,"x","all","bool")},n={axis:t,keepDims:a};return U.runKernel(Su,r,n)}var m2=G({all_:dN});function hN(e,t=null,a=!1){let r={x:M(e,"x","any","bool")},n={axis:t,keepDims:a};return U.runKernel(Tu,r,n)}var Mc=G({any_:hN});function pN(e,t=0){let a={x:M(e,"x","argMax")},r={axis:t};return U.runKernel(Bs,a,r)}var Gn=G({argMax_:pN});function cN(e,t=0){let a={x:M(e,"x","argMin")},r={axis:t};return U.runKernel(Cu,a,r)}var s3=G({argMin_:cN});function fN(e){let t={x:M(e,"x","asin")};return U.runKernel(Nu,t)}var i3=G({asin_:fN});function mN(e){let t={x:M(e,"x","asinh")};return U.runKernel(Eu,t)}var o3=G({asinh_:mN});function gN(e){let t={x:M(e,"x","atan")};return U.runKernel(Ru,t)}var l3=G({atan_:gN});function yN(e,t){let a=M(e,"a","atan2"),r=M(t,"b","atan2");[a,r]=Mt(a,r);let n={a,b:r};return U.runKernel($u,n)}var u3=G({atan2_:yN});function AN(e){let t={x:M(e,"x","atanh")};return U.runKernel(Fu,t)}var d3=G({atanh_:AN});function xN(e,t,a,r,n="NHWC",s){let i=e[3],o=[...t,i],l=c3(n);return Dh(e,o,a,s,r,null,null,l)}function h3(e,t,a,r,n,s,i="channelsLast"){let[o,l]=_c(t),d;if(i==="channelsLast")d=[o,l,e[3],e[3]];else if(i==="channelsFirst")d=[o,l,e[1],e[1]];else throw new Error(`Unknown dataFormat ${i}`);return Dh(e,d,a,r,n,s,!1,i)}function bN(e,t,a,r,n,s,i="NDHWC"){let[o,l,d]=ng(t),u,h;if(i==="NDHWC")h="channelsLast",u=[o,l,d,e[4],e[4]];else if(i==="NCDHW")h="channelsFirst",u=[o,l,d,e[1],e[1]];else throw new Error(`Unknown dataFormat ${i}`);return p3(e,u,a,r,n,!1,h,s)}function Dh(e,t,a,r,n,s,i=!1,o="channelsLast"){let[l,d,u,h]=[-1,-1,-1,-1];if(o==="channelsLast")[l,d,u,h]=e;else if(o==="channelsFirst")[l,h,d,u]=e;else throw new Error(`Unknown dataFormat ${o}`);let[p,c,,f]=t,[m,g]=_c(a),[y,A]=_c(r),x=eu(p,y),b=eu(c,A),{padInfo:v,outHeight:T,outWidth:C}=kN(n,d,u,m,g,x,b,s,o),E=i?f*h:f,R;return o==="channelsFirst"?R=[l,E,T,C]:o==="channelsLast"&&(R=[l,T,C,E]),{batchSize:l,dataFormat:o,inHeight:d,inWidth:u,inChannels:h,outHeight:T,outWidth:C,outChannels:E,padInfo:v,strideHeight:m,strideWidth:g,filterHeight:p,filterWidth:c,effectiveFilterHeight:x,effectiveFilterWidth:b,dilationHeight:y,dilationWidth:A,inShape:e,outShape:R,filterShape:t}}function p3(e,t,a,r,n,s=!1,i="channelsLast",o){let[l,d,u,h,p]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[l,d,u,h,p]=e;else if(i==="channelsFirst")[l,p,d,u,h]=e;else throw new Error(`Unknown dataFormat ${i}`);let[c,f,m,,g]=t,[y,A,x]=ng(a),[b,v,T]=ng(r),C=eu(c,b),E=eu(f,v),R=eu(m,T),{padInfo:z,outDepth:F,outHeight:k,outWidth:D}=IN(n,d,u,h,y,A,x,C,E,R,o),_=s?g*p:g,P;return i==="channelsFirst"?P=[l,_,F,k,D]:i==="channelsLast"&&(P=[l,F,k,D,_]),{batchSize:l,dataFormat:i,inDepth:d,inHeight:u,inWidth:h,inChannels:p,outDepth:F,outHeight:k,outWidth:D,outChannels:_,padInfo:z,strideDepth:y,strideHeight:A,strideWidth:x,filterDepth:c,filterHeight:f,filterWidth:m,effectiveFilterDepth:C,effectiveFilterHeight:E,effectiveFilterWidth:R,dilationDepth:b,dilationHeight:v,dilationWidth:T,inShape:e,outShape:P,filterShape:t}}function vN(e,t,a,r,n){r==null&&(r=g2(e,t,a));let s=e[0],i=e[1],o=ro((s-t+2*r)/a+1,n),l=ro((i-t+2*r)/a+1,n);return[o,l]}function wN(e,t,a,r,n,s){n==null&&(n=g2(e,t,r));let i=e[0],o=e[1],l=e[2],d=ro((i-t+2*n)/r+1,s),u=ro((o-t+2*n)/r+1,s),h=ro((l-t+2*n)/r+1,s);return[d,u,h,a]}function g2(e,t,a,r=1){let n=eu(t,r);return Math.floor((e[0]*(a-1)-a+n)/2)}function _c(e){return typeof e=="number"?[e,e,e]:e.length===2?[e[0],e[1],1]:e}function ng(e){return typeof e=="number"?[e,e,e]:e}function eu(e,t){return t<=1?e:e+(e-1)*(t-1)}function kN(e,t,a,r,n,s,i,o,l){let d,u,h;if(typeof e=="number"){d={top:e,bottom:e,left:e,right:e,type:e===0?"VALID":"NUMBER"};let p=vN([t,a],s,r,e,o);u=p[0],h=p[1]}else if(e==="same"){u=Math.ceil(t/r),h=Math.ceil(a/n);let p=Math.max(0,(u-1)*r+s-t),c=Math.max(0,(h-1)*n+i-a),f=Math.floor(p/2),m=p-f,g=Math.floor(c/2),y=c-g;d={top:f,bottom:m,left:g,right:y,type:"SAME"}}else if(e==="valid")d={top:0,bottom:0,left:0,right:0,type:"VALID"},u=Math.ceil((t-s+1)/r),h=Math.ceil((a-i+1)/n);else if(typeof e=="object"){let p=l==="channelsLast"?e[1][0]:e[2][0],c=l==="channelsLast"?e[1][1]:e[2][1],f=l==="channelsLast"?e[2][0]:e[3][0],m=l==="channelsLast"?e[2][1]:e[3][1];d={top:p,bottom:c,left:f,right:m,type:p===0&&c===0&&f===0&&m===0?"VALID":"EXPLICIT"},u=ro((t-s+p+c)/r+1,o),h=ro((a-i+f+m)/n+1,o)}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:d,outHeight:u,outWidth:h}}function IN(e,t,a,r,n,s,i,o,l,d,u){let h,p,c,f;if(typeof e=="number"){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:e===0?"VALID":"NUMBER"};let m=wN([t,a,r,1],o,1,n,e,u);p=m[0],c=m[1],f=m[2]}else if(e==="same"){p=Math.ceil(t/n),c=Math.ceil(a/s),f=Math.ceil(r/i);let m=(p-1)*n+o-t,g=(c-1)*s+l-a,y=(f-1)*i+d-r,A=Math.floor(m/2),x=m-A,b=Math.floor(g/2),v=g-b,T=Math.floor(y/2),C=y-T;h={top:b,bottom:v,left:T,right:C,front:A,back:x,type:"SAME"}}else if(e==="valid")h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((t-o+1)/n),c=Math.ceil((a-l+1)/s),f=Math.ceil((r-d+1)/i);else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:h,outDepth:p,outHeight:c,outWidth:f}}function ro(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Rs(e){let[t,a,r]=_c(e);return t===1&&a===1&&r===1}function wn(e,t){return Rs(e)||Rs(t)}function c3(e){if(e==="NHWC")return"channelsLast";if(e==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function Da(e,t,a){if(a!=null){if(typeof t=="string")throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${a} but got pad ${t}.`);if(typeof t=="number")O(ru(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${a} but got pad ${t}.`);else if(typeof t=="object")t.forEach(r=>{r.forEach(n=>{O(ru(n),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${a} but got pad ${n}.`)})});else throw Error(`Error in ${e}: Unknown padding parameter: ${t}`)}}function SN(e,t){let a={x:M(e,"x","reshape","string_or_numeric")},r={shape:t};return U.runKernel(Xo,a,r)}var q=G({reshape_:SN});function TN(e,t,a,r,n){let s=M(e,"x","avgPool","float32"),i=1;O(wn(a,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${i}'`);let o=s,l=!1;s.rank===3&&(l=!0,o=q(s,[1,s.shape[0],s.shape[1],s.shape[2]])),O(o.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`),Da("avgPool",r,n);let d={x:o},u={filterSize:t,strides:a,pad:r,dimRoundingMode:n},h=U.runKernel(Vs,d,u);return h=pe(h,s.dtype),l?q(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var zf=G({avgPool_:TN});function CN(e,t,a,r,n,s="NDHWC"){let i=M(e,"x","avgPool3d","float32"),o=i,l=!1;i.rank===4&&(l=!0,o=q(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),O(o.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),O(s==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),Da("avgPool3d",r,n);let d={x:o},u={filterSize:t,strides:a,pad:r,dimRoundingMode:n,dataFormat:s},h=U.runKernel(mh,d,u);return h=pe(h,o.dtype),l?q(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}var y2=G({avgPool3d_:CN});function NN(e,t=0){O(e.length>=1,()=>"Pass at least one tensor to concat");let a=sh(e,"tensors","concat","string_or_numeric");if(a[0].dtype==="complex64"&&a.forEach(s=>{if(s.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${s.dtype}. `)}),a.length===1)return Ha(a[0]);let r=a,n={axis:t};return U.runKernel(To,r,n)}var Ct=G({concat_:NN});function EN(e){let t={x:M(e,"x","sigmoid","float32")};return U.runKernel(ki,t)}var Ar=G({sigmoid_:EN});function RN(e,t,a){let r=M(e,"x","slice","string_or_numeric");if(r.rank===0)throw new Error("Slicing scalar is not possible");let n={x:r},s={begin:t,size:a};return U.runKernel(Qo,n,s)}var _e=G({slice_:RN});function FN(e){let t={x:M(e,"x","tanh","float32")};return U.runKernel(Ei,t)}var su=G({tanh_:FN});function $N(e,t,a,r,n,s){let i=M(e,"forgetBias","basicLSTMCell"),o=M(t,"lstmKernel","basicLSTMCell"),l=M(a,"lstmBias","basicLSTMCell"),d=M(r,"data","basicLSTMCell"),u=M(n,"c","basicLSTMCell"),h=M(s,"h","basicLSTMCell"),p=Ct([d,h],1),c=He(p,o),f=ie(c,l),m=f.shape[0],g=f.shape[1]/4,y=[m,g],A=_e(f,[0,0],y),x=_e(f,[0,g],y),b=_e(f,[0,g*2],y),v=_e(f,[0,g*3],y),T=ie(V(Ar(A),su(x)),V(u,Ar(ie(i,b)))),C=V(su(T),Ar(v));return[T,C]}var MN=G({basicLSTMCell_:$N});function _N(e,t,a){let r=M(e,"x","batchToSpaceND"),n=t.reduce((o,l)=>o*l);O(r.rank>=1+t.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`),O(a.length===t.length,()=>`crops.length is ${a.length} but should be equal to blockShape.length  ${t.length}`),O(r.shape[0]%n===0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${n}`);let s={x:r},i={blockShape:t,crops:a};return U.runKernel(So,s,i)}var Of=G({batchToSpaceND_:_N});function zN(e){let t;return e.rank===0||e.rank===1?t=q(e,[1,1,1,e.size]):e.rank===2?t=q(e,[1,1,e.shape[0],e.shape[1]]):e.rank===3?t=q(e,[1,e.shape[0],e.shape[1],e.shape[2]]):t=e,t}function ON(e,t,a,r,n,s){s==null&&(s=.001);let i=M(e,"x","batchNorm"),o=M(t,"mean","batchNorm"),l=M(a,"variance","batchNorm"),d;n!=null&&(d=M(n,"scale","batchNorm"));let u;r!=null&&(u=M(r,"offset","batchNorm")),O(o.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),O(u==null||o.rank===u.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),O(d==null||o.rank===d.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let h={x:zN(i),scale:d,offset:u,mean:o,variance:l},p={varianceEpsilon:s},c=U.runKernel(ai,h,p);return q(c,i.shape)}var iu=G({batchNorm_:ON});function DN(e,t,a,r,n,s){let i=M(e,"x","batchNorm"),o=M(t,"mean","batchNorm"),l=M(a,"variance","batchNorm"),d;n!=null&&(d=M(n,"scale","batchNorm"));let u;return r!=null&&(u=M(r,"offset","batchNorm")),O(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),O(o.rank===2||o.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),O(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),d!=null&&O(d.rank===2||d.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${d.rank}.`),u!=null&&O(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${u.rank}.`),iu(i,o,l,u,d,s)}var f3=G({batchNorm2d_:DN});function PN(e,t,a,r,n,s){let i=M(e,"x","batchNorm"),o=M(t,"mean","batchNorm"),l=M(a,"variance","batchNorm"),d;n!=null&&(d=M(n,"scale","batchNorm"));let u;return r!=null&&(u=M(r,"offset","batchNorm")),O(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),O(o.rank===3||o.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),O(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),d!=null&&O(d.rank===3||d.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${d.rank}.`),u!=null&&O(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${u.rank}.`),iu(i,o,l,u,d,s)}var m3=G({batchNorm3d_:PN});function LN(e,t,a,r,n,s){let i=M(e,"x","batchNorm"),o=M(t,"mean","batchNorm"),l=M(a,"variance","batchNorm"),d;n!=null&&(d=M(n,"scale","batchNorm"));let u;return r!=null&&(u=M(r,"offset","batchNorm")),O(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),O(o.rank===4||o.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),O(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),d!=null&&O(d.rank===4||d.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${d.rank}.`),u!=null&&O(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${u.rank}.`),iu(i,o,l,u,d,s)}var g3=G({batchNorm4d_:LN});function WN(e,t,a){let r=M(e,"x","bincount"),n=M(t,"weights","bincount");O(r.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`),O(a>=0,()=>`size must be non-negative, but got ${a}.`),O(n.size===r.size||n.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${n.shape}.`);let s={x:r,weights:n},i={size:a};return U.runKernel(df,s,i)}var A2=G({bincount_:WN});function BN(e,t){let a=M(e,"s0","broadcastArgs","int32"),r=M(t,"s1","broadcastArgs","int32");if(a.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${a.rank}`);if(r.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);let n={s0:a,s1:r};return U.runKernel(hf,n)}var y3=G({broadcastArgs_:BN});function VN(e,t){let a=M(e,"broadcastTo","x"),r=a.shape;if(t.some(l=>!(l>0)||l%1!==0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<a.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${a.rank}.`);if(t.length>a.rank){let l=a.shape.slice();for(;l.length<t.length;)l.unshift(1);a=q(a,l)}let n=a.shape,s=Array.from(t);for(let l=t.length-1;l>=0;l--)if(n[l]===t[l])s[l]=1;else if(a.shape[l]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(s.map((l,d)=>l>1?d:-1).filter(l=>l>=0).length===0)return Ha(a);let i={x:a},o={reps:s};return U.runKernel(Kn,i,o)}var Xd=G({broadcastTo_:VN});function UN(e){let t={x:M(e,"x","ceil","float32")};return U.runKernel(js,t)}var A3=G({ceil_:UN});function GN(e,t,a){let r=M(e,"x","clipByValue");O(t<=a,()=>`Error in clip: min (${t}) must be less than or equal to max (${a}).`);let n={x:r},s={clipValueMin:t,clipValueMax:a};return U.runKernel(Xn,n,s)}var hr=G({clipByValue_:GN});function jN(e){return Ct(e,0)}var x3=G({concat1d_:jN});function HN(e,t){return Ct(e,t)}var Df=G({concat2d_:HN});function qN(e,t){return Ct(e,t)}var b3=G({concat3d_:qN});function XN(e,t){return Ct(e,t)}var v3=G({concat4d_:XN});function KN(e,t,a,r,n="NHWC",s=[1,1],i){let o=M(e,"x","conv2d","float32"),l=M(t,"filter","conv2d","float32"),d=o,u=!1;o.rank===3&&(u=!0,d=q(o,[1,o.shape[0],o.shape[1],o.shape[2]])),O(d.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${d.rank}.`),O(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),Da("conv2d",r,i);let h=n==="NHWC"?d.shape[3]:d.shape[1];O(h===l.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`),O(wn(a,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`);let p={x:d,filter:l},c={strides:a,pad:r,dataFormat:n,dilations:s,dimRoundingMode:i},f=U.runKernel(Hs,p,c);return u?q(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Fs=G({conv2d_:KN});function ZN(e,t,a,r,n="NWC",s=1,i){let o=M(e,"x","conv1d"),l=M(t,"filter","conv1d"),d=o,u=!1;o.rank===2&&(u=!0,d=q(o,[1,o.shape[0],o.shape[1]])),O(d.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${d.rank}.`),O(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),Da("conv1d",r,i),O(d.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${d.shape[2]}) must match input depth for filter ${l.shape[1]}.`),O(wn(a,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${a} and dilation '${s}'`),O(n==="NWC",()=>`Error in conv1d: got dataFormat of ${n} but only NWC is currently supported.`);let h=q(l,[1,l.shape[0],l.shape[1],l.shape[2]]),p=q(d,[d.shape[0],1,d.shape[1],d.shape[2]]),c=Fs(p,h,[1,a],r,"NHWC",[1,s],i);return u?q(c,[c.shape[2],c.shape[3]]):q(c,[c.shape[0],c.shape[2],c.shape[3]])}var x2=G({conv1d_:ZN});function YN(e,t,a,r,n,s="NHWC",i){O(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let o=e,l=t,d=!1;t.rank===3&&(d=!0,l=q(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),O(o.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`),O(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),O(a.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${a.rank}`);let u=s==="NHWC"?o[3]:o[1],h=s==="NHWC"?l.shape[3]:l.shape[1];O(u===a.shape[2],()=>`Error in conv2dDerInput: depth of input (${u}) must match input depth for filter ${a.shape[2]}.`),O(h===a.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${a.shape[3]}.`),Da("conv2dDerInput",n,i);let p={dy:l,filter:a},c={strides:r,pad:n,dataFormat:s,dimRoundingMode:i,inputShape:o},f=U.runKernel(qs,p,c);return d?q(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var b2=G({conv2DBackpropInput_:YN});function JN(e,t,a,r,n,s){let i=M(e,"x","conv2dTranspose"),o=M(t,"filter","conv2dTranspose");return b2(a,i,o,r,n,"NHWC",s)}var v2=G({conv2dTranspose_:JN});function QN(e,t,a,r,n="NDHWC",s=[1,1,1]){let i=M(e,"x","conv3d"),o=M(t,"filter","conv3d"),l=i,d=!1;i.rank===4&&(d=!0,l=q(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),O(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),O(o.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),O(l.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`),O(wn(a,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`),O(n==="NDHWC",()=>`Error in conv3d: got dataFormat of ${n} but only NDHWC is currently supported.`);let u={x:l,filter:o},h={strides:a,pad:r,dataFormat:n,dilations:s},p=U.runKernel(Ah,u,h);return d?q(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var w2=G({conv3d_:QN});function eE(e,t,a,r,n){O(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let s=e,i=t,o=!1;t.rank===4&&(o=!0,i=q(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);let l=s[4],d=i.shape[4];O(s.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),O(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),O(a.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${a.rank}`),O(l===a.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${a.shape[3]}.`),O(d===a.shape[4],()=>`Error in conv3dDerInput: depth of output (${d}) must match output depth for filter ${a.shape[4]}.`);let u={dy:i,filter:a},h={pad:n,strides:r,inputShape:s},p=U.runKernel(ff,u,h);return o?q(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var w3=G({conv3DBackpropInput_:eE});function tE(e,t,a,r,n){let s=M(e,"x","conv3dTranspose"),i=M(t,"filter","conv3dTranspose");return w3(a,s,i,r,n)}var k3=G({conv3dTranspose_:tE});function aE(e){let t={x:M(e,"x","cos","float32")};return U.runKernel(Xs,t)}var Pf=G({cos_:aE});function rE(e){let t={x:M(e,"x","cosh","float32")};return U.runKernel(Ks,t)}var k2=G({cosh_:rE});function nE(e,t=0,a=!1,r=!1){let n={x:M(e,"x","cumsum")},s={axis:t,exclusive:a,reverse:r};return U.runKernel(Co,n,s)}var I2=G({cumsum_:nE});function sE(e,t,a,r=!1){let n=M(e,"x","denseBincount"),s=M(t,"weights","denseBincount");O(n.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${n.dtype}`),O(n.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${n.rank}.`),O(a>=0,()=>`size must be non-negative, but got ${a}.`),O(s.size===n.size||s.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${n.shape}, weights shape: ${s.shape}.`);let i={x:n,weights:s},o={size:a,binaryOutput:r};return U.runKernel(mf,i,o)}var I3=G({denseBincount_:sE});function iE(e,t,a="NHWC"){let r=M(e,"x","depthToSpace","float32"),n=a==="NHWC"?r.shape[1]:r.shape[2],s=a==="NHWC"?r.shape[2]:r.shape[3],i=a==="NHWC"?r.shape[3]:r.shape[1];O(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),O(n*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${n} and ${t}  for depthToSpace with input shape
    ${r.shape}`),O(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${t} for depthToSpace with input shape
        ${r.shape}`),O(i%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`);let o={x:r},l={blockSize:t,dataFormat:a};return U.runKernel(Eo,o,l)}var S3=G({depthToSpace_:iE});function oE(e,t,a,r,n="NHWC",s=[1,1],i){let o=M(e,"x","depthwiseConv2d","float32"),l=M(t,"filter","depthwiseConv2d","float32"),d=o,u=!1;o.rank===3&&(u=!0,d=q(o,[1,o.shape[0],o.shape[1],o.shape[2]])),O(d.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`),O(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`),O(d.shape[3]===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),Da("depthwiseConv2d",r,i);let h={x:d,filter:l},p={strides:a,pad:r,dataFormat:n,dilations:s,dimRoundingMode:i},c=U.runKernel(Zs,h,p);return u?q(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var Ph=G({depthwiseConv2d_:oE});function lE(e){let t={x:M(e,"x","diag")};return U.runKernel(Af,t)}var uE=G({diag_:lE});function dE(e,t,a,r,n=[1,1],s="NHWC"){let i=M(e,"x","dilation2d"),o=M(t,"filter","dilation2d");O(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),O(o.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`),O(s==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`);let l=i,d=!1;i.rank===3&&(l=q(i,[1,i.shape[0],i.shape[1],i.shape[2]]),d=!0);let u={x:l,filter:o},h={strides:a,pad:r,dilations:n},p=U.runKernel(xh,u,h);return d?q(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var T3=G({dilation2d_:dE});function hE(e,t){let a=M(e,"a","equal","string_or_numeric"),r=M(t,"b","equal","string_or_numeric");[a,r]=Mt(a,r),gt(a.shape,r.shape);let n={a,b:r};return U.runKernel(Ro,n)}var xr=G({equal_:hE});function pE(e,t,a){let r=M(t,"a","where"),n=M(a,"b","where"),s=M(e,"condition","where","bool"),i=gt(gt(s.shape,r.shape),n.shape),o=Xd(s,i),l=Xd(r,i),d=Xd(n,i),u={condition:o,t:l,e:d};return U.runKernel(Jo,u)}var Ma=G({where_:pE});function cE(e){let t={x:M(e,"x","zerosLike")};return U.runKernel(ll,t)}var Je=G({zerosLike_:cE});function fE(e,t){let a=M(e,"a","div"),r=M(t,"b","div");[a,r]=Mt(a,r);let n=ge(a,r),s=Je(n),i=xr(r,s);return Ma(i,s,n)}var C3=G({divNoNan_:fE});function mE(e,t){let a=M(e,"t1","dot"),r=M(t,"t2","dot");O((a.rank===1||a.rank===2)&&(r.rank===1||r.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${a.rank} and ${r.rank}.`);let n=a.rank===1?a.size:a.shape[1],s=r.rank===1?r.size:r.shape[0];if(O(n===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${n} and ${s}.`),a.rank===1&&r.rank===1){let i=q(a,[1,-1]),o=q(r,[-1,1]),l=He(i,o);return q(l,[])}else if(a.rank===1&&r.rank===2){let i=q(a,[1,-1]),o=q(r,[r.shape[0],r.shape[1]]),l=He(i,o);return q(l,[l.size])}else if(a.rank===2&&r.rank===1){let i=q(r,[-1,1]),o=He(a,i);return q(o,[o.size])}else{let i=q(r,[r.shape[0],r.shape[1]]);return He(a,i)}}var gE=G({dot_:mE});function yE(e,...t){let a=t.map((n,s)=>M(n,`tensors${s}`,"einsum")),r={equation:e};return U.runKernel(bh,a,r)}var N3=G({einsum_:yE});function AE(e){let t={x:M(e,"x","elu","float32")};return U.runKernel(Js,t)}var Lh=G({elu_:AE});function xE(e){let t=M(e,"x","erf");O(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=pe(t,"float32"));let a={x:t};return U.runKernel(Mu,a)}var E3=G({erf_:xE});function bE(e){let t={x:M(e,"x","exp")};return U.runKernel(Qs,t)}var br=G({exp_:bE});function vE(e,t=0){let a=M(e,"x","expandDims","string_or_numeric");O(t<=a.rank,()=>"Axis must be <= rank of the tensor");let r={input:a},n={dim:t};return U.runKernel(Fo,r,n)}var ua=G({expandDims_:vE});function wE(e){let t={x:M(e,"x","expm1")};return U.runKernel($o,t)}var R3=G({expm1_:wE});function kE(e,t){let a=M(e,"x","tile","string_or_numeric");O(a.rank===t.length,()=>`Error in transpose: rank of input ${a.rank} must match length of reps ${t}.`);let r={x:a},n={reps:t};return U.runKernel(Kn,r,n)}var zr=G({tile_:kE});function IE(e,t,a,r="float32"){t==null&&(t=e);let n=Le([e,t],r),s=e<=t?e:t;for(let o=0;o<s;++o)n.set(1,o,o);let i=q(n.toTensor(),[e,t]);if(a==null)return i;if(a.length===1)return zr(ua(i,0),[a[0],1,1]);if(a.length===2)return zr(ua(ua(i,0),0),[a[0],a[1],1,1]);if(a.length===3)return zr(ua(ua(ua(i,0),0),0),[a[0],a[1],a[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${a.length}D.`)}var S2=G({eye_:IE});function Yu(e,t,a){let r={shape:e,value:t,dtype:a};return U.runKernel(_u,{},r)}function SE(e){let t={x:M(e,"x","floor","float32")};return U.runKernel(ei,t)}var Wh=G({floor_:SE});function TE(e,t,a=0,r=0){let n=M(e,"x","gather"),s=M(t,"indices","gather","int32"),i={x:n,indices:s},o={axis:a,batchDims:r};return U.runKernel(_o,i,o)}var ou=G({gather_:TE});function CE(e,t){let a=M(e,"a","greater","string_or_numeric"),r=M(t,"b","greater","string_or_numeric");[a,r]=Mt(a,r),gt(a.shape,r.shape);let n={a,b:r};return U.runKernel(Oo,n)}var cr=G({greater_:CE});function NE(e,t){let a=M(e,"a","greaterEqual","string_or_numeric"),r=M(t,"b","greaterEqual","string_or_numeric");[a,r]=Mt(a,r),gt(a.shape,r.shape);let n={a,b:r};return U.runKernel(ri,n)}var hl=G({greaterEqual_:NE});function EE(e){let t={input:M(e,"input","imag")};return U.runKernel(vh,t)}var Lf=G({imag_:EE});function RE(e){let t={x:M(e,"x","isFinite")};return U.runKernel(zu,t)}var FE=G({isFinite_:RE});function $E(e){let t={x:M(e,"x","isInf")};return U.runKernel(Ou,t)}var ME=G({isInf_:$E});function _E(e){let t={x:M(e,"x","isNaN")};return U.runKernel(Du,t)}var F3=G({isNaN_:_E});function zE(e,t=.2){let a={x:M(e,"x","leakyRelu")},r={alpha:t};return U.runKernel(si,a,r)}var Wf=G({leakyRelu_:zE});function OE(e,t){let a=M(e,"a","less","string_or_numeric"),r=M(t,"b","less","string_or_numeric");[a,r]=Mt(a,r),gt(a.shape,r.shape);let n={a,b:r};return U.runKernel(Do,n)}var T2=G({less_:OE});function DE(e,t){let a=M(e,"a","lessEqual","string_or_numeric"),r=M(t,"b","lessEqual","string_or_numeric");[a,r]=Mt(a,r),gt(a.shape,r.shape);let n={a,b:r};return U.runKernel(Po,n)}var pl=G({lessEqual_:DE});function $3(e,t,a){if(a<=0)throw new Error("The number of values should be positive.");let r={start:e,stop:t,num:a};return U.runKernel(wf,{},r)}function PE(e,t=5,a=1,r=1,n=.5){let s=M(e,"x","localResponseNormalization");O(s.rank===4||s.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${s.rank}.`),O(ru(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=s,o=!1;s.rank===3&&(o=!0,i=q(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l={x:i},d={depthRadius:t,bias:a,alpha:r,beta:n},u=U.runKernel(kh,l,d);return o?q(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var M3=G({localResponseNormalization_:PE});function LE(e){let t={x:M(e,"x","log","float32")};return U.runKernel(ii,t)}var vr=G({log_:LE});function WE(e){let t={x:M(e,"x","log1p")};return U.runKernel(Pu,t)}var Bf=G({log1p_:WE});function BE(e){return O(Is(e),()=>"The f passed in grad(f) must be a function"),(t,a)=>{let r=M(t,"x","tf.grad","string_or_numeric"),n=a!=null?M(a,"dy","tf.grad"):null;return U.tidy(()=>{let{value:s,grads:i}=U.gradients(()=>e(r),[r],n);return n!=null&&Oa(s.shape,n.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Vf(i),i[0]})}}function VE(e){return O(Is(e),()=>"The f passed in grads(f) must be a function"),(t,a)=>{O(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let r=sh(t,"args","tf.grads","string_or_numeric"),n=a!=null?M(a,"dy","tf.grads"):null;return U.tidy(()=>{let{value:s,grads:i}=U.gradients(()=>e(...r),r,n);return n!=null&&Oa(s.shape,n.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Vf(i),i})}}function UE(e){return O(Is(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,a)=>{O(t instanceof et,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),O(a==null||a instanceof et,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:r,value:n}=U.gradients(()=>e(t),[t],a);return Vf(r),{grad:r[0],value:n}}}function GE(e){return O(Is(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,a)=>{O(Array.isArray(t)&&t.every(n=>n instanceof et),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),O(a==null||a instanceof et,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let r=U.gradients(()=>e(...t),t,a);return a!=null&&Oa(r.value.shape,a.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Vf(r.grads),r}}function _3(e,t){O(Is(e),()=>"The f passed in variableGrads(f) must be a function"),O(t==null||Array.isArray(t)&&t.every(d=>d instanceof nh),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let a=t!=null;if(!a){t=[];for(let d in U.registeredVariables)t.push(U.registeredVariables[d])}let r=a?t.filter(d=>!d.trainable):null,n=t.length;t=t.filter(d=>d.trainable),O(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${n} variables is trainable.`);let s=!0,{value:i,grads:o}=U.gradients(e,t,null,s);O(o.some(d=>d!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),O(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);let l={};return t.forEach((d,u)=>{o[u]!=null&&(l[d.name]=o[u])}),r!=null&&r.forEach(d=>l[d.name]=null),{value:i,grads:l}}function bn(e){return U.customGrad(e)}function Vf(e){if(e.filter(t=>t==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function jE(e){let t={x:M(e,"x","neg")};return U.runKernel(Wo,t)}var $t=G({neg_:jE});function HE(e){let t={x:M(e,"x","softplus")};return U.runKernel(qu,t)}var Ju=G({softplus_:HE});function qE(e){let t=M(e,"x","logSigmoid");return bn(a=>({value:$t(Ju($t(a))),gradFunc:r=>V(r,Ar($t(a)))}))(t)}var XE=G({logSigmoid_:qE});function KE(e,t=null,a=!1){let r={x:M(e,"x","max")},n={reductionIndices:t,keepDims:a};return U.runKernel(oi,r,n)}var Fa=G({max_:KE});function ZE(e,t){let a=M(e,"a","sub"),r=M(t,"b","sub");[a,r]=Mt(a,r);let n={a,b:r};return U.runKernel(Ni,n)}var me=G({sub_:ZE});function YE(e,t=null,a=!1){let r=M(e,"x","sum");r.dtype==="bool"&&(r=pe(r,"int32"));let n={x:r},s={axis:t,keepDims:a};return U.runKernel(Si,n,s)}var we=G({sum_:YE});function JE(e,t=-1){let a=M(e,"logits","logSoftmax");if(t===-1&&(t=a.rank-1),t!==a.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${a.rank} and axis was ${t}`);return bn((r,n)=>{let s=Fa(r,t,!0),i=me(r,s),o=me(pe(i,"float32"),vr(we(br(i),t,!0)));return n([o]),{value:o,gradFunc:(l,d)=>{let[u]=d,h=!0,p=br(u);return me(l,V(we(l,t,h),p))}}})(a)}var C2=G({logSoftmax_:JE});function N2(e,t){for(let a=0;a<e.length;++a)if(e[e.length-a-1]!==t-1-a)return!1;return!0}function z3(e,t,a){let r=e.length+t.length,n=[],s=0,i=0;for(let o=0;o<r;o++)a.indexOf(o)===-1?n.push(e[s++]):n.push(t[i++]);return n}function O3(e,t){let a=[],r=e.length;for(let s=0;s<r;s++)t.indexOf(s)===-1&&a.push(e[s]);let n=t.map(s=>e[s]);return[a,n]}function co(e,t){let a=t.map(r=>1);return z3(e,a,t)}function QE(e,t,a){O(N2(t,a),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${a} input.`)}function D3(e,t){if(N2(e,t))return null;let a=[];for(let r=0;r<t;++r)e.indexOf(r)===-1&&a.push(r);return e.forEach(r=>a.push(r)),a}function E2(e){return e.map((t,a)=>[a,t]).sort((t,a)=>t[1]-a[1]).map(t=>t[0])}function eR(e,t){let a=[];for(let r=t-e;r<t;++r)a.push(r);return a}function tR(e,t=null,a=!1){let r=M(e,"x","logSumExp"),n=Dr(t,r.shape),s=Fa(r,n,!0),i=me(r,s),o=br(i),l=we(o,n),d=vr(l),u=ie(q(s,d.shape),d);if(a){let h=co(u.shape,n);return q(u,h)}return u}var P3=G({logSumExp_:tR});function aR(e,t){let a=M(e,"a","logicalAnd","bool"),r=M(t,"b","logicalAnd","bool");gt(a.shape,r.shape);let n={a,b:r};return U.runKernel(Lo,n)}var tn=G({logicalAnd_:aR});function rR(e){let t={x:M(e,"x","logicalNot","bool")};return U.runKernel(Lu,t)}var Uf=G({logicalNot_:rR});function nR(e,t){let a=M(e,"a","logicalOr","bool"),r=M(t,"b","logicalOr","bool");gt(a.shape,r.shape);let n={a,b:r};return U.runKernel(wh,n)}var R2=G({logicalOr_:nR});function sR(e,t){let a=M(e,"a","logicalXor","bool"),r=M(t,"b","logicalXor","bool");return gt(a.shape,r.shape),tn(R2(e,t),Uf(tn(e,t)))}var iR=G({logicalXor_:sR});function oR(e,t,a,r,n){let s=M(e,"x","maxPool"),i=1,o=s,l=!1;s.rank===3&&(l=!0,o=q(s,[1,s.shape[0],s.shape[1],s.shape[2]])),O(o.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`),O(wn(a,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${i}'`),Da("maxPool",r,n);let d={x:o},u={filterSize:t,strides:a,pad:r,dimRoundingMode:n},h=U.runKernel(ui,d,u);return l?q(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var Gf=G({maxPool_:oR});function lR(e,t=[1,1,1],a,r,n,s="NDHWC"){let i=M(e,"x","maxPool3d"),o=i,l=!1;i.rank===4&&(l=!0,o=q(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),O(o.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),O(s==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),Da("maxPool3d",r,n);let d={x:o},u={filterSize:t,strides:a,pad:r,dimRoundingMode:n,dataFormat:s},h=U.runKernel(Ih,d,u);return l?q(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}var F2=G({maxPool3d_:lR});function uR(e,t,a,r,n=!1){let s={x:M(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:a,pad:r,includeBatchInIndex:n},o=U.runKernel(Tf,s,i);return{result:o[0],indexes:o[1]}}var L3=G({maxPoolWithArgmax_:uR});function dR(e,t){let a=M(e,"a","maximum"),r=M(t,"b","maximum");[a,r]=Mt(a,r),a.dtype==="bool"&&(a=pe(a,"int32"),r=pe(r,"int32")),gt(a.shape,r.shape);let n={a,b:r};return U.runKernel(li,n)}var Zn=G({maximum_:dR});function hR(e,t=null,a=!1){let r={x:M(e,"x","mean")},n={axis:t,keepDims:a};return U.runKernel(di,r,n)}var Pt=G({mean_:hR});function Ut(e,t="float32"){if(t==="complex64"){let r=Ut(e,"float32"),n=Ut(e,"float32");return Ns(r,n)}let a=of(kt(e),t);return U.makeTensor(a,e,t)}function dr(e,t="float32"){if(t==="complex64"){let r=dr(e,"float32"),n=Ut(e,"float32");return Ns(r,n)}let a=Zg(kt(e),t);return U.makeTensor(a,e,t)}function pR(e,t,{indexing:a="xy"}={}){if(a!=="xy"&&a!=="ij")throw new TypeError(`${a} is not a valid third argument to meshgrid`);if(e===void 0)return[];let r=M(e,"x","meshgrid",e instanceof et?e.dtype:"float32");if(t===void 0)return[r];let n=M(t,"y","meshgrid",t instanceof et?t.dtype:"float32"),s=kt(r.shape),i=kt(n.shape);return a==="xy"?(r=q(r,[1,-1]),n=q(n,[-1,1]),[He(dr([i,1],r.dtype),r),He(n,dr([1,s],n.dtype))]):(r=q(r,[-1,1]),n=q(n,[1,-1]),[He(r,dr([1,i],r.dtype)),He(dr([s,1],n.dtype),n)])}function cR(e,t=null,a=!1){let r={x:M(e,"x","min")},n={axis:t,keepDims:a};return U.runKernel(hi,r,n)}var no=G({min_:cR});function fR(e,t){let a=M(e,"a","minimum"),r=M(t,"b","minimum");[a,r]=Mt(a,r),a.dtype==="bool"&&(a=pe(a,"int32"),r=pe(r,"int32")),gt(a.shape,r.shape);let n={a,b:r};return U.runKernel(pi,n)}var Bh=G({minimum_:fR});function mR(e,t,a){O(a==="reflect"||a==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${a}.`);let r=M(e,"x","mirrorPad");if(r.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");O(t.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`);let n=a==="reflect"?1:0;for(let o=0;o<r.rank;o++)O(t[o].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),O(t[o][0]>=0&&t[o][0]<=r.shape[o]-n&&t[o][1]>=0&&t[o][1]<=r.shape[o]-n,()=>`Padding in dimension ${o} cannot be greater than or equal to ${r.shape[o]-n} or less than 0 for input of shape ${r.shape}`);let s={paddings:t,mode:a},i={x:r};return U.runKernel(ci,i,s)}var W3=G({mirrorPad_:mR});function gR(e,t){let a=M(e,"a","mod"),r=M(t,"b","mod");[a,r]=Mt(a,r);let n={a,b:r};return U.runKernel(Wu,n)}var jf=G({mod_:gR});function yR(e){let t=M(e,"x","square"),a={};return U.runKernel("Square",{x:t},a)}var ct=G({square_:yR});function AR(e,t=null,a=!1){e=M(e,"x","moments");let r=Dr(t,e.shape),n=Pt(e,r,a),s=n.shape;a||(s=co(n.shape,r));let i=ct(me(pe(e,"float32"),q(n,s))),o=Pt(i,r,a);return{mean:n,variance:o}}var Hf=G({moments_:AR});function xR(e,t,a,r){let n=M(t,"data","multiRNNCell"),s=sh(a,"c","multiRNNCell"),i=sh(r,"h","multiRNNCell"),o=n,l=[];for(let h=0;h<e.length;h++){let p=e[h](o,s[h],i[h]);l.push(p[0]),l.push(p[1]),o=p[1]}let d=[],u=[];for(let h=0;h<l.length;h+=2)d.push(l[h]),u.push(l[h+1]);return[d,u]}var bR=G({multiRNNCell_:xR});function vR(e,t,a,r=!1){let n=M(e,"logits","multinomial"),s=n.size,i=n.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);a=a||Math.random();let o={logits:i===1?q(n,[1,-1]):n},l={numSamples:t,seed:a,normalized:r},d=U.runKernel(Cf,o,l);return i===1?q(d,[d.size]):d}var B3=G({multinomial_:vR});function wR(e,t){let a=M(e,"a","notEqual","string_or_numeric"),r=M(t,"b","notEqual","string_or_numeric");[a,r]=Mt(a,r),gt(a.shape,r.shape);let n={a,b:r};return U.runKernel(Bo,n)}var lu=G({notEqual_:wR});function kR(e){let t={x:M(e,"x","onesLike")};return U.runKernel(Go,t)}var wr=G({onesLike_:kR});function IR(e,t){let a=M(e,"v1","outerProduct"),r=M(t,"v2","outerProduct");O(a.rank===1&&r.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${a.rank} and ${r.rank}.`);let n=q(a,[-1,1]),s=q(r,[1,-1]);return He(n,s)}var SR=G({outerProduct_:IR});function TR(e,t,a=0){let r=M(e,"x","pad");if(r.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let n={paddings:t,constantValue:a},s={x:r};return U.runKernel(mi,s,n)}var kn=G({pad_:TR});function CR(e,t,a=0){return O(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),kn(e,[t],a)}var NR=G({pad1d_:CR});function ER(e,t,a=0){return O(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),kn(e,t,a)}var RR=G({pad2d_:ER});function FR(e,t,a=0){return O(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),kn(e,t,a)}var $R=G({pad3d_:FR});function MR(e,t,a=0){return O(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),kn(e,t,a)}var _R=G({pad4d_:MR});function zR(e,t,a){let r=M(e,"x","spaceToBatchND");O(r.rank>=1+t.length,()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`),O(a.length===t.length,()=>`paddings.shape[0] ${a.length} must be equal to [blockShape] ${t.length}`),O(r.shape.reduce((i,o,l)=>l>0&&l<=t.length?i&&(o+a[l-1][0]+a[l-1][1])%t[l-1]===0:i,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${a.toString()} must be divisible by blockShapes ${t.toString()}`);let n={x:r},s={blockShape:t,paddings:a};return U.runKernel(tl,n,s)}var qf=G({spaceToBatchND_:zR});function OR(e,t,a,r,n,s,i){n==null&&(n=[1,1]),s==null&&(s=1),r===0&&(r="valid");let o=M(e,"x","maxPool"),l=o,d=!1;o.rank===3&&(d=!0,l=q(o,[1,o.shape[0],o.shape[1],o.shape[2]])),O(wn(s,n),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${n}'`);let u=h3(l.shape,t,s,n,r),h=[u.dilationHeight,u.dilationWidth],p;r==="same"?p=PR([u.filterHeight,u.filterWidth],h):p=[[0,0],[0,0]];let c=h[0]===1&&h[1]===1,[f,m]=DR([u.inHeight,u.inWidth],h,p),g=c?r:"valid",y=c?l:qf(l,h,f),A=(a==="avg"?()=>zf(y,t,s,g,i):()=>Gf(y,t,s,g,i))(),x=c?A:Of(A,h,m);return d?q(x,[x.shape[1],x.shape[2],x.shape[3]]):x}function DR(e,t,a){let r=a.map(u=>u[0]),n=a.map(u=>u[1]),s=e.concat(r,n),i=t.map((u,h)=>(u-s[h]%u)%u),o=n.map((u,h)=>u+i[h]),l=t.map((u,h)=>[r[h],o[h]]),d=t.map((u,h)=>[0,i[h]]);return[l,d]}function PR(e,t){let a=e.map((s,i)=>s+(s-1)*(t[i]-1)).map(s=>s-1),r=a.map(s=>Math.floor(s/2)),n=a.map((s,i)=>s-r[i]);return a.map((s,i)=>[r[i],n[i]])}var LR=G({pool_:OR});function WR(e,t){let a=M(e,"base","pow"),r=M(t,"exp","pow");[a,r]=Mt(a,r);let n={a,b:r};return U.runKernel(gi,n)}var $s=G({pow_:WR});function BR(e,t){let a=M(e,"x","prelu"),r=M(t,"alpha","prelu"),n={x:a,alpha:r};return U.runKernel(yi,n)}var Xf=G({prelu_:BR});function VR(e,t=null,a=!1){let r=M(e,"x","prod");r.dtype==="bool"&&(r=pe(r,"int32"));let n={x:r},s={axis:t,keepDims:a};return U.runKernel(qo,n,s)}var $2=G({prod_:VR});function UR(e,t,a){let r=kt(e),n=null;if(a==null||a==="float32")n=new Float32Array(r);else if(a==="int32")n=new Int32Array(r);else if(a==="bool")n=new Uint8Array(r);else throw new Error(`Unknown data type ${a}`);for(let s=0;s<r;s++)n[s]=t();return U.makeTensor(n,e,a)}var GR=G({rand_:UR}),M2=wo(nf()),_2=class{constructor(e,t,a,r,n){this.mean=e,this.stdDev=t,this.dtype=a,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let s=n||Math.random();this.random=M2.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){let r=this.nextVal;return this.nextVal=NaN,r}let e,t,a=!1;for(;!a;){let r,n,s;do r=2*this.random()-1,n=2*this.random()-1,s=r*r+n*n;while(s>=1||s===0);let i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*n*i,(!this.truncated||this.isValidTruncated(e))&&(a=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},jR=class{constructor(e,t,a,r){this.alpha=e,this.beta=1/t,this.dtype=a;let n=r||Math.random();this.randu=M2.alea(n.toString()),this.randn=new _2(0,1,a,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,a,r,n,s;for(;;){do r=this.randn.nextValue(),s=1+this.c*r;while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,a=.5*e+this.d*(1-s+Math.log(s)),n=this.randu(),n<t||Math.log(n)<a)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}},HR=class{constructor(e=0,t=1,a,r){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=a,r==null&&(r=Math.random()),typeof r=="number"&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=M2.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function qR(e,t,a=1,r="float32",n){if(a==null&&(a=1),r==null&&(r="float32"),r!=="float32"&&r!=="int32")throw new Error(`Unsupported data type ${r}`);let s=new jR(t,a,r,n),i=Le(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var XR=G({randomGamma_:qR});function KR(e,t=0,a=1,r,n){if(r!=null&&r==="bool")throw new Error(`Unsupported data type ${r}`);let s=new _2(t,a,r,!1,n),i=Le(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var V3=G({randomNormal_:KR});function ZR(e,t=0,a=1,r="float32",n){let s=Le(e,r),i=new HR(t,a,null,n);for(let o=0;o<s.values.length;o++)s.values[o]=i.nextValue();return s.toTensor()}var Qu=G({randomUniform_:ZR});function uu(e,t,a=1,r="float32"){if(a===0)throw new Error("Cannot have a step of zero");let n={start:e,stop:t,step:a,dtype:r};return U.runKernel(Vu,{},n)}function YR(e){let t={input:M(e,"input","real")};return U.runKernel(Sh,t)}var oh=G({real_:YR});function JR(e){let t={x:M(e,"x","reciprocal")};return U.runKernel(Uu,t)}var U3=G({reciprocal_:JR});function QR(e){let t={x:M(e,"x","relu")};return U.runKernel(Ai,t)}var In=G({relu_:QR});function eF(e){let t={x:M(e,"x","relu6")};return U.runKernel(bi,t)}var z2=G({relu6_:eF});function tF(e,t){let a={x:M(e,"x","reverse")},r={dims:t};return U.runKernel(Ko,a,r)}var kr=G({reverse_:tF});function aF(e){let t=M(e,"x","reverse");return O(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),kr(t,0)}var rF=G({reverse1d_:aF});function nF(e,t){let a=M(e,"x","reverse");return O(a.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${a.rank}.`),kr(a,t)}var sF=G({reverse2d_:nF});function iF(e,t){let a=M(e,"x","reverse");return O(a.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${a.rank}.`),kr(a,t)}var oF=G({reverse3d_:iF});function lF(e,t){let a=M(e,"x","reverse");return O(a.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${a.rank}.`),kr(a,t)}var uF=G({reverse4d_:lF});function dF(e){let t={x:M(e,"x","round")};return U.runKernel(Zo,t)}var O2=G({round_:dF});function hF(e){let t={x:M(e,"x","rsqrt","float32")};return U.runKernel(vi,t)}var D2=G({rsqrt_:hF});function Ie(e,t){if((ba(e)&&t!=="string"||Array.isArray(e))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&ba(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return $i(e,[],[],t)}function pF(e){let t={x:M(e,"x","selu")};return U.runKernel(ju,t)}var P2=G({selu_:pF});function cF(e,t,a,r,n,s=[1,1],i="NHWC"){let o=M(e,"x","separableConv2d"),l=M(t,"depthwiseFilter","separableConv2d"),d=M(a,"pointwiseFilter","separableConv2d"),u=o,h=!1;if(o.rank===3&&(h=!0,u=q(o,[1,o.shape[0],o.shape[1],o.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");O(u.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${u.rank}.`),O(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),O(d.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),O(d.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${d.shape[0]}.`),O(d.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${d.shape[1]}.`);let p=l.shape[2],c=l.shape[3];O(d.shape[2]===p*c,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*c}, but got ${d.shape[2]}.`);let f=Ph(u,l,r,n,i,s),m=Fs(f,d,1,"valid",i);return h?q(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var G3=G({separableConv2d_:cF});async function fF(e,t){let a=M(e,"x","setdiff1d"),r=M(t,"y","setdiff1d");O(a.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${a.dtype}) and y (${r.dtype}).`),O(a.rank===1,()=>`x should be 1D tensor, but got x (${a.shape}).`),O(r.rank===1,()=>`y should be 1D tensor, but got y (${r.shape}).`);let n=await a.data(),s=await r.data(),i=new Set(s),o=0;for(let u=0;u<n.length;u++)i.has(n[u])||o++;let l=new aa([o],a.dtype),d=new aa([o],"int32");for(let u=0,h=0;u<n.length;u++)i.has(n[u])||(l.values[h]=n[u],d.values[h]=u,h++);return[l.toTensor(),d.toTensor()]}var j3=fF;function mF(e){let t={x:M(e,"x","sign")};return U.runKernel(Hu,t)}var H3=G({sign_:mF});function gF(e){let t={x:M(e,"x","sin","float32")};return U.runKernel(wi,t)}var L2=G({sin_:gF});function yF(e){let t={x:M(e,"x","sinh")};return U.runKernel(el,t)}var W2=G({sinh_:yF});function AF(e,t,a){let r=M(e,"x","slice1d");return O(r.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),_e(r,[t],[a])}var Kf=G({slice1d_:AF});function xF(e,t,a){let r=M(e,"x","slice2d");return O(r.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),_e(r,t,a)}var B2=G({slice2d_:xF});function bF(e,t,a){let r=M(e,"x","slice3d");return O(r.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),_e(r,t,a)}var du=G({slice3d_:bF});function vF(e,t,a){let r=M(e,"x","slice4d");return O(r.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),_e(r,t,a)}var hu=G({slice4d_:vF});function wF(e,t=-1){let a=M(e,"logits","softmax","float32");if(t===-1&&(t=a.rank-1),t!==a.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a.rank} and dim was ${t}`);let r={logits:a},n={dim:t};return U.runKernel(Ti,r,n)}var Vh=G({softmax_:wF});function kF(e){O(e.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);let t={input:e};return U.runKernel(bf,t)}var Zf=G({fft_:kF});function IF(e){O(e.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);let t={input:e};return U.runKernel(vf,t)}var lh=G({ifft_:IF});function SF(e){let t=e.shape[e.shape.length-1],a=e.size/t,r;if(t<=2){let n=q(e,[a,t]);r=lh(n)}else{let n=[a,2*(t-1)],s=q(oh(e),[a,t]),i=q(Lf(e),[a,t]),o=kr(_e(s,[0,1],[a,t-2]),1),l=V(kr(_e(i,[0,1],[a,t-2]),1),Ie(-1)),d=Ct([s,o],1),u=Ct([i,l],1),h=q(Ns(d,u),[n[0],n[1]]);r=lh(h)}if(r=oh(r),e.rank===3&&e.shape[0]!==0){let n=r,s=e.shape[0];r=q(r,[s,r.shape[0]/s,r.shape[1]]),n.dispose()}return r}var V2=G({irfft_:SF});function TF(e,t,a=0){let r={x:M(e,"x","split")},n={numOrSizeSplits:t,axis:a};return U.runKernel(al,r,n)}var va=G({split_:TF});function CF(e,t){O(e.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let a=e.shape[e.shape.length-1],r=e.size/a,n;if(t!=null&&t<a){let f=e.shape.map(g=>0),m=e.shape.map(g=>g);m[e.shape.length-1]=t,n=_e(e,f,m),a=t}else if(t!=null&&t>a){let f=e.shape.map(m=>m);f[e.shape.length-1]=t-a,n=Ct([e,Ut(f)],e.shape.length-1),a=t}else n=e;let s=Je(n),i=q(Ns(n,s),[r,a]),o=Zf(i),l=Math.floor(a/2)+1,d=oh(o),u=Lf(o),h=va(d,[l,a-l],d.shape.length-1),p=va(u,[l,a-l],u.shape.length-1),c=n.shape.slice();return c[n.shape.length-1]=l,q(Ns(h[0],p[0]),c)}var Yf=G({rfft_:CF});function NF(e){let t={x:M(e,"x","sqrt","float32")};return U.runKernel(Ii,t)}var wa=G({sqrt_:NF});function EF(e,t){let a=M(e,"a","squaredDifference"),r=M(t,"b","squaredDifference");[a,r]=Mt(a,r),gt(a.shape,r.shape);let n={a,b:r},s={};return U.runKernel(Ci,n,s)}var U2=G({squaredDifference_:EF});function RF(e,t){let a=M(e,"x","squeeze");return q(a,H5(a.shape,t).newShape)}var ft=G({squeeze_:RF});function FF(e,t=0){let a=sh(e,"tensors","stack","string_or_numeric");O(a.length>=1,()=>"Pass at least one tensor to tf.stack"),a.length>0&&O(t<=a[0].rank,()=>"Axis must be <= rank of the tensor");let r=a,n={axis:t};return U.runKernel(Ho,r,n)}var _a=G({stack_:FF});function $F(e,t=0){let a={x:M(e,"x","step")},r={alpha:t};return U.runKernel(Fi,a,r)}var Uh=G({step_:$F});function MF(e,t,a,r,n=0,s=0,i=0,o=0,l=0){let d={x:M(e,"x","stridedSlice","string_or_numeric")},u={begin:t,end:a,strides:r,beginMask:n,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return U.runKernel(rl,d,u)}var q3=G({stridedSlice_:MF});function _F(e){let t={x:M(e,"x","tan","float32")};return U.runKernel(nl,t)}var X3=G({tan_:_F});function Lt(e,t){ko(e);let a=xn(e,t);if(a.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return $i(e,null,a,t)}function Vn(e,t,a){if(ko(e),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let r=xn(e,a);if(r.length!==2&&r.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return $i(e,t,r,a)}function zF(e,t,a){if(ko(e),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let r=xn(e,a);if(r.length!==4&&r.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return $i(e,t,r,a)}function OF(e,t,a){if(ko(e),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let r=xn(e,a);if(r.length!==5&&r.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return $i(e,t,r,a)}function DF(e,t,a){if(ko(e),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let r=xn(e,a);if(r.length!==6&&r.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||r,$i(e,t,r,a)}function PF(e,t=1,a=!0){let r=M(e,"x","topk");if(r.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let n=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>n)throw new Error(`'k' passed to topk() must be <= the last dimension (${n}) but got ${t}`);let s={x:r},i={k:t,sorted:a},[o,l]=U.runKernel(sl,s,i);return{values:o,indices:l}}var K3=G({topk_:PF});function LF(e,t=0,a=1,r,n){if(r!=null&&r==="bool")throw new Error("Unsupported data type $ { dtype }");let s=new _2(t,a,r,!0,n),i=Le(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var Jf=G({truncatedNormal_:LF});function WF(e,t=0){let a=M(e,"x","unique","string_or_numeric");O(a.rank>0,()=>"The input tensor must be at least 1D");let r={x:a},n={axis:t},[s,i]=U.runKernel($f,r,n);return{values:s,indices:i}}var sg=G({unique_:WF});function BF(e,t,a){let r=M(e,"x","unsortedSegmentSum"),n=M(t,"segmentIds","unsortedSegmentSum","int32");O(ru(a),()=>"numSegments must be of dtype int");let s={x:r,segmentIds:n},i={numSegments:a};return U.runKernel(Fh,s,i)}var Z3=G({unsortedSegmentSum_:BF});function VF(e,t=0){let a=M(e,"x","unstack","string_or_numeric");O(t>=-a.shape.length&&t<a.shape.length,()=>`Axis = ${t} is not in [-${a.shape.length}, ${a.shape.length})`);let r={value:a},n={axis:t};return U.runKernel(ol,r,n)}var Ir=G({unstack_:VF});function Y3(e,t=!0,a,r){return U.makeVariable(e,t,a,r)}function J3(e,t){let a=[];for(let s=0;s<t.length;s++)t[s]&&a.push(s);let r=Le(e,"int32"),n=Le([a.length,e.length],"int32");for(let s=0;s<a.length;s++){let i=r.indexToLoc(a[s]),o=s*e.length;n.values.set(i,o)}return n.toTensor()}async function UF(e){let t=M(e,"condition","whereAsync","bool"),a=await t.data(),r=J3(t.shape,a);return e!==t&&t.dispose(),r}var G2=UF;async function GF(e,t,a){let r=M(e,"tensor","boolMask"),n=M(t,"mask","boolMask","bool"),s=a==null?0:a,i=n.rank,o=r.shape;O(i>0,()=>"mask cannot be scalar"),Oa(o.slice(s,s+i),n.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let m=s;m<s+i;m++)l*=o[m];let d=o.slice(0,s).concat([l],o.slice(s+i)),u=q(r,d),h=q(n,[-1]),p=await G2(h),c=ft(p,[1]),f=ou(u,c,s);return e!==r&&r.dispose(),t!==n&&n.dispose(),c.dispose(),u.dispose(),h.dispose(),p.dispose(),f}var jF=GF;function HF(e,t="euclidean",a=null,r=!1){e=M(e,"x","norm");let n=Q3(e,t,a),s=n.shape;if(r){let i=Dr(a,e.shape);s=co(n.shape,i)}return q(n,s)}function Q3(e,t,a=null){if(e.rank===0)return Qt(e);if(e.rank!==1&&a===null)return Q3(q(e,[-1]),t,a);if(e.rank===1||typeof a=="number"||Array.isArray(a)&&a.length===1){if(t===1)return we(Qt(e),a);if(t===1/0)return Fa(Qt(e),a);if(t===-1/0)return no(Qt(e),a);if(t==="euclidean"||t===2)return wa(we($s(Qt(e),Ie(2,"int32")),a));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(a)&&a.length===2){if(t===1)return Fa(we(Qt(e),a[0]),a[1]-1);if(t===1/0)return Fa(we(Qt(e),a[1]),a[0]);if(t===-1/0)return no(we(Qt(e),a[1]),a[0]);if(t==="fro"||t==="euclidean")return wa(we(ct(e),a));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${a}`)}var j2=G({norm_:HF});function qF(e,t,a,r,n=!0){let s=M(e,"v","movingAverage"),i=M(t,"x","movingAverage"),o=M(a,"decay","movingAverage");fv(s,i),O(Ls(s.shape,i.shape),()=>"Shape mismatch in v and x");let l=Ie(1),d=me(l,o),u=V(me(i,s),d);if(n){O(r!=null,()=>"When using zeroDebias: true, step is required.");let h=M(r,"step","movingAverage");u=ge(u,me(l,$s(o,h)))}return ie(s,u)}var XF=G({movingAverage_:qF});function KF(e,t,a){let r=M(e,"indices","scatterND","int32"),n=M(t,"updates","scatterND");h2(n,r,a);let s={indices:r,updates:n},i={shape:a};return U.runKernel(Yo,s,i)}var ew=G({scatterND_:KF});function ZF(e,t,a,r){if(e.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let n=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(a.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${a.length}, should be: ${s}.`);let i=t.size;if(!(t.rank===0||t.rank===1&&i===n))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${n}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function YF(e,t,a,r=0){let n=M(e,"sparseIndices","sparseToDense","int32"),s=M(t,"sparseValues","sparseToDense"),i=M(r,"defaultValue","sparseToDense",s.dtype);ZF(n,s,a,i);let o={sparseIndices:n,sparseValues:s,defaultValue:i},l={outputShape:a};return U.runKernel(Eh,o,l)}var H2=G({sparseToDense_:YF});function JF(e,t){let a=M(t,"indices","gatherND","int32"),r={params:M(e,"x","gatherND","string_or_numeric"),indices:a};return U.runKernel(zo,r)}var tw=G({gatherND_:JF});function QF(e,t){if(t==null)return e.shape.slice();if(Ls(e.shape,t))return t;if(e.shape.length===t.length){let a=[];for(let r=0;r<e.shape.length;r++)t[r]==null&&e.shape[r]!=null?a.push(e.shape[r]):a.push(t[r]);return a}return t}function e$(e,t,a,r){let n=M(e,"x","dropout");if(O(n.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${n.dtype} tensor instead.`),O(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return e instanceof et?n.clone():n;let s=QF(n,a),i=1-t,o=ge(Wh(ie(Qu(s,0,1,"float32",r),i)),i);return V(n,o)}var aw=G({dropout_:e$});function rw(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function q2(e,t,a){let r=1-e%2,n=new Float32Array(e);for(let s=0;s<e;++s){let i=2*Math.PI*s/(e+r-1);n[s]=t-a*Math.cos(i)}return Lt(n,"float32")}async function t$(e,t,a=1){let r=M(e,"predictions","inTopK"),n=M(t,"targets","inTopK");O(r.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`),O(r.rank-1===n.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${n.rank}`),Oa(r.shape.slice(0,r.shape.length-1),n.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=r.shape[r.shape.length-1];O(a>0&&a<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${a}`);let i=await r.data(),o=await n.data(),[l,d]=[i.length/s,s],u=q5("bool",l);for(let h=0;h<l;h++){let p=h*d,c=i.subarray(p,p+d),f=[];for(let m=0;m<c.length;m++)f.push({value:c[m],index:m});f.sort((m,g)=>g.value-m.value),u[h]=0;for(let m=0;m<a;m++)if(f[m].index===o[h]){u[h]=1;break}}return e!==r&&r.dispose(),t!==n&&n.dispose(),lt(u,n.shape,"bool")}var a$=t$,Ms={};ze(Ms,{conv2d:()=>s$,depthwiseConv2d:()=>u$,matMul:()=>h$});function r$(e,t,a,r,n,s="NHWC",i){let o=e;e.rank===3&&(o=q(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;l.rank===3&&(l=q(t,[1,t.shape[0],t.shape[1],t.shape[2]])),O(o.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`),O(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),O(a.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${a}.`);let d=s==="NHWC"?o.shape[3]:o.shape[1],u=s==="NHWC"?l.shape[3]:l.shape[1];O(d===a[2],()=>`Error in conv2dDerFilter: depth of input ${d}) must match input depth in filter (${a[2]}.`),O(u===a[3],()=>`Error in conv2dDerFilter: depth of dy (${u}) must match output depth for filter (${a[3]}).`),Da("conv2dDerFilter",n,i);let h={x:o,dy:l},p={strides:r,pad:n,dataFormat:s,dimRoundingMode:i,filterShape:a};return U.runKernel(pf,h,p)}var X2=G({conv2DBackpropFilter_:r$});function Qf(e,t,a){if(a==null||a==="linear")return e;if(a==="relu")return V(e,Uh(t));throw new Error(`Cannot compute gradient for fused activation ${a}.`)}function e0(e,t){let a=t,r=Kt(e.shape,t.shape);return r.length>0&&(a=we(a,r)),q(a,e.shape)}function t0(e,t,a,r){if(t==="linear")return e;if(t==="relu")return In(e);if(t==="elu")return Lh(e);if(t==="relu6")return z2(e);if(t==="prelu")return Xf(e,a);if(t==="leakyrelu")return Wf(e,r);if(t==="sigmoid")return Ar(e);throw new Error(`Unknown fused activation ${t}.`)}var a0=(e,t)=>!(e>0)||t==="linear";function n$({x:e,filter:t,strides:a,pad:r,dataFormat:n="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:d,leakyreluAlpha:u}){if(l=l||"linear",a0(U.state.gradientDepth,l)===!1){let v=Fs(e,t,a,r,n,s,i);return o!=null&&(v=ie(v,o)),t0(v,l,d,u)}let h=M(e,"x","conv2d","float32"),p=M(t,"filter","conv2d","float32"),c=h,f=!1;h.rank===3&&(f=!0,c=q(h,[1,h.shape[0],h.shape[1],h.shape[2]])),O(c.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${c.rank}.`),O(p.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`),Da("fused conv2d",r,i),O(c.shape[3]===p.shape[2],()=>`Error in conv2d: depth of input (${c.shape[3]}) must match input depth for filter ${p.shape[2]}.`),O(wn(a,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`),O(n==="NHWC",()=>`Error in conv2d: got dataFormat of ${n} but only NHWC is currently supported.`);let m=Dh(c.shape,p.shape,a,s,r,i),g;o!=null&&(g=M(o,"bias","fused conv2d"),[g]=Mt(g,h),gt(m.outShape,g.shape));let y;d!=null&&(y=M(d,"prelu weights","fused conv2d"));let A=(v,T)=>{let[C,E,R,z]=T,F=Qf(v,R,l);O(Rs(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let k=b2(E.shape,F,C,a,r),D=X2(E,F,C.shape,a,r),_=[k,D];if(z!=null){let P=e0(z,F);_.push(P)}return _},x={x:c,filter:p,bias:g,preluActivationWeights:y},b={strides:a,pad:r,dataFormat:n,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:u};return o==null?bn((v,T,C)=>{let E=U.runKernel(Ts,x,b);return C([T,v,E]),f&&(E=q(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:A}})(c,p):bn((v,T,C,E)=>{let R=U.runKernel(Ts,x,b);return E([T,v,R,C]),f&&(R=q(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:A}})(c,p,g)}var s$=G({fusedConv2d_:n$});function i$(e,t,a,r,n,s=[1,1],i){let o=e;e.rank===3&&(o=q(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;l.rank===3&&(l=q(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let d={x:o,dy:l},u={strides:r,pad:n,dimRoundingMode:i,dilations:s,filterShape:a};return U.runKernel(gf,d,u)}var nw=G({depthwiseConv2dNativeBackpropFilter_:i$});function o$(e,t,a,r,n,s=[1,1],i){let o=t,l=!1;t.rank===3&&(l=!0,o=q(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let d={dy:o,filter:a},u={strides:r,pad:n,dimRoundingMode:i,dilations:s,inputShape:e},h=U.runKernel(yf,d,u);return l?q(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var sw=G({depthwiseConv2dNativeBackpropInput_:o$});function l$({x:e,filter:t,strides:a,pad:r,dataFormat:n="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:d,leakyreluAlpha:u}){if(a0(U.state.gradientDepth,l)===!1){let v=Ph(e,t,a,r,n,s,i);return o!=null&&(v=ie(v,o)),t0(v,l,d,u)}let h=M(e,"x","depthwiseConv2d","float32"),p=M(t,"filter","depthwiseConv2d","float32"),c=h,f=!1;h.rank===3&&(f=!0,c=q(h,[1,h.shape[0],h.shape[1],h.shape[2]])),O(c.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),O(p.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`),O(c.shape[3]===p.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`),s==null&&(s=[1,1]),O(wn(a,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`),Da("fused depthwiseConv2d",r,i);let m=Dh(c.shape,p.shape,a,s,r,i,!0),g;o!=null&&(g=M(o,"bias","fused conv2d"),[g]=Mt(g,h),gt(m.outShape,g.shape));let y;d!=null&&(y=M(d,"prelu weights","fused depthwiseConv2d"));let A=(v,T)=>{O(Rs(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);let[C,E,R,z]=T,F=Qf(v,R,l),k=sw(E.shape,F,C,a,r,s,i),D=nw(E,F,C.shape,a,r,s,i);if(z!=null){let _=e0(g,F);return[k,D,_]}return[k,D]},x={x:c,filter:p,bias:g,preluActivationWeights:y},b={strides:a,pad:r,dataFormat:n,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:u};return o==null?bn((v,T,C)=>{let E=U.runKernel(Cs,x,b);return C([T,v,E]),f&&(E=q(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:A}})(c,p):bn((v,T,C,E)=>{let R=U.runKernel(Cs,x,b);return E([T,v,R,C]),f&&(R=q(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:A}})(c,p,g)}var u$=G({fusedDepthwiseConv2d_:l$});function d$({a:e,b:t,transposeA:a=!1,transposeB:r=!1,bias:n,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:o}){if(a0(U.state.gradientDepth,s)===!1){let z=He(e,t,a,r);return n!=null&&(z=ie(z,n)),t0(z,s,i,o)}let l=M(e,"a","fused matMul"),d=M(t,"b","fused matMul");[l,d]=Mt(l,d);let u=a?l.shape[l.rank-2]:l.shape[l.rank-1],h=r?d.shape[d.rank-1]:d.shape[d.rank-2],p=a?l.shape[l.rank-1]:l.shape[l.rank-2],c=r?d.shape[d.rank-2]:d.shape[d.rank-1],f=l.shape.slice(0,-2),m=d.shape.slice(0,-2),g=kt(f),y=kt(m);O(u===h,()=>`Error in fused matMul: inner shapes (${u}) and (${h}) of Tensors with shapes ${l.shape} and ${d.shape} and transposeA=${a} and transposeB=${r} must match.`);let A=gt(l.shape.slice(0,-2),d.shape.slice(0,-2)).concat([p,c]),x=a?q(l,[g,u,p]):q(l,[g,p,u]),b=r?q(d,[y,c,h]):q(d,[y,h,c]),v;n!=null&&(v=M(n,"bias","fused matMul"),[v]=Mt(v,l),gt(A,v.shape));let T;i!=null&&(T=M(i,"prelu weights","fused matMul"));let C=(z,F)=>{let[k,D,_,P]=F,j=Qf(q(z,_.shape),_,s),L,B;if(!a&&!r?(L=He(j,D,!1,!0),B=He(k,j,!0,!1)):!a&&r?(L=He(j,D,!1,!1),B=He(j,k,!0,!1)):a&&!r?(L=He(D,j,!1,!0),B=He(k,j,!1,!1)):(L=He(D,j,!0,!0),B=He(j,k,!0,!0)),n!=null){let W=e0(P,j);return[L,B,W]}else return[L,B]},E={a:x,b,bias:v,preluActivationWeights:T},R={transposeA:a,transposeB:r,activation:s,leakyreluAlpha:o};return n==null?bn((z,F,k)=>{let D=U.runKernel(Ss,E,R);return k([z,F,D]),{value:q(D,A),gradFunc:C}})(x,b):bn((z,F,k,D)=>{let _=U.runKernel(Ss,E,R);return D([z,F,_,k]),{value:q(_,A),gradFunc:C}})(x,b,v)}var h$=G({fusedMatMul_:d$});function p$(e){return q2(e,.54,.46)}var c$=G({hammingWindow_:p$});function f$(e){return q2(e,.5,.5)}var iw=G({hannWindow_:f$});function m$(e,t,a,r=!1,n=0){let s=0,i=[];for(;s+t<=e.size;)i.push(_e(e,s,t)),s+=a;if(r)for(;s<e.size;){let o=s+t-e.size,l=Ct([_e(e,s,t-o),Yu([o],n)]);i.push(l),s+=a}return i.length===0?Vn([],[0,t]):q(Ct(i),[i.length,t])}var ow=G({frame_:m$});function g$(e,t,a,r,n=iw){r==null&&(r=rw(t));let s=ow(e,t,a),i=V(s,n(t));return Yf(i,r)}var y$=G({stft_:g$});function A$(e,t,a,r,n="bilinear",s=0){let i=M(e,"image","cropAndResize"),o=M(t,"boxes","cropAndResize","float32"),l=M(a,"boxInd","cropAndResize","int32"),d=o.shape[0];O(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),O(o.rank===2&&o.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${d},4] but had shape ${o.shape}.`),O(l.rank===1&&l.shape[0]===d,()=>`Error in cropAndResize: boxInd must be have size [${d}] but had shape ${o.shape}.`),O(r.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),O(r[0]>=1&&r[1]>=1,()=>`cropSize must be atleast [1,1], but was ${r}`),O(n==="bilinear"||n==="nearest",()=>`method must be bilinear or nearest, but was ${n}`);let u={image:i,boxes:o,boxInd:l},h={method:n,extrapolationValue:s,cropSize:r};return U.runKernel(No,u,h)}var x$=G({cropAndResize_:A$});function b$(e){let t=M(e,"image","flipLeftRight","float32");O(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let a={image:t};return U.runKernel(Mo,a,{})}var v$=G({flipLeftRight_:b$});function w$(e){let t=M(e,"image","grayscaleToRGB"),a=t.rank-1,r=t.shape[a];O(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),O(r===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`);let n=new Array(t.rank);return n.fill(1,0,a),n[a]=3,zr(t,n)}var k$=G({grayscaleToRGB_:w$});function I$(e,t,a=0,r=.5){let n=M(e,"image","rotateWithOffset","float32");O(n.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${n.rank}.`);let s={image:n},i={radians:t,fillValue:a,center:r};return U.runKernel(ul,s,i)}var S$=G({rotateWithOffset_:I$});function ed(e,t,a,r,n,s){r==null&&(r=.5),n==null&&(n=Number.NEGATIVE_INFINITY),s==null&&(s=0);let i=e.shape[0];return a=Math.min(a,i),O(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),O(e.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),O(e.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),O(t.rank===1,()=>"scores must be a 1D tensor"),O(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`),O(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:a,iouThreshold:r,scoreThreshold:n,softNmsSigma:s}}function T$(e,t,a,r=.5,n=Number.NEGATIVE_INFINITY){let s=M(e,"boxes","nonMaxSuppression","float32"),i=M(t,"scores","nonMaxSuppression","float32"),o=ed(s,i,a,r,n);a=o.maxOutputSize,r=o.iouThreshold,n=o.scoreThreshold;let l={maxOutputSize:a,iouThreshold:r,scoreThreshold:n};return U.runKernel(Vo,{boxes:s,scores:i},l)}var C$=G({nonMaxSuppression_:T$});function N$(e,t,a){let r=E$(e,t,a),n=r<0?-(r+1):r;e.splice(n,0,t)}function E$(e,t,a){return F$(e,t,a||R$)}function R$(e,t){return e>t?1:e<t?-1:0}function F$(e,t,a){let r=0,n=e.length,s=0,i=!1;for(;r<n;){s=r+(n-r>>>1);let o=a(t,e[s]);o>0?r=s+1:(n=s,i=!o)}return i?r:-r-1}function lw(e,t,a,r,n){return K2(e,t,a,r,n,0)}function uw(e,t,a,r,n,s){return K2(e,t,a,r,n,0,!1,s,!0)}function dw(e,t,a,r,n,s){return K2(e,t,a,r,n,s,!0)}function K2(e,t,a,r,n,s,i=!1,o=!1,l=!1){let d=[];for(let g=0;g<t.length;g++)t[g]>n&&d.push({score:t[g],boxIndex:g,suppressBeginIndex:0});d.sort(tx);let u=s>0?-.5/s:0,h=[],p=[];for(;h.length<a&&d.length>0;){let g=d.pop(),{score:y,boxIndex:A,suppressBeginIndex:x}=g;if(y<n)break;let b=!1;for(let v=h.length-1;v>=x;--v){let T=$$(e,A,h[v]);if(T>=r){b=!0;break}if(g.score=g.score*M$(r,u,T),g.score<=n)break}g.suppressBeginIndex=h.length,b||(g.score===y?(h.push(A),p.push(g.score)):g.score>n&&N$(d,g,tx))}let c=h.length,f=a-c;o&&f>0&&(h.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));let m={selectedIndices:h};return i&&(m.selectedScores=p),l&&(m.validOutputs=c),m}function $$(e,t,a){let r=e.subarray(t*4,t*4+4),n=e.subarray(a*4,a*4+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),d=Math.min(n[0],n[2]),u=Math.min(n[1],n[3]),h=Math.max(n[0],n[2]),p=Math.max(n[1],n[3]),c=(o-s)*(l-i),f=(h-d)*(p-u);if(c<=0||f<=0)return 0;let m=Math.max(s,d),g=Math.max(i,u),y=Math.min(o,h),A=Math.min(l,p),x=Math.max(y-m,0)*Math.max(A-g,0);return x/(c+f-x)}function M$(e,t,a){let r=Math.exp(t*a*a);return a<=e?r:0}function tx(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}async function _$(e,t,a,r=.5,n=Number.NEGATIVE_INFINITY){let s=M(e,"boxes","nonMaxSuppressionAsync"),i=M(t,"scores","nonMaxSuppressionAsync"),o=ed(s,i,a,r,n);a=o.maxOutputSize,r=o.iouThreshold,n=o.scoreThreshold;let l=await Promise.all([s.data(),i.data()]),d=l[0],u=l[1],{selectedIndices:h}=lw(d,u,a,r,n);return s!==e&&s.dispose(),i!==t&&i.dispose(),Lt(h,"int32")}var z$=_$;function O$(e,t,a,r=.5,n=Number.NEGATIVE_INFINITY,s=0){let i=M(e,"boxes","nonMaxSuppression"),o=M(t,"scores","nonMaxSuppression"),l=ed(i,o,a,r,n,s);a=l.maxOutputSize,r=l.iouThreshold,n=l.scoreThreshold,s=l.softNmsSigma;let d={boxes:i,scores:o},u={maxOutputSize:a,iouThreshold:r,scoreThreshold:n,softNmsSigma:s},h=U.runKernel(Uo,d,u);return{selectedIndices:h[0],selectedScores:h[1]}}var D$=G({nonMaxSuppressionWithScore_:O$});async function P$(e,t,a,r=.5,n=Number.NEGATIVE_INFINITY,s=0){let i=M(e,"boxes","nonMaxSuppressionAsync"),o=M(t,"scores","nonMaxSuppressionAsync"),l=ed(i,o,a,r,n,s);a=l.maxOutputSize,r=l.iouThreshold,n=l.scoreThreshold,s=l.softNmsSigma;let d=await Promise.all([i.data(),o.data()]),u=d[0],h=d[1],{selectedIndices:p,selectedScores:c}=dw(u,h,a,r,n,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Lt(p,"int32"),selectedScores:Lt(c)}}var L$=P$;function W$(e,t,a,r=.5,n=Number.NEGATIVE_INFINITY,s=!1){let i=M(e,"boxes","nonMaxSuppression"),o=M(t,"scores","nonMaxSuppression"),l=ed(i,o,a,r,n,null),d=l.maxOutputSize,u=l.iouThreshold,h=l.scoreThreshold,p={boxes:i,scores:o},c={maxOutputSize:d,iouThreshold:u,scoreThreshold:h,padToMaxOutputSize:s},f=U.runKernel(Bu,p,c);return{selectedIndices:f[0],validOutputs:f[1]}}var B$=G({nonMaxSuppressionPadded_:W$});async function V$(e,t,a,r=.5,n=Number.NEGATIVE_INFINITY,s=!1){let i=M(e,"boxes","nonMaxSuppressionAsync"),o=M(t,"scores","nonMaxSuppressionAsync"),l=ed(i,o,a,r,n,null),d=l.maxOutputSize,u=l.iouThreshold,h=l.scoreThreshold,[p,c]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=uw(p,c,d,u,h,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Lt(f,"int32"),validOutputs:Ie(m,"int32")}}var U$=V$;function G$(e,t,a=!1,r=!1){let n=M(e,"images","resizeBilinear");O(n.rank===3||n.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${n.rank}.`),O(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),O(r===!1||a===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=n,i=!1;n.rank===3&&(i=!0,s=q(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let o={images:s},l={alignCorners:a,halfPixelCenters:r,size:t},d=U.runKernel(xi,o,l);return i?q(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var j$=G({resizeBilinear_:G$});function H$(e,t,a=!1,r=!1){let n=M(e,"images","resizeNearestNeighbor");O(n.rank===3||n.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${n.rank}.`),O(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),O(n.dtype==="float32"||n.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),O(r===!1||a===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=n,i=!1;n.rank===3&&(i=!0,s=q(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let o={images:s},l={alignCorners:a,halfPixelCenters:r,size:t},d=U.runKernel(Gu,o,l);return i?q(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var q$=G({resizeNearestNeighbor_:H$});function X$(e,t="binary",a=!1,r=.5){let n=M(e,"image","threshold"),s=.2989,i=.587,o=.114,l=n.shape[0]*n.shape[1],d=V(Lt([r]),255),u,h,p,c;if(O(n.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${n.rank}.`),O(n.shape[2]===3||n.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${n.shape[2]}.`),O(n.dtype==="int32"||n.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${n.dtype}.`),O(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),n.shape[2]===3){[u,h,p]=va(n,[1,1,1],-1);let m=V(u,s),g=V(h,i),y=V(p,o);c=ie(ie(m,g),y)}else c=e;if(t==="otsu"){let m=A2(pe(O2(c),"int32"),lt([]),256);d=K$(m,l)}let f=a?pl(c,d):cr(c,d);return pe(V(f,255),"int32")}function K$(e,t){let a=Lt([-1]),r=Lt([0]),n=Lt([0]),s,i,o,l,d,u;for(let h=0;h<e.size-1;h++){s=_e(e,0,h+1),i=_e(e,h+1),d=ge(we(s),t),u=ge(we(i),t);let p=we(V(s,uu(0,s.size)));o=ge(p,we(s));let c=Yu(i.shape,s.size),f=ie(uu(0,i.size),c),m=V(i,f);l=ge(we(m),we(i));let g=me(o,l),y=me(o,l),A=V(d,u);n=V(V(A,g),y);let x=cr(n,r);r=Ma(x,n,r),a=Ma(x,Lt([h]),a)}return a}var Z$=G({threshold_:X$});function Y$(e,t,a="nearest",r="constant",n=0,s){let i=M(e,"image","transform","float32"),o=M(t,"transforms","transform","float32");O(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),O(o.rank===2&&(o.shape[0]===i.shape[0]||o.shape[0]===1)&&o.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),O(s==null||s.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`);let l={image:i,transforms:o},d={interpolation:a,fillMode:r,fillValue:n,outputShape:s};return U.runKernel(il,l,d)}var J$=G({transform_:Y$});function Q$(e,t,a){O(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),O(a%1===0,()=>`bandPart(): numUpper must be an integer, got ${a}.`);let r=M(e,"a","bandPart");O(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);let n=r.shape,[s,i]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(a<=i))throw new Error(`bandPart(): numUpper (${a}) must not be greater than the number of columns (${i}).`);t<0&&(t=s),a<0&&(a=i);let o=q(uu(0,s,1,"int32"),[-1,1]),l=uu(0,i,1,"int32"),d=me(o,l),u=tn(pl(d,Ie(+t,"int32")),hl(d,Ie(-a,"int32"))),h=Ut([s,i],r.dtype);return q(_a(Ir(q(r,[-1,s,i])).map(p=>Ma(u,p,h))),n)}var eM=G({bandPart_:Q$});function tM(e){let t;if(Array.isArray(e)){t=!1,O(e!=null&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let n=e[0].shape[0];for(let s=1;s<e.length;++s)O(e[s].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[s].shape[0]} vs. ${n})`)}else t=!0,e=va(e,e.shape[0],0).map(n=>ft(n,[0]));O(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);let a=[],r=e;for(let n=0;n<e.length;++n)a.push(U.tidy(()=>{let s=r[n];if(n>0)for(let i=0;i<n;++i){let o=V(we(V(a[i],s)),a[i]);s=me(s,o)}return ge(s,j2(s,"euclidean"))}));return t?_a(a,0):a}var aM=G({gramSchmidt_:tM});function rM(e,t=!1){if(O(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),e.rank===2)return ax(e,t);{let a=e.shape.slice(0,e.shape.length-2).reduce((l,d)=>l*d),r=Ir(q(e,[a,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),n=[],s=[];r.forEach(l=>{let[d,u]=ax(l,t);n.push(d),s.push(u)});let i=q(_a(n,0),e.shape),o=q(_a(s,0),e.shape);return[i,o]}}function ax(e,t=!1){return U.tidy(()=>{O(e.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);let a=e.shape[0],r=e.shape[1],n=S2(a),s=Ha(e),i=Vn([[1]],[1,1]),o=Ha(i),l=a>=r?r:a;for(let d=0;d<l;++d){let u=s,h=o,p=n;[o,s,n]=U.tidy(()=>{let c=_e(s,[d,d],[a-d,1]),f=j2(c),m=_e(s,[d,d],[1,1]),g=Ma(cr(m,0),Vn([[-1]]),Vn([[1]])),y=me(m,V(g,f)),A=ge(c,y);A.shape[0]===1?o=Ha(i):o=Ct([i,_e(A,[1,0],[A.shape[0]-1,A.shape[1]])],0);let x=$t(ge(He(g,y),f)),b=_e(s,[d,0],[a-d,r]),v=V(x,o),T=Ye(o);if(d===0)s=me(b,He(v,He(T,b)));else{let R=me(b,He(v,He(T,b)));s=Ct([_e(s,[0,0],[d,r]),R],0)}let C=Ye(v),E=_e(n,[0,d],[a,n.shape[1]-d]);if(d===0)n=me(E,He(He(E,o),C));else{let R=me(E,He(He(E,o),C));n=Ct([_e(n,[0,0],[a,d]),R],1)}return[o,s,n]}),ne([u,h,p])}return!t&&a>r&&(n=_e(n,[0,0],[a,r]),s=_e(s,[0,0],[r,r])),[n,s]})}var nM=G({qr_:rM}),hw=(e=>(e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS",e))(hw||{});function sM(e,t,a=3){let r=M(e,"losses","computeWeightedLoss"),n=null;t!=null&&(n=M(t,"weights","computeWeightedLoss"));let s=n==null?r:V(r,n);if(a===0)return s;if(a===2)return we(s);if(a===1){if(n==null)return Pt(s);{let i=r.size/n.size,o=ge(we(s),we(n));return i>1?ge(o,Ie(i)):o}}if(a===3){if(n==null)return ge(we(s),Ie(r.size));{let i=V(n,dr(r.shape)),o=pe(we(lu(i,Ie(0))),"float32");return ge(we(s),o)}}throw Error(`Unknown reduction: ${a}`)}var Yn=G({computeWeightedLoss_:sM});function iM(e,t,a,r=3){let n=M(e,"labels","absoluteDifference"),s=M(t,"predictions","absoluteDifference"),i=null;a!=null&&(i=M(a,"weights","absoluteDifference")),Oa(n.shape,s.shape,"Error in absoluteDifference: ");let o=Qt(me(n,s));return Yn(o,i,r)}var oM=G({absoluteDifference_:iM});function lM(e,t,a,r,n=3){let s=M(e,"labels","cosineDistance"),i=M(t,"predictions","cosineDistance"),o=null;r!=null&&(o=M(r,"weights","cosineDistance")),Oa(s.shape,i.shape,"Error in cosineDistance: ");let l=Ie(1),d=me(l,we(V(s,i),a,!0));return Yn(d,o,n)}var uM=G({cosineDistance_:lM});function dM(e,t,a,r=3){let n=M(e,"labels","hingeLoss"),s=M(t,"predictions","hingeLoss"),i=null;a!=null&&(i=M(a,"weights","hingeLoss")),Oa(n.shape,s.shape,"Error in hingeLoss: ");let o=Ie(1);n=me(V(Ie(2),n),o);let l=In(me(o,V(n,s)));return Yn(l,i,r)}var hM=G({hingeLoss_:dM});function pM(e,t,a,r=1,n=3){let s=M(e,"labels","huberLoss"),i=M(t,"predictions","huberLoss"),o=null;a!=null&&(o=M(a,"weights","huberLoss")),Oa(s.shape,i.shape,"Error in huberLoss: ");let l=Ie(r),d=Qt(me(i,s)),u=Bh(d,l),h=me(d,u),p=ie(V(Ie(.5),ct(u)),V(l,h));return Yn(p,o,n)}var cM=G({huberLoss_:pM});function fM(e,t,a,r=1e-7,n=3){let s=M(e,"labels","logLoss"),i=M(t,"predictions","logLoss"),o=null;a!=null&&(o=M(a,"weights","logLoss")),Oa(s.shape,i.shape,"Error in logLoss: ");let l=Ie(1),d=Ie(r),u=$t(V(s,vr(ie(i,d)))),h=V(me(l,s),vr(ie(me(l,i),d))),p=me(u,h);return Yn(p,o,n)}var mM=G({logLoss_:fM});function gM(e,t,a,r=3){let n=M(e,"labels","meanSquaredError"),s=M(t,"predictions","meanSquaredError"),i=null;a!=null&&(i=M(a,"weights","meanSquaredError")),Oa(n.shape,s.shape,"Error in meanSquaredError: ");let o=U2(n,s);return Yn(o,i,r)}var yM=G({meanSquaredError_:gM});function AM(e,t){let a=M(e,"labels","sigmoidCrossEntropyWithLogits"),r=M(t,"logits","sigmoidCrossEntropyWithLogits");Oa(a.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");let n=In(r),s=V(r,a),i=Bf(br($t(Qt(r))));return ie(me(n,s),i)}function xM(e,t,a,r=0,n=3){let s=M(e,"multiClassLabels","sigmoidCrossEntropy"),i=M(t,"logits","sigmoidCrossEntropy"),o=null;if(a!=null&&(o=M(a,"weights","sigmoidCrossEntropy")),Oa(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){let d=Ie(r),u=Ie(1),h=Ie(.5);s=ie(V(s,me(u,d)),V(h,d))}let l=AM(s,i);return Yn(l,o,n)}var bM=G({sigmoidCrossEntropy_:xM});function vM(e,t,a=-1){if(a===-1&&(a=t.rank-1),a!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${a}`);return bn((r,n,s)=>{let i=P3(n,[a],!0),o=me(pe(n,"float32"),i);s([r,o]);let l=$t(V(o,r));return{value:we(l,[a]),gradFunc:(d,u)=>{let[h,p]=u,c=co(d.shape,[a]);return[V(q(d,c),me(pe(h,"float32"),br(p))),V(q(d,c),me(br(p),pe(h,"float32")))]}}})(e,t)}function wM(e,t,a,r=0,n=3){let s=M(e,"onehotLabels","softmaxCrossEntropy"),i=M(t,"logits","softmaxCrossEntropy"),o=null;if(a!=null&&(o=M(a,"weights","softmaxCrossEntropy")),Oa(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){let d=Ie(r),u=Ie(1),h=Ie(s.shape[1]);s=ie(V(s,me(u,d)),ge(d,h))}let l=vM(s,i);return Yn(l,o,n)}var kM=G({softmaxCrossEntropy_:wM});function IM(e,t,a,r){let n=M(e,"indices","sparseFillEmptyRows","int32"),s=M(t,"values","sparseFillEmptyRows"),i=M(a,"denseShape","sparseFillEmptyRows","int32"),o=M(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(n.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${n.shape}`);if(s.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(i.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(o.rank!==0)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);let l={indices:n,values:s,denseShape:i,defaultValue:o},d=U.runKernel(Th,l);return{outputIndices:d[0],outputValues:d[1],emptyRowIndicator:d[2],reverseIndexMap:d[3]}}var SM=G({sparseFillEmptyRows_:IM});function TM(e,t,a){let r=M(e,"inputIndices","sparseReshape","int32"),n=M(t,"inputShape","sparseReshape","int32"),s=M(a,"newShape","sparseReshape","int32");if(r.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${r.shape}`);if(n.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${n.shape}`);if(s.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);let i={inputIndices:r,inputShape:n,newShape:s},o=U.runKernel(Xu,i);return{outputIndices:o[0],outputShape:o[1]}}var CM=G({sparseReshape_:TM});function NM(e,t,a){let r=M(e,"data","sparseSegmentMean"),n=M(t,"indices","sparseSegmentMean","int32"),s=M(a,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(n.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${n.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${s.shape}`);let i={data:r,indices:n,segmentIds:s};return U.runKernel(Ch,i)}var EM=G({sparseSegmentMean_:NM});function RM(e,t,a){let r=M(e,"data","sparseSegmentSum"),n=M(t,"indices","sparseSegmentSum","int32"),s=M(a,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(n.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${n.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${s.shape}`);let i={data:r,indices:n,segmentIds:s};return U.runKernel(Nh,i)}var FM=G({sparseSegmentSum_:RM});function $M(e,t,a,r,n,s,i,o){let l=M(e,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);let d=M(t,"dataSplits","stringNGrams");if(d.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let u={separator:a,nGramWidths:r,leftPad:n,rightPad:s,padWidth:i,preserveShortSequences:o},h={data:l,dataSplits:d},p=U.runKernel(Rh,h,u);return{nGrams:p[0],nGramsSplits:p[1]}}var MM=G({stringNGrams_:$M});function _M(e,t,a=!0){let r=M(e,"input","stringSplit","string"),n=M(t,"delimiter","stringSplit","string");if(r.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(n.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${n.shape}`);let s={skipEmpty:a},i={input:r,delimiter:n},o=U.runKernel(Rf,i,s);return{indices:o[0],values:o[1],shape:o[2]}}var zM=G({stringSplit_:_M});function OM(e,t){let a=M(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let n={input:a};return U.runKernel(Ff,n,r)}var DM=G({stringToHashBucketFast_:OM}),PM={fft:Zf,ifft:lh,rfft:Yf,irfft:V2},LM={hammingWindow:c$,hannWindow:iw,frame:ow,stft:y$},De={flipLeftRight:v$,grayscaleToRGB:k$,resizeNearestNeighbor:q$,resizeBilinear:j$,rotateWithOffset:S$,cropAndResize:x$,nonMaxSuppression:C$,nonMaxSuppressionAsync:z$,nonMaxSuppressionWithScore:D$,nonMaxSuppressionWithScoreAsync:L$,nonMaxSuppressionPadded:B$,nonMaxSuppressionPaddedAsync:U$,threshold:Z$,transform:J$},pw={bandPart:eM,gramSchmidt:aM,qr:nM},WM={absoluteDifference:oM,computeWeightedLoss:Yn,cosineDistance:uM,hingeLoss:hM,huberLoss:cM,logLoss:mM,meanSquaredError:yM,sigmoidCrossEntropy:bM,softmaxCrossEntropy:kM},zd={sparseFillEmptyRows:SM,sparseReshape:CM,sparseSegmentMean:EM,sparseSegmentSum:FM},uc={stringNGrams:MM,stringSplit:zM,stringToHashBucketFast:DM},Jn=class extends Xv{minimize(e,t=!1,a){let{value:r,grads:n}=this.computeGradients(e,a);if(a!=null){let s=a.map(i=>({name:i.name,tensor:n[i.name]}));this.applyGradients(s)}else this.applyGradients(n);return ne(n),t?r:(r.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return _3(e,t)}dispose(){this.iterations_!=null&&ne(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Ie(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(Jn,Symbol.hasInstance,{value:e=>e.minimize!=null&&e.computeGradients!=null&&e.applyGradients!=null});var r0=class extends Jn{constructor(e,t,a=null){super();this.learningRate=e,this.rho=t,this.epsilon=a,this.accumulatedGrads=[],this.accumulatedUpdates=[],a==null&&(this.epsilon=U.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,a)=>{let r=U.registeredVariables[t],n=!1;this.accumulatedGrads[a]==null&&(this.accumulatedGrads[a]={originalName:`${t}/accum_grad`,variable:Z(()=>Je(r).variable(n))}),this.accumulatedUpdates[a]==null&&(this.accumulatedUpdates[a]={originalName:`${t}/accum_var`,variable:Z(()=>Je(r).variable(n))});let s=Array.isArray(e)?e[a].tensor:e[t];if(s==null)return;let i=this.accumulatedGrads[a].variable,o=this.accumulatedUpdates[a].variable;Z(()=>{let l=ie(V(i,this.rho),V(ct(s),1-this.rho)),d=V(ge(wa(ie(o,this.epsilon)),wa(ie(i,this.epsilon))),s),u=ie(V(o,this.rho),V(ct(d),1-this.rho));i.assign(l),o.assign(u);let h=ie(V(d,-this.learningRate),r);r.assign(h)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(ne(this.accumulatedGrads.map(e=>e.variable)),ne(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=e.length/2,a=!1;this.accumulatedGrads=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(a)})),this.accumulatedUpdates=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(a)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};r0.className="Adadelta";Mi(r0);var n0=class extends Jn{constructor(e,t=.1){super();this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,a)=>{let r=U.registeredVariables[t];this.accumulatedGrads[a]==null&&(this.accumulatedGrads[a]={originalName:`${t}/accumulator`,variable:Z(()=>Yu(r.shape,this.initialAccumulatorValue).variable(!1))});let n=Array.isArray(e)?e[a].tensor:e[t];if(n==null)return;let s=this.accumulatedGrads[a].variable;Z(()=>{let i=ie(s,ct(n));s.assign(i);let o=ie(V(ge(n,wa(ie(i,U.backend.epsilon()))),-this.learningRate),r);r.assign(o)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&ne(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulatedGrads=e.map(a=>({originalName:a.name,variable:a.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};n0.className="Adagrad";Mi(n0);var s0=class extends Jn{constructor(e,t,a,r=null){super();this.learningRate=e,this.beta1=t,this.beta2=a,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Z(()=>{this.accBeta1=Ie(t).variable(),this.accBeta2=Ie(a).variable()}),r==null&&(this.epsilon=U.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(a=>a.name):Object.keys(e);Z(()=>{let a=me(1,this.accBeta1),r=me(1,this.accBeta2);t.forEach((n,s)=>{let i=U.registeredVariables[n],o=!1;this.accumulatedFirstMoment[s]==null&&(this.accumulatedFirstMoment[s]={originalName:`${n}/m`,variable:Z(()=>Je(i).variable(o))}),this.accumulatedSecondMoment[s]==null&&(this.accumulatedSecondMoment[s]={originalName:`${n}/v`,variable:Z(()=>Je(i).variable(o))});let l=Array.isArray(e)?e[s].tensor:e[n];if(l==null)return;let d=this.accumulatedFirstMoment[s].variable,u=this.accumulatedSecondMoment[s].variable,h=ie(V(d,this.beta1),V(l,1-this.beta1)),p=ie(V(u,this.beta2),V(ct(l),1-this.beta2)),c=ge(h,a),f=ge(p,r);d.assign(h),u.assign(p);let m=ie(V(ge(c,ie(wa(f),this.epsilon)),-this.learningRate),i);i.assign(m)}),this.accBeta1.assign(V(this.accBeta1,this.beta1)),this.accBeta2.assign(V(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&ne(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&ne(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),Z(()=>{this.accBeta1.assign($s(this.beta1,this.iterations_+1)),this.accBeta2.assign($s(this.beta2,this.iterations_+1))});let t=e.length/2,a=!1;this.accumulatedFirstMoment=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(a)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(a)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};s0.className="Adam";Mi(s0);var i0=class extends Jn{constructor(e,t,a,r=null,n=0){super();this.learningRate=e,this.beta1=t,this.beta2=a,this.epsilon=r,this.decay=n,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Z(()=>{this.iteration=Ie(0).variable(),this.accBeta1=Ie(t).variable()}),r==null&&(this.epsilon=U.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(a=>a.name):Object.keys(e);Z(()=>{let a=me(1,this.accBeta1),r=ge(-this.learningRate,ie(V(this.iteration,this.decay),1));t.forEach((n,s)=>{let i=U.registeredVariables[n],o=!1;this.accumulatedFirstMoment[s]==null&&(this.accumulatedFirstMoment[s]={originalName:`${n}/m`,variable:Je(i).variable(o)}),this.accumulatedWeightedInfNorm[s]==null&&(this.accumulatedWeightedInfNorm[s]={originalName:`${n}/v`,variable:Je(i).variable(o)});let l=Array.isArray(e)?e[s].tensor:e[n];if(l==null)return;let d=this.accumulatedFirstMoment[s].variable,u=this.accumulatedWeightedInfNorm[s].variable,h=ie(V(d,this.beta1),V(l,1-this.beta1)),p=V(u,this.beta2),c=Qt(l),f=Zn(p,c);d.assign(h),u.assign(f);let m=ie(V(ge(r,a),ge(h,ie(f,this.epsilon))),i);i.assign(m)}),this.iteration.assign(ie(this.iteration,1)),this.accBeta1.assign(V(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&ne(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&ne(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};i0.className="Adamax";Mi(i0);var Gh=class extends Jn{constructor(e){super();this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,a)=>{let r=Array.isArray(e)?e[a].tensor:e[t];if(r==null)return;let n=U.registeredVariables[t];Z(()=>{let s=ie(V(this.c,r),n);n.assign(s)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=da(Ie(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};Gh.className="SGD";Mi(Gh);var o0=class extends Gh{constructor(e,t,a=!1){super(e);this.learningRate=e,this.momentum=t,this.useNesterov=a,this.accumulations=[],this.m=Ie(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,a)=>{let r=U.registeredVariables[t];this.accumulations[a]==null&&(this.accumulations[a]={originalName:`${t}/momentum`,variable:Z(()=>Je(r).variable(!1))});let n=this.accumulations[a].variable,s=Array.isArray(e)?e[a].tensor:e[t];s!=null&&Z(()=>{let i,o=ie(V(this.m,n),s);this.useNesterov?i=ie(V(this.c,ie(s,V(o,this.m))),r):i=ie(V(this.c,o),r),n.assign(o),r.assign(i)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&ne(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulations=e.map(a=>({originalName:a.name,variable:a.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};o0.className="Momentum";Mi(o0);var l0=class extends Jn{constructor(e,t=.9,a=0,r=null,n=!1){super();if(this.learningRate=e,this.decay=t,this.momentum=a,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=n,r==null&&(this.epsilon=U.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,a)=>{let r=U.registeredVariables[t],n=!1;this.accumulatedMeanSquares[a]==null&&(this.accumulatedMeanSquares[a]={originalName:`${t}/rms`,variable:Z(()=>Je(r).variable(n))}),this.accumulatedMoments[a]==null&&(this.accumulatedMoments[a]={originalName:`${t}/momentum`,variable:Z(()=>Je(r).variable(n))}),this.accumulatedMeanGrads[a]==null&&this.centered&&(this.accumulatedMeanGrads[a]={originalName:`${t}/mg`,variable:Z(()=>Je(r).variable(n))});let s=Array.isArray(e)?e[a].tensor:e[t];if(s==null)return;let i=this.accumulatedMeanSquares[a].variable,o=this.accumulatedMoments[a].variable;Z(()=>{let l=ie(V(i,this.decay),V(ct(s),1-this.decay));if(this.centered){let d=this.accumulatedMeanGrads[a].variable,u=ie(V(d,this.decay),V(s,1-this.decay)),h=ge(V(s,this.learningRate),wa(me(l,ie(ct(u),this.epsilon)))),p=ie(V(o,this.momentum),h);i.assign(l),d.assign(u),o.assign(p);let c=me(r,p);r.assign(c)}else{let d=ie(V(i,this.decay),V(ct(s),1-this.decay)),u=ie(V(o,this.momentum),ge(V(s,this.learningRate),wa(ie(d,this.epsilon))));i.assign(d),o.assign(u);let h=me(r,u);r.assign(h)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&ne(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&ne(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&ne(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,a=!1;this.accumulatedMeanSquares=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(a)})),this.accumulatedMoments=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(a)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(r=>({originalName:r.name,variable:r.tensor.variable(a)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};l0.className="RMSProp";Mi(l0);var us=class{static sgd(e){return new Gh(e)}static momentum(e,t,a=!1){return new o0(e,t,a)}static rmsprop(e,t=.9,a=0,r=null,n=!1){return new l0(e,t,a,r,n)}static adam(e=.001,t=.9,a=.999,r=null){return new s0(e,t,a,r)}static adadelta(e=.001,t=.95,a=null){return new r0(e,t,a)}static adamax(e=.002,t=.9,a=.999,r=null,n=0){return new i0(e,t,a,r,n)}static adagrad(e,t=.1){return new n0(e,t)}},qi={sgd:us.sgd,momentum:us.momentum,adadelta:us.adadelta,adagrad:us.adagrad,rmsprop:us.rmsprop,adamax:us.adamax,adam:us.adam},BM=(()=>typeof requestAnimationFrame!="undefined"?requestAnimationFrame:typeof setImmediate!="undefined"?setImmediate:e=>e())();function cw(){return new Promise(e=>BM(()=>e()))}var N={};ze(N,{ERF_A1:()=>JM,ERF_A2:()=>QM,ERF_A3:()=>e_,ERF_A4:()=>t_,ERF_A5:()=>a_,ERF_P:()=>YM,PARALLELIZE_THRESHOLD:()=>Z2,SELU_SCALE:()=>mw,SELU_SCALEALPHA:()=>fw,applyActivation:()=>t0,assertAndGetBroadcastShape:()=>gt,assertAxesAreInnerMostDims:()=>QE,assertParamsConsistent:()=>VM,assignToTypedArray:()=>l_,axesAreInnerMostDims:()=>N2,calculateShapes:()=>Pv,checkEinsumDimSizes:()=>f_,checkPadOnDimRoundingMode:()=>Da,combineLocations:()=>z3,complexWithEvenIndex:()=>s_,complexWithOddIndex:()=>i_,computeConv2DInfo:()=>Dh,computeConv3DInfo:()=>p3,computeDefaultPad:()=>g2,computeDilation2DInfo:()=>xN,computeOptimalWindowSize:()=>GM,computeOutAndReduceShapes:()=>O3,computeOutShape:()=>UM,computePool2DInfo:()=>h3,computePool3DInfo:()=>bN,convertConv2DDataFormat:()=>c3,decodeEinsumEquation:()=>p_,eitherStridesOrDilationsAreOne:()=>wn,expandShapeToKeepDim:()=>co,exponent:()=>d_,exponents:()=>u_,fromStringArrayToUint8:()=>z_,fromUint8ToStringArray:()=>__,getAxesPermutation:()=>D3,getBroadcastDims:()=>_v,getComplexWithIndex:()=>o_,getEinsumComputePath:()=>m_,getEinsumPermutation:()=>c_,getFusedBiasGradient:()=>e0,getFusedDyActivation:()=>Qf,getImageCenter:()=>jM,getInnerMostAxes:()=>eR,getPermuted:()=>qM,getReductionAxes:()=>Kt,getReshaped:()=>HM,getReshapedPermuted:()=>XM,getSliceBeginCoords:()=>KM,getSliceSize:()=>ZM,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>x_,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>b_,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>v_,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>I_,getSparseReshapeInputOutputMismatchErrorMessage:()=>T_,getSparseReshapeInputOutputMultipleErrorMessage:()=>S_,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>w_,getSparseReshapeNegativeOutputDimErrorMessage:()=>k_,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>R_,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>C_,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>N_,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>E_,getUndoAxesPermutation:()=>E2,isIdentityPermutation:()=>g_,log:()=>KT,mergeRealAndImagArrays:()=>r_,prepareAndValidate:()=>Dv,prepareSplitSize:()=>A_,segment_util:()=>gw,shouldFuse:()=>a0,slice_util:()=>Ft,splitRealAndImagArrays:()=>n_,tupleValuesAreOne:()=>Rs,upcastType:()=>$a,validateInput:()=>h2,validateUpdateShape:()=>d2,warn:()=>cs});function VM(e,t){let a=e[0].length;e.forEach((n,s)=>{O(n.length===a,()=>`Error in concat${a}D: rank of tensors[${s}] must be the same as the rank of the rest (${a})`)}),O(t>=0&&t<a,()=>`Error in concat${a}D: axis must be between 0 and ${a-1}.`);let r=e[0];e.forEach((n,s)=>{for(let i=0;i<a;i++)O(i===t||n[i]===r[i],()=>`Error in concat${a}D: Shape of tensors[${s}] (${n}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`)})}function UM(e,t){let a=e[0].slice();for(let r=1;r<e.length;r++)a[t]+=e[r][t];return a}var Z2=30;function GM(e){return e<=Z2?e:Ic(e,Math.floor(Math.sqrt(e)))}function jM(e,t,a){let r=a*(typeof e=="number"?e:e[0]),n=t*(typeof e=="number"?e:e[1]);return[r,n]}function HM(e,t,a,r=!0){let n=[];if(r)n=n.concat(t.slice(0)),n.push(e[0]/a),n=n.concat(e.slice(1));else{n=n.concat(e[0]);let s=t.length;for(let i=0;i<s;++i)n=n.concat([e[i+1]/t[i],t[i]]);n=n.concat(e.slice(s+1))}return n}function qM(e,t,a=!0){let r=[];if(a){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{let n=[],s=[];for(let i=1;i<e;++i)i>=t*2+1||i%2===1?s.push(i):n.push(i);r.push(...n),r.push(0),r.push(...s)}return r}function XM(e,t,a,r=!0){let n=[];r?n.push(e[0]/a):n.push(e[0]*a);for(let s=1;s<e.length;++s)s<=t.length?r?n.push(t[s-1]*e[s]):n.push(e[s]/t[s-1]):n.push(e[s]);return n}function KM(e,t){let a=[0];for(let r=0;r<t;++r)a.push(e[r][0]);return a}function ZM(e,t,a){let r=e.slice(0,1);for(let n=0;n<a;++n)r.push(e[n+1]-t[n][0]-t[n][1]);return r}var fw=1.7580993408473768,mw=1.0507009873554805,YM=.3275911,JM=.254829592,QM=-.284496736,e_=1.421413741,t_=-1.453152027,a_=1.061405429;function r_(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let a=new Float32Array(e.length*2);for(let r=0;r<a.length;r+=2)a[r]=e[r/2],a[r+1]=t[r/2];return a}function n_(e){let t=new Float32Array(e.length/2),a=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],a[r/2]=e[r+1];return{real:t,imag:a}}function s_(e){let t=Math.ceil(e.length/4),a=new Float32Array(t),r=new Float32Array(t);for(let n=0;n<e.length;n+=4)a[Math.floor(n/4)]=e[n],r[Math.floor(n/4)]=e[n+1];return{real:a,imag:r}}function i_(e){let t=Math.floor(e.length/4),a=new Float32Array(t),r=new Float32Array(t);for(let n=2;n<e.length;n+=4)a[Math.floor(n/4)]=e[n],r[Math.floor(n/4)]=e[n+1];return{real:a,imag:r}}function o_(e,t){let a=e[t*2],r=e[t*2+1];return{real:a,imag:r}}function l_(e,t,a,r){e[r*2]=t,e[r*2+1]=a}function u_(e,t){let a=new Float32Array(e/2),r=new Float32Array(e/2);for(let n=0;n<Math.ceil(e/2);n++){let s=(t?2:-2)*Math.PI*(n/e);a[n]=Math.cos(s),r[n]=Math.sin(s)}return{real:a,imag:r}}function d_(e,t,a){let r=(a?2:-2)*Math.PI*(e/t),n=Math.cos(r),s=Math.sin(r);return{real:n,imag:s}}var nm="->",h_=/->/g,rx=",",nx="...";function p_(e,t){e=e.replace(/\s/g,"");let a=(e.length-e.replace(h_,"").length)/nm.length;if(a<1)throw new Error("Equations without an arrow are not supported.");if(a>1)throw new Error(`Equation must contain exactly one arrow ("${nm}").`);let[r,n]=e.split(nm);O(r.indexOf(nx)===-1,()=>`The ellipsis notation ("${nx}") is not supported yet.`);let s=r.split(rx),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let o=[];for(let p=0;p<n.length;++p){let c=n[p];if(!s.some(f=>f.indexOf(c)!==-1))throw new Error(`Output subscripts contain the label ${c} not present in the input subscripts.`);o.indexOf(c)===-1&&o.push(c)}for(let p=0;p<r.length;++p){let c=r[p];o.indexOf(c)===-1&&c!==rx&&o.push(c)}let l=new Array(s.length);for(let p=0;p<i;++p){if(new Set(s[p].split("")).size!==s[p].length)throw new Error(`Found duplicate axes in input component ${s[p]}. Support for duplicate axes in input is not implemented yet.`);l[p]=[];for(let c=0;c<s[p].length;++c)l[p].push(o.indexOf(s[p][c]))}let d=o.length,u=n.length,h=[];for(let p=u;p<d;++p)h.push(p);return{allDims:o,summedDims:h,idDims:l}}function c_(e,t){let a=new Array(e);a.fill(-1);for(let n=0;n<t.length;++n)a[t[n]]=n;let r=[];for(let n=0;n<e;++n)a[n]===-1&&r.push(n);return a=a.filter(n=>n!==-1),{permutationIndices:a,expandDims:r}}function f_(e,t,a){let r=new Array(e);for(let n=0;n<a.length;++n){let s=a[n].shape;for(let i=0;i<t[n].length;++i)r[t[n][i]]===void 0?r[t[n][i]]=s[i]:O(r[t[n][i]]===s[i],()=>`Expected dimension ${r[t[n][i]]} at axis ${i} of input shaped ${JSON.stringify(s)}, but got dimension ${s[i]}`)}}function m_(e,t){let a=e,r=[],n=0;e.length===0&&a.push(-1),n=e.length+1;for(let i=0;i<n;++i)r.push([]);let s=[];for(let i=0;i<a.length;++i){let o=a[i],l=y_(t,o);for(let d of l)s.indexOf(d)===-1&&(r[i].push(d),s.push(d))}return{path:a,steps:r}}function g_(e){return e.every((t,a)=>t===a)}function y_(e,t){let a=[];for(let r=0;r<e.length;++r)(e[r].length===0||e[r].indexOf(t)!==-1||t===-1)&&a.push(r);return a}function A_(e,t,a=0){let r=[];if(typeof t=="number")O(e.shape[a]%t===0,()=>"Number of splits must evenly divide the axis."),r=new Array(t).fill(e.shape[a]/t);else{let n=t.reduce((i,o)=>(o===-1&&(i+=1),i),0);O(n<=1,()=>"There should be only one negative value in split array.");let s=t.indexOf(-1);if(s!==-1){let i=t.reduce((o,l)=>l>0?o+l:o);t[s]=e.shape[a]-i}O(e.shape[a]===t.reduce((i,o)=>i+o),()=>"The sum of sizes must match the size of the axis dimension."),r=t}return r}function x_(e){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${e}`}function b_(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function v_(e,t,a){return`indices(${e}, 0) is invalid: ${t} >= ${a}`}function w_(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function k_(e,t){return`size ${e} must be non-negative, not ${t}`}function I_(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function S_(e,t){let a=kt(e),r=kt(t);return`Input to reshape is a SparseTensor with ${a}
  dense values, but the requested shape requires a multiple of ${r}. inputShape=${e} outputShape= ${t}`}function T_(e,t){let a=kt(e),r=kt(t);return`Input to reshape is a tensor with ${a} dense values, but the requested shape has ${r}. inputShape=${e} outputShape=${t}`}function C_(){return"segment ids must be >= 0"}function N_(){return"segment ids are not increasing"}function E_(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function R_(e,t,a){return`Bad: indices[${e}] == ${t} out of range [0, ${a})`}var gw={};ze(gw,{collectGatherOpShapeInfo:()=>M_,computeOutShape:()=>$_,segOpComputeOptimalWindowSize:()=>F_});function F_(e,t){let a=!1,r;for(e<=Z2?(r=e,a=!0):r=Ic(e,Math.floor(Math.sqrt(e)));!a;)r>t||r===e?a=!0:r=Ic(e,r+1);return r}function $_(e,t,a){let r=[],n=e.length;for(let s=0;s<n;s++)s!==t?r.push(e[s]):r.push(a);return r}function M_(e,t,a,r){let n=t.shape.length,s=e.shape.length;if(r!==0&&(r<-n||r>n))throw new Error(`Expect batchDims in the range of [-${n}, ${n}], but got ${r}`);if(r<0&&(r+=n),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (
    ${s}).`);if(a<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${a}).`);for(let h=0;h<r;++h)if(e.shape[h]!==t.shape[h])throw new Error(`x.shape[${h}]: ${e.shape[h]} should be equal to indices.shape[${h}]: ${t.shape[h]}.`);let i=e.shape[a],o=[],l=1,d=1,u=1;for(let h=0;h<r;++h)o.push(e.shape[h]),l*=e.shape[h];for(let h=r;h<a;h++)o.push(e.shape[h]),d*=e.shape[h];for(let h=r;h<n;h++)o.push(t.shape[h]);for(let h=a+1;h<s;h++)o.push(e.shape[h]),u*=e.shape[h];return{batchSize:l,sliceSize:u,outerSize:d,dimSize:i,outputShape:o}}function __(e){try{return e.map(t=>Nc(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function z_(e){return e.map(t=>Mh(t))}var Pr={};ze(Pr,{nonMaxSuppressionV3Impl:()=>lw,nonMaxSuppressionV4Impl:()=>uw,nonMaxSuppressionV5Impl:()=>dw,whereImpl:()=>J3});var yw={kernelName:Io,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>V(e,Uh(pe(a,"float32"),-1))}}},O_={kernelName:ku,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>{let r=ct(pe(a,"float32")),n=wa(me(Ie(1),r));return $t(ge(e,n))}}}},D_={kernelName:Iu,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>{let r=wa(me(ct(pe(a,"float32")),1));return ge(e,r)}}}},P_={kernelName:qn,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[a,r]=t,n=gt(a.shape,r.shape);return{a:()=>{let s=e,i=Kt(a.shape,n);return i.length>0&&(s=we(s,i)),q(s,a.shape)},b:()=>{let s=e,i=Kt(r.shape,n);return i.length>0&&(s=we(s,i)),q(s,r.shape)}}}},L_={kernelName:Ws,saveAllInputs:!0,gradFunc:(e,t)=>{let a={};return t.forEach((r,n)=>{a[n]=()=>e.clone()}),a}},W_={kernelName:Bs,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>Je(a)}}},B_={kernelName:Cu,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>Je(a)}}},V_={kernelName:Nu,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>ge(e,wa(me(Ie(1),ct(pe(a,"float32")))))}}},U_={kernelName:Eu,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>{let r=wa(ie(Ie(1),ct(pe(a,"float32"))));return ge(e,r)}}}},G_={kernelName:$u,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[a,r]=t,n=gt(a.shape,r.shape);return{a:()=>{let s=ie(ct(a),ct(r)),i=V(e,ge(r,s)),o=Kt(a.shape,n);return o.length>0&&(i=we(i,o)),q(i,a.shape)},b:()=>{let s=ie(ct(a),ct(r)),i=$t(V(e,ge(a,s))),o=Kt(r.shape,n);return o.length>0&&(i=we(i,o)),q(i,r.shape)}}}},j_={kernelName:Ru,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>ge(e,ie(ct(pe(a,"float32")),1))}}},H_={kernelName:Fu,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>ge(e,me(Ie(1),ct(pe(a,"float32"))))}}};function q_(e,t,a,r,n,s){let i=M(e,"dy","avgPool3dGrad"),o=M(t,"input","avgPool3dGrad"),l=i,d=o,u=!1;o.rank===4&&(u=!0,l=q(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),d=q(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),O(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),O(d.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${d.rank}.`),Da("avgPool3dGrad",n,s);let h={dy:l,input:d},p={filterSize:a,strides:r,pad:n,dimRoundingMode:s},c=U.runKernel(uf,h,p);return u?q(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}var X_=G({avgPool3dGrad_:q_}),K_={kernelName:mh,inputsToSave:["x"],gradFunc:(e,t,a)=>{let[r]=t,{filterSize:n,strides:s,pad:i,dimRoundingMode:o}=a;return{x:()=>X_(e,r,n,s,i,o)}}};function Z_(e,t,a,r,n){let s=M(e,"dy","avgPoolGrad"),i=M(t,"input","avgPoolGrad");O(i.rank===s.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`);let o=i,l=s,d=!1;i.rank===3&&(d=!0,o=q(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=q(s,[1,s.shape[0],s.shape[1],s.shape[2]])),O(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),O(o.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`);let u={dy:l,input:o},h={filterSize:a,strides:r,pad:n},p=U.runKernel(lf,u,h);return d?q(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var Y_=G({avgPoolGrad_:Z_}),J_={kernelName:Vs,inputsToSave:["x"],gradFunc:(e,t,a)=>{let[r]=t,{filterSize:n,strides:s,pad:i}=a;return{x:()=>Y_(e,r,n,s,i)}}},Q_={kernelName:Us,inputsToSave:["a","b"],gradFunc:(e,t,a)=>{let[r,n]=t,{transposeA:s,transposeB:i}=a;return!s&&!i?{a:()=>He(e,n,!1,!0),b:()=>He(r,e,!0,!1)}:!s&&i?{a:()=>He(e,n,!1,!1),b:()=>He(e,r,!0,!1)}:s&&!i?{a:()=>He(n,e,!1,!0),b:()=>He(r,e,!1,!1)}:{a:()=>He(n,e,!0,!0),b:()=>He(e,r,!0,!0)}}},ez={kernelName:So,gradFunc:(e,t,a)=>{let{blockShape:r,crops:n}=a;return{x:()=>qf(e,r,n)}}},tz={kernelName:rv,gradFunc:(e,t,a)=>{let r=a,n=r.inputShape,s=r.shape,i=Array.from(s);for(let l=n.length-1;l>=0;l--)if(n[l]===s[l])i[l]=1;else if(n[l]!==1)throw new Error(`broadcastTo(): [${n}] cannot be broadcast to [${s}].`);let o=[];for(let l=0;l<i.length;l++)i[l]>1&&o.push(l);return{x:()=>we(e,o,!0)}}},az={kernelName:Gs,gradFunc:e=>({x:()=>e.clone()})},rz={kernelName:js,gradFunc:e=>({x:()=>Je(e)})},nz={kernelName:Xn,inputsToSave:["x"],gradFunc:(e,t,a)=>{let[r]=t,{clipValueMin:n,clipValueMax:s}=a;return{x:()=>Ma(tn(hl(r,n),pl(r,s)),e,Je(e))}}},sz={kernelName:yh,inputsToSave:["x"],gradFunc:yw.gradFunc},iz={kernelName:To,saveAllInputs:!0,gradFunc:(e,t,a)=>{let r=t.map(o=>o.shape),{axis:n}=a,s=Dr(n,t[0].shape)[0],i=r.map(o=>o[s]);return va(e,i,s).map(o=>()=>o)}},oz={kernelName:Hs,inputsToSave:["x","filter"],gradFunc:(e,t,a)=>{let[r,n]=t,{dilations:s,strides:i,pad:o,dataFormat:l}=a;return O(Rs(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>b2(r.shape,e,n,i,o,l),filter:()=>X2(r,e,n.shape,i,o,l)}}},lz={kernelName:qs,inputsToSave:["dy","filter"],gradFunc:(e,t,a)=>{let[r,n]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:l}=a;return{dy:()=>Fs(e,n,s,i,o,1,l),filter:()=>X2(e,r,n.shape,s,i,o,l)}}};function uz(e,t,a,r,n){let s=e;e.rank===4&&(s=q(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;i.rank===4&&(i=q(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),O(s.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),O(i.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),O(a.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${a}.`),O(s.shape[4]===a[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${a[3]}.`),O(i.shape[4]===a[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${a[4]}).`);let o={x:s,dy:i},l={strides:r,pad:n,filterShape:a};return U.runKernel(cf,o,l)}var dz=G({conv3DBackpropFilter_:uz}),hz={kernelName:Ah,inputsToSave:["x","filter"],gradFunc:(e,t,a)=>{let{dilations:r,strides:n,pad:s}=a;O(Rs(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);let[i,o]=t;return{x:()=>w3(i.shape,e,o,n,s),filter:()=>dz(i,e,o.shape,n,s)}}},pz={kernelName:Xs,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>V($t(L2(pe(a,"float32"))),e)}}},cz={kernelName:Ks,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>V(W2(pe(a,"float32")),e)}}},fz={kernelName:Co,inputsToSave:["x"],gradFunc:(e,t,a)=>{let[r]=t,{axis:n,exclusive:s,reverse:i}=a;return{x:()=>{let o=D3([n],r.rank),l=I2(e,n,s,!i);return o!=null&&(l=Ye(l,o)),l}}}},mz={kernelName:Zs,inputsToSave:["x","filter"],gradFunc:(e,t,a)=>{let{dilations:r,strides:n,pad:s,dimRoundingMode:i}=a,o=r==null?[1,1]:r;O(Rs(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);let[l,d]=t;return O(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),O(d.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${d.rank}.`),O(l.shape[3]===d.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`),O(wn(n,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${n} and dilations '${o}'.`),Da("depthwiseConv2d",s,i),{x:()=>sw(l.shape,e,d,n,s,o,i),filter:()=>nw(l,e,d.shape,n,s,o,i)}}},gz={kernelName:xh,inputsToSave:["x","filter"],gradFunc:(e,t,a)=>{let[r,n]=t,s={x:r,filter:n,dy:e},i={x:r,filter:n,dy:e};return{x:()=>U.runKernel(Sc,s,a),filter:()=>U.runKernel(Tc,i,a)}}},yz={kernelName:Js,outputsToSave:[!0],gradFunc:(e,t)=>{let[a]=t,r={dy:e,y:a};return{x:()=>U.runKernel(xf,r)}}},Az={kernelName:Mu,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t,r=V(br($t(ct(a))),2/Math.sqrt(Math.PI));return{x:()=>V(e,r)}}},xz={kernelName:Qs,outputsToSave:[!0],gradFunc:(e,t)=>{let[a]=t;return{x:()=>V(e,a)}}},bz={kernelName:Fo,inputsToSave:["input"],gradFunc:(e,t)=>{let[a]=t;return{input:()=>q(e,a.shape)}}},vz={kernelName:$o,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>V(e,br(a))}}},wz={kernelName:ei,gradFunc:e=>({x:()=>Je(e)})},kz={kernelName:ti,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[a,r]=t,n=gt(a.shape,r.shape);return{a:()=>{let s=ge(e,pe(r,"float32")),i=Kt(a.shape,n);return i.length>0?q(we(s,i),a.shape):s},b:()=>{let s=V(e,pe(a,"float32")),i=Kt(r.shape,n);i.length>0&&(s=q(we(s,i),r.shape));let o=ct(r);return $t(ge(s,pe(o,"float32")))}}}},Iz={kernelName:ai,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,a)=>{let{varianceEpsilon:r}=a,[n,s,i,o]=t,l=o==null?Ie(1):o,d=Kt(s.shape,n.shape),u=[];if(s.rank===1){for(let m=0;m<n.shape.length-1;++m)u.push(n.shape[m]);u.push(1)}let h=me(n,s),p=V(e,l),c=D2(ie(i,Ie(r))),f=V(V(V(c,c),c),Ie(-.5));return{x:()=>s.rank===1?q(V(V(e,zr(q(c,[1,1,1,s.shape[0]]),u)),l),n.shape):q(V(V(e,c),l),n.shape),mean:()=>{let m=V(V(c,Ie(-1)),p);return s.rank===1&&(m=we(m,d)),q(m,s.shape)},variance:()=>{let m=V(V(f,h),p);return s.rank===1&&(m=we(m,d)),q(m,s.shape)},scale:()=>{let m=V(h,c),g=V(e,m);return s.rank===1&&(g=we(g,d)),q(g,s.shape)},offset:()=>{let m=e;return s.rank===1&&(m=we(m,d)),q(m,s.shape)}}}},Sz={kernelName:_o,inputsToSave:["x","indices"],gradFunc:(e,t,a)=>{let[r,n]=t,{axis:s}=a,i=Dr(s,r.shape)[0];return{x:()=>{let o=r.shape,l=n.size,d=o.slice(0,i),u=d.length,h=o.slice(s,o.length).slice(1),p=h.length,c=sx(0,u),f=sx(u+1,u+1+p),m=ix([d,[l],h]),g=q(e,m),y=q(n,[l]),A=ix([[u],c,f]),x=Ye(g,A),b=Z3(x,y,r.shape[i]),v=E2(A);return b=Ye(b,v),b},indices:()=>n}}};function sx(e,t){let a=[];for(let r=e;r<t;++r)a.push(r);return a}function ix(e){let t=[];for(let a=0;a<e.length;++a)for(let r=0;r<e[a].length;++r)t.push(e[a][r]);return t}var Tz={kernelName:ri,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[a,r]=t;return{a:()=>Je(a),b:()=>Je(r)}}},Cz={kernelName:ni,gradFunc:e=>({x:()=>pe(e,"float32")})},Nz={kernelName:zu,gradFunc:e=>({x:()=>Je(e)})},Ez={kernelName:Ou,gradFunc:e=>({x:()=>Je(e)})},Rz={kernelName:Du,gradFunc:e=>({x:()=>Je(e)})},Fz={kernelName:si,inputsToSave:["x"],gradFunc:(e,t,a)=>{let[r]=t,{alpha:n}=a,s=cr(r,0);return{x:()=>Ma(s,e,V(e,n))}}},$z={kernelName:Pu,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>ge(e,ie(a,1))}}},Mz={kernelName:ii,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>ge(e,pe(a,"float32"))}}},_z={kernelName:nv,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,a)=>{let[r]=t,{axis:n}=a;return{logits:()=>{let s=br(r);return me(e,V(we(e,n,!0),s))}}}};function zz(e,t,a,r=5,n=1,s=1,i=.5){let o={x:e,y:t,dy:a},l={depthRadius:r,bias:n,alpha:s,beta:i};return U.runKernel(kf,o,l)}var Oz=G({localResponseNormalizationBackprop_:zz}),Dz={kernelName:kh,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,a)=>{let[r,n]=t,{depthRadius:s,bias:i,alpha:o,beta:l}=a;return{x:()=>Oz(r,n,e,s,i,o,l)}}};function Aw(e,t,a,r){return t.rank<a.rank&&(t=q(t,co(t.shape,r))),e.rank<a.rank&&(e=q(e,co(e.shape,r))),{x:()=>V(e,pe(xr(a,t),e.dtype))}}var ox={kernelName:oi,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,a)=>{let r=a,{reductionIndices:n}=r,s=t[0],i=t[1],o=Dr(n,s.shape),l=Aw(e,i,s,o);return{x:()=>l.x()}}},Pz={kernelName:li,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[a,r]=t;return{a:()=>V(e,pe(hl(a,r),"float32")),b:()=>V(e,pe(T2(a,r),"float32"))}}};function Lz(e,t,a,r,n,s,i){let o=M(e,"dy","maxPool3dGrad"),l=M(t,"input","maxPool3dGrad"),d=M(a,"output","maxPool3dGrad"),u=o,h=l,p=d,c=!1;l.rank===4&&(c=!0,u=q(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=q(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=q(d,[1,d.shape[0],d.shape[1],d.shape[2],d.shape[3]])),O(u.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),O(h.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),O(p.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`),Da("maxPool3dGrad",s,i);let f={dy:u,input:h,output:p},m={filterSize:r,strides:n,pad:s,dimRoundingMode:i},g=U.runKernel(Sf,f,m);return c?q(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var Wz=G({maxPool3dGrad_:Lz}),Bz={kernelName:Ih,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,a)=>{let[r,n]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=a;return{x:()=>Wz(e,r,n,s,i,o,l)}}};function Vz(e,t,a,r,n,s,i){let o=M(e,"dy","maxPoolGrad"),l=M(t,"input","maxPoolGrad"),d=M(a,"output","maxPoolGrad");O(l.rank===o.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`),O(o.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`),O(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),Da("maxPoolGrad",s,i);let u={dy:o,input:l,output:d},h={filterSize:r,strides:n,pad:s,dimRoundingMode:i};return U.runKernel(If,u,h)}var Uz=G({maxPoolGrad_:Vz}),Gz={kernelName:ui,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,a)=>{let[r,n]=t,{filterSize:s,strides:i,pad:o}=a;return{x:()=>Uz(e,r,n,s,i,o)}}},jz={kernelName:di,inputsToSave:["x"],gradFunc:(e,t,a)=>{let[r]=t,{axis:n}=a,s=Dr(n,r.shape),i=O3(r.shape,s)[1],o=kt(i);return{x:()=>{let l=r.shape.slice();s.forEach(u=>{l[u]=1});let d=q(e,l);return ge(V(d,dr(r.shape,"float32")),o)}}}},Hz={kernelName:hi,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,a)=>{let r=a,{axis:n}=r,[s,i]=t,o=Dr(n,s.shape),l=Aw(e,i,s,o);return{x:()=>l.x()}}},qz={kernelName:pi,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[a,r]=t;return{a:()=>V(e,pe(pl(a,r),"float32")),b:()=>V(e,pe(cr(a,r),"float32"))}}},Xz={kernelName:ci,inputsToSave:["x"],gradFunc:(e,t,a)=>{let r=t[0],{paddings:n}=a,s=n.map(i=>i[0]);return{x:()=>_e(e,s,r.shape)}}},Kz={kernelName:Wu,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[a,r]=t,n=gt(a.shape,r.shape);return{a:()=>{let s=Kt(a.shape,n);return s.length>0?q(we(e,s),a.shape):e},b:()=>{let s=V(e,$t(Wh(ge(a,r)))),i=Kt(r.shape,n);return i.length>0?q(we(s,i),r.shape):s}}}},Zz={kernelName:fi,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[a,r]=t,n=gt(a.shape,r.shape);return{a:()=>{let s=V(e,pe(r,"float32")),i=Kt(a.shape,n);return i.length>0?q(we(s,i),a.shape):s},b:()=>{let s=V(e,pe(a,"float32")),i=Kt(r.shape,n);return i.length>0?q(we(s,i),r.shape):s}}}},Yz={kernelName:Wo,gradFunc:e=>({x:()=>$t(e)})},Jz={kernelName:jo,inputsToSave:["indices"],gradFunc:(e,t)=>{let a=t[0];return{indices:()=>Ut(a.shape,"float32")}}},Qz={kernelName:Go,gradFunc:e=>({x:()=>Je(e)})},eO={kernelName:Ho,saveAllInputs:!0,gradFunc:(e,t,a)=>{let{axis:r}=a;return Ir(e,r).map(n=>()=>n)}},lx={kernelName:mi,inputsToSave:["x"],gradFunc:(e,t,a)=>{let r=t[0],{paddings:n}=a,s=n.map(i=>i[0]);return{x:()=>_e(e,s,r.shape)}}},tO={kernelName:gi,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[a,r,n]=t,s=a,i=r,o=gt(s.shape,i.shape);return{a:()=>{let l=pe(i,"float32"),d=V(e,V(l,$s(s,me(l,Ie(1))))),u=Kt(s.shape,o);return u.length>0&&(d=we(d,u)),q(d,s.shape)},b:()=>{let l=cr(s,0),d=Ma(l,vr(s),Je(s)),u=V(e,V(n,d)),h=Kt(i.shape,o);return h.length>0&&(u=we(u,h)),q(u,i.shape)}}}},aO={kernelName:yi,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[a,r]=t,n=cr(a,0);return{x:()=>Ma(n,e,V(e,r)),alpha:()=>{let s=Ma(n,Je(e),V(e,a)),i=Kt(r.shape,e.shape);return i.length>0&&(s=we(s,i)),q(s,r.shape)}}}},rO={kernelName:Ys,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[a,r]=t,n=gt(a.shape,r.shape);return{a:()=>{let s=ge(e,pe(r,"float32")),i=Kt(a.shape,n);return i.length>0?q(we(s,i),a.shape):s},b:()=>{let s=V(e,pe(a,"float32")),i=Kt(r.shape,n);i.length>0&&(s=q(we(s,i),r.shape));let o=ct(r);return $t(ge(s,pe(o,"float32")))}}}},nO={kernelName:Uu,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>ge(e,$t(ct(a)))}}},sO={kernelName:bi,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t,r=V(pl(a,6),Uh(a));return{x:()=>V(e,pe(r,"float32"))}}},iO={kernelName:Ai,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>V(e,pe(Uh(a),"float32"))}}},oO={kernelName:Xo,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>q(e,a.shape)}}},lO={kernelName:xi,inputsToSave:["images"],gradFunc:(e,t,a)=>{let[r]=t,n={dy:e,images:r};return{images:()=>U.runKernel(Ef,n,a)}}},uO={kernelName:Gu,inputsToSave:["images"],gradFunc:(e,t,a)=>{let[r]=t,n={dy:e,images:r};return{images:()=>U.runKernel(Nf,n,a)}}},dO={kernelName:Ko,gradFunc:(e,t,a)=>{let{dims:r}=a,n=Dr(r,e.shape);return{x:()=>kr(e,n)}}},hO={kernelName:Zo,gradFunc:e=>({x:()=>Je(e)})},pO={kernelName:vi,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>$t(ge(e,V($s(a,1.5),2)))}}},cO={kernelName:Jo,inputsToSave:["condition"],gradFunc:(e,t)=>{let[a]=t;return{condition:()=>pe(Je(a),"float32"),t:()=>V(e,pe(a,e.dtype)),e:()=>V(e,pe(Uf(a),e.dtype))}}},fO={kernelName:ju,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>{let r=cr(a,Ie(0)),n=Ie(fw),s=Ie(mw),i=V(e,s),o=V(V(e,n),br(pe(a,"float32")));return Ma(r,i,o)}}}},mO={kernelName:ki,outputsToSave:[!0],gradFunc:(e,t)=>{let[a]=t;return{x:()=>V(e,V(a,me(Ie(1),a)))}}},gO={kernelName:Hu,gradFunc:e=>({x:()=>Je(e)})},yO={kernelName:wi,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>V(Pf(pe(a,"float32")),e)}}},AO={kernelName:el,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>V(k2(pe(a,"float32")),e)}}},xO={kernelName:Qo,inputsToSave:["x"],gradFunc:(e,t,a)=>{let[r]=t,{begin:n,size:s}=a,i=r.shape,[o,l]=qv(r,n,s),d=[];for(let u=0;u<e.rank;u++)d.push([o[u],i[u]-o[u]-l[u]]);return{x:()=>kn(e,d)}}},bO={kernelName:Ti,outputsToSave:[!0],gradFunc:(e,t,a)=>{let[r]=t,{dim:n}=a,s=!0,i=V(e,r);return{logits:()=>me(i,V(we(i,[n],s),r))}}},vO={kernelName:qu,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>V(e,Ar(a))}}},ux={kernelName:tl,gradFunc:(e,t,a)=>{let{blockShape:r,paddings:n}=a;return{x:()=>Of(e,r,n)}}},dx={kernelName:al,gradFunc:(e,t,a)=>{let{axis:r}=a;return{x:()=>Ct(e,r)}}},wO={kernelName:Ii,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>ge(e,V(wa(pe(a,"float32")),2))}}},kO={kernelName:Ku,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>V(e,V(pe(a,"float32"),2))}}},IO={kernelName:Ci,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[a,r]=t,n=Ie(2);return{a:()=>V(e,V(n,me(a,r))),b:()=>V(e,V(n,me(r,a)))}}},SO={kernelName:Fi,gradFunc:e=>({x:()=>Je(e)})},TO={kernelName:Ni,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[a,r]=t,n=gt(a.shape,r.shape);return{a:()=>{let s=e,i=Kt(a.shape,n);return i.length>0&&(s=we(s,i)),q(s,a.shape)},b:()=>{let s=e,i=Kt(r.shape,n);return i.length>0&&(s=we(s,i)),q($t(s),r.shape)}}}},CO={kernelName:Si,inputsToSave:["x"],gradFunc:(e,t,a)=>{let[r]=t,n=r.shape.slice(),{axis:s}=a;Dr(s,r.shape).forEach(l=>{n[l]=1});let i=q(e,n),o=V(i,dr(r.shape,"float32"));return{x:()=>o}}},NO={kernelName:nl,inputsToSave:["x"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>ge(e,ct(Pf(a)))}}},EO={kernelName:Ei,outputsToSave:[!0],gradFunc:(e,t)=>{let[a]=t;return{x:()=>V(me(Ie(1),ct(a)),e)}}},RO={kernelName:Kn,inputsToSave:["x"],gradFunc:(e,t,a)=>{let[r]=t,{reps:n}=a;return{x:()=>{let s=Je(r);if(r.rank===1)for(let i=0;i<n[0];++i)s=ie(s,_e(e,[i*r.shape[0]],[r.shape[0]]));else if(r.rank===2)for(let i=0;i<n[0];++i)for(let o=0;o<n[1];++o)s=ie(s,_e(e,[i*r.shape[0],o*r.shape[1]],[r.shape[0],r.shape[1]]));else if(r.rank===3)for(let i=0;i<n[0];++i)for(let o=0;o<n[1];++o)for(let l=0;l<n[2];++l)s=ie(s,_e(e,[i*r.shape[0],o*r.shape[1],l*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else if(r.rank===4)for(let i=0;i<n[0];++i)for(let o=0;o<n[1];++o)for(let l=0;l<n[2];++l)for(let d=0;d<n[3];++d)s=ie(s,_e(e,[i*r.shape[0],o*r.shape[1],l*r.shape[2],d*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);return s}}}},FO={kernelName:Ri,gradFunc:(e,t,a)=>{let r=a,{perm:n}=r,s=E2(n);return{x:()=>Ye(e,s)}}},$O={kernelName:ol,gradFunc:(e,t,a)=>{let r=a,{axis:n}=r;return{value:()=>_a(e,n)}}},MO={kernelName:Fh,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[a]=t;return{x:()=>_O(e,a)}}};function _O(e,t){let a=Zn(t,Je(t)),r=ou(e,a),n=hl(t,Ie(0,"int32")),s=r.rank-n.rank;for(let o=0;o<s;++o)n=ua(n,o+1);n=tn(n,dr(r.shape,"bool"));let i=Je(r);return Ma(n,r,i)}var zO={kernelName:ll,gradFunc:e=>({x:()=>Je(e)})},OO=[yw,O_,D_,P_,L_,W_,B_,V_,U_,G_,j_,H_,K_,J_,Q_,ez,tz,az,rz,nz,sz,iz,lz,oz,hz,pz,cz,fz,mz,gz,rO,yz,Az,xz,bz,vz,kz,wz,Iz,Sz,Tz,Cz,Nz,Ez,Rz,Fz,$z,Mz,_z,Dz,ox,ox,Pz,Bz,Gz,jz,Hz,qz,Xz,Kz,Zz,Yz,Jz,Qz,eO,lx,lx,tO,aO,nO,sO,iO,oO,lO,uO,dO,hO,pO,cO,fO,mO,gO,yO,AO,xO,bO,vO,ux,ux,dx,dx,wO,IO,kO,SO,TO,CO,NO,EO,RO,FO,$O,MO,zO];for(let e of OO)sv(e);var xw={};ze(xw,{maxNorm:()=>WO,minMaxNorm:()=>UO,nonNeg:()=>VO,unitNorm:()=>BO});var sm;function ta(){return sm==null&&(sm=Es().epsilon()),sm}function an(){return"channelsLast"}var zn=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,zn.prototype)}},Xr=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Xr.prototype)}},K=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,K.prototype)}},We=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,We.prototype)}},bw=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,bw.prototype)}};function fo(e,t){if(Array.isArray(e)){let a=[];for(let r=0;r<t;r++)a=a.concat(e);return a}else{let a=new Array(t);return a.fill(e),a}}function cn(e,t){if(!e)throw new bw(t)}function hx(e,t){let a=0;for(let r of e)r===t&&a++;return a}function ja(e){return e.length===1?e[0]:e}function wt(e){return Array.isArray(e)?e:[e]}function On(e){let t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function Zi(e){return e.length<=1||e.indexOf("_")===-1?e:e.replace(/[_]+(\w|$)/g,(t,a)=>a.toUpperCase())}var Er={};function Y2(e){if(e==null)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function ig(e){if(!(e==null||typeof e!="object"))if(Array.isArray(e))e.forEach(t=>ig(t));else{let t=Object.keys(e);for(let a of t){let r=e[a];r!=null&&typeof r=="object"&&(!Array.isArray(r)&&r.type==="ndarray"&&typeof r.value=="number"?e[a]=r.value:ig(r))}}}function jh(e,t={},a={},r="object",n=!1){if(typeof e=="string"){let s=e,i;if(s in a)i=a[s];else if(s in Er)i=Er[s];else if(i=t[s],i==null)throw new K(`Unknown ${r}: ${e}. This may be due to one of the following reasons:
1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}else{let s=e;if(s.className==null||s.config==null)throw new K(`${r}: Improper config format: ${JSON.stringify(s)}.
'className' and 'config' must set.`);let i=s.className,o,l;if(i in a?[o,l]=a[i]:i in Er?[o,l]=Er.className:i in t&&([o,l]=t[i]),o==null)throw new K(`Unknown ${r}: ${i}. This may be due to one of the following reasons:
1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){let d={};for(let c of Object.keys(Er))d[c]=Er[c];for(let c of Object.keys(a))d[c]=a[c];let u=s.config;u.customObjects=d;let h=Ze({},Er);for(let c of Object.keys(a))Er[c]=a[c];ig(s.config);let p=l(o,s.config,a,n);return Er=Ze({},h),p}else{let d=Ze({},Er);for(let h of Object.keys(a))Er[h]=a[h];let u=new o(s.config);return Er=Ze({},d),u}}}function DO(e,t){return e<t?-1:e>t?1:0}function Op(e,t){return-1*DO(e,t)}function bs(e){if(e==null)return e;let t=[];for(let a of e)t.indexOf(a)===-1&&t.push(a);return t}function PO(e){if(e==null)throw new K(`Invalid value in obj: ${JSON.stringify(e)}`);for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}function cl(e,t,a){if(a!=null&&e.indexOf(a)<0)throw new K(`${a} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function J2(e,t,a=0,r=1/0){return cn(a>=0),cn(r>=a),Array.isArray(e)&&e.length>=a&&e.length<=r&&e.every(n=>typeof n===t)}function ha(e,t){Array.isArray(e)?(w.assert(e.length>0,()=>`${t} is unexpectedly an empty array.`),e.forEach((a,r)=>ha(a,`element ${r+1} of ${t}`))):w.assert(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got ${vw(e)}.`)}function vw(e){return e===null?"null":Array.isArray(e)?"["+e.map(t=>vw(t)).join(",")+"]":typeof e=="string"?`"${e}"`:`${e}`}function LO(e,t,a){let r=a!=null?a():w.now(),n;return(...s)=>{let i=a!=null?a():w.now();return i-r<t||(r=i,n=e(...s)),n}}function ww(e){return e==="relu"?"relu":e==="linear"?"linear":e==="elu"?"elu":null}function Q2(e,t){return Z(()=>wa(we(V(e,e),t,!0)))}var Hh=class extends oe.Serializable{getConfig(){return{}}},e1=class extends Hh{constructor(e){super();this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return Z(()=>{let t=Q2(e,this.axis),a=hr(t,0,this.maxValue);return V(e,ge(a,ie(ta(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};e1.className="MaxNorm";oe.registerClass(e1);var t1=class extends Hh{constructor(e){super();this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return Z(()=>ge(e,ie(ta(),Q2(e,this.axis))))}getConfig(){return{axis:this.axis}}};t1.className="UnitNorm";oe.registerClass(t1);var a1=class extends Hh{apply(e){return In(e)}};a1.className="NonNeg";oe.registerClass(a1);var r1=class extends Hh{constructor(e){super();this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return Z(()=>{let t=Q2(e,this.axis),a=ie(V(this.rate,hr(t,this.minValue,this.maxValue)),V(1-this.rate,t));return V(e,ge(a,ie(ta(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};r1.className="MinMaxNorm";oe.registerClass(r1);var px={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function ra(e){return Y2(e)}function cx(e,t={}){return jh(e,oe.SerializationMap.getMap().classNameMap,t,"constraint")}function na(e){if(e==null)return null;if(typeof e=="string"){let t={className:e in px?px[e]:e,config:{}};return cx(t)}else return e instanceof Hh?e:cx(e)}function WO(e){return new e1(e)}function BO(e){return new t1(e)}function VO(){return new a1}function UO(e){return new r1(e)}var kw={};ze(kw,{constant:()=>pD,glorotNormal:()=>xD,glorotUniform:()=>AD,heNormal:()=>bD,heUniform:()=>vD,identity:()=>gD,leCunNormal:()=>wD,leCunUniform:()=>kD,ones:()=>hD,orthogonal:()=>ID,randomNormal:()=>fD,randomUniform:()=>cD,truncatedNormal:()=>mD,varianceScaling:()=>yD,zeros:()=>dD});var GO=["channelsFirst","channelsLast"],jO=["nearest","bilinear"],HO=["valid","same","causal"],qO=["max","avg"],XO=["sum","mul","concat","ave"],_l=new Map;function Gt(e){cl(GO,"DataFormat",e)}function KO(e){cl(jO,"InterpolationFormat",e)}function Tr(e){cl(HO,"PaddingMode",e)}function Iw(e){cl(qO,"PoolMode",e)}var Kd=[],fx="/";function so(e,t){Kd.push(e);try{let a=t();return Kd.pop(),a}catch(a){throw Kd.pop(),a}}function ZO(){return Kd.length===0?"":Kd.join(fx)+fx}function Sw(e){if(!Cw(e))throw new Error("Not a valid tensor name: '"+e+"'");return ZO()+e}function Tw(e){if(!Cw(e))throw new Error("Not a valid tensor name: '"+e+"'");_l.has(e)||_l.set(e,0);let t=_l.get(e);if(_l.set(e,_l.get(e)+1),t>0){let a=`${e}_${t}`;return _l.set(a,1),a}else return e}var YO=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Cw(e){return!!e.match(YO)}function JO(e){return e===parseInt(e.toString(),10)}function vs(e,t,a){t==null&&(t=0),a==null&&(a=e.length);let r=1;for(let n=t;n<a;++n)r*=e[n];return r}function pu(e){if(e.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let a=0;a<e.length;a++){let r=e[a];r<t&&(t=r)}return t}function _s(e){if(e.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let a=0;a<e.length;a++){let r=e[a];r>t&&(t=r)}return t}function rn(e,t){if(t<e)throw new K(`end (${t}) < begin (${e}) is forbidden.`);let a=[];for(let r=e;r<t;++r)a.push(r);return a}function u0(e,t){return pe(e,t)}function qh(e,t=-1){let a=e.shape.slice();return t<0&&(t=a.length+t+1),a.splice(t,0,1),q(e,a)}function QO(e,t){return Z(()=>{if(e.shape.length!==2)throw new K(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);let a=qh(e,1);return og(a,[1,t,1])})}function eD(e){let t=[vs(e.shape)];return q(e,t)}function tD(e){if(e.rank<=1)throw new K(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);let t=[e.shape[0],vs(e.shape,1)];return q(e,t)}function io(e,t,a){return Z(()=>{switch(e.rank){case 1:return Kf(e,t,a);case 2:return B2(e,[t,0],[a,e.shape[1]]);case 3:return du(e,[t,0,0],[a,e.shape[1],e.shape[2]]);case 4:return hu(e,[t,0,0,0],[a,e.shape[1],e.shape[2],e.shape[3]]);case 5:return _e(e,[t,0,0,0,0],[a,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return _e(e,[t,0,0,0,0,0],[a,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new K(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}})}function im(e,t,a){return Z(()=>{switch(e.rank){case 1:return Kf(e,t,a);case 2:return B2(e,[0,t],[e.shape[0],a]);case 3:return du(e,[0,0,t],[e.shape[0],e.shape[1],a]);case 4:return hu(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],a]);default:throw new K(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Dp(e,t,a,r){return Z(()=>{switch(e.rank){case 1:return Kf(e,t,a);case 2:switch(r){case 1:return io(e,t,a);case 2:return im(e,t,a);default:throw new K(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return io(e,t,a);case 2:return du(e,[0,t,0],[e.shape[0],a,e.shape[2]]);case 3:return im(e,t,a);default:throw new K(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return io(e,t,a);case 2:return hu(e,[0,t,0,0],[e.shape[0],a,e.shape[2],e.shape[3]]);case 3:return hu(e,[0,0,t,0],[e.shape[0],e.shape[1],a,e.shape[3]]);case 4:return im(e,t,a);default:throw new K(`The axis is not within the rank of the tensor ${r}`)}default:throw new K(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function n1(e,t=-1){let a;return t<0&&(a=e[0].rank,a!==0?t=a:t=0),t===e[0].rank&&(t=-1),Ct(e,t)}function mx(e,t){switch(e.rank){case 1:return x3([e,t]);case 2:return Df([e,t],0);case 3:return b3([e,t],0);case 4:return v3([e,t],0);default:throw new K(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function og(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new K(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return zr(e,t)}function d0(e,t=0,a=1,r,n){return V3(e,t,a,r,n)}function yn(e,t,a,r){if(e.rank<2||t.rank<2)throw new We(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){let n=e.shape.slice(-1)[0],s=t.shape.slice(-2)[0];if(n!==s)throw new We(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(e.rank===2&&t.rank===2)return Ms.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?lg(e.rank,r,an()):null,activation:a});{let n=e.shape.slice(),s=n.pop();e=q(e,[-1,s]);let i=t.shape.slice(),o=i.pop(),l=i.pop(),d=[...i,o],u=Array.from({length:t.rank},(f,m)=>m===0?t.rank-2:m<=t.rank-2?m-1:m);t=q(Ye(t,u),[l,-1]);let h=[...n,...d],p=!1,c=!1;return q(Ms.matMul({a:e,b:t,transposeA:p,transposeB:c,bias:r?lg(e.rank,r,an()):null,activation:a}),h)}}function Nw(e,t,a){return Z(()=>(Array.isArray(t)?t=Lt(t,"int32"):t=pe(t,"int32"),ou(e,t,a)))}function Xh(e){return V(e,e)}function lg(e,t,a){let r=t.shape;if(t.rank!==1&&t.rank!==e)throw new K(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(e===5){if(a==="channelsFirst")return r.length===1?q(t,[1,r[0],1,1,1]):q(t,[1,r[3],r[0],r[1],r[2]]);if(a==="channelsLast")return r.length===1?q(t,[1,1,1,1,r[0]]):q(t,[1].concat(r))}else if(e===4){if(a==="channelsFirst")return r.length===1?q(t,[1,r[0],1,1]):q(t,[1,r[2],r[0],r[1]]);if(a==="channelsLast")return r.length===1?q(t,[1,1,1,r[0]]):q(t,[1].concat(r))}else if(e===3){if(a==="channelsFirst")return r.length===1?q(t,[1,r[0],1]):q(t,[1,r[1],r[0]]);if(a==="channelsLast")return r.length===1?q(t,[1,1,r[0]]):q(t,[1].concat(r))}else if(e<3)return t;throw new K(`Unsupported input rank by biasAdd: ${t.rank}`)}function sn(e,t,a){return Z(()=>(a==null&&(a=an()),Gt(a),ie(e,lg(e.rank,t,a))))}function aD(e,t=1){if(t!==1)throw new We(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Lh(e)}function rD(e){return Z(()=>ge(e,ie(Qt(e),1)))}function Ew(e,t,a,r){return Z(()=>aw(e,t,a,r))}function nD(e){return Z(()=>{let t=ie(.5,V(.2,e));return hr(t,0,1)})}function Kh(e,t,a=!1){return a?e():t()}var sD=["fanIn","fanOut","fanAvg"],iD=["normal","uniform","truncatedNormal"];function oD(e){cl(sD,"FanMode",e)}function lD(e){cl(iD,"Distribution",e)}var Lr=class extends oe.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},s1=class extends Lr{apply(e,t){return Ut(e,t)}};s1.className="Zeros";oe.registerClass(s1);var h0=class extends Lr{apply(e,t){return dr(e,t)}};h0.className="Ones";oe.registerClass(h0);var i1=class extends Lr{constructor(e){super();if(typeof e!="object")throw new K(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new K(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Z(()=>V(Ie(this.value),dr(e,t)))}getConfig(){return{value:this.value}}};i1.className="Constant";oe.registerClass(i1);var o1=class extends Lr{constructor(e){super();this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Qu(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};o1.className="RandomUniform";oe.registerClass(o1);var l1=class extends Lr{constructor(e){super();this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new We(`randomNormal does not support dType ${t}.`);return d0(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};l1.className="RandomNormal";oe.registerClass(l1);var u1=class extends Lr{constructor(e){super();this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new We(`truncatedNormal does not support dType ${t}.`);return Jf(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};u1.className="TruncatedNormal";oe.registerClass(u1);var d1=class extends Lr{constructor(e){super();this.gain=e.gain!=null?e.gain:1}apply(e,t){return Z(()=>{if(e.length!==2||e[0]!==e[1])throw new K("Identity matrix initializer can only be used for 2D square matrices.");return V(this.gain,S2(e[0]))})}getConfig(){return{gain:this.gain}}};d1.className="Identity";oe.registerClass(d1);function uD(e,t="channelsLast"){let a,r;if(Gt(t),e.length===2)a=e[0],r=e[1];else if([3,4,5].indexOf(e.length)!==-1){if(t==="channelsFirst"){let n=vs(e,2);a=e[1]*n,r=e[0]*n}else if(t==="channelsLast"){let n=vs(e,0,e.length-2);a=e[e.length-2]*n,r=e[e.length-1]*n}}else{let n=vs(e);a=Math.sqrt(n),r=Math.sqrt(n)}return[a,r]}var Xa=class extends Lr{constructor(e){super();if(e.scale<0)throw new K(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,oD(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,lD(this.distribution),this.seed=e.seed}apply(e,t){let a=uD(e),r=a[0],n=a[1],s=this.scale;if(this.mode==="fanIn"?s/=Math.max(1,r):this.mode==="fanOut"?s/=Math.max(1,n):s/=Math.max(1,(r+n)/2),this.distribution==="normal"){let i=Math.sqrt(s);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new We(`${this.getClassName()} does not support dType ${t}.`);return Jf(e,0,i,t,this.seed)}else{let i=Math.sqrt(3*s);return Qu(e,-i,i,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};Xa.className="VarianceScaling";oe.registerClass(Xa);var p0=class extends Xa{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Xa.className}};p0.className="GlorotUniform";oe.registerClass(p0);var c0=class extends Xa{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Xa.className}};c0.className="GlorotNormal";oe.registerClass(c0);var f0=class extends Xa{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Xa.className}};f0.className="HeNormal";oe.registerClass(f0);var m0=class extends Xa{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Xa.className}};m0.className="HeUniform";oe.registerClass(m0);var g0=class extends Xa{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Xa.className}};g0.className="LeCunNormal";oe.registerClass(g0);var y0=class extends Xa{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Xa.className}};y0.className="LeCunNormal";oe.registerClass(y0);var h1=class extends Lr{constructor(e){super();if(this.DEFAULT_GAIN=1,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,this.seed!=null)throw new We("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return Z(()=>{if(e.length<2)throw new We("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);let a=e[0]>e[1]?[e[1],e[0]]:e,r=d0(a,0,1,"float32"),n=pw.gramSchmidt(r);return e[0]>e[1]&&(n=Ye(n)),V(this.gain,n)})}getConfig(){return{gain:this.gain,seed:this.seed}}};h1.className="Orthogonal";oe.registerClass(h1);var gx={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function yx(e,t={}){return jh(e,oe.SerializationMap.getMap().classNameMap,t,"initializer")}function Rt(e){return Y2(e)}function Tt(e){if(typeof e=="string"){let t=e in gx?gx[e]:e;if(t==="GlorotNormal")return new c0;if(t==="GlorotUniform")return new p0;if(t==="HeNormal")return new f0;if(t==="HeUniform")return new m0;if(t==="LeCunNormal")return new g0;if(t==="LeCunUniform")return new y0;{let a={};return a.className=t,a.config={},yx(a)}}else return e instanceof Lr?e:yx(e)}function dD(){return new s1}function hD(){return new h0}function pD(e){return new i1(e)}function cD(e){return new o1(e)}function fD(e){return new l1(e)}function mD(e){return new u1(e)}function gD(e){return new d1(e)}function yD(e){return new Xa(e)}function AD(e){return new p0(e)}function xD(e){return new c0(e)}function bD(e){return new f0(e)}function vD(e){return new m0(e)}function wD(e){return new g0(e)}function kD(e){return new y0(e)}function ID(e){return new h1(e)}var Rw={};ze(Rw,{Layer:()=>Qe,RNN:()=>Qn,RNNCell:()=>Jh,activation:()=>sL,add:()=>fL,alphaDropout:()=>YL,average:()=>mL,averagePooling1d:()=>vy,averagePooling2d:()=>wy,averagePooling3d:()=>ky,avgPool1d:()=>IL,avgPool2d:()=>TL,avgPool3d:()=>NL,avgPooling1d:()=>SL,avgPooling2d:()=>CL,avgPooling3d:()=>EL,batchNormalization:()=>vL,bidirectional:()=>UL,concatenate:()=>gL,conv1d:()=>ZP,conv2d:()=>YP,conv2dTranspose:()=>JP,conv3d:()=>QP,conv3dTranspose:()=>eL,convLstm2d:()=>LL,convLstm2dCell:()=>WL,cropping2D:()=>aL,dense:()=>iL,depthwiseConv2d:()=>nL,dot:()=>bL,dropout:()=>oL,elu:()=>GP,embedding:()=>cL,flatten:()=>uL,gaussianDropout:()=>ZL,gaussianNoise:()=>KL,globalAveragePooling1d:()=>RL,globalAveragePooling2d:()=>FL,globalMaxPool1d:()=>jL,globalMaxPool2d:()=>HL,globalMaxPooling1d:()=>Ek,globalMaxPooling2d:()=>Rk,gru:()=>ML,gruCell:()=>_L,input:()=>Jw,inputLayer:()=>UP,layerNormalization:()=>wL,leakyReLU:()=>HP,lstm:()=>zL,lstmCell:()=>OL,masking:()=>JL,maxPool1d:()=>qL,maxPool2d:()=>XL,maxPooling1d:()=>Fk,maxPooling2d:()=>$k,maxPooling3d:()=>$L,maximum:()=>yL,minimum:()=>AL,multiply:()=>xL,permute:()=>pL,prelu:()=>qP,reLU:()=>jP,repeatVector:()=>dL,reshape:()=>hL,rnn:()=>BL,separableConv2d:()=>tL,simpleRNN:()=>DL,simpleRNNCell:()=>PL,softmax:()=>XP,spatialDropout1d:()=>lL,stackedRNNCells:()=>VL,thresholdedReLU:()=>KP,timeDistributed:()=>GL,upSampling2d:()=>rL,zeroPadding2d:()=>kL});var SD=0;function Fw(){return SD++}var Pp={};function A0(e=""){return e in Pp||(Pp[e]=0),Pp[e]+=1,e+Pp[e].toString()}function ug(e){return Array.isArray(e)&&Array.isArray(e[0])}function zc(e){return e.length===0?[]:Array.isArray(e[0])?e:[e]}function Be(e){let t;if(Array.isArray(e)){if(e.length!==1)throw new K(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function ut(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(e.length===1)return e=e,e[0];throw new K(`Expected exactly 1 Shape; got ${e.length}`)}else return e}function Oc(e){let t=0;for(let a of e)a.shape.length===0?t+=1:t+=a.shape.reduce((r,n)=>r*n);return t}var Ax="Variable",$w=class{constructor(e,t="float32",a=Ax,r=!0,n=null){this.dtype=t==null?"float32":t,this.shape=e.shape,this.id=Fw(),a=a==null?Ax:a,this.originalName=Sw(a),this.name=Tw(this.originalName),this.trainable_=r,this.constraint=n,this.val=Y3(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),TD(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function TD(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}function dg(e){return e.map(t=>t.read())}function p1(e){e.forEach(t=>{t[0].write(t[1])})}var Xt=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},Kr=class{constructor(e,t,a,r,n,s,i){this.dtype=e,this.shape=t,this.sourceLayer=a,this.inputs=r,this.callArgs=n,this.outputTensorIndex=i,this.id=Fw(),s!=null&&(this.originalName=Sw(s),this.name=Tw(this.originalName)),this.rank=t.length}},CD=0,x0=class{constructor(e,t){this.callArgs=t,this.id=CD++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let a of e.inboundLayers)a!=null&&a.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},ND=0,Qe=class extends oe.Serializable{constructor(e={}){super();this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=ND++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let a=this.getClassName();t=On(a)+"_"+A0(a)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let a;if(e.batchInputShape!=null)a=e.batchInputShape;else if(e.inputShape!=null){let n=null;e.batchSize!=null&&(n=e.batchSize),a=[n].concat(e.inputShape)}this.batchInputShape=a;let r=e.dtype;r==null&&(r=e.inputDType),r==null&&(r="float32"),this.dtype=r}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new Xr(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new K(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return ja(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return ja(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new zn(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new zn(`Layer ${this.name} is not connected, no input to return.`);return ja(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new zn(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new zn(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return ja(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=wt(e),this.inputSpec==null||this.inputSpec.length===0)return;let t=wt(this.inputSpec);if(e.length!==t.length)throw new K(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let a=0;a<e.length;a++){let r=e[a],n=t[a];if(n==null)continue;let s=r.rank;if(n.ndim!=null&&s!==n.ndim)throw new K(`Input ${a} is incompatible with layer ${this.name}: expected ndim=${n.ndim}, found ndim=${s}`);if(n.maxNDim!=null&&s>n.maxNDim)throw new K(`Input ${a} is incompatible with layer ${this.name}: expected max_ndim=${n.maxNDim}, found ndim=${s}`);if(n.minNDim!=null&&s<n.minNDim)throw new K(`Input ${a} is incompatible with layer ${this.name}: expected min_ndim=${n.minNDim}, found ndim=${s}.`);if(n.dtype!=null&&r.dtype!==n.dtype)throw new K(`Input ${a} is incompatible with layer ${this.name} : expected dtype=${n.dtype}, found dtype=${r.dtype}.`);if(n.axes){let i=r.shape;for(let o in n.axes){let l=Number(o),d=n.axes[o],u=l>=0?i[l]:i[i.length+l];if(d!=null&&[d,null].indexOf(u)===-1)throw new K(`Input ${a} is incompatible with layer ${this.name}: expected axis ${l} of input shape to have value ${d} but got shape ${i}.`)}}if(n.shape!=null)for(let i=0;i<n.shape.length;++i){let o=n.shape[i],l=r.shape[i];if(o!=null&&l!=null&&o!==l)throw new K(`Input ${a} is incompatible with layer ${this.name}: expected shape=${n.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let a=wt(e),r=!0;for(let s of a)if(!(s instanceof Kr)){r=!1;break}let n=!0;for(let s of a)if(s instanceof Kr){n=!1;break}if(r===n)throw new K("Arguments to apply() must be all SymbolicTensors or all Tensors");return so(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let s=[];for(let i of wt(e))s.push(i.shape);this.build(ja(s)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&n&&(this._refCount=1)}if(this.assertInputCompatibility(e),n){let s=this.call(e,t),i=wt(s),o=[];for(let l of i)a.indexOf(l)!==-1&&(l=l.clone()),o.push(l);if(s=ja(o),this.activityRegularizer!=null)throw new We("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}else{let s=ED(e),i=this.computeOutputShape(s),o,l=RD(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?s[0]:s),i!=null&&i.length>0&&Array.isArray(i[0])?o=i.map((d,u)=>new Kr(l,d,this,wt(e),t,this.name,u)):o=new Kr(l,i,this,wt(e),t,this.name),this.addInboundNode(e,o,null,null,s,i,t),this._refCount++,this.activityRegularizer!=null)throw new We("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return o}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((a,r)=>{a!=null&&e[r]!=null&&e[r]!==a&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new zn(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let a=JSON.stringify(t.outputShapes);e.indexOf(a)===-1&&e.push(a)}if(e.length===1){let t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new zn(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Xr(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Oc(this.weights)}build(e){this.built=!0}getWeights(e=!1){return dg(e?this.trainableWeights:this.weights)}setWeights(e){Z(()=>{let t=this.weights;if(t.length!==e.length)throw new K(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;let a=[],r=dg(t);for(let n=0;n<r.length;++n){let s=r[n],i=t[n],o=e[n];if(!w.arraysEqual(s.shape,o.shape))throw new K(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);a.push([i,o])}p1(a)})}addWeight(e,t,a,r,n,s,i,o){if(this._addedWeightNames.indexOf(e)!==-1)throw new K(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),a==null&&(a="float32"),this.fastWeightInitDuringBuild&&(r=o!=null?o():Tt("zeros"));let l=r.apply(t,a),d=new $w(l,a,e,s,i);return l.dispose(),n!=null&&this.addLoss(()=>n.apply(d.read())),s==null&&(s=!0),s?this._trainableWeights.push(d):this._nonTrainableWeights.push(d),d}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=wt(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(a=>{if(a!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}addInboundNode(e,t,a,r,n,s,i=null){let o=wt(e);t=wt(t),a=wt(a),r=wt(r),n=zc(n),s=zc(s);let l=[],d=[],u=[];for(let h of o)l.push(h.sourceLayer),d.push(h.nodeIndex),u.push(h.tensorIndex);new x0({outboundLayer:this,inboundLayers:l,nodeIndices:d,tensorIndices:u,inputTensors:o,outputTensors:t,inputMasks:a,outputMasks:r,inputShapes:n,outputShapes:s},i);for(let h=0;h<t.length;h++)t[h].sourceLayer=this,t[h].nodeIndex=this.inboundNodes.length-1,t[h].tensorIndex=h}getConfig(){let e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function ED(e){e=wt(e);let t=[];for(let a of e)t.push(a.shape);return ja(t)}function RD(e){return"float32"}function Mw(e,t,a){if((t==null||a!=null&&a>0)&&(t=e.sourceLayer,a=e.nodeIndex),t.inboundNodes.length===0)return[e];{let r=t.inboundNodes[a];if(r.inboundLayers.length===0)return r.inputTensors;{let n=[];for(let s=0;s<r.inboundLayers.length;s++){let i=r.inputTensors[s],o=r.inboundLayers[s],l=r.nodeIndices[s],d=Mw(i,o,l);for(let u of d)n.indexOf(u)===-1&&n.push(u)}return n}}}var td=class extends Qe{constructor(e){super({dtype:e.dtype,name:e.name!=null?e.name:A0("input").toString()});if(e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new K("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new K("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new K("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let a=e.dtype||"float32";this.batchInputShape=t,this.dtype=a,this.inputSpec=[{shape:t}];let r=new Kr(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new x0({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new K(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};td.className="InputLayer";oe.registerClass(td);function _w(e){if(e.batchShape==null&&e.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(e.batchShape!=null&&e.shape!=null)throw new K("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;e.shape!=null&&t==null&&(t=[null].concat(e.shape));let a=e.dtype;return a==null&&(a="float32"),new td({batchInputShape:t,name:e.name,dtype:a,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}async function ds(e){if(e==null)return;let t=[],a=[],r=[];for(let n in e){let s=e[n];if(typeof s!="number"){let i=s;t.push(i.data()),a.push(n),r.push(i)}}if(t.length>0){let n=await Promise.all(t);for(let s=0;s<n.length;++s)e[a[s]]=n[s][0];ne(r)}}function zw(e){if(e!=null)for(let t in e){let a=e[t];typeof a!="number"&&a.dispose()}}var FD=125,cu=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},Ow=class{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(let a of this.callbacks)await a.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(let a of this.callbacks)await a.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(let a of this.callbacks)await a.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(let a of this.callbacks)await a.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},$D=class extends cu{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});let a=t.size==null?0:t.size;this.seen+=a;for(let r in t){let n=t[r];if(typeof n=="number")this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+n*a;else{let s;r in this.totals?s=this.totals[r]:this.totals[r]=0;let i=Z(()=>ie(this.totals[r],V(n,a)));this.totals[r]=i,s!=null&&s.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(let a of this.params.metrics)this.totals[a]!=null&&(typeof this.totals[a]=="number"?t[a]=this.totals[a]/this.seen:Z(()=>{let r=V(ge(1,this.seen),this.totals[a]);t[a]=r,this.totals[a].dispose(),da(t[a])}))}},Dw=class extends cu{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(let a in t)this.history[a]==null&&(this.history[a]=[]),this.history[a].push(t[a])}async syncData(){let e=[],t=[],a=[];for(let n in this.history){let s=this.history[n];for(let i=0;i<s.length;++i)if(typeof s[i]!="number"){let o=s[i];e.push(o.data()),t.push(n),a.push(i)}}let r=await Promise.all(e);for(let n=0;n<r.length;++n)this.history[t[n]][a[n]].dispose(),this.history[t[n]][a[n]]=r[n][0]}},Pw=class extends cu{constructor(e,t){super();if(this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||cw,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=FD),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");w.isNumber(this.yieldEvery)&&(this.maybeWait=LO(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,a){let r=[];this.yield!=null&&(await ds(a),r.push(this.yield(e,t,a))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await ds(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let a=[];this.epochEnd!=null&&(await ds(t),a.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&a.push(this.nextFrameFunc()),await Promise.all(a)}async onBatchBegin(e,t){this.batchBegin!=null&&(await ds(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let a=[];this.batchEnd!=null&&(await ds(t),a.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?a.push(this.nextFrameFunc()):w.isNumber(this.yieldEvery)&&a.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(a)}async onTrainBegin(e){this.trainBegin!=null&&(await ds(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await ds(e),await this.trainEnd(e))}};function Lw(e,t){return e==null&&(e={}),e instanceof cu?[e]:Array.isArray(e)&&e[0]instanceof cu?e:wt(e).map(a=>new Pw(a,t))}var hn=class{constructor(){}static registerCallbackConstructor(e,t){w.assert(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),hn.checkForDuplicate(t),hn.constructors[e]==null&&(hn.constructors[e]=[]),hn.constructors[e].push(t)}static checkForDuplicate(e){for(let t in hn.constructors)hn.constructors[+t].forEach(a=>{if(a===e)throw new K("Duplicate callback constructor.")})}static clear(){hn.constructors={}}static createCallbacks(e){let t=[];for(let a in hn.constructors){let r=+a;e>=r&&t.push(...hn.constructors[r])}return t.map(a=>new a)}},c1=hn;c1.constructors={};function Ww(e,t,a,r,n,s,i,o,l){let d=new Dw,u=[new $D,...c1.createCallbacks(t)];e!=null&&u.push(...e),u.push(d);let h=new Ow(u);return h.setParams({epochs:a,initialEpoch:r,samples:n,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:d}}function Yr(e,t={},a=!1){return jh(e,oe.SerializationMap.getMap().classNameMap,t,"layer",a)}function Dc(e,t){return Z(()=>{e.dtype!=="float32"&&(e=pe(e,"float32"));let a=we(Xh(e),t,!0),r=Yu(a.shape,ta()),n=wa(Zn(a,r));return ge(e,n)})}function fl(e,t){return Z(()=>Pt(Xh(me(t,e)),-1))}function b0(e,t){return Z(()=>Pt(Qt(me(t,e)),-1))}function ad(e,t){return Z(()=>{let a=me(e,t),r=hr(Qt(e),ta(),Number.MAX_VALUE),n=Qt(ge(a,r));return V(100,Pt(n,-1))})}function MD(e,t){return Z(()=>{let a=hr(t,ta(),Number.MAX_VALUE),r=vr(ie(1,a)),n=hr(e,ta(),Number.MAX_VALUE),s=vr(ie(1,n));return Pt(Xh(me(r,s)),-1)})}function _D(e,t){return Z(()=>{let a=Zn(0,me(1,V(e,t)));return Pt(Xh(a),-1)})}function zD(e,t){return Z(()=>{let a=Zn(0,me(1,V(e,t)));return Pt(a,-1)})}function OD(e,t){return Z(()=>{let a=we(V(e,t),-1),r=Fa(V(me(1,e),t),-1);return Zn(0,ie(1,me(r,a)))})}function DD(e,t){return Z(()=>{let a=Math.log(2),r=me(t,e),n=me(ie(r,Ju(V(-2,r))),a);return Pt(n,-1)})}function uh(e,t,a=!1){return Z(()=>{if(a)t=Vh(t);else{let r=we(t,t.shape.length-1,!0);t=ge(t,r)}return t=hr(t,ta(),1-ta()),$t(we(V(pe(e,"float32"),vr(t)),t.shape.length-1))})}function Pc(e,t,a=!1){return Z(()=>{let r=pe(Wh(eD(e)),"int32");t=hr(t,ta(),1-ta());let n=t.shape,s=q(ih(r,n[n.length-1]),n);return uh(s,t,a)})}function PD(e,t){if(!w.arraysEqual(e.shape,t.shape))throw new K(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return Z(()=>{let a=In(t),r=$t(Qt(t));return ie(me(a,V(t,e)),Bf(br(r)))})}function v0(e,t){return Z(()=>{let a;return a=hr(t,ta(),1-ta()),a=vr(ge(a,me(1,a))),Pt(PD(e,a),-1)})}function LD(e,t){return Z(()=>{let a=hr(e,ta(),1),r=hr(t,ta(),1);return we(V(e,vr(ge(a,r))),-1)})}function WD(e,t){return Z(()=>{let a=vr(ie(ta(),t));return Pt(me(t,V(e,a)),-1)})}function f1(e,t){return Z(()=>{let a=Dc(e,-1),r=Dc(t,-1),n=V(a,r);return $t(we(n,-1))})}var Lc={meanSquaredError:fl,meanAbsoluteError:b0,meanAbsolutePercentageError:ad,meanSquaredLogarithmicError:MD,squaredHinge:_D,hinge:zD,categoricalHinge:OD,logcosh:DD,categoricalCrossentropy:uh,sparseCategoricalCrossentropy:Pc,binaryCrossentropy:v0,kullbackLeiblerDivergence:LD,poisson:WD,cosineProximity:f1};function om(e){if(typeof e=="string"){if(e in Lc)return Lc[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new K(t)}else return e}function m1(e,t){return Z(()=>{let a=V(.5,wr(t)),r=u0(cr(t,a),e.dtype);return Pt(xr(e,r),-1)})}function g1(e,t){return Z(()=>u0(xr(Gn(e,-1),Gn(t,-1)),"float32"))}function Bw(e,t){return Z(()=>pe(we(tn(xr(e,1),xr(t,1))),"float32"))}function BD(e,t){return Z(()=>pe(we(tn(xr(e,1),xr(t,0))),"float32"))}function VD(e,t){return Z(()=>pe(we(tn(xr(e,0),xr(t,1))),"float32"))}function Vw(e,t){return Z(()=>{let a=Bw(e,t),r=VD(e,t),n=ie(a,r);return pe(Ma(cr(n,0),ge(a,n),0),"float32")})}function UD(e,t){return Z(()=>{let a=Bw(e,t),r=BD(e,t),n=ie(a,r);return pe(Ma(cr(n,0),ge(a,n),0),"float32")})}function Uw(e,t){return v0(e,t)}function Gw(e,t){return e.rank===t.rank&&(e=ft(e,[e.rank-1])),t=Gn(t,-1),t.dtype!==e.dtype&&(t=pe(t,e.dtype)),pe(xr(e,t),"float32")}var GD=fl,jD=fl,HD=b0,qD=b0,XD=ad,KD=ad,y1=uh,ZD=f1,jw=Pc,Wc={binaryAccuracy:m1,categoricalAccuracy:g1,precision:Vw,categoricalCrossentropy:y1,sparseCategoricalCrossentropy:jw,mse:GD,MSE:jD,mae:HD,MAE:qD,mape:XD,MAPE:KD,cosine:ZD};function YD(e){if(typeof e=="string"&&e in Wc)return Wc[e];if(typeof e!="string"&&e!=null)return e;throw new K(`Unknown metric ${e}`)}function Lp(e){if(cn(e!==null,`Unknown LossOrMetricFn ${e}`),typeof e=="string")return e;{let t;for(let a of Object.keys(Lc))if(Lc[a]===e){t=a;break}if(t!==void 0)return t;for(let a of Object.keys(Wc))if(Wc[a]===e){t=a;break}return t!==void 0?t:e.name}}function JD(e){let t={Adagrad:()=>qi.adagrad(.01),Adadelta:()=>qi.adadelta(1,.95,ta()),Adam:()=>qi.adam(.001,.9,.999,ta()),Adamax:()=>qi.adamax(.002,.9,.999,ta(),0),RMSProp:()=>qi.rmsprop(.001,.9,0,ta()),SGD:()=>qi.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new K(`Unknown Optimizer ${e}`)}var xx=1*1024*1024;function bx(e,t,a=!1){if(e==null||typeof e!="object"||Object.getPrototypeOf(e)!==Object.prototype||!hg(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(a){let r=JSON.stringify(e);r.length>xx&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${r.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${xx}.`)}}function hg(e){if(e===null)return!0;if(typeof e=="object")if(Object.getPrototypeOf(e)===Object.prototype){let t=Object.keys(e);for(let a of t)if(typeof a!="string"||!hg(e[a]))return!1;return!0}else if(Array.isArray(e)){for(let t of e)if(!hg(t))return!1;return!0}else return!1;else{let t=typeof e;return t==="string"||t==="number"||t==="boolean"}}function QD(e,t,a,r=console.log){let n=tP(e),s=["Layer (type)","Input Shape","Output shape","Param #"];n?(t=t||90,a=a||[.32,.61,.89,1]):(t=t||115,a=a||[.24,.48,.7,.8,1]),a[a.length-1]<=1&&(a=a.map(u=>Math.floor(t*u)));let i;if(!n){s.push("Receives inputs"),i=[];for(let u in e.nodesByDepth)i.push(...e.nodesByDepth[u])}r("_".repeat(t)),Bc(s,a,r),r("=".repeat(t));let o=e.layers;for(let u=0;u<o.length;++u)n?aP(o[u],a,r):rP(o[u],a,i,r),r((u===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let l=eP(e),d=Oc(e.nonTrainableWeights);r(`Total params: ${l+d}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${d}`),r("_".repeat(t))}function eP(e){let t;return e.collectedTrainableWeights!=null?t=Oc(e.collectedTrainableWeights):t=Oc(e.trainableWeights),t}function tP(e){let t=!0,a=[],r=[];for(let n in e.nodesByDepth)a.push(e.nodesByDepth[n]);for(let n of a){if(n.length>1||n.length===1&&n[0].inboundLayers.length>1){t=!1;break}r.push(...n)}if(t)for(let n of e.layers){let s=!1;for(let i of n.inboundNodes)if(r.indexOf(i)!==-1)if(s){t=!1;break}else s=!0;if(!t)break}return t}function Bc(e,t,a=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);a(r)}function aP(e,t,a){let r,n;try{n=e.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch{n="multiple"}try{r=JSON.stringify(e.outputShape)}catch{r="multiple"}let s=e.name,i=e.getClassName(),o=[`${s} (${i})`,n,r,e.countParams().toString()];Bc(o,t,a)}function rP(e,t,a,r){let n,s;try{s=e.inboundNodes.map(h=>JSON.stringify(h.inputShapes)).join(",")}catch{s="multiple"}try{n=JSON.stringify(e.outputShape)}catch{n="multiple"}let i=[];for(let h of e.inboundNodes)if(!(a!=null&&a.length>0&&a.indexOf(h)===-1))for(let p=0;p<h.inboundLayers.length;++p){let c=h.inboundLayers[p].name,f=h.nodeIndices[p],m=h.tensorIndices[p];i.push(`${c}[${f}][${m}]`)}let o=e.name,l=e.getClassName(),d=i.length===0?"":i[0],u=[`${o} (${l})`,s,n,e.countParams().toString(),d];Bc(u,t,r);for(let h=1;h<i.length;++h)Bc(["","","","",i[h]],t,r)}function Hw(e,t,a){return(e==="inboundNodes"||e==="outputLayers"||e==="inputLayers")&&t===0&&typeof a=="string"}function dh(e,t){if(e===null)return null;if(typeof e=="string")return Zi(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let a=[],r=e.length;for(let n=0;n<r;++n){let s=e[n];Hw(t,n,s)?a.push(s):a.push(dh(s,t))}return a}else{let a={};for(let r of Object.keys(e)){let n=e[r];if(r==="name"&&typeof n=="string")a[r]=n;else{let s=Zi(r);a[s]=dh(n,s)}}return a}}function pg(e,t){if(e==null)return null;if(typeof e=="string")return On(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let a=[],r=e.length;for(let n=0;n<r;++n){let s=e[n];Hw(t,n,s)?a.push(s):a.push(pg(s,t))}return a}else{let a={};for(let r of Object.keys(e)){let n=e[r],s=On(r);(r==="name"||r==="className")&&typeof n=="string"?a[s]=n:a[s]=pg(n,r)}return a}}var A1="0.0.0";function nP(e,t){if(e.dtype==null||e.dtype===t.dtype)return t;try{return pe(t,e.dtype)}catch{throw new K(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}var eo=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof eo)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,a){if(this.id2Value[e.id]==null)this.id2Value[e.id]=nP(e,t),this.name2Id[e.name]=e.id,a!=null&&(this.id2Mask[e.id]=a);else throw new K(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Kr){if(this.id2Value[e.id]==null)throw new K(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{let t=this.name2Id[e];if(t==null)throw new K(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Kr){if(this.id2Value[e.id]==null)throw new K(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{let t=this.name2Id[e];if(t==null)throw new K(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&ne(this.id2Mask)}},lm={},vx={};function Od(e,t,a,r){let n=a==null?!1:a.training,s=Array.isArray(e),i=s?e:[e],o=i.map(f=>f.name),l=[],d=t.names();for(let f of o)d.indexOf(f)!==-1?l.push(t.getValue(f)):l.push(null);r!=null&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);let u=o.join(",")+"|"+t.names().join(","),h,p;if(lm[u]==null){let f=sP(i,t);h=f.sorted,p=f.recipientCounts,lm[u]=h,vx[u]=p}h=lm[u],p={},n||Object.assign(p,vx[u]);let c=new eo(t);for(let f=0;f<h.length;++f){if(r!=null){let R=Fc().numTensors;R>r.maxNumTensors&&(r.maxNumTensors=R),R<r.minNumTensors&&(r.minNumTensors=R)}let m=h[f],g=m.sourceLayer;if(g instanceof td)continue;let y=[],A=[],x=[],b=!1;for(let R of m.inputs){let z=c.getValue(R),F=c.getMask(R);y.push(z),A.push(F),F!=null&&(b=!0),n||(p[R.name]--,p[R.name]===0&&!t.hasKey(R)&&o.indexOf(R.name)===-1&&!z.isDisposed&&R.sourceLayer.stateful!==!0&&x.push(z))}b&&(a=a||{},a.mask=A[0]);let v=wt(g.apply(y,a)),T=null;g.supportsMasking&&(T=g.computeMask(y,A));let C=oP(m),E=Array.isArray(C)?C:[C];for(let R=0;R<E.length;++R){c.hasKey(E[R])||c.add(E[R],v[R],Array.isArray(T)?T[0]:T);let z=o.indexOf(E[R].name);z!==-1&&(l[z]=v[R])}n||ne(x)}return c.disposeMasks(),s?l:l[0]}function sP(e,t){w.assert(e!=null&&e.length>0,()=>"Expected at least one fetch, got none");let a=[],r={};if(e.length===1){let n=wx(e[0],t);a=n.sorted,r=n.recipientMap}else{let n=new Set;for(let s of e){let{sorted:i,recipientMap:o}=wx(s,t);for(let l of i)n.has(l.name)||(a.push(l),n.add(l.name));for(let l in o)r[l]==null&&(r[l]=new Set),o[l].forEach(d=>r[l].add(d))}}return{sorted:a,recipientCounts:iP(r)}}function iP(e){let t={};for(let a in e)t[a]=e[a].size;return t}function wx(e,t){let a=new Set,r=[],n={};for(let o of t.names())a.add(o);let s=[],i=[];for(s.push(e);s.length>0;){let o=s[s.length-1];if(a.has(o.name)){s.pop();continue}let l=i[i.length-1]===s.length-1;if(o.inputs.length===0||l)s.pop(),r.push(o),a.add(o.name),l&&i.pop();else{i.push(s.length-1);for(let d of o.inputs)n[d.name]==null&&(n[d.name]=new Set),n[d.name].add(o.name),!a.has(d.name)&&s.push(d)}}return{sorted:r,recipientMap:n}}function oP(e){let t;if(e.sourceLayer.inboundNodes.length===1)t=e.sourceLayer.output;else{let a=null;for(let r=0;r<e.sourceLayer.inboundNodes.length;++r)for(let n of e.sourceLayer.inboundNodes[r].outputTensors)if(n.id===e.id){a=r;break}t=e.sourceLayer.getOutputAt(a)}return t}var pn=class extends Qe{constructor(e){super({});if(this.containerNodes=new Set,this.name=e.name,this.name==null){let y=this.getClassName().toLowerCase();this.name=A0(y)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],bs(this.inputs).length!==this.inputs.length)throw new K(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(y=>y.name)}`);bs(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(y=>y.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let y of this.outputs){let A=y.sourceLayer,x=y.nodeIndex,b=y.tensorIndex;this.outputLayers.push(A),this.outputLayersNodeIndices.push(x),this.outputLayersTensorIndices.push(b)}for(let y of this.inputs){let A=y.sourceLayer,x=y.nodeIndex,b=y.tensorIndex;cn(x===0,"input layer has >1 nodes"),cn(b===0,"input layer has >1 tensors"),this.inputLayers.push(A),this.inputLayersNodeIndices.push(x),this.inputLayersTensorIndices.push(b)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){let A=this.inputLayers[y];if(!(A instanceof td))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${y} (0-based) originates from layer type ${A.getClassName()}.`);this.inputNames.push(A.name),this.feedInputShapes.push(A.batchInputShape),this.feedInputNames.push(A.name)}for(let y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map(y=>y.shape),this.internalOutputShapes=this.outputs.map(y=>y.shape);let t={},a={},r={},n={},s={},i=[],o=(y,A,x,b,v,T)=>{(b==null||v==null||T==null)&&(b=y.sourceLayer,v=y.nodeIndex,T=y.tensorIndex);let C=b.inboundNodes[v];if(x.indexOf(C)!==-1)throw new Xr(`The tensor ${y.name} at layer "${b.name}" is part of a cycle.`);if(A.indexOf(C)!==-1)return;this.containerNodes.add(pn.nodeKey(b,v)),b.id in s||(s[b.id]=Object.keys(s).length),x.indexOf(C)===-1&&x.push(C);let E=C.inboundLayers.length;for(let R=0;R<E;R++){let z=C.inputTensors[R],F=C.inboundLayers[R],k=C.nodeIndices[R],D=C.tensorIndices[R];o(z,A,x,F,k,D)}for(A.push(C);x.indexOf(C)>=0;)x.splice(x.indexOf(C),1);i.push(C)},l=[],d=[];for(let y of this.outputs)o(y,l,d);let u=i.slice().reverse();for(let y of u){a[y.id]=y,y.id in t||(t[y.id]=0);let A=t[y.id],x=r[y.outboundLayer.id]==null?0:r[y.outboundLayer.id];A=Math.max(A,x),r[y.outboundLayer.id]=A,n[y.outboundLayer.id]=y.outboundLayer,t[y.id]=A;for(let b=0;b<y.inboundLayers.length;b++){let v=y.inboundLayers[b],T=y.nodeIndices[b],C=v.inboundNodes[T],E=t[C.id]==null?0:t[C.id];t[C.id]=Math.max(A+1,E),a[C.id]=C}}let h={};for(let y in t){let A=t[y];A in h||(h[A]=[]),h[A].push(a[y])}let p={};for(let y in r){let A=r[y];A in p||(p[A]=[]),p[A].push(n[y])}let c=Object.keys(p).map(y=>parseInt(y,10)).sort(Op);this.layers=[];for(let y of c){let A=p[y];A.sort((x,b)=>{let v=s[x.id],T=s[b.id];return v<T?-1:v>T?1:0});for(let x of A)x instanceof pn&&this.internalContainerRefs.push(x),this.layers.push(x)}this.layersByDepth=p,c=Object.keys(h).map(y=>parseInt(y,10)).sort(Op);let f=this.inputs.slice(),m=[];for(let y of c)for(let A of h[y]){let x=A.outboundLayer;if(x!=null){for(let b of A.inputTensors)if(f.indexOf(b)===-1)throw new Xr(`Graph disconnected: cannot obtain value for tensor ${b} at layer "${x.name}". The following previous layers were accessed without issue: ${m}`);for(let b of A.outputTensors)f.push(b);m.push(x.name)}}this.nodesByDepth=h;let g=this.layers.map(y=>y.name);for(let y of g){let A=g.filter(x=>x===y).length;if(A!==1)throw new Xr(`The name "${y}" is used ${A} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new x0({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(y=>null),outputMasks:this.outputs.map(y=>null),inputShapes:this.inputs.map(y=>y.shape),outputShapes:this.outputs.map(y=>y.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(a=>a.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new K("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let a of this.layers)t.push(...a.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let a={},r=0;for(let s of this.layers)for(let i of s.weights){if(a[i.originalName]!=null)throw new K(`Duplicate weight name: ${i.originalName}`);a[i.originalName]=i,r++}let n=[];for(let s in e){let i=s;if(a[s]==null){let o=s.split("/");i=o.slice(0,-2).concat([o[o.length-1]]).join("/")}if(a[i]!=null)n.push([a[i],e[s]]);else if(t)throw new K(`Provided weight data has no target variable: ${s}`);delete a[i]}if(t){let s=[];for(let i in a)s.push(i);if(s.length>0)throw new K(`${s.length} of ${r} weights are not set: ${s}`)}p1(n)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${A1}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let a=pg(this.updatedConfig());return t?JSON.stringify(a):a}call(e,t){return Z(()=>{e=wt(e);let a=new eo;for(let r=0;r<this.inputs.length;++r)a.add(this.inputs[r],e[r]);return Od(this.outputs,a,t)})}computeMask(e,t){return Z(()=>{e=wt(e);let a;return t==null?a=fo(null,e.length):a=wt(t),this.runInternalGraph(e,a)[1]})}computeOutputShape(e){let t=zc(e);if(t.length!==this.inputLayers.length)throw new K(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let a={};for(let i=0;i<t.length;i++){let o=this.inputLayers[i],l=t[i],d=o.name+"_0_0";a[d]=l}let r=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(Op);if(r.length>1)for(let i of r){let o=this.nodesByDepth[i];for(let l of o){let d=l.outboundLayer;if(this.inputLayers.map(f=>f.id).indexOf(d.id)!==-1)continue;let u=[];for(let f=0;f<l.inboundLayers.length;f++){let m=l.inboundLayers[f],g=l.nodeIndices[f],y=l.tensorIndices[f],A=`${m.name}_${g}_${y}`,x=a[A];u.push(x)}let h=d.computeOutputShape(ja(u)),p=zc(h),c=d.inboundNodes.indexOf(l);for(let f=0;f<p.length;f++){let m=`${d.name}_${c}_${f}`;a[m]=p[f]}}}let n=[],s=[];for(let i=0;i<this.outputLayers.length;i++){let o=this.outputLayers[i],l=this.outputLayersNodeIndices[i],d=this.outputLayersTensorIndices[i],u=`${o.name}_${l}_${d}`;s.push(u)}for(let i=0;i<s.length;i++){let o=s[i];cn(o in a),n.push(a[o])}return ja(n)}runInternalGraph(e,t){t==null&&(t=fo(null,e.length));let a={};for(let o=0;o<this.inputs.length;++o){let l=this.inputs[o],d=e[o],u=t[o];a[l.id]=[d,u]}let r=Object.keys(this.nodesByDepth).map(o=>parseInt(o,10)).sort(Op);for(let o of r){let l=this.nodesByDepth[o];for(let d of l){let u=d.outboundLayer,h=d.inputTensors,p=d.outputTensors,c=new Array;for(let f of h)f.id in a&&c.push(a[f.id]);if(c.length===h.length){let f={},m,g,y,A;if(d.callArgs!=null&&(f=d.callArgs),c.length===1){let[x,b]=c[0];f.mask==null&&(f.mask=b),y=wt(u.call(x,f)),A=wt(u.computeMask(x,b)),m=[x],g=[b]}else m=c.map(x=>x[0]),g=c.map(x=>x[1]),f.mask==null&&(f.mask=g),y=wt(u.call(m,f)),A=wt(u.computeMask(m,g));if(u.activityRegularizer)throw new We("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let x=0;x<p.length;++x){let b=p[x],v=y[x],T=A[x];a[b.id]=[v,T]}}}}let n=[],s=[],i=[];for(let o of this.outputs){cn(o.id in a,`Could not compute output ${o.name} : ${o.id}`);let[l,d]=a[o.id];i.push(l.shape),n.push(l),s.push(d)}return[n,s,i]}buildNodeConversionMap(e){let t={},a;for(let r of this.layers){a=r instanceof pn?1:0;for(let n=0;n<r.inboundNodes.length;n++){let s=pn.nodeKey(r,n);this.containerNodes.has(s)&&(t[s]=a,a+=1)}}return t}getLayer(e,t){if(t!=null){if(this.layers.length<=t)throw new K(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}else if(e==null)throw new K("Provide either a layer name or layer index");for(let a of this.layers)if(a.name===e)return a;throw new K(`No such layer: ${e}`)}calculateLosses(){return Z(()=>{let e=[];for(let t of this.layers)for(let a=0;a<t.inboundNodes.length;++a){let r=pn.nodeKey(t,a);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e})}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),a=[];for(let s of this.layers){let i=s.getClassName(),o=s.getConfig(),l=[];for(let u=0;u<s.inboundNodes.length;u++){let h=s.inboundNodes[u],p=pn.nodeKey(s,u),c={};if(this.containerNodes.has(p)){if(h.callArgs)try{JSON.stringify(h.callArgs),c=h.callArgs}catch{console.warn(`Layer ${s.name} was passed non-serializable keyword arguments: ${h.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),c={}}if(h.inboundLayers.length>0){let f=[];for(let m=0;m<h.inboundLayers.length;m++){let g=h.inboundLayers[m],y=h.nodeIndices[m],A=h.tensorIndices[m],x=pn.nodeKey(g,y),b=t[x];b==null&&(b=0),f.push([g.name,b,A,c])}l.push(f)}}}let d={};d.name=s.name,d.className=i,d.config=o,d.inboundNodes=l,a.push(d)}e.layers=a;let r=[];for(let s=0;s<this.inputLayers.length;s++){let i=this.inputLayers[s],o=this.inputLayersNodeIndices[s],l=pn.nodeKey(i,o);if(!this.containerNodes.has(l))continue;let d=t[l];d==null&&(d=0);let u=this.inputLayersTensorIndices[s];r.push([i.name,d,u])}e.inputLayers=r;let n=[];for(let s=0;s<this.outputLayers.length;s++){let i=this.outputLayers[s],o=this.outputLayersNodeIndices[s],l=pn.nodeKey(i,o);if(!this.containerNodes.has(l))continue;let d=t[l];d==null&&(d=0);let u=this.outputLayersTensorIndices[s];n.push([i.name,d,u])}return e.outputLayers=n,e}static fromConfig(e,t,a={},r=!1){let n={},s={};function i(m,g){m.name in s?s[m.name].push(g):s[m.name]=[g]}function o(m,g){let y=[],A;for(let x of g){let b=x[0],v=x[1],T=x[2];if(A=x[3]==null?{}:x[3],!(b in n)){i(m,g);return}let C=n[b];if(C.inboundNodes.length<=v){i(m,g);return}let E=C.inboundNodes[v];y.push(E.outputTensors[T])}y.length>0&&m.apply(ja(y),A)}function l(m){let g=m.name,y=Yr(m,t.customObjects!=null?t.customObjects:{});y.setFastWeightInitDuringBuild(r),n[g]=y,m.inboundNodes.forEach(A=>{if(!(A instanceof Array))throw new K(`Corrupted configuration, expected array for nodeData: ${A}`);i(y,A)})}let d=t.name,u=t.layers;for(let m of u)l(m);for(;!PO(s);)for(let m of u){let g=n[m.name];if(g.name in s){let y=s[g.name];delete s[g.name];for(let A of y)o(g,A)}}let h=[],p=[],c=t.inputLayers;for(let m of c){let g=m[0],y=m[1],A=m[2];cn(g in n);let x=n[g].inboundNodes[y].outputTensors;h.push(x[A])}let f=t.outputLayers;for(let m of f){let g=m[0],y=m[1],A=m[2];cn(g in n);let x=n[g].inboundNodes[y].outputTensors;p.push(x[A])}return new e({inputs:h,outputs:p,name:d})}get stateful(){if(this._stateful)throw new K("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Z(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function lP(e,t,a){let r=t.length;if(e==null||Array.isArray(e)&&e.length===0)return t.map(n=>null);if(r===1)return Array.isArray(e)&&e.length===1?e:typeof e=="object"&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${a} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}else if(typeof e=="object"&&Object.keys(e).length>0&&typeof e[Object.keys(e)[0]]=="object"){let n=[];return t.forEach(s=>{s in e?n.push(e[s]):n.push(null)}),n}else throw new Error(`The model has multiple (${r}) outputs, so ${a} must be either an array with ${r} elements or an object with ${t} keys. Provided ${a} not understood: ${JSON.stringify(e)}`)}function qw(e,t){return lP(e,t,"classWeight")}async function Xw(e,t,a,r){if(t!=null||r!=null)throw new Error("Support sampleWeight is not implemented yet");if(a!=null){let n=Z(()=>{if(e.shape.length===1)return Ha(e);if(e.shape.length===2){if(e.shape[1]>1)return Gn(e,1);if(e.shape[1]===1)return q(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),s=Array.from(await n.data());ne(n);let i=[];return s.forEach(o=>{if(a[o]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${o} exists in the data but not in classWeight`);i.push(a[o])}),Lt(i,"float32")}else return null}function uP(e,t){return V(e,t)}var dP=32;function Kw(e,t){let a,r,n=t;a=n.xs,r=n.ys,w.assert(a!=null&&r!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);let s=kx("input",e.inputNames,a),i=kx("output",e.outputNames,r),o=s[0].shape[0];w.assert(s.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`),w.assert(i.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`);for(let l=0;l<s.length;l++)w.assert(s[l].shape[0]===o,()=>`Batch size mismatch: input ${e.inputNames[l]} has ${s[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);for(let l=0;l<i.length;l++)w.assert(i[l].shape[0]===o,()=>`Batch size mismatch: output ${e.outputNames[l]} has ${i[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);return{xs:s,ys:i}}function kx(e,t,a){if(a instanceof et)return[a];if(Array.isArray(a))return w.assert(a.length===t.length,()=>`Received an array of ${a.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),a;{let r=[];for(let n of t){if(a[n]==null)throw new K(`The feature data generated by the dataset lacks the required ${e} key '${n}'.`);r.push(a[n])}return r}}function hP(e){if(e.length===3)throw new We("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}async function pP(e,t,a){let r=a.batchesPerEpoch!=null;if(w.assert(e.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),w.assert(a!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),w.assert(a.epochs!=null&&a.epochs>0&&Number.isInteger(a.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${a.epochs}`),w.assert(!r||a.batchesPerEpoch>0&&Number.isInteger(a.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${a.batchesPerEpoch}`),w.assert(a.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let n=a.validationData!=null,s,i;if(n)if(Ix(a.validationData))w.assert(a.validationBatches==null||a.validationBatches>0&&Number.isInteger(a.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${a.validationBatches}`);else{let g=hP(a.validationData);s=g.xs,i=g.ys}let o=e.makeTrainFunction(),l=e.getDedupedMetricsNames(),d;n?d=l.slice().concat(l.map(g=>"val_"+g)):d=l.slice();let u=Lw(a.callbacks,a.yieldEvery),h=a.verbose==null?1:a.verbose,{callbackList:p,history:c}=Ww(u,h,a.epochs,null,null,cP(t,a),null,n,d);p.setModel(e),e.history=c,await p.onTrainBegin(),e.stopTraining_=!1;let f=a.initialEpoch==null?0:a.initialEpoch,m=await t.iterator();for(;f<a.epochs;){let g={};await p.onEpochBegin(f);let y=0,A=0;for(r||(m=await t.iterator());r?y<a.batchesPerEpoch:!0;){let x=await m.next();if(r&&x.done){console.warn(`You provided \`batchesPerEpoch\` as ${a.batchesPerEpoch}, but your dataset iterator ran out of data after ${y} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${a.batchesPerEpoch*a.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(x.value!=null){let{xs:b,ys:v}=Kw(e,x.value),T={};T.batch=A,T.size=b[0].shape[0],await p.onBatchBegin(A,T);let C=[];if(a.classWeight!=null){let z=qw(a.classWeight,e.outputNames);for(let F=0;F<z.length;++F)C.push(await Xw(v[F],null,z[F]))}let E=b.concat(v).concat(C),R=o(E);ne(E);for(let z=0;z<l.length;++z){let F=l[z],k=R[z];T[F]=k,da(k)}await p.onBatchEnd(A,T),zw(T),A++,y++}if(r?y>=a.batchesPerEpoch:x.done){if(n){let b;Ix(a.validationData)?b=wt(await e.evaluateDataset(a.validationData,{batches:a.validationBatches})):b=wt(e.evaluate(s,i,{batchSize:a.validationBatchSize==null?dP:a.validationBatchSize,verbose:0}));for(let v=0;v<e.metricsNames.length;++v)g[`val_${e.metricsNames[v]}`]=b[v]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(f,g),f++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function cP(e,t){let a=null;return t.batchesPerEpoch!=null?a=t.batchesPerEpoch:Number.isFinite(e.size)&&(a=e.size),a}function Ix(e){return typeof e.iterator=="function"}function fP(e){return typeof e.next=="function"}async function mP(e,t,a){a=a||{};let r=a.batches!=null,n=e.testFunction,s=[];if(a.verbose>0)throw new We("Verbose mode is not implemented yet.");w.assert(!r||a.batches>0&&Number.isInteger(a.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(a.batches)}`);let i=fP(t)?t:await t.iterator(),o=0,l=0;for(;r?l<a.batches:!0;){let d=await i.next();if(s=Z(()=>{if(d.value){let{xs:u,ys:h}=Kw(e,d.value),p=u.concat(h),c=Z(()=>n(p));if(ne(p),l===0)for(let m=0;m<c.length;++m)s.push(Ie(0));let f=p[0].shape[0];for(let m=0;m<c.length;++m){let g=c[m],y=s[m];s[m]=Z(()=>ie(s[m],V(f,g))),l>0&&ne(y)}ne(c),o+=f,++l}return s}),d.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${a.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let d=0;d<s.length;++d){let u=s[d];s[d]=ge(s[d],o),ne(u)}return ja(s)}function cg(e){w.assert(e>0&&Number.isInteger(e),()=>`batchSize is required to be a positive integer, but got ${e}`)}function Dd(e,t,a){return e==null?[null]:Array.isArray(e)?e.map(r=>io(r,t,a-t)):io(e,t,a-t)}function x1(e,t){return Z(()=>e==null?null:Array.isArray(e)?e.map(a=>x1(a,t)):Nw(e,t.dtype==="int32"?t:pe(t,"int32")))}function fg(e,t){let a=[],r=0,n=null;for(;r<e;)n=r+t,n>=e&&(n=e),a.push([r,n]),r=n;return a}async function gP(e,t,a,r,n,s,i,o,l,d,u,h,p,c,f){n==null&&(n=32),s==null&&(s=1),u==null&&(u=!0),p==null&&(p=0);let m=!1;if(l!=null&&d!=null&&(m=!0),f!=null&&(m=!0,c==null))throw new K("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g=e.checkNumSamples(a,n,c,"steps_per_epoch"),y;g!=null&&(y=rn(0,g)),i==null&&(i=1);let{callbackList:A,history:x}=Ww(o,i,s,p,g,c,n,m,h);A.setModel(e),e.history=x,await A.onTrainBegin(),e.stopTraining_=!1;for(let b=p;b<s;++b){await A.onEpochBegin(b);let v={};if(c!=null)throw new We("stepsPerEpoch mode is not implemented yet.");{if(u==="batch")throw new We("batch shuffling is not implemneted yet");u&&w.shuffle(y);let T=Lt(y),C=fg(g,n);for(let E=0;E<C.length;++E){let R={};if(await A.onBatchBegin(E,R),Z(()=>{let z=C[E][0],F=C[E][1],k=io(T,z,F-z);R.batch=E,R.size=F-z;let D=x1(a,k),_=t(D);for(let P=0;P<r.length;++P){let j=r[P],L=_[P];R[j]=L,da(L)}if(E===C.length-1&&m){let P=e.testLoop(l,d,n);for(let j=0;j<r.length;++j){let L=r[j],B=P[j];da(B),v["val_"+L]=B}}}),await A.onBatchEnd(E,R),zw(R),e.stopTraining_)break}T.dispose()}if(await A.onEpochEnd(b,v),e.stopTraining_)break}return await A.onTrainEnd(),await e.history.syncData(),e.history}async function yP(e,t,a,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;let n,s,i,o,l,d,u,h,p;try{let c=r.batchSize==null?32:r.batchSize;cg(c);let f=!1,m=await e.standardizeUserData(t,a,r.sampleWeight,r.classWeight,f,c);n=m[0],s=m[1],p=m[2];let g=!1,y;if(r.validationData!=null&&r.validationData.length>0){if(g=!0,r.validationData.length===2)l=r.validationData[0],d=r.validationData[1];else throw r.validationData.length===3?new We("validationData including sample weights is not supported yet."):new K(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);let E=!0,R=await e.standardizeUserData(l,d,null,null,E,c);u=R[0],h=R[1],y=u.concat(h)}else if(r.validationSplit!=null&&r.validationSplit>0&&r.validationSplit<1){g=!0;let E=Math.floor(n[0].shape[0]*(1-r.validationSplit)),R=n[0].shape[0];u=Dd(n,E,R),i=n,n=Dd(n,0,E),h=Dd(s,E,R),o=s,s=Dd(s,0,E),y=u.concat(h)}else r.validationSteps!=null&&(g=!0);let A=n.concat(s).concat(p);e.checkTrainableWeightsConsistency();let x=e.makeTrainFunction(),b=e.getDedupedMetricsNames(),v,T;g?(e.makeTestFunction(),v=e.testFunction,T=b.slice().concat(b.map(E=>"val_"+E))):(v=null,y=[],T=b.slice());let C=Lw(r.callbacks,r.yieldEvery);return await gP(e,x,A,b,c,r.epochs,r.verbose,C,v,y,r.shuffle,T,r.initialEpoch,null,null)}finally{e.isTraining=!1,Gr(n,t),Gr(s,a),Gr(i,t),Gr(o,a),Gr(u,l),Gr(h,d),p!=null&&ne(p)}}function Zw(e){let t=[];e instanceof et&&(e=[e]);for(let a=0;a<e.length;++a){let r=e[a];if(r.rank===1)t.push(qh(r,1));else{if(r.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function Gr(e,t){if(e==null)return;let a=[];if(t instanceof et)a.push(t.id);else if(Array.isArray(t))t.forEach(n=>a.push(n.id));else if(t!=null)for(let n in t){let s=t[n];a.push(s.id)}let r=[];if(e instanceof et)a.indexOf(e.id)===-1&&r.push(e);else if(Array.isArray(e))e.forEach(n=>{a.indexOf(n.id)===-1&&r.push(n)});else if(e!=null)for(let n in e){let s=e[n];a.indexOf(s.id)===-1&&r.push(s)}r.forEach(n=>{n.isDisposed||n.dispose()})}function AP(e){return e instanceof et}function mg(e){return Array.isArray(e)}function Sx(e){return!AP(e)&&!mg(e)}function Tx(e,t,a,r=!0,n=""){if(t==null||t.length===0){if(e!=null){let i=!1;if(mg(e)&&e.length>0)i=!0;else if(Sx(e)){for(let o in e)if(e.hasOwnProperty(o)){i=!0;break}}else i=!0;if(i)throw new K(`Error when checking model ${n} expected no data, but got ${e}`)}return[]}if(e==null)return t.map(i=>null);let s;if(Sx(e)){e=e,s=[];for(let i of t){if(e[i]==null)throw new K(`No data provided for "${i}". Need data for each key in: ${t}`);s.push(e[i])}}else if(mg(e)){if(e=e,e.length!==t.length)throw new K(`Error when checking model ${n}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(e=e,t.length>1)throw new K(`The model ${n} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=Zw(s),a!=null)for(let i=0;i<t.length;++i){if(a[i]==null)continue;let o=s[i];if(o.shape.length!==a[i].length)throw new K(`Error when checking ${n}: expected ${t[i]} to have ${a[i].length} dimension(s). but got array with shape ${o.shape}`);for(let l=0;l<a[i].length;++l){if(l===0&&!r)continue;let d=o.shape[l],u=a[i][l];if(u!=null&&u>=0&&d!==u)throw new K(`${n} expected a batch of elements where each example has shape [${a[i].slice(1,a[i].length)}] (i.e.,tensor shape [*,${a[i].slice(1,a[i].length)}]) but the ${n} received an input with ${o.shape[0]} examples, each with shape [${o.shape.slice(1,o.shape.length)}] (tensor shape [${o.shape}])`)}}return s}function xP(e,t,a){let r=bs(e.map(s=>s.shape[0]));r.sort();let n=bs(t.map(s=>s.shape[0]));if(n.sort(),r.length>1)throw new K(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(s=>s.shape))}`);if(n.length>1)throw new K(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(s=>s.shape))}`);if(r.length>0&&n.length>0&&!w.arraysEqual(r,n))throw new K(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${n[0]} target sample(s).`)}function bP(e,t,a){let r=[fl,v0,uh];for(let n=0;n<e.length;++n){let s=e[n],i=t[n],o=a[n];if(i!=null){if(i===uh&&s.shape[s.shape.length-1]===1)throw new K(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(r.indexOf(i)!==-1){let l=s.shape.slice(1),d=o.slice(1);for(let u=0;u<l.length;++u){let h=l[u],p=d[u];if(p!=null&&h!==p)throw new K(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function Cx(e,t,a,r=!0,n=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new K(`Error when checking model ${n}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new K(`The model expects ${t.length} ${n} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(a!=null)for(let i=0;i<t.length;++i){if(a[i]==null)continue;let o=s[i];if(o.shape.length!==a[i].length)throw new K(`Error when checking ${n}: expected ${t[i]} to have ${a[i].length} dimension(s), but got array with shape ${JSON.stringify(o.shape)}`);for(let l=0;l<a[i].length;++l){if(l===0&&!r)continue;let d=o.shape[l],u=a[i][l];if(u!=null&&u!==d)throw new K(`Error when checking ${n}: expected ${t[i]} to have shape ${JSON.stringify(a[i])} but got array with shape ${JSON.stringify(o.shape)}.`)}}}function vP(e,t){if(e==null||Array.isArray(e)&&e.length===0)return t.map(r=>[]);let a;if(typeof e=="string"||typeof e=="function")a=[e];else if(Array.isArray(e)||typeof e=="object")a=e;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);if(Array.isArray(a))return t.map(r=>a);{let r=[];for(let n of t){let s=a.hasOwnProperty(n)?a[n]:[];Array.isArray(s)||(s=[s]),r.push(s)}return r}}var wP="layers-model",Un=class extends pn{constructor(e){super(e);this.isTraining=!1}summary(e,t,a=console.log){if(!this.built)throw new K("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");QD(this,e,t,a)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=JD(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Jn))throw new K("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(let s in e.loss)if(this.outputNames.indexOf(s)===-1)throw new K(`Unknown entry in loss dictionary: "${s}". Only expected the following keys: ${this.outputNames}`);for(let s of this.outputNames)e.loss[s]==null&&console.warn(`Output "${s}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${s} during training`),t.push(om(e.loss[s]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new K(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(s=>om(s))}else{let s=om(e.loss);this.outputs.forEach(i=>{t.push(s)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let s=0;s<this.outputs.length;++s){let i=this.internalOutputShapes[s],o=this.outputNames[s];this.feedOutputNames.push(o),this.feedOutputShapes.push(i),this.feedLossFns.push(this.lossFunctions[s])}let a=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],so("loss",()=>{for(let s=0;s<this.outputs.length;++s){if(a.indexOf(s)!==-1)continue;let i=this.lossFunctions[s];this.outputs.length>1&&(this.metricsTensors.push([i,s]),this.metricsNames.push(this.outputNames[s]+"_loss"))}});let r=vP(e.metrics,this.outputNames),n=(s,i,o)=>{this.outputNames.length>1&&(i=this.outputNames[s]+"_"+i),this.metricsNames.push(i),this.metricsTensors.push([o,s])};so("metric",()=>{for(let s=0;s<this.outputs.length;++s){if(a.indexOf(s)!==-1)continue;let i=r[s];(o=>{let l="",d,u,h;for(let p of o){if(typeof p=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(p)!==-1){let f=this.internalOutputShapes[s];f[f.length-1]===1||this.lossFunctions[s]===v0?["accuracy","acc"].indexOf(p)!==-1?u=m1:["crossentropy","ce"].indexOf(p)!==-1&&(u=Uw):this.lossFunctions[s]===Pc?["accuracy","acc"].indexOf(p)!==-1?u=Gw:["crossentropy","ce"].indexOf(p)!==-1&&(u=jw):["accuracy","acc"].indexOf(p)!==-1?u=g1:["crossentropy","ce"].indexOf(p)!==-1&&(u=y1);let m;["accuracy","acc"].indexOf(p)!==-1?m="acc":["crossentropy","ce"].indexOf(p)!==-1&&(m="ce"),h=u,d=l+m}else h=YD(p),d=l+Lp(p);let c;so(d,()=>{c=h}),n(s,d,c)}})(i)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,a={}){let r=a.batchSize==null?32:a.batchSize;cg(r);let n=!0,s=this.standardizeUserDataXY(e,t,n,r);try{let i=s[0].concat(s[1]);this.makeTestFunction();let o=this.testFunction,l=this.testLoop(o,i,r,a.verbose,a.steps);return ja(l)}finally{Gr(s[0],e),Gr(s[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),mP(this,e,t)}checkNumSamples(e,t,a,r="steps"){let n;if(a!=null){if(n=null,t!=null)throw new K(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?n=e[0].shape[0]:n=e.shape[0];else throw new K(`Either the input data should have a defined shape, or ${r} shoud be specified.`);return n}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new K("`outputs` is an empty Array, which is not allowed.");let a=Array.isArray(t),r=a?t:[t],n=this.retrieveSymbolicTensors(r),s=new eo;if(e instanceof et&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new K(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let o=0;o<this.inputs.length;++o)s.add(this.inputs[o],e[o])}else for(let o of this.inputs){let l=e[o.name];if(l==null)throw new K(`No value is provided for the model's input ${o.name}`);s.add(o,l)}let i=Od(n,s);return a?i:i[0]}retrieveSymbolicTensors(e){let t=fo(null,e.length),a=e.length;for(let r of this.layers){let n=Array.isArray(r.output)?r.output:[r.output],s=n.map(i=>i.name);for(let i=0;i<e.length;++i){let o=s.indexOf(e[i]);if(o!==-1&&(t[i]=n[o],a--),a===0)break}if(a===0)break}if(a>0){let r=[];throw t.forEach((n,s)=>{n==null&&r.push(e[s])}),new K(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(r)}`)}return t}predictLoop(e,t=32,a=!1){return Z(()=>{let r=this.checkNumSamples(e);if(a)throw new We("Verbose predictLoop() is not implemented yet.");let n=fg(r,t),s=this.outputs.map(i=>[]);for(let i=0;i<n.length;++i)Z(()=>{let o=n[i][0],l=n[i][1],d=Dd(e,o,l),u=[];if(Array.isArray(d))for(let p=0;p<d.length;++p)u.push({key:this.inputs[p],value:d[p]});else u.push({key:this.inputs[0],value:d});let h=new eo(u);return Od(this.outputs,h)}).forEach((o,l)=>s[l].push(o));return ja(s.map(i=>Ct(i,0)))})}predict(e,t={}){let a=Zw(e);Cx(a,this.inputNames,this.feedInputShapes,!1);try{let r=t.batchSize==null?32:t.batchSize;return cg(r),this.predictLoop(a,r)}finally{Gr(a,e)}}predictOnBatch(e){Cx(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,a=!0,r){if(this.optimizer_==null)throw new Xr("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let n=[];for(let s=0;s<this.feedOutputShapes.length;++s){let i=this.feedOutputShapes[s];this.feedLossFns[s]===Pc?n.push(i.slice(0,i.length-1).concat([1])):n.push(i)}if(e=Tx(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Tx(t,this.feedOutputNames,n,!1,"target"),xP(e,t),bP(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&r!=null&&r>0&&e[0].shape[0]%r!==0)throw new K(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,a,r,n=!0,s){let[i,o]=this.standardizeUserDataXY(e,t,n,s);if(a!=null)throw new Error("sample weight is not supported yet.");let l=null;if(r!=null){let d=qw(r,this.outputNames);l=[];for(let u=0;u<d.length;++u)l.push(await Xw(o[u],null,d[u]))}return[i,o,l]}testLoop(e,t,a,r=0,n){return Z(()=>{let s=this.checkNumSamples(t,a,n,"steps"),i=[];if(r>0)throw new We("Verbose mode is not implemented yet.");if(n!=null)throw new We("steps mode in testLoop() is not implemented yet");{let o=fg(s,a),l=Lt(rn(0,s));for(let d=0;d<o.length;++d){let u=o[d][0],h=o[d][1],p=io(l,u,h-u),c=x1(t,p),f=e(c);if(d===0)for(let m=0;m<f.length;++m)i.push(Ie(0));for(let m=0;m<f.length;++m){let g=f[m];i[m]=ie(i[m],V(h-u,g))}}for(let d=0;d<i.length;++d)i[d]=ge(i[d],s)}return i})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let a=0;a<e.length;++a){let r=e[a],n=r;hx(e,r)>1&&(n+=`_${hx(e.slice(0,a),r)}`),t.push(n)}return t}makeTrainFunction(){return e=>{let t=[],a=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),n=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),s=[],i=()=>{let d=[];for(let c=0;c<this.inputs.length;++c)d.push({key:this.inputs[c],value:a[c]});let u=new eo(d),h=Od(this.outputs,u,{training:!0}),p;for(let c=0;c<this.lossFunctions.length;++c){let f=this.lossFunctions[c](r[c],h[c]);n[c]!=null&&(f=uP(f,n[c]));let m=Pt(f);t.push(m),c===0?p=f:p=ie(p,f)}for(let c=0;c<this.metricsTensors.length;++c){let f;if(this.outputs.length>1&&c<this.outputs.length)f=t[c];else{let m=this.metricsTensors[c][0],g=this.metricsTensors[c][1];f=Pt(m(r[g],h[g]))}da(f),s.push(f)}return p=Pt(p),this.calculateLosses().forEach(c=>{p=ie(p,c)}),p},o=this.collectedTrainableWeights.map(d=>d.read()),l=!0;return[this.optimizer_.minimize(i,l,o)].concat(s)}}makeTestFunction(){this.testFunction=e=>Z(()=>{let t=[],a,r=e.slice(0,this.inputs.length),n=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let l=0;l<this.inputs.length;++l)s.push({key:this.inputs[l],value:r[l]});let i=new eo(s),o=Od(this.outputs,i);for(let l=0;l<this.lossFunctions.length;++l){let d=this.lossFunctions[l],u=Pt(d(n[l],o[l]));l===0?a=u:a=ie(a,u),t.push(a)}for(let l=0;l<this.metricsTensors.length;++l){let d=this.metricsTensors[l][0],u=this.metricsTensors[l][1],h=Pt(d(n[u],o[u]));t.push(h)}return t})}async fit(e,t,a={}){return yP(this,e,t,a)}async fitDataset(e,t){return pP(this,e,t)}async trainOnBatch(e,t){let a=await this.standardizeUserData(e,t),r=a[0],n=a[1],s=this.makeTrainFunction()(r.concat(n)),i=[];for(let o of s){let l=await o.data();i.push(l[0])}return ne(s),Gr(a[0],e),Gr(a[1],t),ja(i)}getNamedWeights(e){let t=[],a=e!=null&&e.trainableOnly,r=a?this.trainableWeights:this.weights,n=this.getWeights(a);for(let s=0;s<r.length;++s)a&&!r[s].trainable||t.push({name:r[s].originalName,tensor:n[s]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let t=Fc().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Fc().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=On(this.loss);else if(Array.isArray(this.loss)){for(let t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>On(t))}else{let t=Object.keys(this.loss);e={};let a=this.loss;for(let r of t)if(typeof a[r]=="string")e[r]=On(a[r]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[On(Lp(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>On(Lp(e)));{let e={};for(let t in this.metrics)e[t]=On(Lp(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let t=dh(e.optimizer_config),a=Yr(t),r;if(typeof e.loss=="string")r=Zi(e.loss);else if(Array.isArray(e.loss))r=e.loss.map(s=>Zi(s));else if(e.loss!=null){r={};for(let s in e.loss)r[s]=Zi(e.loss[s])}let n;if(Array.isArray(e.metrics))n=e.metrics.map(s=>Zi(s));else if(e.metrics!=null){n={};for(let s in e.metrics)n[s]=Zi(e.metrics[s])}this.compile({loss:r,metrics:n,optimizer:a})}async save(e,t){if(typeof e=="string"){let i=Na.getSaveHandlers(e);if(i.length===0)throw new K(`Cannot find any save handlers for URL '${e}'`);if(i.length>1)throw new K(`Found more than one (${i.length}) save handlers for URL '${e}'`);e=i[0]}if(e.save==null)throw new K("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let a=await Na.encodeWeights(this.getNamedWeights(t)),r=!1,n=null,s={modelTopology:this.toJSON(n,r),format:wP,generatedBy:`TensorFlow.js tfjs-layers v${A1}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){s.trainingConfig=this.getTrainingConfig();let i="optimizer",{data:o,specs:l}=await Na.encodeWeights(await this.optimizer.getWeights(),i);a.specs.push(...l),a.data=Na.concatenateArrayBuffers([a.data,o])}return this.userDefinedMetadata!=null&&(bx(this.userDefinedMetadata,this.name,!0),s.userDefinedMetadata=this.userDefinedMetadata),s.weightData=a.data,s.weightSpecs=a.specs,e.save(s)}setUserDefinedMetadata(e){bx(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};Un.className="Model";oe.registerClass(Un);var Yw=class extends Un{};Yw.className="Functional";oe.registerClass(Yw);async function kP(e,t){"modelTopology"in e||(e={modelTopology:e}),e=e;let a=e.modelTopology;a.model_config!=null&&(a=a.model_config);let r=dh(a),n=Yr(r,t);if(e.weightsManifest!=null){let s=await Na.loadWeights(e.weightsManifest,e.pathPrefix,n.weights.map(o=>o.originalName)),i={};for(let o of n.weights)i[o.originalName]=s[o.originalName];n.loadWeights(i),ne(s)}return n}async function IP(e,t){if(t==null&&(t={}),typeof e=="string"){let a=Na.getLoadHandlers(e,t);if(a.length===0)a.push(Na.browserHTTPRequest(e,t));else if(a.length>1)throw new K(`Found more than one (${a.length}) load handlers for URL '${e}'`);e=a[0]}return SP(e,void 0,t)}async function SP(e,t,a){if(a==null&&(a={}),e.load==null)throw new K("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let r=await e.load(),n=r.modelTopology;n.model_config!=null&&(n=n.model_config);let s=a.strict==null?!0:a.strict,i=r.weightData!=null&&r.weightSpecs!=null&&s,o=Yr(dh(n),t,i),l=r.trainingConfig;if(l!=null&&o.loadTrainingConfig(l),r.userDefinedMetadata!=null&&o.setUserDefinedMetadata(r.userDefinedMetadata),r.weightData!=null){if(r.weightSpecs==null)throw new K("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:d,optimizerWeights:u}=TP(r.weightData,r.weightSpecs);o.loadWeights(d,s),o.optimizer!=null&&u.length>0&&await o.optimizer.setWeights(u),ne(d),ne(u.map(h=>h.tensor))}return o}function TP(e,t){let a=Na.decodeWeights(e,t),r={},n=[];return t.forEach(s=>{s.group==="optimizer"?n.push({name:s.name,tensor:a[s.name]}):r[s.name]=a[s.name]}),{modelWeights:r,optimizerWeights:n}}var gg=class extends Un{constructor(e){super({inputs:[],outputs:[]});if(e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:A0("sequential_"),e.layers!=null)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(t=>t<0))throw new K(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t=e instanceof gg||e instanceof Un,a;if(t){if(a=e,a.outputs.length!==1)throw new K("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(a.inputs.length!==1)throw new K("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new K("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let r=_w({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(r)}if(t)this.outputs=a.outputs,this.inputs=a.inputs;else{if(e.inboundNodes.length!==1)throw new K(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new K("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Mw(this.outputs[0])}this.inboundNodes=[],new x0({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:fo(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(r=>r.shape),outputShapes:this.outputs[0].shape})}else{let r=e.apply(this.outputs[0]);if(Array.isArray(r))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[r],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(ut(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Un({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,a=console.log){this.built||this.build(),super.summary(e,t,a)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,a={}){if(!this.built)throw new Xr("The model needs to be compiled before being used.");return this.model.evaluate(e,t,a)}async evaluateDataset(e,t){if(!this.built)throw new Xr("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,a={}){if(!this.built)throw new Xr("The model needs to be compiled before being used.");return this.model.fit(e,t,a)}async fitDataset(e,t){if(!this.built)throw new Xr("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,a={},r=!1){let n,s={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new K("Legacy serialization format not supported yet.");n=t}else w.assert(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),n=t.layers,delete t.layers,s=t;let i=new e(s);if(!(i instanceof gg))throw new We(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(let o of n){let l=Yr(o,void 0,r);r&&l.setFastWeightInitDuringBuild(!0),i.add(l)}return i}set stopTraining(e){if(this.model==null)throw new K("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new K("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let a={};a.className=t.getClassName(),a.config=t.getConfig(),e.push(a)}return{name:this.name,layers:e}}},w0=gg;w0.className="Sequential";oe.registerClass(w0);function CP(e){return new Un(e)}function NP(e){return new w0(e)}function EP(e,t){return t==null&&(t={}),IP(e,t)}function Jw(e){return _w(e)}function RP(e,t){c1.registerCallbackConstructor(e,t)}var Ka=class extends oe.Serializable{getConfig(){return{}}},Qw=class extends Ka{apply(e,t=1){return aD(e,t)}};Qw.className="elu";oe.registerClass(Qw);var ek=class extends Ka{apply(e){return P2(e)}};ek.className="selu";oe.registerClass(ek);var tk=class extends Ka{apply(e){return In(e)}};tk.className="relu";oe.registerClass(tk);var ak=class extends Ka{apply(e){return Z(()=>Bh(6,In(e)))}};ak.className="relu6";oe.registerClass(ak);var rk=class extends Ka{apply(e){return e}};rk.className="linear";oe.registerClass(rk);var nk=class extends Ka{apply(e){return Ar(e)}};nk.className="sigmoid";oe.registerClass(nk);var sk=class extends Ka{apply(e){return nD(e)}};sk.className="hardSigmoid";oe.registerClass(sk);var ik=class extends Ka{apply(e){return Ju(e)}};ik.className="softplus";oe.registerClass(ik);var ok=class extends Ka{apply(e){return rD(e)}};ok.className="softsign";oe.registerClass(ok);var lk=class extends Ka{apply(e){return su(e)}};lk.className="tanh";oe.registerClass(lk);var b1=class extends Ka{apply(e,t=-1){return Vh(e,t)}};b1.className="softmax";oe.registerClass(b1);var uk=class extends Ka{apply(e,t=-1){return C2(e,t)}};uk.className="logSoftmax";oe.registerClass(uk);var dk=class extends Ka{apply(e,t=1){return Z(()=>V(Ar(V(e,t)),e))}};dk.className="swish";oe.registerClass(dk);var hk=class extends Ka{apply(e){return Z(()=>V(e,su(Ju(e))))}};hk.className="mish";oe.registerClass(hk);function zs(e){return e.getClassName()}function um(e,t={}){return jh(e,oe.SerializationMap.getMap().classNameMap,t,"activation")}function Os(e){if(e==null){let t={};return t.className="linear",t.config={},um(t)}if(typeof e=="string"){let t={};return t.className=e,t.config={},um(t)}else return e instanceof Ka?e:um(e)}function v1(e){if(e!=null&&typeof e!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}var pk=class extends oe.Serializable{},Zh=class extends pk{constructor(e){super();v1(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return Z(()=>{let t=Ut([1]);return this.hasL1&&(t=ie(t,we(V(this.l1,Qt(e))))),this.hasL2&&(t=ie(t,we(V(this.l2,Xh(e))))),q(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};Zh.className="L1L2";oe.registerClass(Zh);function FP(e){return v1(e),new Zh({l1:e!=null?e.l1:null,l2:0})}function $P(e){return v1(e),new Zh({l2:e!=null?e.l2:null,l1:0})}var Nx={l1l2:"L1L2"};function mt(e){return Y2(e)}function Ex(e,t={}){return jh(e,oe.SerializationMap.getMap().classNameMap,t,"regularizer")}function Nt(e){if(e==null)return null;if(typeof e=="string"){let t={className:e in Nx?Nx[e]:e,config:{}};return Ex(t)}else return e instanceof pk?e:Ex(e)}var w1=class extends Qe{constructor(e){super(e==null?{}:e);this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=Be(e);let a=In(e);return this.maxValue!=null&&(a=hr(a,0,this.maxValue)),a}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};w1.className="ReLU";oe.registerClass(w1);var k1=class extends Qe{constructor(e){super(e==null?{}:e);this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let a=Be(e);return Wf(a,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};k1.className="LeakyReLU";oe.registerClass(k1);var I1=class extends Qe{constructor(e){super(e==null?{}:e);if(this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Tt(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Nt(e.alphaRegularizer),this.alphaConstraint=na(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new K(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=ut(e);let t=e.slice(1);if(this.sharedAxes!=null)for(let r of this.sharedAxes)t[r-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let a={};if(this.sharedAxes!=null)for(let r=1;r<e.length;++r)a[r]=e[r];this.inputSpec=[new Xt({ndim:e.length,axes:a})],this.built=!0}call(e,t){return e=Be(e),Xf(e,this.alpha.read())}getConfig(){let e={alphaInitializer:Rt(this.alphaInitializer),alphaRegularizer:mt(this.alphaRegularizer),alphaConstraint:ra(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};I1.className="PReLU";oe.registerClass(I1);var S1=class extends Qe{constructor(e){super(e==null?{}:e);if(this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new We(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let a=Be(e);return Lh(a)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};S1.className="ELU";oe.registerClass(S1);var T1=class extends Qe{constructor(e){super(e==null?{}:e);this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){let a=Be(e);return V(a,pe(cr(a,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};T1.className="ThresholdedReLU";oe.registerClass(T1);var C1=class extends Qe{constructor(e){super(e==null?{}:e);this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new b1().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){let a=Be(e);return this.softmax(a,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};C1.className="Softmax";oe.registerClass(C1);function tu(e,t,a){if(typeof e=="number")return fo(e,t);if(e.length!==t)throw new K(`The ${a} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){let n=e[r];if(!JO(n))throw new K(`The ${a} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${n}`)}return e}function Jr(e,t,a,r,n=1){if(e==null)return e;let s=t+(t-1)*(n-1),i;return a==="same"?i=e:i=e-s+1,Math.floor((i+r-1)/r)}function fn(e,t,a,r){if(e==null)return null;if(r==="valid")e=e*t+_s([a-t,0]);else if(r==="same")e=e*t;else throw new K(`Unsupport padding mode: ${r}.`);return e}function N1(e,t){return Z(()=>(Gt(t),t==="channelsFirst"?Ye(e,[0,2,3,1]):e))}function ck(e,t){return Z(()=>(Gt(t),t==="channelsFirst"?Ye(e,[0,2,3,4,1]):e))}function MP(e,t,a,r=1,n="valid",s,i=1){return Z(()=>{if(s==null&&(s=an()),Gt(s),e.shape.length!==3)throw new K(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(t.shape.length!==3)throw new K(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(a!=null&&a.shape.length!==1)throw new K(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(s==="channelsFirst"&&(e=Ye(e,[0,2,1])),n==="causal")throw new We("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=x2(e,t,r,n==="same"?"same":"valid","NWC",i);return a!=null&&(o=sn(o,a)),o})}function Rx(e,t,a,r=[1,1],n="valid",s,i,o=null){return Z(()=>{if(s==null&&(s=an()),Gt(s),e.rank!==3&&e.rank!==4)throw new K(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(t.rank!==3&&t.rank!==4)throw new K(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=N1(e,s);if(n==="causal")throw new We("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Ms.conv2d({x:l,filter:t,strides:r,pad:n==="same"?"same":"valid",dilations:i,dataFormat:"NHWC",bias:a,activation:o}),s==="channelsFirst"&&(l=Ye(l,[0,3,1,2])),l})}function _P(e,t,a,r=[1,1,1],n="valid",s,i){return Z(()=>{if(s==null&&(s=an()),Gt(s),e.rank!==4&&e.rank!==5)throw new K(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(t.rank!==4&&t.rank!==5)throw new K(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=ck(e,s);if(n==="causal")throw new We("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=w2(o,t,r,n==="same"?"same":"valid","NDHWC",i),a!=null&&(o=sn(o,a)),s==="channelsFirst"&&(o=Ye(o,[0,4,1,2,3])),o})}var E1=class extends Qe{constructor(e,t){super(t);if(this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",E1.verifyArgs(t),this.rank=e,ha(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new We(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=tu(t.kernelSize,e,"kernelSize"),this.strides=tu(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,Tr(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Gt(this.dataFormat),this.activation=Os(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=Tt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=na(t.biasConstraint),this.biasRegularizer=Nt(t.biasRegularizer),this.activityRegularizer=Nt(t.activityRegularizer),this.dilationRate=tu(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new K(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new K(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new K(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(cn("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!J2(e.kernelSize,"number",1,3))throw new K(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:zs(this.activation),useBias:this.useBias,biasInitializer:Rt(this.biasInitializer),biasRegularizer:mt(this.biasRegularizer),activityRegularizer:mt(this.activityRegularizer),biasConstraint:ra(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},Yh=class extends E1{constructor(e,t){super(e,t);this.kernel=null,Yh.verifyArgs(t),this.filters=t.filters,ha(this.filters,"filters"),this.kernelInitializer=Tt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=na(t.kernelConstraint),this.kernelRegularizer=Nt(t.kernelRegularizer)}build(e){e=ut(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new K(`The channel dimension of the input should be defined. Found ${e[t]}`);let a=e[t],r=this.kernelSize.concat([a,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:a}}],this.built=!0}call(e,t){return Z(()=>{e=Be(e);let a,r=this.bias==null?null:this.bias.read(),n=ww(this.activation.getClassName());if(n!=null&&this.rank===2)a=Rx(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate,n);else{if(this.rank===1)a=MP(e,this.kernel.read(),r,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)a=Rx(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)a=_P(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new We("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(a=this.activation.apply(a))}return a})}computeOutputShape(e){e=ut(e);let t=[],a=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let n=0;n<a.length;++n){let s=Jr(a[n],this.kernelSize[n],this.padding,this.strides[n],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[n]);t.push(s)}let r=[e[0]];return this.dataFormat==="channelsLast"?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){let e={filters:this.filters,kernelInitializer:Rt(this.kernelInitializer),kernelRegularizer:mt(this.kernelRegularizer),kernelConstraint:ra(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new K(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},fk=class extends Yh{constructor(e){super(2,e);fk.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!J2(e.kernelSize,"number",1,2))throw new K(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}},k0=fk;k0.className="Conv2D";oe.registerClass(k0);var mk=class extends Yh{constructor(e){super(3,e);mk.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new K(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}},I0=mk;I0.className="Conv3D";oe.registerClass(I0);var R1=class extends k0{constructor(e){super(e);if(this.inputSpec=[new Xt({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new K(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=ut(e),e.length!==4)throw new K("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new K("The channel dimension of the inputs should be defined. Found `None`.");let a=e[t],r=this.kernelSize.concat([this.filters,a]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Xt({ndim:4,axes:{[t]:a}})],this.built=!0}call(e,t){return Z(()=>{let a=Be(e);if(a.shape.length!==4)throw new K(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${a.shape.length}`);let r=a.shape,n=r[0],s,i;this.dataFormat==="channelsFirst"?(s=2,i=3):(s=1,i=2);let o=r[s],l=r[i],d=this.kernelSize[0],u=this.kernelSize[1],h=this.strides[0],p=this.strides[1],c=fn(o,h,d,this.padding),f=fn(l,p,u,this.padding),m=[n,c,f,this.filters];this.dataFormat!=="channelsLast"&&(a=Ye(a,[0,2,3,1]));let g=v2(a,this.kernel.read(),m,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(g=Ye(g,[0,3,1,2])),this.bias!=null&&(g=sn(g,this.bias.read(),this.dataFormat)),this.activation!=null&&(g=this.activation.apply(g)),g})}computeOutputShape(e){e=ut(e);let t=e.slice(),a,r,n;this.dataFormat==="channelsFirst"?(a=1,r=2,n=3):(a=3,r=1,n=2);let s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[a]=this.filters,t[r]=fn(t[r],o,s,this.padding),t[n]=fn(t[n],l,i,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};R1.className="Conv2DTranspose";oe.registerClass(R1);var F1=class extends I0{constructor(e){super(e);if(this.inputSpec=[new Xt({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new K(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=ut(e),e.length!==5)throw new K("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new K("The channel dimension of the inputs should be defined. Found `None`.");let a=e[t],r=this.kernelSize.concat([this.filters,a]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Xt({ndim:5,axes:{[t]:a}})],this.built=!0}call(e,t){return Z(()=>{let a=Be(e);if(a.shape.length!==5)throw new K(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${a.shape.length}`);let r=a.shape,n=r[0],s,i,o;this.dataFormat==="channelsFirst"?(o=2,s=3,i=4):(o=1,s=2,i=3);let l=r[o],d=r[s],u=r[i],h=this.kernelSize[0],p=this.kernelSize[1],c=this.kernelSize[2],f=this.strides[0],m=this.strides[1],g=this.strides[2],y=fn(l,f,h,this.padding),A=fn(d,m,p,this.padding),x=fn(u,g,c,this.padding),b=[n,y,A,x,this.filters];this.dataFormat!=="channelsLast"&&(a=Ye(a,[0,2,3,4,1]));let v=k3(a,this.kernel.read(),b,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(v=Ye(v,[0,4,1,2,3])),this.bias!==null&&(v=sn(v,this.bias.read(),this.dataFormat)),this.activation!==null&&(v=this.activation.apply(v)),v})}computeOutputShape(e){e=ut(e);let t=e.slice(),a,r,n,s;this.dataFormat==="channelsFirst"?(a=1,r=2,n=3,s=4):(a=4,r=1,n=2,s=3);let i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],d=this.strides[0],u=this.strides[1],h=this.strides[2];return t[a]=this.filters,t[r]=fn(t[r],d,i,this.padding),t[n]=fn(t[n],u,o,this.padding),t[s]=fn(t[s],h,l,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};F1.className="Conv3DTranspose";oe.registerClass(F1);var gk=class extends Yh{constructor(e,t){super(e,t);if(this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new K("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new K("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new K(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=Tt(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Nt(t.depthwiseRegularizer),this.depthwiseConstraint=na(t.depthwiseConstraint),this.pointwiseInitializer=Tt(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Nt(t.pointwiseRegularizer),this.pointwiseConstraint=na(t.pointwiseConstraint)}build(e){if(e=ut(e),e.length<this.rank+2)throw new K(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new K(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let a=e[t],r=this.kernelSize.concat([a,this.depthMultiplier]),n=[];for(let i=0;i<this.rank;++i)n.push(1);n.push(a*this.depthMultiplier,this.filters);let s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",n,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new Xt({ndim:this.rank+2,axes:{[t]:a}})],this.built=!0}call(e,t){return Z(()=>{e=Be(e);let a;if(this.rank===1)throw new We("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=Ye(e,[0,2,3,1])),a=G3(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(a=sn(a,this.bias.read(),this.dataFormat)),this.activation!=null&&(a=this.activation.apply(a)),this.dataFormat==="channelsFirst"&&(a=Ye(a,[0,3,1,2])),a})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Rt(this.depthwiseInitializer),e.pointwiseInitializer=Rt(this.pointwiseInitializer),e.depthwiseRegularizer=mt(this.depthwiseRegularizer),e.pointwiseRegularizer=mt(this.pointwiseRegularizer),e.depthwiseConstraint=ra(this.depthwiseConstraint),e.pointwiseConstraint=ra(this.pointwiseConstraint),e}};gk.className="SeparableConv";var $1=class extends gk{constructor(e){super(2,e)}};$1.className="SeparableConv2D";oe.registerClass($1);var yk=class extends Yh{constructor(e){super(1,e);yk.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!J2(e.kernelSize,"number",1,1))throw new K(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}},M1=yk;M1.className="Conv1D";oe.registerClass(M1);var _1=class extends Qe{constructor(e){super(e);typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Z(()=>{if(e=Be(e),this.dataFormat==="channelsLast"){let a=Dp(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Dp(a,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let a=Dp(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Dp(a,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};_1.className="Cropping2D";oe.registerClass(_1);var z1=class extends Qe{constructor(e){super(e);this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Gt(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,KO(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){let t=e[2]==null?null:this.size[0]*e[2],a=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,a]}else{let t=e[1]==null?null:this.size[0]*e[1],a=e[2]==null?null:this.size[1]*e[2];return[e[0],t,a,e[3]]}}call(e,t){return Z(()=>{let a=Be(e),r=a.shape;if(this.dataFormat==="channelsFirst"){a=Ye(a,[0,2,3,1]);let n=this.size[0]*r[2],s=this.size[1]*r[3],i=this.interpolation==="nearest"?De.resizeNearestNeighbor(a,[n,s]):De.resizeBilinear(a,[n,s]);return Ye(i,[0,3,1,2])}else{let n=this.size[0]*r[1],s=this.size[1]*r[2];return this.interpolation==="nearest"?De.resizeNearestNeighbor(a,[n,s]):De.resizeBilinear(a,[n,s])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};z1.className="UpSampling2D";oe.registerClass(z1);function zP(e,t,a=[1,1],r="valid",n,s){return Z(()=>{n==null&&(n=an()),Gt(n);let i=N1(e,n);if(e.rank!==4)throw new K(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(t.rank!==4)throw new K(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Ph(i,t,a,r==="same"?"same":"valid","NHWC",s),n==="channelsFirst"&&(i=Ye(i,[0,3,1,2])),i})}var O1=class extends E1{constructor(e){super(2,e);this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=Tt(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=na(e.depthwiseConstraint),this.depthwiseRegularizer=Nt(e.depthwiseRegularizer)}build(e){if(e=ut(e),e.length<4)throw new K(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new K(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let a=e[t],r=[this.kernelSize[0],this.kernelSize[1],a,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[a*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Z(()=>{e=Be(e);let a=zP(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(a=sn(a,this.bias.read(),this.dataFormat)),this.activation!=null&&(a=this.activation.apply(a)),a})}computeOutputShape(e){e=ut(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],a=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,n=Jr(t,this.kernelSize[0],this.padding,this.strides[0]),s=Jr(a,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],r,n,s]:[e[0],n,s,r]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Rt(this.depthwiseInitializer),e.depthwiseRegularizer=mt(this.depthwiseRegularizer),e.depthwiseConstraint=ra(this.depthwiseRegularizer),e}};O1.className="DepthwiseConv2D";oe.registerClass(O1);function Ak(e,t,a,r){if(Array.isArray(e)){if(t!=null||a!=null)throw new K("When inputs is an array, neither initialState or constants should be provided");r!=null&&(a=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function n(s){return s==null||Array.isArray(s)?s:[s]}return t=n(t),a=n(a),{inputs:e,initialState:t,constants:a}}function xk(e,t,a,r=!1,n,s,i=!1,o=!1){return Z(()=>{let l=t.shape.length;if(l<3)throw new K(`Input should be at least 3D, but is ${l}D.`);let d=[1,0].concat(rn(2,l));if(t=Ye(t,d),s!=null)throw new We("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),n!=null&&(n=pe(pe(n,"bool"),"float32"),n.rank===l-1&&(n=ua(n,-1)),n=Ye(n,d)),r&&(t=kr(t,0),n!=null&&(n=kr(n,0)));let u=[],h,p=a,c=t.shape[0],f=Ir(t),m;n!=null&&(m=Ir(n));for(let y=0;y<c;++y){let A=f[y],x=Z(()=>e(A,p));if(n==null)h=x[0],p=x[1];else{let b=Z(()=>{let v=m[y],T=me(wr(v),v),C=ie(V(x[0],v),V(p[0],T)),E=p.map((R,z)=>ie(V(x[1][z],v),V(R,T)));return{output:C,newStates:E}});h=b.output,p=b.newStates}o&&u.push(h)}let g;return o&&(g=_a(u,1)),[h,g,p]})}var bk=class extends Qe{constructor(e){super(e);let t;if(e.cell==null)throw new K("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new C0({cells:e.cell}):t=e.cell,t.stateSize==null)throw new K("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new Xt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return rn(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){ug(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let a=t[0],r;if(this.returnSequences?r=[e[0],e[1],a]:r=[e[0],a],this.returnState){let n=[];for(let s of t)n.push([e[0],s]);return[r].concat(n)}else return r}computeMask(e,t){return Z(()=>{Array.isArray(t)&&(t=t[0]);let a=this.returnSequences?t:null;if(this.returnState){let r=this.states.map(n=>null);return[a].concat(r)}else return a})}get states(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let a=0;a<e;++a)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new We("Constants support is not implemented in RNN yet.");ug(e)&&(e=e[0]),e=e;let t=this.stateful?e[0]:null,a=e.slice(2);this.inputSpec[0]=new Xt({shape:[t,null,...a]});let r=[e[0]].concat(e.slice(2));this.cell.build(r);let n;if(Array.isArray(this.cell.stateSize)?n=this.cell.stateSize:n=[this.cell.stateSize],this.stateSpec!=null){if(!w.arraysEqual(this.stateSpec.map(s=>s.shape[s.shape.length-1]),n))throw new K(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=n.map(s=>new Xt({shape:[null,s]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){Z(()=>{if(!this.stateful)throw new zn("Cannot call resetStates() on an RNN Layer that is not stateful.");let a=this.inputSpec[0].shape[0];if(a==null)throw new K("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>Ut([a,r])):this.states_=[Ut([a,this.cell.stateSize])];else if(e==null)ne(this.states_),this.keptStates!=null&&(ne(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>Ut([a,r])):this.states_[0]=Ut([a,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new K(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):ne(this.states_);for(let r=0;r<this.states_.length;++r){let n=e[r],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[r]:this.cell.stateSize,i=[a,s];if(!w.arraysEqual(n.shape,i))throw new K(`State ${r} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${n.shape}`);this.states_[r]=n}}this.states_=this.states_.map(r=>da(r.clone()))})}apply(e,t){let a=t==null?null:t.initialState,r=t==null?null:t.constants;t==null&&(t={});let n=Ak(e,a,r,this.numConstants);e=n.inputs,a=n.initialState,r=n.constants;let s=[],i=[];if(a!=null){t.initialState=a,s=s.concat(a),this.stateSpec=[];for(let o of a)this.stateSpec.push(new Xt({shape:o.shape}));i=i.concat(this.stateSpec)}if(r!=null&&(t.constants=r,s=s.concat(r),this.numConstants=r.length),s[0]instanceof Kr){let o=[e].concat(s),l=this.inputSpec.concat(i),d=this.inputSpec;this.inputSpec=l;let u=super.apply(o,t);return this.inputSpec=d,u}else return super.apply(e,t)}call(e,t){return Z(()=>{let a=t==null?null:t.mask,r=t==null?null:t.training,n=t==null?null:t.initialState;e=Be(e),n==null&&(this.stateful?n=this.states_:n=this.getInitialState(e));let s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(n.length!==s)throw new K(`RNN Layer has ${s} state(s) but was passed ${n.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let i={training:r},o=xk((p,c)=>{let f=this.cell.call([p].concat(c),i);return[f[0],f.slice(1)]},e,n,this.goBackwards,a,null,this.unroll,this.returnSequences),l=o[0],d=o[1],u=o[2];this.stateful&&this.resetStates(u,r);let h=this.returnSequences?d:l;return this.returnState?[h].concat(u):h})}getInitialState(e){return Z(()=>{let t=Ut(e.shape);return t=we(t,[1,2]),t=qh(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(a=>a>1?og(t,[1,a]):t):this.cell.stateSize>1?[og(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);let a=this.cell.getConfig();return this.getClassName()===bk.className&&(t.cell={className:this.cell.getClassName(),config:a}),Ze(Ze(Ze({},a),e),t)}static fromConfig(e,t,a={}){let r=t.cell,n=Yr(r,a);return new e(Object.assign(t,{cell:n}))}},Qn=bk;Qn.className="RNN";oe.registerClass(Qn);var Jh=class extends Qe{},S0=class extends Jh{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,ha(this.units,"units"),this.activation=Os(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Tt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Tt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Tt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Nt(e.kernelRegularizer),this.recurrentRegularizer=Nt(e.recurrentRegularizer),this.biasRegularizer=Nt(e.biasRegularizer),this.kernelConstraint=na(e.kernelConstraint),this.recurrentConstraint=na(e.recurrentConstraint),this.biasConstraint=na(e.biasConstraint),this.dropout=pu([1,_s([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=pu([1,_s([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=ut(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Z(()=>{if(e=e,e.length!==2)throw new K(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let a=e[1];e=e[0];let r=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ds({ones:()=>wr(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ds({ones:()=>wr(a),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));let n,s=this.dropoutMask,i=this.recurrentDropoutMask;s!=null?n=yn(V(e,s),this.kernel.read()):n=yn(e,this.kernel.read()),this.bias!=null&&(n=sn(n,this.bias.read())),i!=null&&(a=V(a,i));let o=ie(n,yn(a,this.recurrentKernel.read()));return this.activation!=null&&(o=this.activation.apply(o)),[o,o]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:zs(this.activation),useBias:this.useBias,kernelInitializer:Rt(this.kernelInitializer),recurrentInitializer:Rt(this.recurrentInitializer),biasInitializer:Rt(this.biasInitializer),kernelRegularizer:mt(this.kernelRegularizer),recurrentRegularizer:mt(this.recurrentRegularizer),biasRegularizer:mt(this.biasRegularizer),activityRegularizer:mt(this.activityRegularizer),kernelConstraint:ra(this.kernelConstraint),recurrentConstraint:ra(this.recurrentConstraint),biasConstraint:ra(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Ze(Ze({},e),t)}};S0.className="SimpleRNNCell";oe.registerClass(S0);var D1=class extends Qn{constructor(e){e.cell=new S0(e);super(e)}call(e,t){return Z(()=>{this.cell.dropoutMask!=null&&(ne(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ne(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let a=t==null?null:t.mask,r=t==null?null:t.training,n=t==null?null:t.initialState;return super.call(e,{mask:a,training:r,initialState:n})})}static fromConfig(e,t){return new e(t)}};D1.className="SimpleRNN";oe.registerClass(D1);var T0=class extends Jh{constructor(e){super(e);if(this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new K("GRUCell does not support reset_after parameter set to true.");this.units=e.units,ha(this.units,"units"),this.activation=Os(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Os(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Tt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Tt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Tt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Nt(e.kernelRegularizer),this.recurrentRegularizer=Nt(e.recurrentRegularizer),this.biasRegularizer=Nt(e.biasRegularizer),this.kernelConstraint=na(e.kernelConstraint),this.recurrentConstraint=na(e.recurrentConstraint),this.biasConstraint=na(e.biasConstraint),this.dropout=pu([1,_s([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=pu([1,_s([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=ut(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Z(()=>{if(e=e,e.length!==2)throw new K(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let a=t.training==null?!1:t.training,r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ds({ones:()=>wr(e),rate:this.dropout,training:a,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ds({ones:()=>wr(r),rate:this.recurrentDropout,training:a,count:3,dropoutFunc:this.dropoutFunc}));let n=this.dropoutMask,s=this.recurrentDropoutMask,i,o,l;0<this.dropout&&this.dropout<1&&(e=V(e,n[0]));let d=yn(e,this.kernel.read());this.useBias&&(d=sn(d,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=V(r,s[0]));let u=this.recurrentKernel.read(),[h,p]=va(u,[2*this.units,this.units],u.rank-1),c=yn(r,h),[f,m,g]=va(d,3,d.rank-1),[y,A]=va(c,2,c.rank-1);i=this.recurrentActivation.apply(ie(f,y)),o=this.recurrentActivation.apply(ie(m,A));let x=yn(V(o,r),p);l=this.activation.apply(ie(g,x));let b=ie(V(i,r),V(ie(1,$t(i)),l));return[b,b]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:zs(this.activation),recurrentActivation:zs(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Rt(this.kernelInitializer),recurrentInitializer:Rt(this.recurrentInitializer),biasInitializer:Rt(this.biasInitializer),kernelRegularizer:mt(this.kernelRegularizer),recurrentRegularizer:mt(this.recurrentRegularizer),biasRegularizer:mt(this.biasRegularizer),activityRegularizer:mt(this.activityRegularizer),kernelConstraint:ra(this.kernelConstraint),recurrentConstraint:ra(this.recurrentConstraint),biasConstraint:ra(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Ze(Ze({},e),t)}};T0.className="GRUCell";oe.registerClass(T0);var P1=class extends Qn{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new T0(e);super(e)}call(e,t){return Z(()=>{this.cell.dropoutMask!=null&&(ne(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ne(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let a=t==null?null:t.mask,r=t==null?null:t.training,n=t==null?null:t.initialState;return super.call(e,{mask:a,training:r,initialState:n})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};P1.className="GRU";oe.registerClass(P1);var Qh=class extends Jh{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,ha(this.units,"units"),this.activation=Os(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Os(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Tt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Tt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Tt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Nt(e.kernelRegularizer),this.recurrentRegularizer=Nt(e.recurrentRegularizer),this.biasRegularizer=Nt(e.biasRegularizer),this.kernelConstraint=na(e.kernelConstraint),this.recurrentConstraint=na(e.recurrentConstraint),this.biasConstraint=na(e.biasConstraint),this.dropout=pu([1,_s([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=pu([1,_s([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=ut(e);let a=e[e.length-1];this.kernel=this.addWeight("kernel",[a,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let r;if(this.useBias){if(this.unitForgetBias){let n=this.biasInitializer,s=this.units;r=new(t=class extends Lr{apply(i,o){let l=n.apply([s]),d=new h0().apply([s]),u=n.apply([s*2]);return mx(mx(l,d),u)}},t.className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Z(()=>{let a=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new K(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1],n=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ds({ones:()=>wr(e),rate:this.dropout,training:a,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ds({ones:()=>wr(r),rate:this.recurrentDropout,training:a,count:4,dropoutFunc:this.dropoutFunc}));let s=this.dropoutMask,i=this.recurrentDropoutMask,o,l,d,u;0<this.dropout&&this.dropout<1&&(e=V(e,s[0]));let h=yn(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=V(r,i[0])),h=ie(h,yn(r,this.recurrentKernel.read())),this.useBias&&(h=sn(h,this.bias.read()));let[p,c,f,m]=va(h,4,h.rank-1);o=this.recurrentActivation.apply(p),l=this.recurrentActivation.apply(c),d=ie(V(l,n),V(o,this.activation.apply(f))),u=this.recurrentActivation.apply(m);let g=V(u,this.activation.apply(d));return[g,g,d]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:zs(this.activation),recurrentActivation:zs(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Rt(this.kernelInitializer),recurrentInitializer:Rt(this.recurrentInitializer),biasInitializer:Rt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:mt(this.kernelRegularizer),recurrentRegularizer:mt(this.recurrentRegularizer),biasRegularizer:mt(this.biasRegularizer),activityRegularizer:mt(this.activityRegularizer),kernelConstraint:ra(this.kernelConstraint),recurrentConstraint:ra(this.recurrentConstraint),biasConstraint:ra(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Ze(Ze({},e),t)}};Qh.className="LSTMCell";oe.registerClass(Qh);var L1=class extends Qn{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Qh(e);super(e)}call(e,t){return Z(()=>{this.cell.dropoutMask!=null&&(ne(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ne(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let a=t==null?null:t.mask,r=t==null?null:t.training,n=t==null?null:t.initialState;return super.call(e,{mask:a,training:r,initialState:n})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};L1.className="LSTM";oe.registerClass(L1);var C0=class extends Jh{constructor(e){super(e);this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Z(()=>{e=e;let a=e.slice(1),r=[];for(let i of this.cells.slice().reverse())Array.isArray(i.stateSize)?r.push(a.splice(0,i.stateSize.length)):r.push(a.splice(0,1));r.reverse();let n=[],s;for(let i=0;i<this.cells.length;++i){let o=this.cells[i];a=r[i],i===0?s=[e[0]].concat(a):s=[s[0]].concat(a),s=o.call(s,t),n.push(s.slice(1))}a=[];for(let i of n.slice().reverse())a.push(...i);return[s[0]].concat(a)})}build(e){ug(e)&&(e=e[0]),e=e;let t;this.cells.forEach((a,r)=>{so(`RNNCell_${r}`,()=>{a.build(e),Array.isArray(a.stateSize)?t=a.stateSize[0]:t=a.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){let e=super.getConfig(),t=r=>({className:r.getClassName(),config:r.getConfig()}),a={cells:this.cells.map(t)};return Ze(Ze({},e),a)}static fromConfig(e,t,a={}){let r=[];for(let n of t.cells)r.push(Yr(n,a));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let a of this.cells)t.push(...a.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return dg(e)}setWeights(e){let t=[];for(let a of this.cells){let r=a.weights.length,n=e.splice(r);for(let s=0;s<a.weights.length;++s)t.push([a.weights[s],n[s]])}p1(t)}};C0.className="StackedRNNCells";oe.registerClass(C0);function Ds(e){let{ones:t,rate:a,training:r=!1,count:n=1,dropoutFunc:s}=e,i=()=>s!=null?s(t(),a):Ew(t(),a),o=()=>Kh(i,t,r);return!n||n<=1?da(o().clone()):Array(n).fill(void 0).map(o).map(l=>da(l.clone()))}var vk=class extends Qn{constructor(e){if(e.unroll)throw new We("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new We("It is not possible at the moment to stack convolutional cells.");super(e);this.inputSpec=[new Xt({ndim:5})]}call(e,t){return Z(()=>{if(this.cell.dropoutMask!=null&&(ne(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ne(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new K("ConvRNN2D cell does not support constants");let a=t==null?null:t.mask,r=t==null?null:t.training,n=t==null?null:t.initialState;return super.call(e,{mask:a,training:r,initialState:n})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return Z(()=>{let{stateSize:t}=this.cell,a=e.shape,r=this.computeSingleOutputShape(a),n=[r[0],...r.slice(2)],s=Ut(n);return Array.isArray(t)?Array(t.length).fill(s):[s]})}resetStates(e,t=!1){Z(()=>{if(!this.stateful)throw new zn("Cannot call resetStates() on an RNN Layer that is not stateful.");let a=this.inputSpec[0].shape,r=this.computeSingleOutputShape(a),n=[r[0],...r.slice(2)];if(a[0]==null)throw new K("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Ut(n)):this.states_=[Ut(n)];else if(e==null)ne(this.states_),this.keptStates!=null&&(ne(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Ut(n)):this.states_[0]=Ut(n);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new K(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):ne(this.states_);for(let s=0;s<this.states_.length;++s){let i=e[s],o=n;if(!w.arraysEqual(i.shape,o))throw new K(`State ${s} is incompatible with layer ${this.name}: expected shape=${o}, received shape=${i.shape}`);this.states_[s]=i}}this.states_=this.states_.map(s=>da(s.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:a,kernelSize:r,padding:n,strides:s,dilationRate:i}=this.cell,o=t==="channelsFirst",l=e[o?3:2],d=e[o?4:3],u=Jr(l,r[0],n,s[0],i[0]),h=Jr(d,r[1],n,s[1],i[1]);return[...e.slice(0,2),...o?[a,u,h]:[u,h,a]]}};vk.className="ConvRNN2D";var N0=class extends Qh{constructor(e){let{filters:t,kernelSize:a,strides:r,padding:n,dataFormat:s,dilationRate:i}=e;super(Sa(Ze({},e),{units:t}));this.filters=t,ha(this.filters,"filters"),this.kernelSize=tu(a,2,"kernelSize"),this.kernelSize.forEach(o=>ha(o,"kernelSize")),this.strides=tu(r||1,2,"strides"),this.strides.forEach(o=>ha(o,"strides")),this.padding=n||"valid",Tr(this.padding),this.dataFormat=s||"channelsLast",Gt(this.dataFormat),this.dilationRate=tu(i||1,2,"dilationRate"),this.dilationRate.forEach(o=>ha(o,"dilationRate"))}build(e){var t;e=ut(e);let a=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[a]==null)throw new K(`The channel dimension of the input should be defined. Found ${e[a]}`);let r=e[a],n=4,s=this.kernelSize.concat([r,this.filters*n]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let i=this.kernelSize.concat([this.filters,this.filters*n]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let o;if(this.unitForgetBias){let l=this.biasInitializer,d=this.filters;o=new(t=class extends Lr{apply(u,h){let p=l.apply([d]),c=dr([d]),f=l.apply([d*2]);return n1([p,c,f])}},t.className="CustomInit",t)}else o=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*n],null,o,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return Z(()=>{if(e.length!==3)throw new K(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let a=t.training||!1,r=e[0],n=e[1],s=e[2],i=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ds({ones:()=>wr(r),rate:this.dropout,training:a,count:i,dropoutFunc:this.dropoutFunc}));let o=this.dropoutMask,l=(W,ee,te)=>!ee||!ee[te]?W:V(ee[te],W),d=l(r,o,0),u=l(r,o,1),h=l(r,o,2),p=l(r,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ds({ones:()=>wr(n),rate:this.recurrentDropout,training:a,count:i,dropoutFunc:this.dropoutFunc}));let c=this.recurrentDropoutMask,f=l(n,c,0),m=l(n,c,1),g=l(n,c,2),y=l(n,c,3),A=3,[x,b,v,T]=va(this.kernel.read(),i,A),[C,E,R,z]=this.useBias?va(this.bias.read(),i):[null,null,null,null];d=this.inputConv(d,x,C,this.padding),u=this.inputConv(u,b,E,this.padding),h=this.inputConv(h,v,R,this.padding),p=this.inputConv(p,T,z,this.padding);let[F,k,D,_]=va(this.recurrentKernel.read(),i,A);f=this.recurrentConv(f,F),m=this.recurrentConv(m,k),g=this.recurrentConv(g,D),y=this.recurrentConv(y,_);let P=this.recurrentActivation.apply(ie(d,f)),j=this.recurrentActivation.apply(ie(u,m)),L=ie(V(j,s),V(P,this.activation.apply(ie(h,g)))),B=V(this.recurrentActivation.apply(ie(p,y)),this.activation.apply(L));return[B,B,L]})}getConfig(){let r=super.getConfig(),{units:e}=r,t=UA(r,["units"]),a={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Ze(Ze({},t),a)}inputConv(e,t,a,r){let n=Fs(e,t,this.strides,r||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return a?sn(n,a,this.dataFormat):n}recurrentConv(e,t){return Fs(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};N0.className="ConvLSTM2DCell";oe.registerClass(N0);var W1=class extends vk{constructor(e){let t=new N0(e);super(Sa(Ze({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}};W1.className="ConvLSTM2D";oe.registerClass(W1);var E0=class extends Qe{constructor(e){super(e);this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;let t=e.shape,a=[];for(let r=0;r<this.noiseShape.length;++r)a.push(this.noiseShape[r]==null?t[r]:this.noiseShape[r]);return a}call(e,t){return Z(()=>{this.invokeCallHook(e,t);let a=Be(e);if(0<this.rate&&this.rate<1){let r=t.training==null?!1:t.training,n=this.getNoiseShape(a);return Kh(()=>Ew(a,this.rate,n,this.seed),()=>a,r)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};E0.className="Dropout";oe.registerClass(E0);var B1=class extends E0{constructor(e){super(e);this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};B1.className="SpatialDropout1D";oe.registerClass(B1);var V1=class extends Qe{constructor(e){super(e);if(this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,ha(this.units,"units"),this.activation=Os(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=Tt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Tt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=na(e.kernelConstraint),this.biasConstraint=na(e.biasConstraint),this.kernelRegularizer=Nt(e.kernelRegularizer),this.biasRegularizer=Nt(e.biasRegularizer),this.activityRegularizer=Nt(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=ut(e);let t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=ut(e);let t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return Z(()=>{this.invokeCallHook(e,t);let a=Be(e),r=ww(this.activation.getClassName()),n;return r!=null?n=yn(a,this.kernel.read(),r,this.bias?this.bias.read():null):(n=yn(a,this.kernel.read()),this.bias!=null&&(n=sn(n,this.bias.read())),this.activation!=null&&(n=this.activation.apply(n))),n})}getConfig(){let e={units:this.units,activation:zs(this.activation),useBias:this.useBias,kernelInitializer:Rt(this.kernelInitializer),biasInitializer:Rt(this.biasInitializer),kernelRegularizer:mt(this.kernelRegularizer),biasRegularizer:mt(this.biasRegularizer),activityRegularizer:mt(this.activityRegularizer),kernelConstraint:ra(this.kernelConstraint),biasConstraint:ra(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};V1.className="Dense";oe.registerClass(V1);var U1=class extends Qe{constructor(e){e=e||{};super(e);this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=ut(e);for(let t of e.slice(1))if(t==null)throw new K(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],vs(e,1)]}call(e,t){return Z(()=>{this.invokeCallHook(e,t);let a=Be(e);if(this.dataFormat==="channelsFirst"&&a.rank>1){let r=[0];for(let n=2;n<a.rank;++n)r.push(n);r.push(1),a=Ye(a,r)}return tD(a)})}getConfig(){let e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};U1.className="Flatten";oe.registerClass(U1);var G1=class extends Qe{constructor(e){super(e);this.supportsMasking=!0,this.activation=Os(e.activation)}call(e,t){return Z(()=>{this.invokeCallHook(e,t);let a=Be(e);return this.activation.apply(a)})}getConfig(){let e={activation:zs(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};G1.className="Activation";oe.registerClass(G1);var j1=class extends Qe{constructor(e){super(e);this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Z(()=>(e=Be(e),QO(e,this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};j1.className="RepeatVector";oe.registerClass(j1);var H1=class extends Qe{constructor(e){super(e);this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){let a="Total size of new array must be unchanged.",r=t.slice(),n=1,s=null;for(let o=0;o<r.length;++o){let l=r[o];if(this.isUnknown(l))if(s===null)s=o;else throw new K("Can only specifiy one unknown dimension.");else n*=l}let i=vs(e);if(s!==null){if(n===0||i%n!==0)throw new K(a);r[s]=i/n}else if(i!==n)throw new K(a);return r}computeOutputShape(e){let t=!1;for(let a=0;a<e.length;++a)if(this.isUnknown(e[a])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Z(()=>{this.invokeCallHook(e,t);let a=Be(e),r=a.shape,n=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return q(a,n)})}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};H1.className="Reshape";oe.registerClass(H1);var q1=class extends Qe{constructor(e){super(e);if(e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=rn(1,e.dims.length+1);if(!w.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Xt({ndim:this.dims.length+1})]}computeOutputShape(e){e=ut(e);let t=e.slice();return this.dims.forEach((a,r)=>{t[r+1]=e[a]}),t}call(e,t){return Ye(Be(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};q1.className="Permute";oe.registerClass(q1);var X1=class extends Qe{constructor(e){super(e==null?{}:e);this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let a=Be(e),r=-1;return Mc(lu(a,this.maskValue),r)}call(e,t){return Z(()=>{this.invokeCallHook(e,t);let a=Be(e),r=-1,n=!0,s=Mc(lu(a,this.maskValue),r,n);return V(a,pe(s,a.dtype))})}};X1.className="Masking";oe.registerClass(X1);var K1=class extends Qe{constructor(e){super(e);if(this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(wt(e.inputLength))}this.inputDim=e.inputDim,ha(this.inputDim,"inputDim"),this.outputDim=e.outputDim,ha(this.outputDim,"outputDim"),this.embeddingsInitializer=Tt(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Nt(e.embeddingsRegularizer),this.activityRegularizer=Nt(e.activityRegularizer),this.embeddingsConstraint=na(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Z(()=>this.maskZero?(e=Be(e),lu(e,Je(e))):null)}computeOutputShape(e){if(e=ut(e),this.inputLength==null)return[...e,this.outputDim];let t=wt(this.inputLength);if(t.length!==e.length-1)throw new K(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let a=0;for(let r=0;r<t.length;++r){let n=t[r],s=e[r+1];if(n!=null&&s!=null&&n!==s)throw new K(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);n==null&&(t[a]=s),a++}}return[e[0],...t,this.outputDim]}call(e,t){return Z(()=>{this.invokeCallHook(e,t);let a=Be(e);a.dtype!=="int32"&&(a=u0(a,"int32"));let r=Nw(this.embeddings.read(),q(a,[a.size]));return q(r,ut(this.computeOutputShape(a.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Rt(this.embeddingsInitializer),embeddingsRegularizer:mt(this.embeddingsRegularizer),activityRegularizer:mt(this.activityRegularizer),embeddingsConstraint:ra(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};K1.className="Embedding";oe.registerClass(K1);var ml=class extends Qe{constructor(e){super(e||{});this.supportsMasking=!0}mergeFunction(e){throw new We}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;let a=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){let n=e[e.length-t.length+r],s=t[r];if(n==null||s==null||n<0||s<0)a.push(null);else if(n===1)a.push(s);else if(s===1)a.push(n);else{if(n!==s)throw new K("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));a.push(n)}}return a}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[ut(e)]),e=e,e.length<2)throw new K(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let n of e)n!=null&&n[0]!==null&&t.push(n[0]);if(t=bs(t),t.length>1)throw new K(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let a=e[0]==null?null:e[0].slice(1);for(let n=1;n<e.length;++n){let s=e[n]==null?null:e[n].slice(1);a=this.computeElementwiseOpOutputShape(a,s)}let r=e.map(n=>n.length);e.indexOf(null)===-1&&bs(r).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Z(()=>{if(e=e,this.reshapeRequired){let a=[],r=e.map(n=>n.rank);if(r.indexOf(null)===-1){let n=_s(r);for(let s of e){let i=s.rank;for(let o=0;o<n-i;++o)s=qh(s,1);a.push(s)}return this.mergeFunction(a)}else{let n=!1;for(let o of e){let l=o.rank;if(l==null){let d=o.shape,u=d[0],h=d.slice(1).concat([u]),p=q(o,[u].concat(vs(d.slice(1))));p=Ye(p,[1,0]),p=q(p,h),a.push(p),n=!0}else if(l>1){let d=rn(1,l).concat([0]);a.push(Ye(o,d)),n=!0}else a.push(o)}let s=this.mergeFunction(a),i=s.rank;if(n){if(i==null){let o=s.shape,l=o.length,d=o[l-1],u=[d].concat(o.slice(0,o.length-1));s=q(Ye(q(s,[-1,d]),[1,0]),u)}else if(i>1){let o=[i-1].concat(rn(0,i-1));s=Ye(s,o)}}return s}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let r=1;r<e.length;++r){let n=e[r]==null?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let a=[];for(let r of e)r!=null&&r[0]!==null&&a.push(r[0]);return a=bs(a),a.length===1?t=a.concat(t):t=[null].concat(t),t}computeMask(e,t){return Z(()=>{if(t==null)return null;if(!Array.isArray(t))throw new K("`mask` should be an Array");if(!Array.isArray(e))throw new K("`inputs` should be an Array");if(t.length!==e.length)throw new K(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(r=>r==null))return null;t=t.map(r=>r==null?r:ua(r,0));let a=t[0];for(let r=1;r<t.length-1;++r)a=tn(a,t[r]);return a})}},Z1=class extends ml{constructor(e){super(e)}mergeFunction(e){return Z(()=>{let t=e[0].clone();for(let a=1;a<e.length;++a)t=ie(t,e[a]);return t})}};Z1.className="Add";oe.registerClass(Z1);var Y1=class extends ml{constructor(e){super(e)}mergeFunction(e){return Z(()=>{let t=e[0].clone();for(let a=1;a<e.length;++a)t=V(t,e[a]);return t})}};Y1.className="Multiply";oe.registerClass(Y1);var J1=class extends ml{constructor(e){super(e)}mergeFunction(e){return Z(()=>{let t=e[0].clone();for(let a=1;a<e.length;++a)t=ie(t,e[a]);return V(1/e.length,t)})}};J1.className="Average";oe.registerClass(J1);var Q1=class extends ml{constructor(e){super(e)}mergeFunction(e){return Z(()=>{let t=e[0];for(let a=1;a<e.length;++a)t=Zn(t,e[a]);return t})}};Q1.className="Maximum";oe.registerClass(Q1);var ey=class extends ml{constructor(e){super(e)}mergeFunction(e){return Z(()=>{let t=e[0];for(let a=1;a<e.length;++a)t=Bh(t,e[a]);return t})}};ey.className="Minimum";oe.registerClass(ey);var ty=class extends ml{constructor(e){super(e);this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new K("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(let r of e)if(r!=null){t=!1;break}if(t)return;let a=[];for(let r=0;r<e.length;++r){let n=e[r].slice();n.splice(this.axis,1);let s=!1;for(let i of a)if(w.arraysEqual(i,n)){s=!0;break}s||a.push(n)}if(a.length>1)throw new K("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Z(()=>n1(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new K("A `Concatenate` layer should be called on a list of inputs.");let t=e,a=t[0].slice(),r=this.axis<0?a.length+this.axis:this.axis;for(let n of t.slice(1)){if(a[r]==null||n[r]==null){a[r]=null;break}a[r]+=n[r]}return a}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new K("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new K("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new K(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return Z(()=>{let a=!0;if(t.forEach(s=>{if(s!=null){a=!1;return}}),a)return null;let r=[];for(let s=0;s<e.length;++s)t[s]==null?r.push(pe(wr(e[s]),"bool")):t[s].rank<e[s].rank?r.push(ua(t[s],-1)):r.push(t[s]);let n=Ct(r,this.axis);return m2(n,-1,!1)})}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};ty.className="Concatenate";oe.registerClass(ty);function Rd(e,t){for(;e<0;)e+=t;return e}function OP(e,t,a){if(e.shape.length>3||t.shape.length>3)throw new We("batchDot is not implemented for tensors of 4D or higher rank yet");if(w.assert(e.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`),w.assert(e.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof a=="number"&&(a=[a,a]),e.dtype==="complex64"||t.dtype==="complex64")throw new We("batchDot is not implemented for complex64-type Tensors yet.");let r=e.shape.length,n=t.shape.length;a==null&&(a=[r-1,n-2]);let s=a;return Z(()=>{let i;if(r>n){i=r-n;let l=[];for(let d=0;d<i;++d)l.push(1);t=q(t,t.shape.concat(l))}else if(n>r){i=n-r;let l=[];for(let d=0;d<i;++d)l.push(1);e=q(e,e.shape.concat(l))}else i=0;let o;if(e.shape.length===2&&t.shape.length===2)s[0]===s[1]?o=we(V(e,t),s[0]):o=we(V(Ye(e,[1,0]),t),s[1]);else{let l=s[0]!==e.shape.length-1,d=s[1]===t.shape.length-1;o=He(e,t,l,d)}if(i>0){let l;r>n?l=r+n-3:l=r-1;let d=[];for(let u=l;u<l+i;++u)d.push(u);o=ft(o,d)}return o.shape.length===1&&(o=ua(o,1)),o})}var ay=class extends ml{constructor(e){super(e);this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){w.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],a=e[1];if(t.length>3||a.length>3)throw new We("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,a);if(t[r[0]]!==a[r[1]])throw new K(`Dimension incompatibility: ${t[r[0]]} !== ${a[r[1]]}`)}mergeFunction(e){if(e.length!==2)throw new K(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],a=e[1],r;return Array.isArray(this.axes)?r=this.axes.map((n,s)=>Rd(n,e[s].shape.length)):r=[Rd(this.axes,t.shape.length),Rd(this.axes,a.shape.length)],this.normalize&&(t=Dc(t,r[0]),a=Dc(a,r[1])),OP(t,a,r)}interpretAxes(e,t){let a;return Array.isArray(this.axes)?a=this.axes:a=[Rd(this.axes,e.length),Rd(this.axes,t.length)],a}computeOutputShape(e){w.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),a=e[1].slice();if(t.length>3||a.length>3)throw new We("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,a);t.splice(r[0],1),a.splice(r[1],1),a.splice(0,1);let n=t.concat(a);return n.length===1&&n.push(1),n}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};ay.className="Dot";oe.registerClass(ay);var ry=class extends Qe{constructor(e){super(e);this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Z(()=>{this.invokeCallHook(e,t);let a=Be(e);return Kh(()=>ie(d0(a.shape,0,this.stddev),a),()=>a,t.training||!1)})}};ry.className="GaussianNoise";oe.registerClass(ry);var ny=class extends Qe{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Z(()=>{this.invokeCallHook(e,t);let a=Be(e);return this.rate>0&&this.rate<1?Kh(()=>{let r=Math.sqrt(this.rate/(1-this.rate));return V(a,d0(a.shape,1,r))},()=>a,t.training||!1):a})}};ny.className="GaussianDropout";oe.registerClass(ny);var sy=class extends Qe{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Be(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Z(()=>{if(this.rate<1&&this.rate>0){let a=this._getNoiseShape(e);return Kh(()=>{let r=Be(e),n=1.6732632423543772,s=1.0507009873554805,i=-n*s,o=hl(Qu(a),this.rate);o=u0(o,"float32");let l=((1-this.rate)*(1+this.rate*i**2))**-.5,d=-l*i*this.rate,u=ie(V(r,o),V(ie(o,-1),i));return ie(V(u,l),d)},()=>Be(e),t.training||!1)}return e})}};sy.className="AlphaDropout";oe.registerClass(sy);function hh(e,t,a,r,n,s=.001){let i;if(e.rank===2)i=f3(e,t,a,r,n,s);else if(e.rank===3)i=m3(e,t,a,r,n,s);else if(e.rank===4)i=g3(e,t,a,r,n,s);else throw new We(`batchNormalization is not implemented for array of rank ${e.rank} yet`);return i}function DP(e,t,a,r,n=.001){return Z(()=>{let s=Hf(e,r),i=s.mean,o=s.variance;return[hh(e,i,o,a,t,n),i,o]})}function PP(e,t,a,r,n=.001){return Z(()=>{let s=Hf(e,r),i=s.mean,o=s.variance,l=[];for(let c of rn(0,e.rank))r.indexOf(c)!==-1?l.push(1):l.push(e.shape[c]);let d=q(i,l),u=q(o,l),h=t==null?null:q(t,l),p=a==null?null:q(a,l);return[hh(e,d,u,p,h,n),i,o]})}function LP(e,t,a,r,n=.001){return w.arraysEqual(r.slice().sort(),rn(0,e.rank-1))?DP(e,t,a,r,n):PP(e,t,a,r,n)}var iy=class extends Qe{constructor(e){e==null&&(e={});super(e);this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Tt(e.betaInitializer||"zeros"),this.gammaInitializer=Tt(e.gammaInitializer||"ones"),this.movingMeanInitializer=Tt(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Tt(e.movingVarianceInitializer||"ones"),this.betaConstraint=na(e.betaConstraint),this.gammaConstraint=na(e.gammaConstraint),this.betaRegularizer=Nt(e.betaRegularizer),this.gammaRegularizer=Nt(e.gammaRegularizer)}build(e){e=ut(e);let t=this.axis>=0?this.axis:this.axis+e.length,a=e[t];if(a==null)throw new K(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Xt({ndim:e.length,axes:{[t]:a}})];let r=[a];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Z(()=>{let a=t.training==null?!1:t.training,r=Be(e),n=r.shape,s=n.length,i=rn(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);let l=fo(1,s);l[o]=n[o];let d=i.slice();d.sort();let u=!w.arraysEqual(d,rn(0,s).slice(0,s-1)),h=()=>{if(u){let g=q(this.movingMean.read(),l),y=q(this.movingVariance.read(),l),A=this.center?q(this.beta.read(),l):null,x=this.scale?q(this.gamma.read(),l):null;return hh(r,g,y,A,x,this.epsilon)}else return hh(r,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!a)return h();let[p,c,f]=LP(r,this.gamma.read(),this.beta.read(),i,this.epsilon),m=(g,y,A)=>{Z(()=>{let x=1-A,b=g.read(),v=V(me(b,y),x);g.write(me(b,v))})};return m(this.movingMean,c,this.momentum),m(this.movingVariance,f,this.momentum),p})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Rt(this.betaInitializer),gammaInitializer:Rt(this.gammaInitializer),movingMeanInitializer:Rt(this.movingMeanInitializer),movingVarianceInitializer:Rt(this.movingVarianceInitializer),betaRegularizer:mt(this.betaRegularizer),gammaRegularizer:mt(this.gammaRegularizer),betaConstraint:ra(this.betaConstraint),gammaConstraint:ra(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};iy.className="BatchNormalization";oe.registerClass(iy);var oy=class extends Qe{constructor(e){e==null&&(e={});super(e);if(this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Tt(e.betaInitializer||"zeros"),this.gammaInitializer=Tt(e.gammaInitializer||"ones"),this.betaRegularizer=Nt(e.betaRegularizer),this.gammaRegularizer=Nt(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=ut(e);let t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let n=0;n<this.axis.length;++n)this.axis[n]<0&&(this.axis[n]+=t);for(let n of this.axis)if(n<0||n>=t)throw new Error(`Invalid axis: ${n}`);if(this.axis.length!==bs(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let a=this.axis.map(n=>e[n]),r=!0;this.scale?this.gamma=this.addWeight("gamma",a,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",a,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){let a=Be(e),r=a.shape,n=r.length;return Z(()=>{let{mean:s,variance:i}=Hf(a,this.axis,!0),o=fo(1,n);for(let c of this.axis)o[c]=r[c];let l=c=>c!=null&&c.shape.length!==n?q(c,o):c,d=l(this.gamma.read()),u=l(this.beta.read()),h=[],p=[];for(let c=0;c<n;++c)this.axis.indexOf(c)!==-1?(h.push(r[c]),p.push(1)):(h.push(1),p.push(r[c]));return s=zr(s,h),i=zr(i,h),d=zr(d,p),u=zr(u,p),hh(a,s,i,u,d,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Rt(this.betaInitializer),gammaInitializer:Rt(this.gammaInitializer),betaRegularizer:mt(this.betaRegularizer),gammaRegularizer:mt(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};oy.className="LayerNormalization";oe.registerClass(oy);function WP(e,t,a){return Z(()=>{if(e.rank!==4)throw new K(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new K("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(a==null&&(a=an()),a!=="channelsLast"&&a!=="channelsFirst")throw new K(`Unknown data format: ${a}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let r;return a==="channelsFirst"?r=[[0,0],[0,0],t[0],t[1]]:r=[[0,0],t[0],t[1],[0,0]],kn(e,r)})}var ly=class extends Qe{constructor(e){e==null&&(e={});super(e);if(this.dataFormat=e.dataFormat==null?an():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new K(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,a;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],a=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new K(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new K(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);a=e.padding[1]}this.padding=[t,a]}this.inputSpec=[new Xt({ndim:4})]}computeOutputShape(e){e=ut(e);let t,a;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?a=e[3]+this.padding[1][0]+this.padding[1][1]:a=null,[e[0],e[1],t,a]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?a=e[2]+this.padding[1][0]+this.padding[1][1]:a=null,[e[0],t,a,e[3]])}call(e,t){return Z(()=>WP(Be(e),this.padding,this.dataFormat))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};ly.className="ZeroPadding2D";oe.registerClass(ly);function R0(e,t,a,r,n,s){return Z(()=>{Gt(n),Iw(s),Tr(r),a==null&&(a=[1,1]),r==null&&(r="valid"),n==null&&(n=an()),s==null&&(s="max"),e=N1(e,n);let i,o=r==="same"?"same":"valid";return s==="max"?i=Gf(e,t,a,o):i=zf(e,t,a,o),n==="channelsFirst"&&(i=Ye(i,[0,3,1,2])),i})}function wk(e,t,a,r,n,s){return Z(()=>{Gt(n),Iw(s),Tr(r),a==null&&(a=[1,1,1]),r==null&&(r="valid"),n==null&&(n=an()),s==null&&(s="max"),e=ck(e,n);let i,o=r==="same"?"same":"valid";return s==="max"?i=F2(e,t,a,o):i=y2(e,t,a,o),n==="channelsFirst"&&(i=Ye(i,[0,4,1,2,3])),i})}var kk=class extends Qe{constructor(e){e.poolSize==null&&(e.poolSize=2);super(e);if(typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new K(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(ha(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new K(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);ha(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,Tr(this.padding),this.inputSpec=[new Xt({ndim:3})]}computeOutputShape(e){e=ut(e);let t=Jr(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Z(()=>{this.invokeCallHook(e,t),e=qh(Be(e),2);let a=this.poolingFunction(Be(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return ft(a,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},uy=class extends kk{constructor(e){super(e)}poolingFunction(e,t,a,r,n){return Gt(n),Tr(r),R0(e,t,a,r,n,"max")}};uy.className="MaxPooling1D";oe.registerClass(uy);var dy=class extends kk{constructor(e){super(e)}poolingFunction(e,t,a,r,n){return Gt(n),Tr(r),R0(e,t,a,r,n,"avg")}};dy.className="AveragePooling1D";oe.registerClass(dy);var Ik=class extends Qe{constructor(e){e.poolSize==null&&(e.poolSize=[2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new K(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];ha(this.poolSize,"poolSize"),ha(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Gt(this.dataFormat),Tr(this.padding),this.inputSpec=[new Xt({ndim:4})]}computeOutputShape(e){e=ut(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],a=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=Jr(t,this.poolSize[0],this.padding,this.strides[0]),a=Jr(a,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,a]:[e[0],t,a,e[3]]}call(e,t){return Z(()=>(this.invokeCallHook(e,t),this.poolingFunction(Be(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},hy=class extends Ik{constructor(e){super(e)}poolingFunction(e,t,a,r,n){return Gt(n),Tr(r),R0(e,t,a,r,n,"max")}};hy.className="MaxPooling2D";oe.registerClass(hy);var py=class extends Ik{constructor(e){super(e)}poolingFunction(e,t,a,r,n){return Gt(n),Tr(r),R0(e,t,a,r,n,"avg")}};py.className="AveragePooling2D";oe.registerClass(py);var Sk=class extends Qe{constructor(e){e.poolSize==null&&(e.poolSize=[2,2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new K(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];ha(this.poolSize,"poolSize"),ha(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Gt(this.dataFormat),Tr(this.padding),this.inputSpec=[new Xt({ndim:5})]}computeOutputShape(e){e=ut(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],a=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=Jr(t,this.poolSize[0],this.padding,this.strides[0]),a=Jr(a,this.poolSize[1],this.padding,this.strides[1]),r=Jr(r,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,a,r]:[e[0],t,a,r,e[4]]}call(e,t){return Z(()=>(this.invokeCallHook(e,t),this.poolingFunction(Be(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},cy=class extends Sk{constructor(e){super(e)}poolingFunction(e,t,a,r,n){return Gt(n),Tr(r),wk(e,t,a,r,n,"max")}};cy.className="MaxPooling3D";oe.registerClass(cy);var fy=class extends Sk{constructor(e){super(e)}poolingFunction(e,t,a,r,n){return Gt(n),Tr(r),wk(e,t,a,r,n,"avg")}};fy.className="AveragePooling3D";oe.registerClass(fy);var Tk=class extends Qe{constructor(e){super(e);this.inputSpec=[new Xt({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new We}},my=class extends Tk{constructor(e){super(e||{})}call(e,t){return Z(()=>{let a=Be(e);return Pt(a,1)})}};my.className="GlobalAveragePooling1D";oe.registerClass(my);var gy=class extends Tk{constructor(e){super(e||{})}call(e,t){return Z(()=>{let a=Be(e);return Fa(a,1)})}};gy.className="GlobalMaxPooling1D";oe.registerClass(gy);var Ck=class extends Qe{constructor(e){super(e);this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Gt(this.dataFormat),this.inputSpec=[new Xt({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new We}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},yy=class extends Ck{call(e,t){return Z(()=>{let a=Be(e);return this.dataFormat==="channelsLast"?Pt(a,[1,2]):Pt(a,[2,3])})}};yy.className="GlobalAveragePooling2D";oe.registerClass(yy);var Ay=class extends Ck{call(e,t){return Z(()=>{let a=Be(e);return this.dataFormat==="channelsLast"?Fa(a,[1,2]):Fa(a,[2,3])})}};Ay.className="GlobalMaxPooling2D";oe.registerClass(Ay);var Nk=class extends Qe{constructor(e){super(e);this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,a={}){let r=t.layer,n=Yr(r,a);delete t.layer;let s={layer:n};return Object.assign(s,t),new e(s)}},xy=class extends Nk{constructor(e){super(e);this.supportsMasking=!0}build(e){if(e=ut(e),e.length<3)throw new K(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=ut(e);let t=[e[0]].concat(e.slice(2)),a=this.layer.computeOutputShape(t),r=e[1];return[a[0],r].concat(a.slice(1))}call(e,t){return Z(()=>(e=Be(e),xk((a,r)=>[Be(this.layer.call(a,t)),[]],e,[],!1,null,null,!1,!0)[1]))}};xy.className="TimeDistributed";oe.registerClass(xy);function BP(e){cl(XO,"BidirectionalMergeMode",e)}var VP="concat",by=class extends Nk{constructor(e){super(e);let t=e.layer.getConfig(),a={};a.className=e.layer.getClassName(),a.config=t,this.forwardLayer=Yr(a),t.goBackwards=t.goBackwards!==!0;let r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=Yr(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?VP:e.mergeMode,BP(this.mergeMode),e.weights)throw new We("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,a=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,a)),this.backwardLayer.setWeights(e.slice(a))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let a,r,n;return this.returnState&&(n=t.slice(1)),a=t[0],a=a,this.mergeMode==="concat"?(a[a.length-1]*=2,r=[a]):this.mergeMode==null?r=[a,a.slice()]:r=[a],this.returnState?this.mergeMode==null?r.concat(n).concat(n.slice()):[a].concat(n).concat(n.slice()):ja(r)}apply(e,t){let a=t==null?null:t.initialState,r=t==null?null:t.constants;t==null&&(t={});let n=Ak(e,a,r,this.numConstants);if(e=n.inputs,a=n.initialState,r=n.constants,Array.isArray(e)&&(a=e.slice(1),e=e[0]),(a==null||a.length===0)&&r==null)return super.apply(e,t);let s=[],i=[];if(a!=null){let l=a.length;if(l%2>0)throw new K("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=a,s.push(...a);let d=a.map(u=>new Xt({shape:u.shape}));this.forwardLayer.stateSpec=d.slice(0,l/2),this.backwardLayer.stateSpec=d.slice(l/2),i.push(...d)}if(r!=null)throw new We("Support for constants in Bidirectional layers is not implemented yet.");let o=s[0]instanceof Kr;for(let l of s)if(l instanceof Kr!==o)throw new K("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){let l=[e].concat(s),d=this.inputSpec.concat(i),u=this.inputSpec;this.inputSpec=d;let h=super.apply(l,t);return this.inputSpec=u,h}else return super.apply(e,t)}call(e,t){return Z(()=>{let a=t.initialState,r,n;if(a==null)r=this.forwardLayer.call(e,t),n=this.backwardLayer.call(e,t);else{let o=a.slice(0,a.length/2),l=a.slice(a.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:o})),n=this.backwardLayer.call(e,Object.assign(t,{initialState:l}))}let s;this.returnState&&(Array.isArray(r)&&(s=r.slice(1).concat(n.slice(1))),r=r[0],n=n[0]),this.returnSequences&&(n=kr(n,1));let i;return this.mergeMode==="concat"?i=n1([r,n]):this.mergeMode==="sum"?i=ie(r,n):this.mergeMode==="ave"?i=V(.5,ie(r,n)):this.mergeMode==="mul"?i=V(r,n):this.mergeMode==null&&(i=[r,n]),this.returnState?this.mergeMode==null?i.concat(s):[i].concat(s):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){so(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),so(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let a;if(this.returnSequences?this.mergeMode==null?a=[t,t]:a=t:this.mergeMode==null?a=[null,null]:a=null,this.returnState){let r=this.forwardLayer.states.map(n=>null);return Array.isArray(a)?a.concat(r).concat(r):[a].concat(r).concat(r)}else return a}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let a=Yr(t.layer);if(delete t.layer,t.numConstants!=null)throw new We("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let r=t;return r.layer=a,new e(r)}};by.className="Bidirectional";oe.registerClass(by);function UP(e){return new td(e)}function GP(e){return new S1(e)}function jP(e){return new w1(e)}function HP(e){return new k1(e)}function qP(e){return new I1(e)}function XP(e){return new C1(e)}function KP(e){return new T1(e)}function ZP(e){return new M1(e)}function YP(e){return new k0(e)}function JP(e){return new R1(e)}function QP(e){return new I0(e)}function eL(e){return new F1(e)}function tL(e){return new $1(e)}function aL(e){return new _1(e)}function rL(e){return new z1(e)}function nL(e){return new O1(e)}function sL(e){return new G1(e)}function iL(e){return new V1(e)}function oL(e){return new E0(e)}function lL(e){return new B1(e)}function uL(e){return new U1(e)}function dL(e){return new j1(e)}function hL(e){return new H1(e)}function pL(e){return new q1(e)}function cL(e){return new K1(e)}function fL(e){return new Z1(e)}function mL(e){return new J1(e)}function gL(e){return new ty(e)}function yL(e){return new Q1(e)}function AL(e){return new ey(e)}function xL(e){return new Y1(e)}function bL(e){return new ay(e)}function vL(e){return new iy(e)}function wL(e){return new oy(e)}function kL(e){return new ly(e)}function vy(e){return new dy(e)}function IL(e){return vy(e)}function SL(e){return vy(e)}function wy(e){return new py(e)}function TL(e){return wy(e)}function CL(e){return wy(e)}function ky(e){return new fy(e)}function NL(e){return ky(e)}function EL(e){return ky(e)}function RL(e){return new my(e)}function FL(e){return new yy(e)}function Ek(e){return new gy(e)}function Rk(e){return new Ay(e)}function Fk(e){return new uy(e)}function $k(e){return new hy(e)}function $L(e){return new cy(e)}function ML(e){return new P1(e)}function _L(e){return new T0(e)}function zL(e){return new L1(e)}function OL(e){return new Qh(e)}function DL(e){return new D1(e)}function PL(e){return new S0(e)}function LL(e){return new W1(e)}function WL(e){return new N0(e)}function BL(e){return new Qn(e)}function VL(e){return new C0(e)}function UL(e){return new by(e)}function GL(e){return new xy(e)}var jL=Ek,HL=Rk,qL=Fk,XL=$k;function KL(e){return new ry(e)}function ZL(e){return new ny(e)}function YL(e){return new sy(e)}function JL(e){return new X1(e)}var Mk={};ze(Mk,{MAPE:()=>uW,MSE:()=>pW,binaryAccuracy:()=>QL,binaryCrossentropy:()=>eW,categoricalAccuracy:()=>aW,categoricalCrossentropy:()=>rW,cosineProximity:()=>iW,mape:()=>dW,meanAbsoluteError:()=>oW,meanAbsolutePercentageError:()=>lW,meanSquaredError:()=>hW,mse:()=>cW,precision:()=>nW,recall:()=>sW,sparseCategoricalAccuracy:()=>tW});function QL(e,t){return m1(e,t)}function eW(e,t){return Uw(e,t)}function tW(e,t){return Gw(e,t)}function aW(e,t){return g1(e,t)}function rW(e,t){return y1(e,t)}function nW(e,t){return Vw(e,t)}function sW(e,t){return UD(e,t)}function iW(e,t){return f1(e,t)}function oW(e,t){return b0(e,t)}function lW(e,t){return ad(e,t)}function uW(e,t){return ad(e,t)}function dW(e,t){return ad(e,t)}function hW(e,t){return fl(e,t)}function pW(e,t){return fl(e,t)}function cW(e,t){return fl(e,t)}var _k={};ze(_k,{modelFromJSON:()=>kP});var zk={};ze(zk,{l1:()=>mW,l1l2:()=>fW,l2:()=>gW});function fW(e){return new Zh(e)}function mW(e){return FP(e)}function gW(e){return $P(e)}var Ok=class extends cu{constructor(){super(...arguments);this.model=null}setModel(e){if(!(e instanceof Un))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function Wp(e,t){return e<t}function Fx(e,t){return e>t}var Dk=class extends Ok{constructor(e){super();if(e==null&&(e={}),e.restoreBestWeights)throw new We("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=Wp:this.mode==="max"?this.monitorFunc=Fx:this.monitor.indexOf("acc")!==-1?this.monitorFunc=Fx:this.monitorFunc=Wp,this.monitorFunc===Wp&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===Wp?1/0:-1/0}async onEpochEnd(e,t){await ds(t);let a=this.getMonitorValue(t);a!=null&&(this.monitorFunc(a-this.minDelta,this.best)?(this.best=a,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){e==null&&(e={});let t=e[this.monitor];return t==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};function yW(e){return new Dk(e)}var AW={earlyStopping:yW},xW=J();xW.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var Pk=(e=>(e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF",e))(Pk||{}),$x;(e=>{(t=>{t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"})(e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))})($x||($x={}));var Iy={};function bW(e,t){let a={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};Iy[e]=a}function Lk(e){return Iy[e]}function vW(e){delete Iy[e]}function I(e,t,a,r,n){let s=t.inputParams[e];if(s&&s.inputIndexStart!==void 0){let o=s.inputIndexStart,l=s.inputIndexEnd===0?void 0:s.inputIndexEnd===void 0?o+1:s.inputIndexEnd;if(s.type==="tensor")return Ea(t.inputNames[s.inputIndexStart],a,r,n);if(s.type==="tensors")return t.inputNames.slice(o,l).map(h=>Ea(h,a,r,n));let d=Ea(t.inputNames.slice(o)[0],a,r,n),u=d.dataSync();return s.type==="number"?u[0]:w.toNestedArray(d.shape,u)}let i=t.attrParams[e];return i&&i.value}function Ea(e,t,a,r){let[n,s]=tr(e);if(r!=null){let o=r.getHashTableHandleByName(n);if(o!=null)return o}let i=a.currentContextIds.find(o=>!!t[Vc(n,o)]);return i!==void 0?t[Vc(n,i)][s]:void 0}function wW(e,t,a){return t[Vc(e,a.currentContextId)]}function mn(e,t){let[a,r,n]=tr(e);return[Vc(a,t&&t.currentContextId),r,n]}function Vc(e,t){return t?`${e}-${t}`:e}function tr(e){let t=e.split(":");if(t.length===1)return[e,0,void 0];let a=t[0],r=t.length===3?t[1]:void 0,n=Number(t[t.length-1]);return[a,n,r]}function dc(e,t,a){let r=I("pad",e,t,a);if(r==="explicit"){r=I("explicitPaddings",e,t,a);let n=[[0,0],[0,0],[0,0],[0,0]];for(let s=0;s<4;s++)n[s][0]=r[s*2],n[s][1]=r[s*2+1];return n}return r}function Dn(e){return e.kept?e:Ha(e)}var Wk={};ze(Wk,{json:()=>kW});var kW=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Bk={};ze(Bk,{json:()=>IW});var IW=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Vk={};ze(Vk,{json:()=>SW});var SW=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],Uk={};ze(Uk,{json:()=>TW});var TW=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],Gk={};ze(Gk,{json:()=>CW});var CW=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],jk={};ze(jk,{json:()=>NW});var NW=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Hk={};ze(Hk,{json:()=>EW});var EW=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],qk={};ze(qk,{json:()=>RW});var RW=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],Xk={};ze(Xk,{json:()=>FW});var FW=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],Kk={};ze(Kk,{json:()=>$W});var $W=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],Zk={};ze(Zk,{json:()=>MW});var MW=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Yk={};ze(Yk,{json:()=>_W});var _W=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],Jk={};ze(Jk,{json:()=>zW});var zW=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],Qk={};ze(Qk,{json:()=>OW});var OW=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],e7={};ze(e7,{json:()=>DW});var DW=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],t7={};ze(t7,{json:()=>PW});var PW=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],a7={};ze(a7,{json:()=>LW});var LW=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],r7={};ze(r7,{json:()=>WW});var WW=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],n7={};ze(n7,{json:()=>BW});var BW=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],Mx=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[Wk,Bk,Vk,Uk,Gk,jk,Hk,qk,Xk,Kk,Zk,Yk,Jk,Qk,e7,t7,a7,r7,n7],t=[].concat(...e.map(a=>a.json));this.opMappers=t.reduce((a,r)=>(a[r.tfOpName]=r,a),{})}transformGraph(e,t={}){let a=e.node,r=[],n=[],s=[],i=a.reduce((f,m)=>(f[m.name]=this.mapNode(m),m.op.startsWith("Placeholder")?r.push(f[m.name]):m.op==="Const"?n.push(f[m.name]):(m.input==null||m.input.length===0)&&s.push(f[m.name]),f),{}),o=[],l=[],d={},u={};t!=null&&(d=this.mapSignatureEntries(t.inputs),u=this.mapSignatureEntries(t.outputs));let h=Object.keys(i);h.forEach(f=>{let m=i[f];m.inputNames.forEach((g,y)=>{let[A,,x]=mn(g),b=i[A];if(b.outputs!=null){let v=b.outputs.indexOf(x);if(v!==-1){let T=`${A}:${v}`;m.inputNames[y]=T}}m.inputs.push(b),b.children.push(m)})}),Object.keys(u).length===0?h.forEach(f=>{let m=i[f];m.children.length===0&&l.push(m)}):Object.keys(u).forEach(f=>{let[m]=mn(f),g=i[m];g!=null&&(g.signatureKey=u[f],l.push(g))}),Object.keys(d).length>0?Object.keys(d).forEach(f=>{let[m]=mn(f),g=i[m];g&&(g.signatureKey=d[f],o.push(g))}):o=r;let p={};e.library!=null&&e.library.function!=null&&(p=e.library.function.reduce((f,m)=>(f[m.signature.name]=this.mapFunction(m),f),{}));let c={nodes:i,inputs:o,outputs:l,weights:n,placeholders:r,signature:t,functions:p};return s.length>0&&(c.initNodes=s),c}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,a)=>(t[e[a].name]=a,t),{})}mapNode(e){let t=Lk(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});let a={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(r=>r.startsWith("^")?r.substr(1):r),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(a.inputParams=t.inputs.reduce((r,n)=>(r[n.name]={type:n.type,inputIndexStart:n.start,inputIndexEnd:n.end},r),{})),t.attrs!=null&&(a.attrParams=t.attrs.reduce((r,n)=>{let s=n.type,i;switch(n.type){case"string":i=yg(e.attr,n.tfName,n.defaultValue),i===void 0&&!!n.tfDeprecatedName&&(i=yg(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":i=Ig(e.attr,n.tfName,n.defaultValue),i===void 0&&!!n.tfDeprecatedName&&(i=Ig(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":i=xg(e.attr,n.tfName,n.defaultValue||0),i===void 0&&!!n.tfDeprecatedName&&(i=xg(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":i=kg(e.attr,n.tfName,n.defaultValue),i===void 0&&!!n.tfDeprecatedName&&(i=kg(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":i=Ag(e.attr,n.tfName,n.defaultValue),i===void 0&&!!n.tfDeprecatedName&&(i=Ag(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":i=Tg(e.attr,n.tfName,n.defaultValue),i===void 0&&!!n.tfDeprecatedName&&(i=Tg(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":i=wg(e.attr,n.tfName,n.defaultValue),i===void 0&&!!n.tfDeprecatedName&&(i=wg(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":i=Sg(e.attr,n.tfName,n.defaultValue),i===void 0&&!!n.tfDeprecatedName&&(i=Sg(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":i=bg(e.attr,n.tfName,n.defaultValue),i===void 0&&!!n.tfDeprecatedName&&(i=bg(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":i=vg(e.attr,n.tfName,n.defaultValue),i===void 0&&!!n.tfDeprecatedName&&(i=vg(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":i=_x(e.attr,n.tfName,n.defaultValue),i===void 0&&!!n.tfDeprecatedName&&(i=_x(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return r[n.name]={value:i,type:s},r},{})),a}mapFunction(e){let t=e.nodeDef,a=[],r=[],n={};t!=null&&(n=t.reduce((d,u)=>(d[u.name]=this.mapNode(u),u.op==="Const"&&r.push(d[u.name]),d),{}));let s=[],i=[];e.signature.inputArg.forEach(d=>{let[u]=mn(d.name),h={name:u,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Sy(d.type),type:"dtype"}},children:[]};h.signatureKey=d.name,s.push(h),n[u]=h}),Object.keys(n).forEach(d=>{let u=n[d];u.inputNames.forEach((h,p)=>{let[c,,f]=mn(h),m=n[c];if(m.outputs!=null){let g=m.outputs.indexOf(f);if(g!==-1){let y=`${c}:${g}`;u.inputNames[p]=y}}u.inputs.push(m),m.children.push(u)})});let o=e.ret;e.signature.outputArg.forEach(d=>{let[u,h]=mn(o[d.name]),p=n[u];p!=null&&(p.defaultOutput=h,i.push(p))});let l=this.mapArgsToSignature(e);return{nodes:n,inputs:s,outputs:i,weights:r,placeholders:a,signature:l}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,a)=>(t[a.name]=this.mapArgToTensorInfo(a),t),{}),outputs:e.signature.outputArg.reduce((t,a)=>(t[a.name]=this.mapArgToTensorInfo(a,e.ret),t),{})}}mapArgToTensorInfo(e,t){let a=e.name;return t!=null&&(a=t[a]),{name:a,dtype:e.type}}};function VW(e){let t=J().global;if(typeof t.atob!="undefined")return t.atob(e);if(typeof Buffer!="undefined")return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function s7(e,t){let a=Array.isArray(e)?String.fromCharCode.apply(null,e):VW(e);return t?a:a.toLowerCase()}function yg(e,t,a,r=!1){let n=e[t];return n!=null?s7(n.s,r):a}function Ag(e,t,a){let r=e[t];return r?r.b:a}function xg(e,t,a){let r=e[t]||{},n=r.i!=null?r.i:r.f!=null?r.f:a;return typeof n=="number"?n:parseInt(n,10)}function Sy(e){switch(typeof e=="string"&&(e=Pk[e]),e){case 1:case 19:return"float32";case 3:case 9:case 6:case 4:return"int32";case 10:return"bool";case 2:return"float32";case 7:return"string";default:return null}}function _x(e,t,a){let r=e[t];return r&&r.func?r.func.name:a}function bg(e,t,a){let r=e[t];return r&&r.type?Sy(r.type):a}function vg(e,t,a){let r=e[t];return r&&r.list&&r.list.type?r.list.type.map(n=>Sy(n)):a}function i7(e){if(!e.unknownRank)return e.dim!=null?e.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function wg(e,t,a){let r=e[t];return r&&r.shape?i7(r.shape):a}function kg(e,t,a){let r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(n=>typeof n=="number"?n:parseInt(n,10)):a}function Ig(e,t,a,r=!1){let n=e[t];return n&&n.list&&n.list.s?n.list.s.map(s=>s7(s,r)):a}function Sg(e,t,a){let r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map(n=>i7(n)):a}function Tg(e,t,a){let r=e[t];return r&&r.list&&r.list.b?r.list.b:a}var UW=class{constructor(e,t,a){this.node=e,this.tensorMap=t,this.context=a,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(r=>this.getInput(r)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((r,n)=>(r[n]=this.getAttr(n),r),{}))}getInput(e){return Ea(e,this.tensorMap,this.context)}getAttr(e,t){let a=this.node.rawAttrs[e];if(a.tensor!=null)return Ea(e,this.tensorMap,this.context);if(a.i!=null||a.f!=null)return xg(this.node.rawAttrs,e,t);if(a.s!=null)return yg(this.node.rawAttrs,e,t);if(a.b!=null)return Ag(this.node.rawAttrs,e,t);if(a.shape!=null)return wg(this.node.rawAttrs,e,t);if(a.type!=null)return bg(this.node.rawAttrs,e,t);if(a.list!=null){if(a.list.i!=null||a.list.f!=null)return kg(this.node.rawAttrs,e,t);if(a.list.s!=null)return Ig(this.node.rawAttrs,e,t);if(a.list.shape!=null)return Sg(this.node.rawAttrs,e,t);if(a.list.b!=null)return Tg(this.node.rawAttrs,e,t);if(a.list.type!=null)return vg(this.node.rawAttrs,e,t)}return t}},GW=(e,t,a)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[ie(I("a",e,t,a),I("b",e,t,a))];case"AddN":return[f2(I("tensors",e,t,a))];case"FloorMod":case"Mod":return[jf(I("a",e,t,a),I("b",e,t,a))];case"Mul":return[V(I("a",e,t,a),I("b",e,t,a))];case"RealDiv":case"Div":return[ge(I("a",e,t,a),I("b",e,t,a))];case"DivNoNan":return[C3(I("a",e,t,a),I("b",e,t,a))];case"FloorDiv":return[_f(I("a",e,t,a),I("b",e,t,a))];case"Sub":return[me(I("a",e,t,a),I("b",e,t,a))];case"Minimum":return[Bh(I("a",e,t,a),I("b",e,t,a))];case"Maximum":return[Zn(I("a",e,t,a),I("b",e,t,a))];case"Pow":return[$s(I("a",e,t,a),I("b",e,t,a))];case"SquaredDifference":return[U2(I("a",e,t,a),I("b",e,t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},jW=(e,t,a)=>{switch(e.op){case"Abs":case"ComplexAbs":return[Qt(I("x",e,t,a))];case"Acos":return[r3(I("x",e,t,a))];case"Acosh":return[n3(I("x",e,t,a))];case"Asin":return[i3(I("x",e,t,a))];case"Asinh":return[o3(I("x",e,t,a))];case"Atan":return[l3(I("x",e,t,a))];case"Atan2":return[u3(I("x",e,t,a),I("y",e,t,a))];case"Atanh":return[d3(I("x",e,t,a))];case"Ceil":return[A3(I("x",e,t,a))];case"Complex":return[Ns(I("real",e,t,a),I("imag",e,t,a))];case"Cos":return[Pf(I("x",e,t,a))];case"Cosh":return[k2(I("x",e,t,a))];case"Elu":return[Lh(I("x",e,t,a))];case"Erf":return[E3(I("x",e,t,a))];case"Exp":return[br(I("x",e,t,a))];case"Expm1":return[R3(I("x",e,t,a))];case"Floor":return[Wh(I("x",e,t,a))];case"Log":return[vr(I("x",e,t,a))];case"Log1p":return[Bf(I("x",e,t,a))];case"Imag":return[Lf(I("x",e,t,a))];case"Neg":return[$t(I("x",e,t,a))];case"Reciprocal":return[U3(I("x",e,t,a))];case"Real":return[oh(I("x",e,t,a))];case"Relu":return[In(I("x",e,t,a))];case"Round":return[O2(I("x",e,t,a))];case"Selu":return[P2(I("x",e,t,a))];case"Sigmoid":return[Ar(I("x",e,t,a))];case"Sin":return[L2(I("x",e,t,a))];case"Sign":return[H3(I("x",e,t,a))];case"Sinh":return[W2(I("x",e,t,a))];case"Softplus":return[Ju(I("x",e,t,a))];case"Sqrt":return[wa(I("x",e,t,a))];case"Square":return[ct(I("x",e,t,a))];case"Tanh":return[su(I("x",e,t,a))];case"Tan":return[X3(I("x",e,t,a))];case"ClipByValue":return[hr(I("x",e,t,a),I("clipValueMin",e,t,a),I("clipValueMax",e,t,a))];case"Relu6":return[z2(I("x",e,t,a))];case"Rsqrt":return[D2(Ea(e.inputNames[0],t,a))];case"Prod":return[$2(I("x",e,t,a),I("axes",e,t,a))];case"LeakyRelu":return[Wf(I("x",e,t,a),I("alpha",e,t,a))];case"Prelu":return[Xf(I("x",e,t,a),I("alpha",e,t,a))];case"IsNan":return[F3(Ea(e.inputNames[0],t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Rr(e,t,a=""){if(!(typeof e=="number"||typeof t=="number")){w.assert(e.length===t.length,()=>a+` Shapes ${e} and ${t} must match`);for(let r=0;r<e.length;r++){let n=e[r],s=t[r];w.assert(n<0||s<0||n===s,()=>a+` Shapes ${e} and ${t} must match`)}}}function zx(e){return!(typeof e=="number"||e.some(t=>t<0))}function Fd(e,t,a){let r=Cg(e,a),n=!zx(r);if(n&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(n&&t.forEach(s=>{r=Cg(s.shape,r)}),!zx(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function Cg(e,t){if(typeof e=="number")return t;if(typeof t=="number")return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let a=[];for(let r=0;r<e.length;++r){let n=e[r],s=t[r];if(n>=0&&s>=0&&n!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);a[r]=n>=0?n:s}return a}var HW=class{constructor(e,t,a,r,n,s,i){this.name=e,this.dtype=t,this.maxSize=a,this.elementShape=r,this.identicalElementShapes=n,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=Ie(0),da(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let a=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),Rr(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),a.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(a.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);a.tensor=t,da(t),a.written=!0,this.tensors[e]=a}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((a,r)=>this.write(a,t[r]))}gather(e,t){if(!!t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let r=0;r<this.size();r++)e.push(r)}if(e.length===0)return lt([],[0].concat(this.elementShape));let a=this.readMany(e);return Rr(this.elementShape,a[0].shape,"TensorArray shape mismatch: "),_a(a,0)}concat(e){if(!!e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return lt([],[0].concat(this.elementShape));let t=[];for(let r=0;r<this.size();r++)t.push(r);let a=this.readMany(t);return Rr(this.elementShape,a[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${a[0].shape})`),Ct(a,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let a=Math.max(...e);if(!this.dynamicSize&&a>=this.maxSize)throw new Error(`Max index must be < array size (${a}  vs. ${this.maxSize})`);this.writeMany(e,Ir(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let a=0,r=e.map(o=>(a+=o,a));if(a!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${a}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let n=a===0?0:t.size/a,s=[];Z(()=>{t=q(t,[1,a,n]);for(let o=0;o<e.length;++o){let l=o===0?0:r[o-1],d=[0,l,0],u=[1,e[o],n];s[o]=q(_e(t,d,u),this.elementShape)}return s});let i=[];for(let o=0;o<e.length;o++)i[o]=o;this.writeMany(i,s)}},ep=class{constructor(e,t,a,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=a,e!=null&&e.forEach(n=>{if(a!==n.dtype)throw new Error(`Invalid data types; op elements ${a}, but list elements ${n.dtype}`);Rr(t,n.shape,"TensorList shape mismatch: "),da(n)}),this.idTensor=Ie(0),this.maxNumElements=r,da(this.idTensor)}get id(){return this.idTensor.id}copy(){return new ep([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,a=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(a!==-1&&this.tensors.length!==a)throw new Error(`Operation expected a list with ${a} elements but got a list with ${this.tensors.length} elements.`);Rr(e,this.elementShape,"TensorList shape mismatch: ");let r=Fd(this.elementShape,this.tensors,e);return Z(()=>{let n=this.tensors.map(s=>q(s,r));return _a(n,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let a=Fd(this.elementShape,this.tensors,e),r=this.tensors.pop();return Rr(r.shape,e,"TensorList shape mismatch: "),q(r,a)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Rr(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");da(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,a){if(a!==this.elementDtype)throw new Error(`Invalid data types; op elements ${a}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);Rr(this.tensors[e].shape,t,"TensorList shape mismatch: ");let r=Fd(this.elementShape,this.tensors,t);return q(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Rr(this.elementShape,t.shape,"TensorList shape mismatch: "),da(t),this.tensors[e]=t}gather(e,t,a){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);Rr(this.elementShape,a,"TensorList shape mismatch: "),e=e.slice(0,this.size());let r=Fd(this.elementShape,this.tensors,a);return e.length===0?lt([],[0].concat(r)):Z(()=>{let n=e.map(s=>q(this.tensors[s],r));return _a(n,0)})}concat(e,t){if(!!e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Rr(this.elementShape,t,"TensorList shape mismatch: ");let a=Fd(this.elementShape,this.tensors,t);return this.size()===0?lt([],[0].concat(a)):Z(()=>{let r=this.tensors.map(n=>q(n,a));return Ct(r,0)})}};function qW(e,t,a){let r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==a)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${a}`);let n=e.shape.slice(1);Rr(n,t,"TensorList shape mismatch: ");let s=Ir(e);return new ep(s,t,r)}function XW(e,t,a){return new ep([],e,t,a)}function KW(e,t,a,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let n=Math.max(...t);if(r!=null&&r!==-1&&n>=r)throw new Error(`Max index must be < array size (${n}  vs. ${r})`);let s=new ep([],a,e.dtype,r),i=Ir(e,0);return t.forEach((o,l)=>{s.setItem(o,i[l])}),s}function ZW(e,t,a){let r=0,n=t.map(u=>(r+=u,r));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${e.shape}`);let s=e.shape.slice(1),i=Cg(s,a),o=r===0?0:e.size/r,l=Z(()=>{let u=[];e=q(e,[1,r,o]);for(let h=0;h<t.length;++h){let p=h===0?0:n[h-1],c=[0,p,0],f=[1,t[h],o];u[h]=q(_e(e,c,f),i)}return e.dispose(),u}),d=new ep([],a,e.dtype,t.length);for(let u=0;u<l.length;u++)d.setItem(u,l[u]);return d}var YW=async(e,t,a)=>{switch(e.op){case"If":case"StatelessIf":{let r=I("thenBranch",e,t,a),n=I("elseBranch",e,t,a),s=I("cond",e,t,a),i=I("args",e,t,a);return(await s.data())[0]?a.functionMap[r].executeFunctionAsync(i,a.tensorArrayMap,a.tensorListMap):a.functionMap[n].executeFunctionAsync(i,a.tensorArrayMap,a.tensorListMap)}case"While":case"StatelessWhile":{let r=I("body",e,t,a),n=I("cond",e,t,a),s=I("args",e,t,a),i=await a.functionMap[n].executeFunctionAsync(s,a.tensorArrayMap,a.tensorListMap),o=s.map(u=>u.id),l=await i[0].data();i.forEach(u=>{!u.kept&&o.indexOf(u.id)===-1&&u.dispose()});let d=s;for(;l[0];){let u=d;d=await a.functionMap[r].executeFunctionAsync(d,a.tensorArrayMap,a.tensorListMap);let h=d.map(c=>c.id);u.forEach(c=>{!c.kept&&o.indexOf(c.id)===-1&&h.indexOf(c.id)===-1&&c.dispose()});let p=await a.functionMap[n].executeFunctionAsync(d,a.tensorArrayMap,a.tensorListMap);l=await p[0].data(),p.forEach(c=>{!c.kept&&o.indexOf(c.id)===-1&&h.indexOf(c.id)===-1&&c.dispose()})}return d}case"LoopCond":{let r=I("pred",e,t,a);return[Dn(r)]}case"Switch":{let r=I("pred",e,t,a),n=I("data",e,t,a);return n.kept||(n=Dn(n)),(await r.data())[0]?[void 0,n]:[n,void 0]}case"Merge":{let r=e.inputNames.find(n=>Ea(n,t,a)!==void 0);if(r){let n=Ea(r,t,a);return[Dn(n)]}return}case"Enter":{let r=I("frameName",e,t,a),n=I("tensor",e,t,a);return a.enterFrame(r),[Dn(n)]}case"Exit":{let r=I("tensor",e,t,a);return a.exitFrame(),[Dn(r)]}case"NextIteration":{let r=I("tensor",e,t,a);return a.nextIteration(),[Dn(r)]}case"TensorArrayV3":{let r=I("size",e,t,a),n=I("dtype",e,t,a),s=I("elementShape",e,t,a),i=I("dynamicSize",e,t,a),o=I("clearAfterRead",e,t,a),l=I("identicalElementShapes",e,t,a),d=I("name",e,t,a),u=new HW(d,n,r,s,l,i,o);return a.addTensorArray(u),[u.idTensor,Ie(1)]}case"TensorArrayWriteV3":{let r=I("tensorArrayId",e,t,a),n=I("index",e,t,a),s=I("tensor",e,t,a),i=a.getTensorArray(r.id);return i.write(n,s),[i.idTensor]}case"TensorArrayReadV3":{let r=I("tensorArrayId",e,t,a),n=I("index",e,t,a);return[a.getTensorArray(r.id).read(n)]}case"TensorArrayGatherV3":{let r=I("tensorArrayId",e,t,a),n=I("indices",e,t,a),s=I("dtype",e,t,a);return[a.getTensorArray(r.id).gather(n,s)]}case"TensorArrayScatterV3":{let r=I("tensorArrayId",e,t,a),n=I("indices",e,t,a),s=I("tensor",e,t,a),i=a.getTensorArray(r.id);return i.scatter(n,s),[i.idTensor]}case"TensorArrayConcatV3":{let r=I("tensorArrayId",e,t,a),n=a.getTensorArray(r.id),s=I("dtype",e,t,a);return[n.concat(s)]}case"TensorArraySplitV3":{let r=I("tensorArrayId",e,t,a),n=I("tensor",e,t,a),s=I("lengths",e,t,a),i=a.getTensorArray(r.id);return i.split(s,n),[i.idTensor]}case"TensorArraySizeV3":{let r=I("tensorArrayId",e,t,a),n=a.getTensorArray(r.id);return[Ie(n.size(),"int32")]}case"TensorArrayCloseV3":{let r=I("tensorArrayId",e,t,a),n=a.getTensorArray(r.id);return n.clearAndClose(),[n.idTensor]}case"TensorListSetItem":{let r=I("tensorListId",e,t,a),n=I("index",e,t,a),s=I("tensor",e,t,a),i=a.getTensorList(r.id);return i.setItem(n,s),[i.idTensor]}case"TensorListGetItem":{let r=I("tensorListId",e,t,a),n=I("index",e,t,a),s=I("elementShape",e,t,a),i=I("elementDType",e,t,a);return[a.getTensorList(r.id).getItem(n,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{let r=I("indices",e,t,a),n=I("tensor",e,t,a),s=I("elementShape",e,t,a),i=I("numElements",e,t,a),o=KW(n,r,s,i);return a.addTensorList(o),[o.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let r=I("elementShape",e,t,a),n=I("elementDType",e,t,a),s;e.op==="TensorListReserve"?s="numElements":s="maxNumElements";let i=I(s,e,t,a),o=XW(r,n,i);return a.addTensorList(o),[o.idTensor]}case"TensorListGather":{let r=I("tensorListId",e,t,a),n=I("indices",e,t,a),s=I("elementShape",e,t,a),i=I("elementDType",e,t,a);return[a.getTensorList(r.id).gather(n,i,s)]}case"TensorListStack":{let r=I("tensorListId",e,t,a),n=I("elementShape",e,t,a),s=I("elementDType",e,t,a),i=I("numElements",e,t,a);return[a.getTensorList(r.id).stack(n,s,i)]}case"TensorListFromTensor":{let r=I("tensor",e,t,a),n=I("elementShape",e,t,a),s=I("elementDType",e,t,a),i=qW(r,n,s);return a.addTensorList(i),[i.idTensor]}case"TensorListConcat":{let r=I("tensorListId",e,t,a),n=a.getTensorList(r.id),s=I("dtype",e,t,a),i=I("elementShape",e,t,a);return[n.concat(s,i)]}case"TensorListPushBack":{let r=I("tensorListId",e,t,a),n=I("tensor",e,t,a),s=a.getTensorList(r.id);return s.pushBack(n),[s.idTensor]}case"TensorListPopBack":{let r=I("tensorListId",e,t,a),n=I("elementShape",e,t,a),s=I("elementDType",e,t,a);return[a.getTensorList(r.id).popBack(n,s)]}case"TensorListSplit":{let r=I("tensor",e,t,a),n=I("elementShape",e,t,a),s=I("lengths",e,t,a),i=ZW(r,s,n);return a.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Ox(e,t,a){let[r,n]=I("fusedOps",e,t,a),s=r==="biasadd",i=!s,o=n==="prelu",l=r==="fusedbatchnorm",d=I("numArgs",e,t,a);if(s){if(o&&d!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&d!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let u=I("strides",e,t,a),h=dc(e,t,a),p=I("dataFormat",e,t,a).toUpperCase(),c=I("dilations",e,t,a),[f,m]=I("args",e,t,a);i&&(m=f,f=void 0);let g=I("leakyreluAlpha",e,t,a);return{stride:u,pad:h,dataFormat:p,dilations:c,biasArg:f,preluArg:m,activationFunc:n,leakyreluAlpha:g}}var JW=(e,t,a)=>{switch(e.op){case"Conv1D":{let r=I("stride",e,t,a),n=I("pad",e,t,a),s=I("dataFormat",e,t,a).toUpperCase(),i=I("dilation",e,t,a);return[x2(I("x",e,t,a),I("filter",e,t,a),r,n,s,i)]}case"Conv2D":{let r=I("strides",e,t,a),n=dc(e,t,a),s=I("dataFormat",e,t,a).toUpperCase(),i=I("dilations",e,t,a);return[Fs(I("x",e,t,a),I("filter",e,t,a),[r[1],r[2]],n,s,[i[1],i[2]])]}case"_FusedConv2D":{let{stride:r,pad:n,dataFormat:s,dilations:i,biasArg:o,preluArg:l,activationFunc:d,leakyreluAlpha:u}=Ox(e,t,a);return[Ms.conv2d({x:I("x",e,t,a),filter:I("filter",e,t,a),strides:[r[1],r[2]],pad:n,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:d,preluActivationWeights:l,leakyreluAlpha:u})]}case"FusedDepthwiseConv2dNative":{let{stride:r,pad:n,dataFormat:s,dilations:i,biasArg:o,preluArg:l,activationFunc:d,leakyreluAlpha:u}=Ox(e,t,a);return[Ms.depthwiseConv2d({x:I("x",e,t,a),filter:I("filter",e,t,a),strides:[r[1],r[2]],pad:n,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:d,preluActivationWeights:l,leakyreluAlpha:u})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let r=I("outputShape",e,t,a),n=I("strides",e,t,a),s=dc(e,t,a);return[v2(I("x",e,t,a),I("filter",e,t,a),r,[n[1],n[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let r=I("strides",e,t,a),n=dc(e,t,a),s=I("dilations",e,t,a),i=I("dataFormat",e,t,a).toUpperCase();return[Ph(I("input",e,t,a),I("filter",e,t,a),[r[1],r[2]],n,i,[s[1],s[2]])]}case"Conv3D":{let r=I("strides",e,t,a),n=I("pad",e,t,a),s=I("dataFormat",e,t,a).toUpperCase(),i=I("dilations",e,t,a);return[w2(I("x",e,t,a),I("filter",e,t,a),[r[1],r[2],r[3]],n,s,[i[1],i[2],i[3]])]}case"AvgPool":{let r=I("strides",e,t,a),n=I("pad",e,t,a),s=I("kernelSize",e,t,a);return[zf(I("x",e,t,a),[s[1],s[2]],[r[1],r[2]],n)]}case"MaxPool":{let r=I("strides",e,t,a),n=I("pad",e,t,a),s=I("kernelSize",e,t,a);return[Gf(I("x",e,t,a),[s[1],s[2]],[r[1],r[2]],n)]}case"MaxPoolWithArgmax":{let r=I("strides",e,t,a),n=I("pad",e,t,a),s=I("kernelSize",e,t,a),i=I("includeBatchInIndex",e,t,a),{result:o,indexes:l}=L3(I("x",e,t,a),[s[1],s[2]],[r[1],r[2]],n,i);return[o,l]}case"AvgPool3D":{let r=I("strides",e,t,a),n=I("pad",e,t,a),s=I("kernelSize",e,t,a);return[y2(I("x",e,t,a),[s[1],s[2],s[3]],[r[1],r[2],r[3]],n)]}case"MaxPool3D":{let r=I("strides",e,t,a),n=I("pad",e,t,a),s=I("kernelSize",e,t,a);return[F2(I("x",e,t,a),[s[1],s[2],s[3]],[r[1],r[2],r[3]],n)]}case"Dilation2D":{let r=I("strides",e,t,a),n=I("pad",e,t,a),s=I("dilations",e,t,a),i=r[1],o=r[2],l=s[1],d=s[2];return[T3(I("x",e,t,a),I("filter",e,t,a),[i,o],n,[l,d],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},QW=(e,t,a)=>{switch(e.op){case"Fill":{let r=I("shape",e,t,a),n=I("dtype",e,t,a),s=I("value",e,t,a);return[Yu(r,s,n)]}case"LinSpace":{let r=I("start",e,t,a),n=I("stop",e,t,a),s=I("num",e,t,a);return[$3(r,n,s)]}case"Multinomial":{let r=I("logits",e,t,a),n=I("numSamples",e,t,a),s=I("seed",e,t,a);return[B3(r,n,s)]}case"OneHot":{let r=I("indices",e,t,a),n=I("depth",e,t,a),s=I("onValue",e,t,a),i=I("offValue",e,t,a);return[ih(r,n,s,i)]}case"Ones":return[dr(I("shape",e,t,a),I("dtype",e,t,a))];case"OnesLike":return[wr(I("x",e,t,a))];case"RandomUniform":return[Qu(I("shape",e,t,a),I("minval",e,t,a),I("maxval",e,t,a),I("dtype",e,t,a))];case"Range":{let r=I("start",e,t,a),n=I("stop",e,t,a),s=I("step",e,t,a);return[uu(r,n,s,I("dtype",e,t,a))]}case"TruncatedNormal":{let r=I("shape",e,t,a),n=I("mean",e,t,a),s=I("stdDev",e,t,a),i=I("seed",e,t,a);return[Jf(r,n,s,I("dtype",e,t,a),i)]}case"Zeros":return[Ut(I("shape",e,t,a),I("dtype",e,t,a))];case"ZerosLike":return[Je(I("x",e,t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function dm(e,t,a){let r=I("boxes",e,t,a),n=I("scores",e,t,a),s=I("maxOutputSize",e,t,a),i=I("iouThreshold",e,t,a),o=I("scoreThreshold",e,t,a),l=I("softNmsSigma",e,t,a);return{boxes:r,scores:n,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:l}}var eB=async(e,t,a)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:r,scores:n,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:l}=dm(e,t,a),d=await De.nonMaxSuppressionWithScoreAsync(r,n,s,i,o,l);return[d.selectedIndices,d.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:r,scores:n,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=dm(e,t,a),l=I("padToMaxOutputSize",e,t,a),d=await De.nonMaxSuppressionPaddedAsync(r,n,s,i,o,l);return[d.selectedIndices,d.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:r,scores:n,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=dm(e,t,a);return[await De.nonMaxSuppressionAsync(r,n,s,i,o)]}case"Where":{let r=pe(I("condition",e,t,a),"bool"),n=[await G2(r)];return r.dispose(),n}case"ListDiff":return j3(I("x",e,t,a),I("y",e,t,a));default:throw TypeError(`Node type ${e.op} is not implemented`)}},tB=(e,t,a)=>{switch(e.op){case"TopKV2":{let r=I("x",e,t,a),n=I("k",e,t,a),s=I("sorted",e,t,a),i=K3(r,n,s);return[i.values,i.indices]}case"Unique":{let r=I("x",e,t,a),n=sg(r);return[n.values,n.indices]}case"UniqueV2":{let r=I("x",e,t,a),n=I("axis",e,t,a),s=sg(r,n);return[s.values,s.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},aB=(e,t,a)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let r=I("default",e,t,a);return[Ea(e.name,t,a)||r];case"Placeholder":return[Ea(e.name,t,a)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let d=I("x",e,t,a);return[Dn(d)]}case"IdentityN":return I("x",e,t,a).map(d=>Dn(d));case"Snapshot":let n=I("x",e,t,a);return[Dn(n)];case"Shape":return[Lt(I("x",e,t,a).shape,"int32")];case"ShapeN":return I("x",e,t,a).map(d=>Lt(d.shape));case"Size":return[Ie(I("x",e,t,a).size,"int32")];case"Rank":return[Ie(I("x",e,t,a).rank,"int32")];case"NoOp":return[Ie(1)];case"Print":let s=I("x",e,t,a),i=I("data",e,t,a),o=I("message",e,t,a),l=I("summarize",e,t,a);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let d=0;d<i.length;d++)console.log(Array.prototype.slice.call(i[d].dataSync()).slice(0,l));return[s];default:throw TypeError(`Node type ${e.op} is not implemented`)}},rB=class{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Ie(0),this.tensorMap=new Map,da(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Ie(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let a=await e.data();return this.tensorMap.forEach(r=>r.dispose()),this.tensorMap.clear(),Z(()=>{let r=Ir(t),n=a.length,s=r.length;w.assert(n===s,()=>`The number of elements doesn't match, keys has ${n} elements, the values has ${s} elements.`);for(let i=0;i<n;i++){let o=a[i],l=r[i];da(l),this.tensorMap.set(o,l)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let a=await e.data();return Z(()=>{let r=[];for(let n=0;n<a.length;n++){let s=a[n],i=this.findWithDefault(s,t);r.push(i)}return _a(r)})}findWithDefault(e,t){let a=this.tensorMap.get(e);return a!=null?a:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}},nB=async(e,t,a,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{let n=I("keyDType",e,t,a),s=I("valueDType",e,t,a),i=new rB(n,s);return r.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{let n=I("tableHandle",e,t,a,r),s=I("keys",e,t,a),i=I("values",e,t,a);return[await r.getHashTableById(n.id).import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{let n=I("tableHandle",e,t,a,r),s=I("keys",e,t,a),i=I("defaultValue",e,t,a);return[await r.getHashTableById(n.id).find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{let n=I("tableHandle",e,t,a,r);return[r.getHashTableById(n.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},sB=(e,t,a)=>{switch(e.op){case"ResizeBilinear":{let r=I("images",e,t,a),n=I("size",e,t,a),s=I("alignCorners",e,t,a),i=I("halfPixelCenters",e,t,a);return[De.resizeBilinear(r,[n[0],n[1]],s,i)]}case"ResizeNearestNeighbor":{let r=I("images",e,t,a),n=I("size",e,t,a),s=I("alignCorners",e,t,a),i=I("halfPixelCenters",e,t,a);return[De.resizeNearestNeighbor(r,[n[0],n[1]],s,i)]}case"CropAndResize":{let r=I("image",e,t,a),n=I("boxes",e,t,a),s=I("boxInd",e,t,a),i=I("cropSize",e,t,a),o=I("method",e,t,a),l=I("extrapolationValue",e,t,a);return[De.cropAndResize(r,n,s,i,o,l)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},iB=(e,t,a)=>{switch(e.op){case"Equal":return[xr(I("a",e,t,a),I("b",e,t,a))];case"NotEqual":return[lu(I("a",e,t,a),I("b",e,t,a))];case"Greater":return[cr(I("a",e,t,a),I("b",e,t,a))];case"GreaterEqual":return[hl(I("a",e,t,a),I("b",e,t,a))];case"Less":return[T2(I("a",e,t,a),I("b",e,t,a))];case"LessEqual":return[pl(I("a",e,t,a),I("b",e,t,a))];case"LogicalAnd":return[tn(I("a",e,t,a),I("b",e,t,a))];case"LogicalNot":return[Uf(I("a",e,t,a))];case"LogicalOr":return[R2(I("a",e,t,a),I("b",e,t,a))];case"Select":case"SelectV2":return[Ma(I("condition",e,t,a),I("a",e,t,a),I("b",e,t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},oB=(e,t,a)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[He(I("a",e,t,a),I("b",e,t,a),I("transposeA",e,t,a),I("transposeB",e,t,a))];case"Einsum":return[N3(I("equation",e,t,a),...I("tensors",e,t,a))];case"Transpose":return[Ye(I("x",e,t,a),I("perm",e,t,a))];case"_FusedMatMul":let[r,n]=I("fusedOps",e,t,a),s=r==="biasadd",i=n==="prelu",o=I("numArgs",e,t,a),l=I("leakyreluAlpha",e,t,a);if(s){if(i&&o!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&o!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[d,u]=I("args",e,t,a);return[Ms.matMul({a:I("a",e,t,a),b:I("b",e,t,a),transposeA:I("transposeA",e,t,a),transposeB:I("transposeB",e,t,a),bias:d,activation:n,preluActivationWeights:u,leakyreluAlpha:l})];default:throw TypeError(`Node type ${e.op} is not implemented`)}},lB=(e,t,a)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":return[iu(I("x",e,t,a),I("mean",e,t,a),I("variance",e,t,a),I("offset",e,t,a),I("scale",e,t,a),I("epsilon",e,t,a))];case"FusedBatchNormV3":return[iu(I("x",e,t,a),I("mean",e,t,a),I("variance",e,t,a),I("offset",e,t,a),I("scale",e,t,a),I("epsilon",e,t,a))];case"LRN":return[M3(I("x",e,t,a),I("radius",e,t,a),I("bias",e,t,a),I("alpha",e,t,a),I("beta",e,t,a))];case"Softmax":return[Vh(I("x",e,t,a))];case"LogSoftmax":return[C2(I("x",e,t,a))];case"SparseToDense":return[H2(I("sparseIndices",e,t,a),I("outputShape",e,t,a),I("sparseValues",e,t,a),I("defaultValue",e,t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},uB=(e,t,a)=>{switch(e.op){case"Max":{let i=I("axis",e,t,a),o=I("keepDims",e,t,a);return[Fa(I("x",e,t,a),i,o)]}case"Mean":{let i=I("axis",e,t,a),o=I("keepDims",e,t,a);return[Pt(I("x",e,t,a),i,o)]}case"Min":{let i=I("axis",e,t,a),o=I("keepDims",e,t,a);return[no(I("x",e,t,a),i,o)]}case"Sum":{let i=I("axis",e,t,a),o=I("keepDims",e,t,a);return[we(I("x",e,t,a),i,o)]}case"All":{let i=I("axis",e,t,a),o=I("keepDims",e,t,a);return[m2(I("x",e,t,a),i,o)]}case"Any":{let i=I("axis",e,t,a),o=I("keepDims",e,t,a);return[Mc(I("x",e,t,a),i,o)]}case"ArgMax":{let i=I("axis",e,t,a);return[Gn(I("x",e,t,a),i)]}case"ArgMin":{let i=I("axis",e,t,a);return[s3(I("x",e,t,a),i)]}case"Prod":{let i=I("axis",e,t,a),o=I("keepDims",e,t,a);return[$2(I("x",e,t,a),i,o)]}case"Cumsum":{let i=I("axis",e,t,a),o=I("exclusive",e,t,a),l=I("reverse",e,t,a);return[I2(I("x",e,t,a),i,o,l)]}case"Bincount":let r=I("x",e,t,a),n=I("weights",e,t,a),s=I("size",e,t,a);return[A2(r,n,s)];case"DenseBincount":{let i=I("x",e,t,a),o=I("weights",e,t,a),l=I("size",e,t,a),d=I("binaryOutput",e,t,a);return[I3(i,o,l,d)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},dB=(e,t,a)=>{switch(e.op){case"ConcatV2":case"Concat":{let r=I("n",e,t,a),n=I("axis",e,t,a),s=I("tensors",e,t,a);return s=s.slice(0,r),[Ct(s,n)]}case"Gather":{let r=I("x",e,t,a),n=I("indices",e,t,a);return[ou(r,pe(n,"int32"),0)]}case"GatherV2":{let r=I("axis",e,t,a),n=I("batchDims",e,t,a),s=I("x",e,t,a),i=I("indices",e,t,a);return[ou(s,pe(i,"int32"),r,n)]}case"Reverse":{let r=I("dims",e,t,a),n=[];for(let i=0;i<r.length;i++)r[i]&&n.push(i);let s=I("x",e,t,a);return[kr(s,n)]}case"ReverseV2":{let r=I("axis",e,t,a),n=I("x",e,t,a);return[kr(n,r)]}case"Slice":{let r=I("begin",e,t,a),n=I("size",e,t,a);return[_e(I("x",e,t,a),r,n)]}case"StridedSlice":{let r=I("begin",e,t,a),n=I("end",e,t,a),s=I("strides",e,t,a),i=I("beginMask",e,t,a),o=I("endMask",e,t,a),l=I("ellipsisMask",e,t,a),d=I("newAxisMask",e,t,a),u=I("shrinkAxisMask",e,t,a),h=I("x",e,t,a);return[q3(h,r,n,s,i,o,l,d,u)]}case"Pack":return Z(()=>{let r=I("axis",e,t,a),n=I("tensors",e,t,a),s=n[0].shape,i=ft(n[0]).shape,o=n.map(l=>{let d=w.arraysEqual(l.shape,s);if(!d&&!w.arraysEqual(ft(l).shape,i))throw new Error("the input tensors shape does not match");return d?l:q(l,s)});return[_a(o,r)]});case"Unpack":{let r=I("axis",e,t,a),n=I("tensor",e,t,a);return Ir(n,r)}case"Tile":{let r=I("reps",e,t,a);return[zr(I("x",e,t,a),r)]}case"Split":case"SplitV":{let r=I("axis",e,t,a),n=I("numOrSizeSplits",e,t,a),s=I("x",e,t,a);return va(s,n,r)}case"ScatterNd":{let r=I("indices",e,t,a),n=I("values",e,t,a),s=I("shape",e,t,a);return[ew(r,n,s)]}case"GatherNd":{let r=I("x",e,t,a),n=I("indices",e,t,a);return[tw(r,n)]}case"SparseToDense":{let r=I("sparseIndices",e,t,a),n=I("outputShape",e,t,a),s=I("sparseValues",e,t,a),i=I("defaultValue",e,t,a);return[H2(r,s,n,s.dtype===i.dtype?i:pe(i,s.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},hB=(e,t,a)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:r,outputValues:n,emptyRowIndicator:s,reverseIndexMap:i}=zd.sparseFillEmptyRows(I("indices",e,t,a),I("values",e,t,a),I("denseShape",e,t,a),I("defaultValue",e,t,a));return[r,n,s,i]}case"SparseReshape":{let{outputIndices:r,outputShape:n}=zd.sparseReshape(I("inputIndices",e,t,a),I("inputShape",e,t,a),I("newShape",e,t,a));return[r,n]}case"SparseSegmentMean":return[zd.sparseSegmentMean(I("data",e,t,a),I("indices",e,t,a),I("segmentIds",e,t,a))];case"SparseSegmentSum":return[zd.sparseSegmentSum(I("data",e,t,a),I("indices",e,t,a),I("segmentIds",e,t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},pB=(e,t,a)=>{switch(e.op){case"FFT":return[Zf(I("x",e,t,a))];case"IFFT":return[lh(I("x",e,t,a))];case"RFFT":return[Yf(I("x",e,t,a))];case"IRFFT":return[V2(I("x",e,t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},cB=(e,t,a)=>{switch(e.op){case"StringNGrams":{let{nGrams:r,nGramsSplits:n}=uc.stringNGrams(I("data",e,t,a),I("dataSplits",e,t,a),I("separator",e,t,a),I("nGramWidths",e,t,a),I("leftPad",e,t,a),I("rightPad",e,t,a),I("padWidth",e,t,a),I("preserveShortSequences",e,t,a));return[r,n]}case"StringSplit":{let{indices:r,values:n,shape:s}=uc.stringSplit(I("input",e,t,a),I("delimiter",e,t,a),I("skipEmpty",e,t,a));return[r,n,s]}case"StringToHashBucketFast":return[uc.stringToHashBucketFast(I("input",e,t,a),I("numBuckets",e,t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},fB=(e,t,a)=>{switch(e.op){case"Cast":return[pe(I("x",e,t,a),I("dtype",e,t,a))];case"ExpandDims":{let r=I("axis",e,t,a);return[ua(I("x",e,t,a),r)]}case"Squeeze":{let r=I("axis",e,t,a);return[ft(I("x",e,t,a),r)]}case"Reshape":return[q(I("x",e,t,a),I("shape",e,t,a))];case"MirrorPad":return[W3(I("x",e,t,a),I("padding",e,t,a),I("mode",e,t,a))];case"PadV2":case"Pad":return[kn(I("x",e,t,a),I("padding",e,t,a),I("constantValue",e,t,a))];case"SpaceToBatchND":{let r=I("blockShape",e,t,a),n=I("paddings",e,t,a);return[qf(I("x",e,t,a),r,n)]}case"BatchToSpaceND":{let r=I("blockShape",e,t,a),n=I("crops",e,t,a);return[Of(I("x",e,t,a),r,n)]}case"DepthToSpace":{let r=I("blockSize",e,t,a),n=I("dataFormat",e,t,a).toUpperCase();return[S3(I("x",e,t,a),r,n)]}case"BroadcastTo":return[Xd(I("x",e,t,a),I("shape",e,t,a))];case"BroadcastArgs":return[y3(I("s0",e,t,a),I("s1",e,t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Dx(e,t,a,r){let n=((s,i,o)=>{switch(s.category){case"arithmetic":return Z(()=>GW(s,i,o));case"basic_math":return Z(()=>jW(s,i,o));case"control":return YW(s,i,o);case"convolution":return Z(()=>JW(s,i,o));case"creation":return Z(()=>QW(s,i,o));case"dynamic":return eB(s,i,o);case"evaluation":return Z(()=>tB(s,i,o));case"image":return Z(()=>sB(s,i,o));case"graph":return Z(()=>aB(s,i,o));case"logical":return Z(()=>iB(s,i,o));case"matrices":return Z(()=>oB(s,i,o));case"normalization":return Z(()=>lB(s,i,o));case"reduction":return Z(()=>uB(s,i,o));case"slice_join":return Z(()=>dB(s,i,o));case"sparse":return Z(()=>hB(s,i,o));case"spectral":return Z(()=>pB(s,i,o));case"string":return Z(()=>cB(s,i,o));case"transformation":return Z(()=>fB(s,i,o));case"hash_table":return nB(s,i,o,r);case"custom":let l=Lk(s.op);if(l&&l.customExecutor)return l.customExecutor(new UW(s,i,o));throw TypeError(`Custom op ${s.op} is not registered.`);default:throw TypeError(`Unknown op '${s.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,a);return w.isPromise(n)?n.then(s=>[].concat(s)):[].concat(n)}var Px=class{constructor(e={},t={},a={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=a,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let a=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(a))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function Lx(e,t,a,r){let n=new Set,s=[],i=null,o=null,l=new Set,d=Object.keys(e).map(p=>tr(p)[0]),u=[];r!=null&&(u=r.map(p=>tr(p.name)[0]));let h=[...t];for(;h.length>0;){let p=h.pop();if((o7(p)||xB(p)||bB(p))&&i==null&&(i=p,o=i.children.map(c=>c.name).filter(c=>n.has(c))),n.add(p.name),a[p.name]==null&&d.indexOf(p.name)===-1&&u.indexOf(p.name)===-1){if(p.inputs.length===0){s.push(p.name);continue}p.inputs.forEach(c=>{l.has(c.name)||(l.add(c.name),h.push(c))})}}return{inputs:e,outputs:t,usedNodes:n,missingInputs:s,dynamicNode:i,syncInputs:o}}function mB(e,t,a){let{usedNodes:r,inputs:n}=a,s=[],i=Object.keys(n).map(u=>tr(u)[0]).map(u=>e.nodes[u]),o=e.initNodes;i.forEach(u=>{r.has(u.name)&&s.push(u)}),e.weights.forEach(u=>{r.has(u.name)&&s.push(u)}),o!=null&&o.forEach(u=>{r.has(u.name)&&s.push(u)});let l=new Set,d=[];for(;s.length>0;){let u=s.pop();l.add(u.name),t[u.name]||d.push(u),u.children.forEach(h=>{!l.has(h.name)&&r.has(h.name)&&h.inputs.every(p=>l.has(p.name))&&s.push(h)})}return d}var gB=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],yB=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],AB=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function o7(e){return gB.indexOf(e.op)>=0}function xB(e){return yB.indexOf(e.op)>=0}function bB(e){return AB.indexOf(e.op)>=0}var Ng=class{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(a=>{this._functionExecutorMap[a]=new Ng(e.functions[a],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(a=>e[a].map(r=>r.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){let a=e.map(n=>n.name).sort(),r=t.map(n=>n.name).sort();return a.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){let a=Lx(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:n,syncInputs:s}=a;if(n!=null)throw new Error(`This execution contains the node '${n.name}', which has the dynamic op '${n.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){let i=t.map(l=>l.name),o=Object.keys(e);throw new Error(`Cannot compute the outputs [${i}] from the provided inputs [${o}]. Missing the following inputs: [${r}]`)}return mB(this.graph,this.weightMap,a)}execute(e,t){e=this.mapInputs(e);let a=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let r=a.map(u=>this.graph.nodes[tr(u)[0]]),n=t.map(u=>tr(u)[0]),s=n.map(u=>this.graph.nodes[u]);this.resetIntermediateTensors(),s.length===0&&(s=this._outputs);let i=this.getCompilationKey(r,s),o=this.compiledMap.get(i);o==null&&(o=this.compile(e,s),this.compiledMap.set(i,o));let l={},d={};return Z(()=>{let u=new Px(this.weightMap,l,d,this.functionExecutorMap),h=Ze({},this.weightMap);Object.keys(e).forEach(f=>{let[m,g]=tr(f),y=[];y[g]=e[f],h[m]=y});let p=this.getFrozenTensorIds(h),c={};for(let f=0;f<o.length;f++){let m=o[f];if(!h[m.name]){let g=Dx(m,h,u,this._resourceManager);if(w.isPromise(g))throw new Error(`The execution of the op '${m.op}' returned a promise. Please use model.executeAsync() instead.`);h[m.name]=g,this.checkTensorForDisposal(m.name,m,h,u,p,n,c)}}return this.parent==null&&u.dispose(p),t.map(f=>Ea(f,h,u))})}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map(a=>e[a]).map(a=>a.map(r=>r.id)));return new Set(t)}checkTensorForDisposal(e,t,a,r,n,s,i){t.category==="control"||s.indexOf(e)!==-1||(a[e].forEach(o=>{o!=null&&(i[o.id]=(i[o.id]||0)+t.children.length)}),t.inputs.forEach(o=>{if(o.category!=="control"){let l=wW(o.name,a,r);l!=null&&l.forEach(d=>{if(d&&!d.kept&&!n.has(d.id)){let u=i[d.id];if(u===1){if(!this.keepTensorForDebug)d.dispose();else{let[h,p]=mn(t.name,r);this.intermediateTensors[h]?this.intermediateTensors[h][p]=d:(this.intermediateTensors[h]=[],this.intermediateTensors[h][p]=d)}delete i[d.id]}else u!=null&&i[d.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){!this.intermediateTensors||(Object.keys(this.intermediateTensors).forEach(e=>this.intermediateTensors[e].forEach(t=>t.dispose())),this.disposeTensorsMap())}disposeTensorsMap(){!this.tensorsMap||Object.keys(this.tensorsMap).forEach(e=>{this.tensorsMap[e].forEach(t=>{t&&!t.kept&&!t.isDisposed&&!this.keepIds.has(t.id)&&t.dispose()})})}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(let e in this.intermediateTensors)this.intermediateTensors[e].forEach(t=>t.dispose()),delete this.intermediateTensors[e]}async _executeAsync(e,t,a=!1,r={},n={}){a||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=J().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){console.warn(d.message)}this.resetIntermediateTensors();let s=new Px(this.weightMap,r,n,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,s,t,a);let i=t.map(d=>Ea(d,this.tensorsMap,s)),o=i.map(d=>d.id),l=Object.keys(e).map(d=>e[d].id);return this.keepIds=new Set([...o,...l,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),this.parent==null&&s.dispose(this.keepIds),i}async executeFunctionAsync(e,t,a){let r=e.reduce((n,s,i)=>(n[this.inputs[i].name]=s,n),{});return this._executeAsync(r,this.outputNodes,!0,t,a)}async executeWithControlFlow(e,t,a,r){let n=Object.keys(e),s=n.map(A=>this.graph.nodes[tr(A)[0]]),i=a.map(A=>tr(A)[0]),o=i.map(A=>this.graph.nodes[A]);o.length===0&&(o=this._outputs);let{usedNodes:l,missingInputs:d,dynamicNode:u,syncInputs:h}=Lx(e,o,this.weightMap,this._initNodes),p=[...s,...this.graph.weights,...this._initNodes||[]].map(A=>({node:A,contexts:t.currentContext})),c=Ze({},this.weightMap);Object.keys(e).forEach(A=>{let[x,b]=tr(A),v=[];v[b]=e[A],c[x]=v});let f={},m=this.getFrozenTensorIds(c),g={};for(;p.length>0;){let A=this.processStack(s,p,t,c,g,m,i,f,l);await Promise.all(A)}u==null&&!r&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let y=o.filter(A=>!o7(A)&&!Ea(A.name,c,t)).map(A=>A.name);if(y.length>0){let A="";throw u!=null&&(A=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${n}]. Consider providing the following inputs: [${d}]. ${A}`)}return c}processStack(e,t,a,r,n,s,i,o,l){let d=[];for(;t.length>0;){let u=t.pop();a.currentContext=u.contexts;let h="";if(u.node.op==="Enter"&&I("isConstant",u.node,r,a)&&([h]=mn(u.node.name,a)),r[u.node.name]==null){let p=Dx(u.node,r,a,this._resourceManager);h||([h]=mn(u.node.name,a));let c=a.currentContext;w.isPromise(p)?d.push(p.then(f=>(r[h]=f,a.currentContext=c,this.checkTensorForDisposal(h,u.node,r,a,s,i,o),this.processChildNodes(u.node,t,a,r,n,l),f))):(r[h]=p,this.checkTensorForDisposal(h,u.node,r,a,s,i,o),this.processChildNodes(u.node,t,a,r,n,l))}else this.processChildNodes(u.node,t,a,r,n,l)}return d}processChildNodes(e,t,a,r,n,s){e.children.forEach(i=>{let[o]=mn(i.name,a);n[o]||!s.has(i.name)||(i.op==="Merge"?i.inputNames.some(l=>!!Ea(l,r,a))&&(n[o]=!0,t.push({contexts:a.currentContext,node:i})):i.inputNames.every(l=>!!Ea(l,r,a))&&(n[o]=!0,t.push({contexts:a.currentContext,node:i})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let a=e[t],[r]=tr(t),n=this.graph.nodes[r];if(n.attrParams.shape&&n.attrParams.shape.value){let s=n.attrParams.shape.value,i=s.length===a.shape.length&&a.shape.every((o,l)=>s[l]===-1||s[l]===o);w.assert(i,()=>`The shape of dict['${n.name}'] provided in model.execute(dict) must be [${s}], but was [${a.shape}]`)}n.attrParams.dtype&&n.attrParams.dtype.value&&w.assert(a.dtype===n.attrParams.dtype.value,()=>`The dtype of dict['${n.name}'] provided in model.execute(dict) must be ${n.attrParams.dtype.value}, but was ${a.dtype}`)})}mapInputs(e){let t={};for(let a in e)if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[a]!=null){let r=this._signature.inputs[a];t[r.name]=e[a]}else t[a]=e[a];return t}checkInputs(e){let t=Object.keys(e).filter(a=>{let[r]=tr(a);return this.graph.nodes[r]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[t]!=null?this._signature.outputs[t].name:t,{})}checkOutputs(e){e.forEach(t=>{let[a]=tr(t);if(!this.graph.nodes[a])throw new Error(`The output '${t}' is not found in the graph`)})}},vB=class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}},wB="?tfjs-format=file",kB="model.json",Ty=class{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",t==null&&(this.loadOptions={}),this.resourceManager=new vB}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){let e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=Na.browserHTTPRequest(e,this.loadOptions);else{let t=Na.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(Na.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,a;this.artifacts.userDefinedMetadata!=null&&this.artifacts.userDefinedMetadata.signature!=null?a=this.artifacts.userDefinedMetadata.signature:a=this.artifacts.signature,this.signature=a,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;let r=Na.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Ng(Mx.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){let n=Mx.Instance.transformGraph(e.modelInitializer);this.initializer=new Ng(n),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if(typeof e=="string"){let a=Na.getSaveHandlers(e);if(a.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(a.length>1)throw new Error(`Found more than one (${a.length}) save handlers for URL '${e}'`);e=a[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof et)&&!Array.isArray(e))return e;if(e=Array.isArray(e)?e:[e],e.length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,a,r)=>(t[a]=e[r],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let a=this.executor.execute(e,t);return a.length>1?a:a[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let a=await this.executor.executeAsync(e,t);return a.length>1?a:a[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,a)=>(t[a]=[e[a]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function IB(e,t={}){if(e==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&e.load==null&&(e.endsWith("/")||(e=e+"/"),e=`${e}${kB}${wB}`);let a=new Ty(e,t);return await a.load(),a}var SB="0.0.0",l7={};ze(l7,{CSVDataset:()=>b7,Dataset:()=>rd,FileDataSource:()=>C7,TextLineDataset:()=>x7,URLDataSource:()=>N7,array:()=>XB,csv:()=>sV,func:()=>iV,generator:()=>oV,microphone:()=>uV,version_data:()=>dV,webcam:()=>lV,zip:()=>KB});var TB=wo(nf()),CB=wo(nf());function NB(e,t){return Uc(e,t)}function Uc(e,t,a=new Map,r=new Set){if(e==null)return null;if(typeof Blob=="function"&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(a.has(e))return a.get(e);let n=t(e);if(n.recurse&&n.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(n.recurse)if(fu(e)){let s=Array.isArray(e)?[]:{};r.add(e);for(let i in e){let o=e[i],l=Uc(o,t,a,r);s[i]=l}return r.delete(e),e.__proto__&&(s.__proto__=e.__proto__),s}else throw new Error(`Can't recurse into non-iterable type: ${e}`);else return a.set(e,n.value),n.value}function EB(e,t=d7){return u7(e,t)}function u7(e,t,a=new Set){let r=e[0];if(a.has(r))throw new Error("Circular references are not supported.");let n=t(e);if(n.recurse&&n.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(n.recurse)if(fu(r)){let s=Array.isArray(r)?[]:{};a.add(r);for(let i in r){let o=e.map(d=>d[i]),l=u7(o,t,a);s[i]=l}return a.delete(r),s}else throw new Error(`Can't recurse into non-iterable type: ${r}`);else return n.value}function d7(e){return e===null?null:fu(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function h7(e,t){let a=new Map;Uc(e,t,a);for(let r of Array.from(a.keys())){let n=a.get(r);if(w.isPromise(n)){let s=await n;a.set(r,s)}}return Uc(e,t,a)}function fu(e){let t=!1;if(J().get("IS_BROWSER"))t=e instanceof TextDecoder;else{let{StringDecoder:a}=G5();t=e instanceof a}return e!=null&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||typeof e=="object"&&!(e instanceof et)&&!(e instanceof Promise)&&!t)}function RB(e){return e==null||FB(e)||Array.isArray(e)||typeof e=="object"&&e instanceof et||w.isTypedArray(e)}function FB(e){return e===null||typeof e!="object"&&typeof e!="function"}function $B(e){return NB(e,MB)}function MB(e){return e instanceof et?{value:e.clone(),recurse:!1}:fu(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var p7=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),a=this.get(t);return this.set(t,this.pop()),a}},c7=class extends p7{constructor(){super(c7.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=this.capacity*2,t=new Array(e),a=this.length();for(let r=0;r<a;r++)t[r]=this.get(this.wrap(this.begin+r));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=a}},f7=c7;f7.INITIAL_CAPACITY=32;function m7(e){return new OB(e)}function Cy(e){return new DB(e)}function _B(e,t){return new g7(e,t)}function zB(e,t=y7.FAIL){return new HB(e,t)}var ca=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],a=await e.next();for(;!a.done;)t.push(a.value),a=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),a=e(t.value);for(;!t.done&&a;)t=await this.next(),a=e(t.value)}handleErrors(e){return new GB(this,e)}filter(e){return new VB(this,e)}map(e){return new UB(this,e)}mapAsync(e){return new Wx(this,e)}serialMapAsync(e){return new Wx(this,e).serial()}flatmap(e){return new jB(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(t=>t===!0)}rowMajorBatch(e,t=!0){return new BB(this,e,t)}columnMajorBatch(e,t=!0,a=d7){return this.rowMajorBatch(e,t).map(r=>EB(r,a))}concatenate(e,t){return new g7(m7([this,e]),t)}take(e){return e<0||e==null?this:new WB(this,e)}skip(e){return e<0||e==null?this:new LB(this,e)}prefetch(e){return new A7(this,e)}shuffle(e,t){return new qB(this,e,t)}serial(){return new PB(this)}},OB=class extends ca{constructor(e){super();this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:$B(e),done:!1}}},DB=class extends ca{constructor(e){super();this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},PB=class extends ca{constructor(e){super();this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},LB=class extends ca{constructor(e,t){super();this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;ne(e.value)}return this.upstream.next()}},WB=class extends ca{constructor(e,t){super();this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},BB=class extends ca{constructor(e,t,a=!0){super();this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=a,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},VB=class extends ca{constructor(e,t){super();this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;ne(e.value)}}},UB=class extends ca{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Zr.getTensorsInContainer(e.value),a=this.transform(e.value),r=Zr.getTensorsInContainer(a);for(let n of t)Zr.isTensorInList(n,r)||n.dispose();return{value:a,done:!1}}},GB=class extends ca{constructor(e,t){super();this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},Wx=class extends ca{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Zr.getTensorsInContainer(e.value),a=await this.transform(e.value),r=Zr.getTensorsInContainer(a);for(let n of t)Zr.isTensorInList(n,r)||n.dispose();return{value:a,done:!1}}},Ny=class extends ca{constructor(){super();this.outputQueue=new f7,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},jB=class extends Ny{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=Zr.getTensorsInContainer(e.value),a=this.transform(e.value),r=Zr.getTensorsInContainer(a);this.outputQueue.pushAll(a);for(let n of t)Zr.isTensorInList(n,r)||n.dispose();return!0}},g7=class extends ca{constructor(e,t){super();this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){let a=await this.moreIterators.next();if(a.done)return{value:null,done:!0};this.iterator=a.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}},y7=(e=>(e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST",e))(y7||{}),HB=class extends ca{constructor(e,t=0){super();this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,a=0;function r(s){return s instanceof ca?{value:s.next().then(i=>(t++,i.done&&a++,i.value)),recurse:!1}:{value:null,recurse:!0}}let n=await h7(this.iterators,r);if(t===a)return{value:null,done:!0};if(a>0)switch(this.mismatchMode){case 0:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case 1:return{value:null,done:!0}}return this.count++,{value:n,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},A7=class extends ca{constructor(e,t){super();this.upstream=e,this.bufferSize=t,this.buffer=new p7(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},qB=class extends A7{constructor(e,t,a){super(e,t);this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=CB.alea(a||w.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(t.done)this.upstreamExhausted=!0;else return this.refill(),t}return{value:null,done:!0}}},rd=class{constructor(){this.size=null}batch(e,t=!0){let a=this;w.assert(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`);let r;return this.size===1/0||this.size==null?r=this.size:t?r=Math.ceil(this.size/e):r=Math.floor(this.size/e),er(async()=>(await a.iterator()).columnMajorBatch(e,t,ZB),r)}concatenate(e){let t=this,a;return this.size===1/0||e.size===1/0?a=1/0:this.size!=null&&e.size!=null?a=this.size+e.size:a=null,er(async()=>(await t.iterator()).concatenate(await e.iterator()),a)}filter(e){let t=this,a;return this.size===1/0?a=1/0:a=null,er(async()=>(await t.iterator()).filter(r=>Z(()=>e(r))),a)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return er(async()=>(await t.iterator()).map(a=>Z(()=>e(a))),this.size)}mapAsync(e){let t=this;return er(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(e==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return er(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){let t=this,a;return this.size!=null&&e>0?a=this.size*e:e===0?a=0:this.size!=null&&(e===void 0||e<0)?a=1/0:a=null,er(async()=>{let r=Cy(async()=>({value:await t.iterator(),done:!1}));return _B(r.take(e))},a)}skip(e){let t=this,a;return this.size!=null&&e>=0&&this.size>=e?a=this.size-e:this.size!=null&&(this.size<e||e===void 0||e<0)?a=0:a=null,er(async()=>(await t.iterator()).skip(e),a)}shuffle(e,t,a=!0){if(e==null||e<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let r=this,n=TB.alea(t||w.now().toString());return er(async()=>{let s=n.int32();return a&&(s+=n.int32()),(await r.iterator()).shuffle(e,s.toString())},this.size)}take(e){let t=this,a;return this.size!=null&&this.size>e?a=e:this.size!=null&&this.size<=e?a=this.size:a=null,er(async()=>(await t.iterator()).take(e),a)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};rd.MAX_BUFFER_SIZE=1e4;function er(e,t=null){return new class extends rd{constructor(){super(...arguments);this.size=t}async iterator(){return e()}}}function XB(e){return er(async()=>m7(e),e.length)}function KB(e){if(!fu(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let a=0;a<e.length;a++)t=t==null?e[a].size:Math.min(t,e[a].size);else if(e instanceof Object)for(let a in e)t=t==null?e[a].size:Math.min(t,e[a].size);return er(async()=>{let a=await h7(e,r=>{if(r instanceof rd)return{value:r.iterator(),recurse:!1};if(fu(r))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return zB(a,1)},t)}function ZB(e){if(e===null)return null;let t=e[0];return RB(t)?{value:YB(e),recurse:!1}:{value:null,recurse:!0}}function YB(e){if(e.length===0)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof et?_a(e):lt(e)}var x7=class extends rd{constructor(e){super();this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e))}},Bp='"',$d=Symbol("out"),Bx=Symbol("field"),Vp=Symbol("quote"),hm=Symbol("quoteafterquote"),Vx=Symbol("quoteinquote"),b7=class extends rd{constructor(e,t){super();this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new x7(e),t||(t={}),this.hasHeader=t.hasHeader!==!1,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(w.assert(t.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&w.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce((r,n)=>(r[n]=r[n]+1||1,r),{}),a=Object.keys(t).filter(r=>t[r]>1);if(w.assert(a.length===0,()=>"Duplicate column names found: "+a.toString()),this.columnConfigs){for(let r of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(r)===-1)throw new Error('The key "'+r+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let e=await(await this.base.iterator()).next();if(e.done)throw new Error("No data was found for CSV parsing.");let t=e.value;return this.parseRow(t,!1)}else return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(t=>this.makeDataElement(t))}makeDataElement(e){let t=this.parseRow(e),a={},r={};for(let n=0;n<this.fullColumnNames.length;n++){let s=this.fullColumnNames[n],i=this.columnConfigs?this.columnConfigs[s]:null;if(!(this.configuredColumnsOnly&&!i)){let o=t[n],l=null;if(o==="")if(i&&i.default!==void 0)l=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${s} is empty in this line: ${e}`);l=void 0}else{let d=Number(o);if(isNaN(d))i&&i.dtype==="bool"?l=this.getBoolean(o):l=o;else if(!i||!i.dtype)l=d;else switch(i.dtype){case"float32":l=d;break;case"int32":l=Math.floor(d);break;case"bool":l=this.getBoolean(o);break;default:l=d}}i&&i.isLabel?r[s]=l:a[s]=l}}return Object.keys(r).length===0?a:{xs:a,ys:r}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,t=!0){let a=[],r=0,n=e.length,s=$d;for(let i=0;i<n;i++)switch(s){case $d:switch(e.charAt(i)){case Bp:r=i+1,s=Vp;break;case this.delimiter:if(r=i+1,this.delimiter===" "&&this.delimWhitespace)break;a.push(""),s=$d;break;default:s=Bx,r=i;break}break;case Bx:switch(e.charAt(i)){case this.delimiter:a.push(e.substring(r,i)),s=$d,r=i+1;break}break;case Vp:switch(e.charAt(i)){case Bp:s=hm;break}break;case hm:switch(e.charAt(i)){case this.delimiter:a.push(e.substring(r,i-1)),s=$d,r=i+1;break;case Bp:s=Vp;break;default:s=Vx;break}break;case Vx:switch(e.charAt(i)){case Bp:s=Vp;break}break}if(s===hm?a.push(e.substring(r,n-1)):a.push(e.substring(r)),t&&a.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${a}`);return a}},v7=class extends ca{constructor(e){super();this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=e.includeSpectrogram!==!1,this.includeWaveform=e.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(J().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");let t=new v7(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(a){throw new Error(`Error thrown while initializing video stream: ${a.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,a=await this.getAudioData();if(this.includeSpectrogram){let r=this.flattenQueue(a.freqDataQueue);e=this.getTensorFromAudioDataArray(r,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let r=this.flattenQueue(a.timeDataQueue);t=this.getTensorFromAudioDataArray(r,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],a=0;return new Promise(r=>{let n=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++a===this.numFrames&&(clearInterval(n),r({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,a=new Float32Array(e.length*t);return e.forEach((r,n)=>a.set(r,n*t)),a}getTensorFromAudioDataArray(e,t){let a=new Float32Array(w.sizeFromShape(t));return a.set(e,a.length-e.length),lt(a,t)}},w7=class extends ca{constructor(e,t){super();if(this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Lt([0],"int32"),this.webcamConfig.centerCrop){let a=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,r=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,n=(1-a)/2,s=(1-r)/2,i=n+a,o=r+s;this.cropBox=Vn([s,n,o,i],[1,4])}else this.cropBox=Vn([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(J().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let a=new w7(e,t);return await a.start(),a}async start(){this.webcamConfig.facingMode&&w.assert(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=Ur.fromPixels(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}else return{value:e,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return Z(()=>{let t=ua(pe(e,"float32"),0),a;a=De.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let r=a.shape;return q(a,r.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(e=>e.stop());try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},k7=class{},I7=class extends ca{split(e){return new JB(this,e)}},JB=class extends I7{constructor(e,t){super();this.upstream=e,this.impl=new QB(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},QB=class extends Ny{constructor(e,t){super();this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let a of t.slice(0,-1))this.outputQueue.push(a);return this.carryover=t[t.length-1],!0}},eV=class extends ca{decodeUTF8(){return new tV(this)}},tV=class extends I7{constructor(e){super();this.upstream=e,this.impl=new aV(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},aV=class extends Ny{constructor(e){super();if(this.upstream=e,J().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:t}=G5();this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e=await this.upstream.next(),t;if(e.done)return!1;t=e.value;let a;return J().get("IS_BROWSER")?a=this.decoder.decode(t,{stream:!0}):a=this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(a),!0}},S7=class extends eV{constructor(e,t={}){super();this.file=e,this.options=t,w.assert(e instanceof Uint8Array||(J().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((e,t)=>{let a=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,a)));else{let r=new FileReader;r.onload=s=>{let i=r.result;if(i instanceof ArrayBuffer&&(i=new Uint8Array(i)),!(i instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(i)},r.onabort=s=>t(new Error("Aborted")),r.onerror=s=>t(new Error(s.type));let n=this.file.slice(this.offset,a);r.readAsArrayBuffer(n)}this.offset=a}),done:!1}}};async function rV(e,t={},a){let r,n;typeof e=="string"?r=e:(r=e.url,n=nV(e));let s=await(a||w.fetch)(r,n);if(s.ok){let i=new Uint8Array(await s.arrayBuffer());return new S7(i,t)}else throw new Error(s.statusText)}var nV=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function T7(e){return typeof e=="string"&&e.substr(0,7)==="file://"}var C7=class extends k7{constructor(e,t={}){super();this.input=e,this.options=t}async iterator(){if(T7(this.input)&&J().get("IS_NODE")){let e=wc();this.input=e.readFileSync(this.input.substr(7))}return new S7(this.input,this.options)}},N7=class extends k7{constructor(e,t={}){super();this.url=e,this.fileOptions=t}async iterator(){return T7(this.url)?new C7(this.url,this.fileOptions).iterator():rV(this.url,this.fileOptions)}};function sV(e,t={}){return new b7(new N7(e),t)}function iV(e){let t=Cy(e);return er(async()=>t)}function oV(e){return er(async()=>{let t=await e();return Cy(()=>t.next())})}async function lV(e,t){return w7.create(e,t)}async function uV(e){return v7.create(e)}var dV="0.0.0";function Ce(e,t){Array.isArray(e)||(e=[e]),e.forEach(a=>{a!=null&&w.assert(a.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}var hV=Pr.whereImpl,E7=class extends vu{constructor(){super();this.blockSize=48,this.firstUse=!0,this.data=new fh(this,sr())}nextDataId(){return E7.nextDataId++}write(e,t,a){this.firstUse&&(this.firstUse=!1,J().get("IS_NODE")&&N.warn(`
============================
Hi there \u{1F44B}. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.
============================`));let r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:a,refCount:1}),r}makeTensorInfo(e,t,a){let r;if(t==="string"&&a!=null&&a.length>0&&w.isString(a[0])){let n=a.map(s=>w.encodeString(s));r=this.write(n,e,t)}else r=this.write(a,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,a,r,n){this.data.set(e,{values:t,dtype:r,refCount:n})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:a}=this.data.get(e);if(t==="complex64"){let r=this.readSync(a.real.dataId),n=this.readSync(a.imag.dataId);return N.mergeRealAndImagArrays(r,n)}return this.data.get(e).values}bufferSync(e){let t=this.readSync(e.dataId),a=t;if(e.dtype==="string")try{a=t.map(r=>w.decodeString(r))}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Le(e.shape,e.dtype,a)}makeOutput(e,t,a){let r=this.write(e,t,a);return sr().makeTensorFromDataId(r,t,a,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:a}=this.data.get(e);a!=null&&(this.disposeData(a.real.dataId,!0),this.disposeData(a.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=w.now();return e(),{kernelMs:w.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Ce([e],"where");let t=this.readSync(e.dataId);return hV(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}},Ey=E7;Ey.nextDataId=0;var F0={};ze(F0,{addImpl:()=>F7,bincountImpl:()=>Fy,bincountReduceImpl:()=>$7,ceilImpl:()=>M7,concatImpl:()=>$y,equalImpl:()=>_7,expImpl:()=>O7,expm1Impl:()=>P7,floorImpl:()=>L7,gatherNdImpl:()=>W7,gatherV2Impl:()=>B7,greaterEqualImpl:()=>U7,greaterImpl:()=>V7,lessEqualImpl:()=>j7,lessImpl:()=>G7,linSpaceImpl:()=>H7,logImpl:()=>q7,maxImpl:()=>X7,maximumImpl:()=>K7,minimumImpl:()=>Z7,multiplyImpl:()=>My,negImpl:()=>Y7,notEqualImpl:()=>J7,prodImpl:()=>Q7,rangeImpl:()=>zy,rsqrtImpl:()=>e6,sigmoidImpl:()=>QV,simpleAbsImpl:()=>R7,sliceImpl:()=>jc,sparseFillEmptyRowsImpl:()=>a6,sparseReshapeImpl:()=>r6,sparseSegmentReductionImpl:()=>Oy,sqrtImpl:()=>aU,squaredDifferenceImpl:()=>n6,stridedSliceImpl:()=>s6,stringNGramsImpl:()=>i6,stringSplitImpl:()=>o6,stringToHashBucketFastImpl:()=>l6,subImpl:()=>u6,tileImpl:()=>d6,topKImpl:()=>p6,transposeImpl:()=>_y,uniqueImpl:()=>c6});function R7(e){let t=new Float32Array(e.length);for(let a=0;a<e.length;++a)t[a]=Math.abs(e[a]);return t}var pV=e=>{let{x:t}=e.inputs,a=e.backend;Ce(t,"abs");let r=new Float32Array(w.sizeFromShape(t.shape)),n=a.data.get(t.dataId).values;return r=R7(n),a.makeOutput(r,t.shape,t.dtype)},cV={kernelName:Io,backendName:"cpu",kernelFunc:pV};function Zt(e){return(t,a,r,n,s)=>{let i=N.assertAndGetBroadcastShape(t,a),o=i.length,l=w.computeStrides(i),d=w.sizeFromShape(i),u=w.getTypedArrayFromDType(s,d),h=t.length,p=a.length,c=w.computeStrides(t),f=w.computeStrides(a),m=N.getBroadcastDims(t,i),g=N.getBroadcastDims(a,i);if(m.length+g.length===0)for(let y=0;y<u.length;++y)u[y]=e(r[y%r.length],n[y%n.length]);else for(let y=0;y<u.length;++y){let A=w.indexToLoc(y,o,l),x=A.slice(-h);m.forEach(C=>x[C]=0);let b=w.locToIndex(x,h,c),v=A.slice(-p);g.forEach(C=>v[C]=0);let T=w.locToIndex(v,p,f);u[y]=e(r[b],n[T])}return[u,i]}}function lr(e){let{inputs:t,backend:a}=e,{real:r,imag:n}=t,s=a.data.get(r.dataId).values,i=a.data.get(n.dataId).values,o=a.makeTensorInfo(r.shape,"complex64"),l=a.data.get(o.dataId);return l.complexTensorInfos={real:a.makeTensorInfo(r.shape,"float32",s),imag:a.makeTensorInfo(n.shape,"float32",i)},o}var fV={kernelName:gh,backendName:"cpu",kernelFunc:lr};function Gc(e,t,a="float32"){if(a==="complex64"){let n=Gc(e,t,"float32"),s=Gc(e,t,"float32");return lr({inputs:{real:n,imag:s},backend:e})}let r=w.makeZerosTypedArray(w.sizeFromShape(t),a);return e.makeTensorInfo(t,a,r)}function vn(e){let{inputs:t,backend:a}=e,{x:r}=t;return a.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var mV={kernelName:ni,backendName:"cpu",kernelFunc:vn};function mo(e){let{inputs:t,backend:a}=e,{input:r}=t,n=a.data.get(r.dataId).complexTensorInfos.real,s=a.data.get(n.dataId).values;return a.makeTensorInfo(n.shape,n.dtype,s)}var gV={kernelName:Sh,backendName:"cpu",kernelFunc:mo};function Ps(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{dtype:s}=r;if(s==="complex64"){if(n.dtype==="complex64")return vn({inputs:{x:n},backend:a});let i=Gc(a,n.shape,n.dtype),o=Ps({inputs:{x:n},backend:a,attrs:{dtype:"float32"}}),l=lr({inputs:{real:o,imag:i},backend:a});return a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(o),l}if(n.dtype==="complex64"){let i=mo({inputs:{input:n},backend:a}),o=Ps({inputs:{x:i},backend:a,attrs:{dtype:s}});return a.disposeIntermediateTensorInfo(i),o}if(!w.hasEncodingLoss(n.dtype,s)){let i=vn({inputs:{x:n},backend:a});return{dataId:i.dataId,shape:i.shape,dtype:s}}if(s==="int32"){let i=a.data.get(n.dataId).values,o=Int32Array.from(i);return a.makeTensorInfo(n.shape,"int32",o)}if(s==="bool"){let i=a.data.get(n.dataId).values,o=w.toTypedArray([0],n.dtype),[l,d]=Zt((u,h)=>u!==h?1:0)(n.shape,[],i,o,"bool");return a.makeTensorInfo(d,"bool",l)}throw new Error(`Error in Cast: failed to cast ${n.dtype} to ${s}`)}var yV={kernelName:Gs,backendName:"cpu",kernelFunc:Ps};function fa(e,t,a,r){return a==null?({inputs:n,backend:s})=>{let{a:i,b:o}=n,l=s;Ce([i,o],e);let d=l.data.get(i.dataId).values,u=l.data.get(o.dataId).values,h=i.dtype==="string"?N.fromUint8ToStringArray(d):d,p=i.dtype==="string"?N.fromUint8ToStringArray(u):u,c=r||i.dtype,[f,m]=t(i.shape,o.shape,h,p,c);return l.makeTensorInfo(m,c,f)}:({inputs:n,backend:s})=>{let{a:i,b:o}=n,l=s;if(i.dtype==="complex64"||o.dtype==="complex64"){let d=Ps({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),u=l.data.get(d.dataId),h=u.complexTensorInfos.real,p=u.complexTensorInfos.imag,c=l.data.get(h.dataId).values,f=l.data.get(p.dataId).values,m=Ps({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),g=l.data.get(m.dataId),y=g.complexTensorInfos.real,A=g.complexTensorInfos.imag,x=l.data.get(y.dataId).values,b=l.data.get(A.dataId).values,[v,T,C]=a(i.shape,o.shape,c,f,x,b),E=l.makeTensorInfo(C,"float32",v),R=l.makeTensorInfo(C,"float32",T),z=lr({inputs:{real:E,imag:R},backend:l});return l.disposeIntermediateTensorInfo(d),l.disposeIntermediateTensorInfo(m),l.disposeIntermediateTensorInfo(E),l.disposeIntermediateTensorInfo(R),z}else{let d=l.data.get(i.dataId).values,u=l.data.get(o.dataId).values,h=r||i.dtype,[p,c]=t(i.shape,o.shape,d,u,h);return l.makeTensorInfo(c,h,p)}}}function Ry(e){return(t,a,r,n,s,i)=>{let o=N.assertAndGetBroadcastShape(t,a),l=w.sizeFromShape(o),d=o.length,u=w.computeStrides(o),h=w.getTypedArrayFromDType("float32",l),p=w.getTypedArrayFromDType("float32",l),c=N.getBroadcastDims(t,o),f=N.getBroadcastDims(a,o),m=N.mergeRealAndImagArrays(r,n),g=N.mergeRealAndImagArrays(s,i),y=t.length,A=w.computeStrides(t),x=a.length,b=w.computeStrides(a);if(c.length+f.length===0)for(let v=0;v<h.length;v++){let T=v%m.length,C=v%g.length,E=e(m[T*2],m[T*2+1],g[C*2],g[C*2+1]);h[v]=E.real,p[v]=E.imag}else for(let v=0;v<h.length;v++){let T=w.indexToLoc(v,d,u),C=T.slice(-y);c.forEach(k=>C[k]=0);let E=w.locToIndex(C,y,A),R=T.slice(-x);f.forEach(k=>R[k]=0);let z=w.locToIndex(R,x,b),F=e(m[E*2],m[E*2+1],g[z*2],g[z*2+1]);h[v]=F.real,p[v]=F.imag}return[h,p,o]}}var F7=Zt((e,t)=>e+t),AV=Ry((e,t,a,r)=>({real:e+a,imag:t+r})),tp=fa(qn,F7,AV),xV={kernelName:qn,backendName:"cpu",kernelFunc:tp};function Fy(e,t,a,r,n){let s=w.sizeFromShape(r),i=w.makeZerosTypedArray(n,a);for(let o=0;o<e.length;o++){let l=e[o];if(l<0)throw new Error("Input x must be non-negative!");l>=n||(s>0?i[l]+=t[o]:i[l]+=1)}return i}function $7(e,t,a,r=!1){let n=e.shape[0],s=e.shape[1],i=Le([n,a],t.dtype);for(let o=0;o<n;o++)for(let l=0;l<s;l++){let d=e.get(o,l);if(d<0)throw new Error("Input x must be non-negative!");d>=a||(r?i.set(1,o,d):t.size>0?i.set(i.get(o,d)+t.get(o,l),o,d):i.set(i.get(o,d)+1,o,d))}return i}function _i(e){return(t,a,r)=>{let n=w.getTypedArrayFromDType(a,t.length);for(let s=0;s<t.length;++s)n[s]=e(t[s],r);return n}}function dt(e,t,a){return({inputs:r,attrs:n,backend:s})=>{let{x:i}=r;if(Ce(i,e),i.dtype==="string"||a==="string")throw new Error("unaryKernelFunc does not support string input/output");let o=s,l=o.data.get(i.dataId).values,d=w.sizeFromShape(i.shape),u=a||i.dtype,h=w.getArrayFromDType(u,d);for(let p=0;p<d;++p)h[p]=t(l[p],n);return o.makeTensorInfo(i.shape,u,h)}}function nd(e,t,a){return({inputs:r,attrs:n,backend:s})=>{let{x:i}=r;if(Ce(i,e),i.dtype==="string"||a==="string")throw new Error("unaryKernelFunc does not support string input/output");let o=s,l=o.data.get(i.dataId).values,d=a||i.dtype,u=t(l,d,n);return o.makeTensorInfo(i.shape,d,u)}}var M7=_i(e=>Math.ceil(e)),bV=nd(js,M7),vV={kernelName:js,backendName:"cpu",kernelFunc:bV};function $y(e,t,a,r){let n=w.getArrayFromDType(a,w.sizeFromShape(t));if(r&&a!=="string"){let s=0;e.forEach(i=>{let o=w.sizeFromShape(i.shape);n.set(i.vals,s),s+=o})}else{let s=0;e.forEach(i=>{let o=a==="string"?N.fromUint8ToStringArray(i.vals):i.vals,l=0;for(let d=0;d<i.shape[0];++d){let u=d*t[1]+s;for(let h=0;h<i.shape[1];++h)n[u+h]=o[l++]}s+=i.shape[1]})}return n}var _7=Zt((e,t)=>e===t?1:0),z7=fa(Ro,_7,null,"bool"),wV={kernelName:Ro,backendName:"cpu",kernelFunc:z7},O7=_i(e=>Math.exp(e)),D7=nd(Qs,O7,"float32"),kV={kernelName:Qs,backendName:"cpu",kernelFunc:D7},P7=_i(e=>Math.expm1(e)),IV=nd($o,P7),SV={kernelName:$o,backendName:"cpu",kernelFunc:IV},L7=_i(e=>Math.floor(e)),TV=nd(ei,L7),CV={kernelName:ei,backendName:"cpu",kernelFunc:TV};function W7(e,t,a,r,n,s,i,o,l){let d=Le([r,s],a);for(let u=0;u<r;u++){let h=[],p=0;for(let c=0;c<n;c++){let f=e[u*n+c];p+=f*i[c],h.push(f)}if(p<0||p>=l/s)throw new Error(`Invalid indices: ${h} does not index into ${o}`);for(let c=0;c<s;c++)d.values[u*s+c]=t.get(...t.indexToLoc(p*s+c))}return d}function B7(e,t,a){let r=Le(a,e.dtype);for(let n=0;n<r.size;++n){let s=r.indexToLoc(n).slice(),i=s[0],o=s[2],l=t.locToIndex([i,o]);s[2]=t.values[l];let d=e.locToIndex(s);0<=d&&d<e.values.length&&(r.values[n]=e.values[d])}return r}var V7=Zt((e,t)=>e>t?1:0),NV=fa(Oo,V7,null,"bool"),EV={kernelName:Oo,backendName:"cpu",kernelFunc:NV},U7=Zt((e,t)=>e>=t?1:0),RV=fa(ri,U7,null,"bool"),FV={kernelName:ri,backendName:"cpu",kernelFunc:RV},G7=Zt((e,t)=>e<t?1:0),$V=fa(Do,G7,null,"bool"),MV={kernelName:Do,backendName:"cpu",kernelFunc:$V},j7=Zt((e,t)=>e<=t?1:0),_V=fa(Po,j7,null,"bool"),zV={kernelName:Po,backendName:"cpu",kernelFunc:_V};function H7(e,t,a){let r=(t-e)/(a-1),n=w.makeZerosTypedArray(a,"float32");n[0]=e;for(let s=1;s<n.length;s++)n[s]=n[s-1]+r;return n}var q7=_i(e=>Math.log(e)),OV=nd(ii,q7),DV={kernelName:ii,backendName:"cpu",kernelFunc:OV};function X7(e,t,a,r){let n=w.getTypedArrayFromDType(r,w.sizeFromShape(a));for(let s=0;s<n.length;++s){let i=s*t,o=e[i];for(let l=0;l<t;++l){let d=e[i+l];(Number.isNaN(d)||d>o)&&(o=d)}n[s]=o}return n}var K7=Zt((e,t)=>Math.max(e,t)),PV=fa(li,K7),LV={kernelName:li,backendName:"cpu",kernelFunc:PV},Z7=Zt((e,t)=>Math.min(e,t)),WV=fa(pi,Z7),BV={kernelName:pi,backendName:"cpu",kernelFunc:WV},My=Zt((e,t)=>e*t),VV=Ry((e,t,a,r)=>({real:e*a-t*r,imag:e*r+t*a})),$0=fa(fi,My,VV),UV={kernelName:fi,backendName:"cpu",kernelFunc:$0};function Y7(e,t,a){let r=w.createScalarValue(-1,a);return My([],t,r,e,a)}function GV(e){let{inputs:t,backend:a}=e,{x:r}=t;Ce(r,"neg");let n=a.data.get(r.dataId).values,[s,i]=Y7(n,r.shape,r.dtype);return a.makeTensorInfo(i,r.dtype,s)}var jV={kernelName:Wo,backendName:"cpu",kernelFunc:GV},J7=Zt((e,t)=>e!==t?1:0),HV=fa(Bo,J7,null,"bool"),qV={kernelName:Bo,backendName:"cpu",kernelFunc:HV};function _y(e,t,a,r,n){let s=t.length,i=w.sizeFromShape(t),o=w.computeStrides(t),l=w.computeStrides(n),d=w.getTypedArrayFromDType(a,w.sizeFromShape(n));for(let u=0;u<i;++u){let h=w.indexToLoc(u,s,o),p=new Array(h.length);for(let f=0;f<p.length;f++)p[f]=h[r[f]];let c=w.locToIndex(p,s,l);d[c]=e[u]}return d}function Sr(e){let{inputs:t,attrs:a,backend:r}=e,{x:n}=t,{perm:s}=a;Ce(n,"transpose");let i=n.shape.length,o=new Array(i);for(let u=0;u<o.length;u++)o[u]=n.shape[s[u]];let l=r.data.get(n.dataId).values,d=_y(l,n.shape,n.dtype,s,o);return{dataId:r.write(d,o,n.dtype),shape:o,dtype:n.dtype}}var XV={kernelName:Ri,backendName:"cpu",kernelFunc:Sr};function Q7(e,t,a,r){let[n,s]=N.computeOutAndReduceShapes(e,r),i=$a(t,"int32"),o=w.makeZerosTypedArray(w.sizeFromShape(n),i),l=w.sizeFromShape(s);for(let d=0;d<o.length;++d){let u=d*l,h=1;for(let p=0;p<l;++p)h*=a[u+p];o[d]=h}return{outVals:o,outShape:n,outDtype:i}}function KV(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{axis:s,keepDims:i}=r;Ce(n,"prod");let o=n.shape.length,l=w.parseAxisParam(s,n.shape),d=N.getAxesPermutation(l,o),u=l,h=n,p=[];d!=null&&(h=Sr({inputs:{x:n},backend:a,attrs:{perm:d}}),p.push(h),u=N.getInnerMostAxes(u.length,o));let c=a.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=Q7(h.shape,h.dtype,c,u),y=m;return i&&(y=N.expandShapeToKeepDim(m,l)),p.forEach(A=>a.disposeIntermediateTensorInfo(A)),a.makeTensorInfo(y,g,f)}var ZV={kernelName:qo,backendName:"cpu",kernelFunc:KV};function zy(e,t,a,r){let n=e===t,s=e<t&&a<0,i=t<e&&a>1;if(n||s||i)return w.makeZerosTypedArray(0,r);let o=Math.abs(Math.ceil((t-e)/a)),l=w.makeZerosTypedArray(o,r);t<e&&a===1&&(a=-1),l[0]=e;for(let d=1;d<l.length;d++)l[d]=l[d-1]+a;return l}var e6=_i(e=>1/Math.sqrt(e)),YV=nd(vi,e6),JV={kernelName:vi,backendName:"cpu",kernelFunc:YV},QV=_i(e=>1/(1+Math.exp(-e))),t6=dt(ki,e=>1/(1+Math.exp(-e))),eU={kernelName:ki,backendName:"cpu",kernelFunc:t6};function jc(e,t,a,r,n){let s=Ft.isSliceContinous(r,t,a),i=w.sizeFromShape(a),o=w.computeStrides(r);if(s){let h=Ft.computeFlatOffset(t,o);return n==="string"?e.slice(h,h+i):e.subarray(h,h+i)}let l=n==="string"?N.fromUint8ToStringArray(e):e,d=Le(r,n,l),u=Le(a,n);for(let h=0;h<u.size;++h){let p=u.indexToLoc(h),c=p.map((f,m)=>f+t[m]);u.set(d.get(...c),...p)}return n==="string"?N.fromStringArrayToUint8(u.values):u.values}function go(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{begin:s,size:i}=r;Ce(n,"slice");let[o,l]=Ft.parseSliceParams(n,s,i);Ft.assertParamsValid(n,o,l);let d=a.data.get(n.dataId).values,u=jc(d,o,l,n.shape,n.dtype);return a.makeTensorInfo(l,n.dtype,u)}var tU={kernelName:Qo,backendName:"cpu",kernelFunc:go};function a6(e,t,a,r,n,s,i){let o=t[0],l=s[0],d=new Array(l),u=new Array(o),h=t[1];if(l===0){if(o!==0)throw new Error(N.getSparseFillEmptyRowsIndicesDenseShapeMismatch(o));let g=w.getArrayFromDType(a,0),y=w.getArrayFromDType(n,0);return[g,[0,h],y,d,u]}let p=!0,c=0,f=new Array(l).fill(0);for(let g=0;g<o;++g){let y=e[g*h];if(y<0)throw new Error(N.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,y));if(y>=l)throw new Error(N.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,y,l));++f[y],p=p&&y>=c,c=y}let m=!0;for(let g=0;g<l;++g){let y=f[g]===0;d[g]=y,m=m&&!y,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&p){let g=e,y=r;for(let A=0;A<o;++A)u[A]=A;return[g,[o,h],y,d,u]}else{let g=f[l-1],y=w.getArrayFromDType(a,g*h),A=w.getArrayFromDType(n,g),x=new Array(l).fill(0);for(let b=0;b<o;++b){let v=e[b*h],T=x[v],C=(v===0?0:f[v-1])+T;x[v]++;for(let E=0;E<h;++E)y[C*h+E]=e[b*h+E];A[C]=r[b],u[b]=C}for(let b=0;b<l;++b)if(x[b]===0){let v=b===0?0:f[b-1];y[v*h+0]=b;for(let T=1;T<h;++T)y[v*h+T]=0;A[v]=i}return[y,[g,h],A,d,u]}}function r6(e,t,a,r,n){let s=w.sizeFromShape(r),i=t[0],o=n.length,l=[],d=1,u=-1;for(let m=0;m<o;++m){let g=n[m];if(g===-1){if(u!==-1)throw new Error(N.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(u,m));u=m,l.push(1)}else{if(g<0)throw new Error(N.getSparseReshapeNegativeOutputDimErrorMessage(m,g));d*=g,l.push(g)}}if(u!==-1){if(d<=0)throw new Error(N.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let m=Math.trunc(s/d);if(d*m!==s)throw new Error(N.getSparseReshapeInputOutputMultipleErrorMessage(r,l));l[u]=m}if(w.sizeFromShape(l)!==s)throw new Error(N.getSparseReshapeInputOutputMismatchErrorMessage(r,l));let h=r.length,p=[];if(h>0){p[h-1]=1;for(let m=h-2;m>=0;--m)p[m]=p[m+1]*r[m+1]}let c=[];if(o>0){c[o-1]=1;for(let m=o-2;m>=0;--m)c[m]=c[m+1]*l[m+1]}let f=w.getArrayFromDType(a,i*o);for(let m=0;m<i;++m){let g=0;for(let y=0;y<h;++y)g+=e[m*h+y]*p[y];for(let y=0;y<o;++y)f[m*o+y]=Math.trunc(g/c[y]),g%=c[y]}return[f,[i,o],l]}function Oy(e,t,a,r,n,s=!1,i=0){let o=r.length,l=[t[0],e.length/t[0]],d=l[1],u=o>0?n[o-1]+1:0;if(u<0)throw new Error(N.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let h=t.slice();h[0]=u;let p=h.reduce((A,x)=>A*x,1),c=w.getArrayFromDType(a,p);if(o===0)return u>0&&c.fill(i),[c,h];if(u<=0)throw new Error(N.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let f=0,m=1,g=0,y=n[f];for(;;){let A=0;if(m<o){if(A=n[m],y===A){++m;continue}if(y>=A)throw new Error(N.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=u)throw new Error(N.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,u));y>g&&c.fill(i,g*d,y*d);for(let x=f;x<m;++x){let b=r[x];if(b<0||b>=l[0])throw new Error(N.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(x,r[x],l[0]));for(let v=0;v<d;v++)c[y*d+v]+=e[b*d+v]}if(s)for(let x=0;x<d;x++)c[y*d+x]/=m-f;if(f=m,++m,g=y+1,y=A,m>o)break}return g<u&&c.fill(i,g*d,u*d),[c,h]}var aU=_i(e=>Math.sqrt(e)),rU=dt(Ii,e=>Math.sqrt(e)),nU={kernelName:Ii,backendName:"cpu",kernelFunc:rU},n6=Zt((e,t)=>{let a=e-t;return a*a}),sU=fa(Ci,n6),iU={kernelName:Ci,backendName:"cpu",kernelFunc:sU};function s6(e,t,a,r){let n=Le(e,t.dtype);for(let s=0;s<n.size;s++){let i=n.indexToLoc(s),o=new Array(i.length);for(let l=0;l<o.length;l++)o[l]=i[l]*a[l]+r[l];n.set(t.get(...o),...i)}return n}var oU=class{constructor(e,t,a,r,n,s){this.separator=w.encodeString(e),this.nGramWidths=t,this.leftPad=w.encodeString(a),this.rightPad=w.encodeString(r),this.padWidth=n,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let a=this.getPadWidth(t);return Math.max(0,e+2*a-t+1)}createNGrams(e,t,a,r,n,s){for(let i=0;i<n;++i){let o=this.getPadWidth(s),l=Math.max(0,o-i),d=Math.max(0,o-(n-(i+1))),u=s-(l+d),h=t+(l>0?0:i-o),p=0;p+=l*this.leftPad.length;for(let g=0;g<u;++g)p+=e[h+g].length;p+=d*this.rightPad.length,p+=(l+d+u-1)*this.separator.length,a[r+i]=new Uint8Array(p);let c=a[r+i],f=0,m=g=>g.forEach(y=>c[f++]=y);for(let g=0;g<l;++g)m(this.leftPad),m(this.separator);for(let g=0;g<u-1;++g)m(e[h+g]),m(this.separator);if(u>0){m(e[h+u-1]);for(let g=0;g<d;++g)m(this.separator),m(this.rightPad)}else{for(let g=0;g<d-1;++g)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){let a=e.length,r=t.length;if(r>0){let o=t[0];if(o!==0)throw new Error(`First split value must be 0, got ${o}`);for(let l=1;l<r;++l){let d=t[l]>=o;if(d=d&&t[l]<=a,!d)throw new Error(`Invalid split value ${t[l]}, must be in [${o}, ${a}]`);o=t[l]}if(o!==a)throw new Error(`Last split value must be data size. Expected ${a}, got ${o}`)}let n=r-1,s=w.getArrayFromDType("int32",r);if(a===0||r===0){let o=new Array(a);for(let l=0;l<=n;++l)s[l]=0;return[o,s]}s[0]=0;for(let o=1;o<=n;++o){let l=t[o]-t[o-1],d=0;this.nGramWidths.forEach(u=>{d+=this.getNumNGrams(l,u)}),this.preserveShort&&l>0&&d===0&&(d=1),s[o]=s[o-1]+d}let i=new Array(s[n]);for(let o=0;o<n;++o){let l=t[o],d=s[o];if(this.nGramWidths.forEach(u=>{let h=t[o+1]-t[o],p=this.getNumNGrams(h,u);this.createNGrams(e,l,i,d,p,u),d+=p}),this.preserveShort&&d===s[o]){let u=t[o+1]-t[o];if(u===0)continue;let h=u+2*this.padWidth,p=1;this.createNGrams(e,l,i,d,p,h)}}return[i,s]}};function i6(e,t,a,r,n,s,i,o){return new oU(a,r,n,s,i,o).compute(e,t)}function lU(e,t,a,r){if(!e.length)return;if(t.length===0){for(let s=0;s<e.length;++s)r.push(e.subarray(s,s+1));return}if(t.length===1){let s=t[0],i=e.indexOf(s);for(;i!==-1;){let o=e.subarray(0,i);(!a||o.length!==0)&&r.push(o),e=e.subarray(i+1),i=e.indexOf(s)}(!a||e.length!==0)&&r.push(e);return}let n=0;for(let s=0;s<e.length+1;s++)if(s===e.length||t.indexOf(e[s])!==-1){let i=e.subarray(n,s);(!a||i.length!==0)&&r.push(i),n=s+1}}function o6(e,t,a){let r=e.length,n=[],s=0,i=0,o=new Array(r);for(let p=0;p<r;++p){let c=n.length;lU(e[p],t,a,n);let f=n.length-c;o[p]=f,s+=f,i=Math.max(i,f)}let l=w.getArrayFromDType("int32",s*2),d=new Array(s),u=[r,i],h=0;for(let p=0;p<r;++p)for(let c=0;c<o[p];++c)l[h*2]=p,l[h*2+1]=c,d[h]=n[h],++h;return[l,d,u]}function l6(e,t){let a=w.getArrayFromDType("int32",e.length);for(let r=0;r<e.length;++r)a[r]=w.fingerPrint64(e[r]).modulo(t).getLowBitsUnsigned();return a}var u6=Zt((e,t)=>e-t),uU=Ry((e,t,a,r)=>({real:e-a,imag:t-r})),Dy=fa(Ni,u6,uU),dU={kernelName:Ni,backendName:"cpu",kernelFunc:Dy};function d6(e,t){let a=new Array(e.rank);for(let n=0;n<a.length;n++)a[n]=e.shape[n]*t[n];let r=Le(a,e.dtype);for(let n=0;n<r.values.length;++n){let s=r.indexToLoc(n),i=new Array(e.rank);for(let l=0;l<i.length;l++)i[l]=s[l]%e.shape[l];let o=e.locToIndex(i);r.values[n]=e.values[o]}return r}var Pd=(e,t)=>{let a=t.value-e.value;return a===0?e.index-t.index:a};function h6(e,t,a=0,r=e.length-1){for(;r>a;){if(r-a>600){let o=r-a+1,l=t-a+1,d=Math.log(o),u=.5*Math.exp(2*d/3),h=.5*Math.sqrt(d*u*(o-u)/o)*Math.sign(l-o/2),p=Math.max(a,Math.floor(t-l*u/o+h)),c=Math.min(r,Math.floor(t+(o-l)*u/o+h));h6(e,t,p,c)}let n=e[t],s=a,i=r;for(w.swap(e,a,t),Pd(e[r],n)>0&&w.swap(e,a,r);s<i;){for(w.swap(e,s,i),s++,i--;Pd(e[s],n)<0;)s=s+1;for(;Pd(e[i],n)>0;)i=i-1}Pd(e[a],n)===0?w.swap(e,a,i):(i=i+1,w.swap(e,i,r)),i<=t&&(a=i+1),t<=i&&(r=i-1)}}function p6(e,t,a,r,n){let s=t[t.length-1],[i,o]=[e.length/s,s],l=w.getTypedArrayFromDType(a,i*r),d=w.getTypedArrayFromDType("int32",i*r);for(let h=0;h<i;h++){let p=h*o,c=e.subarray(p,p+o),f=new Array(c.length);c.forEach((A,x)=>f[x]={value:A,index:x}),r<f.length&&(h6(f,r),f=f.slice(0,r)),n&&f.sort(Pd);let m=h*r,g=l.subarray(m,m+r),y=d.subarray(m,m+r);for(let A=0;A<r;A++)g[A]=f[A].value,y[A]=f[A].index}let u=t.slice();return u[u.length-1]=r,[Le(u,a,l),Le(u,"int32",d)]}function c6(e,t,a,r){let n=w.parseAxisParam(t,a)[0],s=[1,a[0],1];for(let f=0;f<n;f++)s[0]*=a[f];s[1]=a[n];for(let f=n+1;f<a.length;f++)s[2]*=a[f];let i={},o=new Int32Array(a[n]),l=new aa(s,r,e),d=[],u=s[0]===1&&s[2]===1;for(let f=0;f<a[n];f++){let m;if(u)m=e[f].toString();else{let g=[];for(let y=0;y<s[0];y++)for(let A=0;A<s[2];A++)g.push(l.get(y,f,A));m=g.join(",")}if(i[m]!==void 0)o[f]=i[m];else{let g=Object.keys(i).length;i[m]=g,o[f]=g,d.push(f)}}let h=s.slice();h[1]=Object.keys(i).length;let p=new aa(h,r);d.forEach((f,m)=>{for(let g=0;g<s[0];g++)for(let y=0;y<s[2];y++)p.set(l.get(g,f,y),g,m,y)});let c=a.slice();return c[n]=h[1],{outputValues:p.values,outputShape:c,indices:o}}var hU="0.0.0";Zu("cpu",()=>new Ey,1);var f6=dt(Js,e=>e>=0?e:Math.exp(e)-1),pU={kernelName:Js,backendName:"cpu",kernelFunc:f6};function m6(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{alpha:s}=r;Ce([n],"leakyRelu");let i=w.sizeFromShape(n.shape),o=a.data.get(n.dataId).values,l=w.getTypedArrayFromDType("float32",i);for(let d=0;d<o.length;d++)l[d]=o[d]<0?s*o[d]:o[d];return a.makeTensorInfo(n.shape,"float32",l)}var cU={kernelName:si,backendName:"cpu",kernelFunc:m6},fU=Zt((e,t)=>e<0?t*e:e);function g6(e){let{inputs:t,backend:a}=e,{x:r,alpha:n}=t;Ce([r,n],"prelu");let s=a.data.get(r.dataId).values,i=a.data.get(n.dataId).values,[o,l]=fU(r.shape,n.shape,s,i,"float32");return a.makeTensorInfo(l,"float32",o)}var mU={kernelName:yi,backendName:"cpu",kernelFunc:g6},y6=dt(Ai,e=>Math.max(0,e)),gU={kernelName:Ai,backendName:"cpu",kernelFunc:y6},A6=dt(bi,e=>Math.min(Math.max(0,e),6)),yU={kernelName:bi,backendName:"cpu",kernelFunc:A6};function Py(e,t,a,r,n){if(a==="linear")return vn({inputs:{x:t},backend:e});if(a==="relu")return y6({inputs:{x:t},backend:e});if(a==="elu")return f6({inputs:{x:t},backend:e});if(a==="relu6")return A6({inputs:{x:t},backend:e});if(a==="prelu")return g6({inputs:{x:t,alpha:r},backend:e});if(a==="leakyrelu")return m6({inputs:{x:t},backend:e,attrs:{alpha:n}});if(a==="sigmoid")return t6({inputs:{x:t},backend:e});throw new Error(`Activation ${a} has not been implemented for the CPU backend.`)}function Et(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{shape:s}=r,i=w.sizeFromShape(n.shape),o=w.inferFromImplicitShape(s,i),l=w.sizeFromShape(o);w.assert(i===l,()=>`The new shape (${o}) has ${l} elements and the old shape (${n.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),a.incRef(n.dataId);let d=a.data.get(n.dataId);if(d.complexTensorInfos!=null){let u=d.complexTensorInfos.real,h=d.complexTensorInfos.imag;u.shape=o,h.shape=o}return{dataId:n.dataId,shape:o,dtype:n.dtype}}var AU={kernelName:Xo,backendName:"cpu",kernelFunc:Et};function x6(e){let{inputs:t,backend:a,attrs:r}=e,{a:n,b:s}=t,{transposeA:i,transposeB:o}=r;Ce([n,s],"matMul");let l=n.shape.length,d=s.shape.length,u=i?n.shape[l-2]:n.shape[l-1],h=o?s.shape[d-1]:s.shape[d-2],p=i?n.shape[l-1]:n.shape[l-2],c=o?s.shape[d-2]:s.shape[d-1],f=n.shape.slice(0,-2),m=s.shape.slice(0,-2),g=w.sizeFromShape(f),y=w.sizeFromShape(m),A=dl.assertAndGetBroadcastShape(n.shape.slice(0,-2),s.shape.slice(0,-2)).concat([p,c]);w.assert(u===h,()=>`Error in matMul: inner shapes (${u}) and (${h}) of Tensors with shapes ${n.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`);let x=i?[g,u,p]:[g,p,u],b=o?[y,c,h]:[y,h,c],v=Et({inputs:{x:n},backend:a,attrs:{shape:x}}),T=Et({inputs:{x:s},backend:a,attrs:{shape:b}}),C=i?v.shape[1]:v.shape[2],E=i?v.shape[2]:v.shape[1],R=o?T.shape[1]:T.shape[2],z=Math.max(g,y),F=a.data.get(v.dataId).values,k=a.data.get(T.dataId).values,D=w.computeStrides(v.shape),_=w.computeStrides(T.shape),[P,j,L]=i?[D[0],1,D[1]]:[D[0],D[1],1],[B,W,ee]=o?[1,_[1],_[0]]:[_[1],1,_[0]],te=E*R,re=Le([z,E,R],v.dtype),Y=re.values,ae=a.blockSize;for(let le=0;le<z;le++)for(let xe=0;xe<E;xe+=ae)for(let ye=0;ye<R;ye+=ae)for(let ke=0;ke<C;ke+=ae){let Ee=Math.min(xe+ae,E),Me=Math.min(ye+ae,R),Oe=Math.min(ke+ae,C);for(let je=xe;je<Ee;je++)for(let Pe=ye;Pe<Me;Pe++){let ht=0;for(let nt=ke;nt<Oe;nt++){let st=Math.min(le,g-1)*P,pt=Math.min(le,y-1)*ee,at=F[st+je*j+nt*L],_t=k[nt*B+Pe*W+pt];ht+=at*_t}Y[le*te+(je*R+Pe)]+=ht}}return a.disposeIntermediateTensorInfo(v),a.disposeIntermediateTensorInfo(T),a.makeTensorInfo(A,re.dtype,re.values)}var xU={kernelName:Us,backendName:"cpu",kernelFunc:x6};function bU(e){let{inputs:t,backend:a,attrs:r}=e,{a:n,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:d,activation:u,leakyreluAlpha:h}=r,p,c,f,m=[];p=x6({inputs:{a:n,b:s},attrs:{transposeA:l,transposeB:d},backend:a}),i&&(c=tp({inputs:{a:p,b:i},backend:a}),m.push(p),p=c),u&&(f=Py(a,p,u,o,h),m.push(p),p=f);for(let g of m)a.disposeIntermediateTensorInfo(g);return p}var vU={kernelName:Ss,backendName:"cpu",kernelFunc:bU},wU=dt(ku,e=>Math.acos(e)),kU={kernelName:ku,backendName:"cpu",kernelFunc:wU},IU=dt(Iu,e=>Math.acosh(e)),SU={kernelName:Iu,backendName:"cpu",kernelFunc:IU};function TU(e){let{inputs:t,backend:a}=e,r=t;Ce(t,"addN");let n=r.map(o=>a.data.get(o.dataId).values),s=Le(r[0].shape,r[0].dtype),i=s.values;for(let o=0;o<r.length;o++){let l=n[o];for(let d=0;d<i.length;d++)i[d]+=l[d]}return a.makeTensorInfo(s.shape,s.dtype,s.values)}var CU={kernelName:Ws,backendName:"cpu",kernelFunc:TU};function NU(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{axis:s,keepDims:i}=r;Ce(n,"all");let o=w.parseAxisParam(s,n.shape),l=o,d=N.getAxesPermutation(l,n.shape.length),u=n;d!=null&&(u=Sr({inputs:{x:n},backend:a,attrs:{perm:d}}),l=N.getInnerMostAxes(l.length,n.shape.length)),N.assertAxesAreInnerMostDims("all",l,u.shape.length);let[h,p]=N.computeOutAndReduceShapes(u.shape,l),c=w.sizeFromShape(p),f=w.makeZerosTypedArray(w.sizeFromShape(h),u.dtype),m=a.data.get(u.dataId).values;for(let y=0;y<f.length;++y){let A=y*c,x=m[A];for(let b=0;b<c;++b){let v=m[A+b];x=x&&v}f[y]=x}d!=null&&a.disposeIntermediateTensorInfo(u);let g=a.makeTensorInfo(h,u.dtype,f);if(i){let y=N.expandShapeToKeepDim(h,o),A=Et({inputs:{x:g},backend:a,attrs:{shape:y}});return a.disposeIntermediateTensorInfo(g),A}return g}var EU={kernelName:Su,backendName:"cpu",kernelFunc:NU};function RU(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{axis:s,keepDims:i}=r;Ce(n,"any");let o=w.parseAxisParam(s,n.shape),l=o,d=N.getAxesPermutation(l,n.shape.length),u=n;d!=null&&(u=Sr({inputs:{x:n},backend:a,attrs:{perm:d}}),l=N.getInnerMostAxes(l.length,n.shape.length)),N.assertAxesAreInnerMostDims("any",l,u.shape.length);let[h,p]=N.computeOutAndReduceShapes(u.shape,l),c=w.sizeFromShape(p),f=w.makeZerosTypedArray(w.sizeFromShape(h),u.dtype),m=a.data.get(u.dataId).values;for(let y=0;y<f.length;++y){let A=y*c,x=m[A];for(let b=0;b<c;++b){let v=m[A+b];x=x||v}f[y]=x}d!=null&&a.disposeIntermediateTensorInfo(u);let g=a.makeTensorInfo(h,u.dtype,f);if(i){let y=N.expandShapeToKeepDim(h,o),A=Et({inputs:{x:g},backend:a,attrs:{shape:y}});return a.disposeIntermediateTensorInfo(g),A}return g}var FU={kernelName:Tu,backendName:"cpu",kernelFunc:RU};function $U(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{axis:s}=r;Ce(n,"argMax");let i=w.parseAxisParam(s,n.shape),o=N.getAxesPermutation(i,n.shape.length),l=n,d=[];o!=null&&(l=Sr({inputs:{x:n},backend:a,attrs:{perm:o}}),d.push(l),i=N.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],N.assertAxesAreInnerMostDims("argMax",i,l.shape.length);let[u,h]=N.computeOutAndReduceShapes(l.shape,i),p=w.sizeFromShape(u),c=w.makeZerosTypedArray(p,"int32"),f=w.sizeFromShape(h),m=a.data.get(l.dataId).values;for(let g=0;g<c.length;++g){let y=g*f,A=m[y],x=0;for(let b=0;b<f;++b){let v=m[y+b];v>A&&(A=v,x=b)}c[g]=x}return d.forEach(g=>a.disposeIntermediateTensorInfo(g)),a.makeTensorInfo(u,"int32",c)}var MU={kernelName:Bs,backendName:"cpu",kernelFunc:$U};function _U(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{axis:s}=r;Ce(n,"argMin");let i=w.parseAxisParam(s,n.shape),o=N.getAxesPermutation(i,n.shape.length),l=n,d=[];o!=null&&(l=Sr({inputs:{x:n},backend:a,attrs:{perm:o}}),d.push(l),i=N.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],N.assertAxesAreInnerMostDims("argMin",i,l.shape.length);let[u,h]=N.computeOutAndReduceShapes(l.shape,i),p=w.sizeFromShape(u),c=w.makeZerosTypedArray(p,"int32"),f=w.sizeFromShape(h),m=a.data.get(l.dataId).values;for(let g=0;g<c.length;++g){let y=g*f,A=m[y],x=0;for(let b=0;b<f;++b){let v=m[y+b];v<A&&(A=v,x=b)}c[g]=x}return d.forEach(g=>a.disposeIntermediateTensorInfo(g)),a.makeTensorInfo(u,"int32",c)}var zU={kernelName:Cu,backendName:"cpu",kernelFunc:_U},OU=dt(Nu,e=>Math.asin(e)),DU={kernelName:Nu,backendName:"cpu",kernelFunc:OU},PU=dt(Eu,e=>Math.asinh(e)),LU={kernelName:Eu,backendName:"cpu",kernelFunc:PU},WU=dt(Ru,e=>Math.atan(e)),BU={kernelName:Ru,backendName:"cpu",kernelFunc:WU},VU=Zt((e,t)=>Math.atan2(e,t)),UU=fa($u,VU),GU={kernelName:$u,backendName:"cpu",kernelFunc:UU},jU=dt(Fu,e=>Math.atanh(e)),HU={kernelName:Fu,backendName:"cpu",kernelFunc:jU};function Ly(e,t,a,r,n,s){let i=n.strideHeight,o=n.strideWidth,l=n.dilationHeight,d=n.dilationWidth,u=n.effectiveFilterHeight,h=n.effectiveFilterWidth,p=n.padInfo.top,c=n.padInfo.left,f=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Le(n.outShape,a),g=m.values,y=n.outShape[1]*n.outShape[2]*n.outShape[3],A=n.outShape[2]*n.outShape[3],x=n.outShape[3];for(let b=0;b<n.batchSize;++b){let v=b*y,T=b*r[0];for(let C=0;C<n.inChannels;++C)for(let E=0;E<n.outHeight;++E){let R=E*i-p,z=Math.max(0,R),F=Math.min(n.inHeight,u+R),k=v+E*A;for(let D=0;D<n.outWidth;++D){let _=D*o-c,P=Math.max(0,_),j=Math.min(n.inWidth,h+_),L=f,B=0,W=0;for(let te=z;te<F;te+=l){let re=T+te*r[1];for(let Y=P;Y<j;Y+=d){let ae=re+Y*r[2],le=e[ae+C];s==="max"&&le>L?L=le:s==="avg"&&(B+=le,W++)}if(isNaN(L))break}let ee=k+D*x+C;g[ee]=s==="avg"?B/W:L}}}return m}function b6(e,t,a,r,n=!1,s=!1){let i=Le(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,d=r.dilationHeight,u=r.dilationWidth,h=r.effectiveFilterHeight,p=r.effectiveFilterWidth,c=r.padInfo.top,f=r.padInfo.left,m=Le(t,a,e);for(let g=0;g<r.batchSize;++g)for(let y=0;y<r.inChannels;++y)for(let A=0;A<r.outHeight;++A){let x=A*o-c,b=x;for(;b<0;)b+=d;let v=Math.min(r.inHeight,h+x);for(let T=0;T<r.outWidth;++T){let C=T*l-f,E=C;for(;E<0;)E+=u;let R=Math.min(r.inWidth,p+C),z=Number.NEGATIVE_INFINITY,F=-1;for(let k=b;k<v;k+=d){let D=k-x;for(let _=E;_<R;_+=u){let P=_-C,j=m.get(g,k,_,y);j>z&&(z=j,n?F=s?((g*r.inHeight+k)*r.inWidth+_)*r.inChannels+y:(k*r.inWidth+_)*r.inChannels+y:F=D*p+P)}}i.set(F,g,A,T,y)}}return i}function v6(e,t,a,r,n,s){let i=n.strideDepth,o=n.strideHeight,l=n.strideWidth,d=n.dilationDepth,u=n.dilationHeight,h=n.dilationWidth,p=n.effectiveFilterDepth,c=n.effectiveFilterHeight,f=n.effectiveFilterWidth,m=n.padInfo.front,g=n.padInfo.top,y=n.padInfo.left,A=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Le(n.outShape,a),b=x.values,v=n.outShape[1]*n.outShape[2]*n.outShape[3]*n.outShape[4],T=n.outShape[2]*n.outShape[3]*n.outShape[4],C=n.outShape[3]*n.outShape[4],E=n.outShape[4];for(let R=0;R<n.batchSize;++R){let z=R*v,F=R*r[0];for(let k=0;k<n.inChannels;++k)for(let D=0;D<n.outDepth;++D){let _=D*i-m,P=_;for(;P<0;)P+=d;let j=Math.min(n.inDepth,p+_),L=z+D*T;for(let B=0;B<n.outHeight;++B){let W=B*o-g,ee=W;for(;ee<0;)ee+=u;let te=Math.min(n.inHeight,c+W),re=L+B*C;for(let Y=0;Y<n.outWidth;++Y){let ae=Y*l-y,le=ae;for(;le<0;)le+=h;let xe=Math.min(n.inWidth,f+ae),ye=re+Y*E,ke=A,Ee=0,Me=0;for(let je=P;je<j;je+=d){let Pe=F+je*r[1];for(let ht=ee;ht<te;ht+=u){let nt=Pe+ht*r[2];for(let st=le;st<xe;st+=h){let pt=nt+st*r[3],at=e[pt+k];if(s==="max"&&at>ke?ke=at:s==="avg"&&(Ee+=at,Me++),isNaN(ke))break}if(isNaN(ke))break}if(isNaN(ke))break}let Oe=ye+k;b[Oe]=s==="avg"?Ee/Me:ke}}}}return x}function qU(e,t){let a=Le(t.outShape,"int32"),r=t.strideDepth,n=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,d=t.effectiveFilterDepth,u=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.front,c=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){let A=y*r-p,x=A;for(;x<0;)x+=i;let b=Math.min(t.inDepth,d+A);for(let v=0;v<t.outHeight;++v){let T=v*n-c,C=T;for(;C<0;)C+=o;let E=Math.min(t.inHeight,u+T);for(let R=0;R<t.outWidth;++R){let z=R*s-f,F=z;for(;F<0;)F+=l;let k=Math.min(t.inWidth,h+z),D=Number.NEGATIVE_INFINITY,_=-1;for(let P=x;P<b;P+=i){let j=P-A;for(let L=C;L<E;L+=o){let B=L-T;for(let W=F;W<k;W+=l){let ee=W-z,te=e.get(m,P,L,W,g);te>=D&&(D=te,_=j*u*h+B*u+ee)}}}a.set(_,m,y,v,R,g)}}}return a}function XU(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t;Ce(n,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r,d=1;w.assert(N.eitherStridesOrDilationsAreOne(i,d),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`);let u=N.computePool2DInfo(n.shape,s,i,d,o,l),h;if(u.filterWidth===1&&u.filterHeight===1&&w.arraysEqual(u.inShape,u.outShape))h=vn({inputs:{x:n},backend:a});else{let p=a.data.get(n.dataId).values,c=w.computeStrides(n.shape),f=Ly(p,n.shape,n.dtype,c,u,"avg");h=a.makeTensorInfo(u.outShape,n.dtype,f.values)}return h}var KU={kernelName:Vs,backendName:"cpu",kernelFunc:XU};function ZU(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:d}=r;Ce(n,"avgPool3d");let u=N.computePool3DInfo(n.shape,s,i,1,o,l,d),h=a.data.get(n.dataId).values,p=v6(h,n.shape,n.dtype,w.computeStrides(n.shape),u,"avg");return a.makeTensorInfo(p.shape,"float32",p.values)}var YU={kernelName:mh,backendName:"cpu",kernelFunc:ZU};function JU(e){let{inputs:t,backend:a,attrs:r}=e,{dy:n,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:d}=r;Ce([n,s],"avgPool3DGrad");let u=N.computePool3DInfo(s.shape,i,o,1,l,d),h=u.strideDepth,p=u.strideHeight,c=u.strideWidth,f=u.filterDepth,m=u.filterHeight,g=u.filterWidth,y=u.dilationDepth,A=u.dilationHeight,x=u.dilationWidth,b=u.effectiveFilterDepth,v=u.effectiveFilterHeight,T=u.effectiveFilterWidth,C=b-1-u.padInfo.front,E=T-1-u.padInfo.left,R=v-1-u.padInfo.top,z=Le(s.shape,"float32"),F=1/(f*m*g),k=a.bufferSync(n);for(let D=0;D<u.batchSize;++D)for(let _=0;_<u.inChannels;++_)for(let P=0;P<u.inDepth;++P)for(let j=0;j<u.inHeight;++j)for(let L=0;L<u.inWidth;++L){let B=P-C,W=j-R,ee=L-E,te=0;for(let re=0;re<b;re+=y){let Y=(B+re)/h;if(!(Y<0||Y>=u.outDepth||Math.floor(Y)!==Y))for(let ae=0;ae<v;ae+=A){let le=(W+ae)/p;if(!(le<0||le>=u.outHeight||Math.floor(le)!==le))for(let xe=0;xe<T;xe+=x){let ye=(ee+xe)/c;ye<0||ye>=u.outWidth||Math.floor(ye)!==ye||(te+=k.get(D,Y,le,ye,_))}}}z.set(te*F,D,P,j,L,_)}return a.makeTensorInfo(z.shape,z.dtype,z.values)}var QU={kernelName:uf,backendName:"cpu",kernelFunc:JU};function eG(e){let{inputs:t,backend:a,attrs:r}=e,{dy:n,input:s}=t,i=s;Ce([n,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:d}=r,u=N.computePool2DInfo(i.shape,o,l,1,d),h=u.strideHeight,p=u.strideWidth,c=u.filterHeight,f=u.filterWidth,m=u.dilationHeight,g=u.dilationWidth,y=u.effectiveFilterHeight,A=u.effectiveFilterWidth,x=A-1-u.padInfo.left,b=y-1-u.padInfo.top,v=Le(i.shape,"float32"),T=1/(c*f),C=a.data.get(n.dataId).values,E=Le(n.shape,"float32",C);for(let R=0;R<u.batchSize;++R)for(let z=0;z<u.inChannels;++z)for(let F=0;F<u.inHeight;++F)for(let k=0;k<u.inWidth;++k){let D=F-b,_=k-x,P=0;for(let j=0;j<y;j+=m){let L=(D+j)/h;if(!(L<0||L>=u.outHeight||Math.floor(L)!==L))for(let B=0;B<A;B+=g){let W=(_+B)/p;W<0||W>=u.outWidth||Math.floor(W)!==W||(P+=E.get(R,L,W,z))}}v.set(P*T,R,F,k,z)}return a.makeTensorInfo(v.shape,v.dtype,v.values)}var tG={kernelName:lf,backendName:"cpu",kernelFunc:eG};function aG(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,scale:s,offset:i,mean:o,variance:l}=t;w.assert(o.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),w.assert(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),w.assert(s==null||o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Ce([n,o,l,s,i],"batchNorm");let{varianceEpsilon:d}=r;d==null&&(d=.001);let u=a.data.get(n.dataId).values,h=a.data.get(o.dataId).values,p=a.data.get(l.dataId).values,c=s?a.data.get(s.dataId).values:new Float32Array([1]),f=i?a.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(u.length),g=f.length,y=c.length,A=p.length,x=h.length,b=0,v=0,T=0,C=0;for(let E=0;E<u.length;++E)m[E]=f[b++]+(u[E]-h[v++])*c[T++]/Math.sqrt(p[C++]+d),b>=g&&(b=0),v>=x&&(v=0),T>=y&&(T=0),C>=A&&(C=0);return a.makeTensorInfo(n.shape,n.dtype,m)}var rG={kernelName:ai,backendName:"cpu",kernelFunc:aG};function nG(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{blockShape:s,crops:i}=r;Ce([n],"batchToSpaceND");let o=s.reduce((y,A)=>y*A),l=N.getReshaped(n.shape,s,o),d=N.getPermuted(l.length,s.length),u=N.getReshapedPermuted(n.shape,s,o),h=N.getSliceBeginCoords(i,s.length),p=N.getSliceSize(u,i,s.length),c=Et({inputs:{x:n},backend:a,attrs:{shape:l}}),f=Sr({inputs:{x:c},backend:a,attrs:{perm:d}}),m=Et({inputs:{x:f},backend:a,attrs:{shape:u}}),g=go({inputs:{x:m},backend:a,attrs:{begin:h,size:p}});return a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(f),a.disposeIntermediateTensorInfo(m),g}var sG={kernelName:So,backendName:"cpu",kernelFunc:nG};function iG(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,weights:s}=t,{size:i}=r,o=a.data.get(n.dataId).values,l=a.data.get(s.dataId).values,d=Fy(o,l,s.dtype,s.shape,i);return a.makeTensorInfo([i],s.dtype,d)}var oG={kernelName:df,backendName:"cpu",kernelFunc:iG};function lG(e){let{inputs:t,backend:a}=e,{s0:r,s1:n}=t,s=a.data.get(r.dataId).values,i=a.data.get(n.dataId).values,o=N.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return a.makeTensorInfo([o.length],"int32",Int32Array.from(o))}var uG={kernelName:hf,backendName:"cpu",kernelFunc:lG},dG=dt(Xn,(e,t)=>{let a=t;return e>a.clipValueMax?a.clipValueMax:e<a.clipValueMin?a.clipValueMin:e}),hG={kernelName:Xn,backendName:"cpu",kernelFunc:dG},pG=e=>{let{x:t}=e.inputs,a=e.backend,r=new Float32Array(w.sizeFromShape(t.shape)),n=a.data.get(t.dataId),s=n.complexTensorInfos.real,i=n.complexTensorInfos.imag,o=a.data.get(s.dataId).values,l=a.data.get(i.dataId).values;for(let d=0;d<o.length;d++){let u=o[d],h=l[d];r[d]=Math.hypot(u,h)}return a.makeOutput(r,t.shape,"float32")},cG={kernelName:yh,backendName:"cpu",kernelFunc:pG};function mu(e){let{inputs:t,backend:a}=e,{input:r}=t,n=a.data.get(r.dataId).complexTensorInfos.imag,s=a.data.get(n.dataId).values;return a.makeTensorInfo(n.shape,n.dtype,s)}var fG={kernelName:vh,backendName:"cpu",kernelFunc:mu};function gu(e){let{inputs:t,backend:a,attrs:r}=e,{axis:n}=r,s=w.parseAxisParam(n,t[0].shape)[0],i=N.computeOutShape(t.map(m=>m.shape),s);if(w.sizeFromShape(i)===0)return a.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter(m=>w.sizeFromShape(m.shape)>0);if(o.length===1)return vn({inputs:{x:o[0]},backend:a});let l=o.map(m=>m.shape);if(N.assertParamsConsistent(l,s),o[0].dtype==="complex64"){let m=o.map(b=>mo({inputs:{input:b},backend:a})),g=o.map(b=>mu({inputs:{input:b},backend:a})),y=gu({inputs:m,backend:a,attrs:{axis:s}}),A=gu({inputs:g,backend:a,attrs:{axis:s}}),x=lr({inputs:{real:y,imag:A},backend:a});return m.forEach(b=>a.disposeIntermediateTensorInfo(b)),g.forEach(b=>a.disposeIntermediateTensorInfo(b)),a.disposeIntermediateTensorInfo(y),a.disposeIntermediateTensorInfo(A),x}let d=o.map(m=>{let g=w.sizeFromShape(m.shape.slice(s));return Et({inputs:{x:m},backend:a,attrs:{shape:[-1,g]}})}),u=d.map(m=>({vals:a.data.get(m.dataId).values,shape:m.shape}));i=N.computeOutShape(d.map(m=>m.shape),1);let h=d[0].shape[0]===1,p=$y(u,i,t[0].dtype,h),c=N.computeOutShape(o.map(m=>m.shape),s),f=a.makeTensorInfo(c,t[0].dtype,p);return d.forEach(m=>a.disposeIntermediateTensorInfo(m)),f}var mG={kernelName:To,backendName:"cpu",kernelFunc:gu};function w6(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:d,dimRoundingMode:u}=r;Ce([n,s],"conv2d");let h=N.convertConv2DDataFormat(l),p=N.computeConv2DInfo(n.shape,s.shape,i,d,o,u,!1,h),c=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,y=p.padInfo.left,A=p.padInfo.top,x=p.dataFormat==="channelsLast",b=new aa(p.outShape,n.dtype),v=w.computeStrides(n.shape),T=w.computeStrides(s.shape),C=v[0],E=x?v[1]:v[2],R=x?v[2]:1,z=x?1:v[1],F=b.strides[0],k=x?b.strides[1]:b.strides[2],D=x?b.strides[2]:1,_=x?1:b.strides[1],P=a.data.get(n.dataId).values,j=a.data.get(s.dataId).values,L=b.values;for(let B=0;B<p.batchSize;++B){let W=B*C,ee=B*F;for(let te=0;te<p.outHeight;++te){let re=ee+te*k,Y=te*p.strideHeight-A;for(let ae=0;ae<c;++ae){let le=Y+ae*m;if(le<0||le>=p.inHeight)continue;let xe=ae*T[0],ye=W+le*E;for(let ke=0;ke<p.outWidth;++ke){let Ee=re+ke*D,Me=ke*p.strideWidth-y;for(let Oe=0;Oe<f;++Oe){let je=Me+Oe*g;if(je<0||je>=p.inWidth)continue;let Pe=xe+Oe*T[1],ht=ye+je*R,nt=Pe;for(let st=0;st<p.inChannels;++st){let pt=P[ht+st*z];for(let at=0;at<p.outChannels;++at)L[Ee+at*_]+=pt*j[nt+at];nt+=p.outChannels}}}}}}return a.makeTensorInfo(b.shape,b.dtype,L)}var gG={kernelName:Hs,backendName:"cpu",kernelFunc:w6};function yG(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:d,filterShape:u}=r;Ce([n,s],"conv2dBackpropFilter");let h=N.convertConv2DDataFormat(l),p=N.computeConv2DInfo(n.shape,u,i,1,o,d,!1,h),{strideHeight:c,strideWidth:f,filterHeight:m,filterWidth:g}=p,y=p.dataFormat==="channelsLast",A=new aa(p.filterShape,"float32"),x=p.padInfo.left,b=p.padInfo.top,v=a.data.get(n.dataId).values,T=a.data.get(s.dataId).values,C=new aa(n.shape,n.dtype,v),E=new aa(s.shape,s.dtype,T);for(let R=0;R<m;++R){let z=Math.max(0,Math.ceil((b-R)/c)),F=Math.min(p.outHeight,(p.inHeight+b-R)/c);for(let k=0;k<g;++k){let D=Math.max(0,Math.ceil((x-k)/f)),_=Math.min(p.outWidth,(p.inWidth+x-k)/f);for(let P=0;P<p.inChannels;++P)for(let j=0;j<p.outChannels;++j){let L=0;for(let B=0;B<p.batchSize;++B)for(let W=z;W<F;++W){let ee=R+W*c-b;for(let te=D;te<_;++te){let re=k+te*f-x;y?L+=C.get(B,ee,re,P)*E.get(B,W,te,j):L+=C.get(B,P,ee,re)*E.get(B,j,W,te)}}A.set(L,R,k,P,j)}}}return a.makeTensorInfo(A.shape,A.dtype,A.values)}var AG={kernelName:pf,backendName:"cpu",kernelFunc:yG};function xG(e){let{inputs:t,backend:a,attrs:r}=e,{dy:n,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:d,dimRoundingMode:u}=r;Ce([n,s],"conv2dBackpropInput");let h=w.computeStrides(s.shape),p=w.computeStrides(n.shape),c=N.convertConv2DDataFormat(d),f=N.computeConv2DInfo(i,s.shape,o,1,l,u,!1,c),m=new aa(f.inShape,"float32"),g=m.values,y=a.data.get(n.dataId).values,A=a.data.get(s.dataId).values,[x,b,v]=h,{batchSize:T,filterHeight:C,filterWidth:E,inChannels:R,inHeight:z,inWidth:F,outChannels:k,outHeight:D,outWidth:_,strideHeight:P,strideWidth:j}=f;c=f.dataFormat;let L=C-1-f.padInfo.top,B=E-1-f.padInfo.left,W=c==="channelsLast",ee=m.strides[0],te=W?m.strides[1]:m.strides[2],re=W?m.strides[2]:1,Y=W?1:m.strides[1],ae=p[0],le=W?p[1]:p[2],xe=W?p[2]:1,ye=W?1:p[1];for(let ke=0;ke<T;++ke)for(let Ee=0;Ee<R;++Ee)for(let Me=0;Me<z;++Me){let Oe=Me-L,je=Math.max(0,Math.ceil(Oe/P)),Pe=Math.min(D,(C+Oe)/P);for(let ht=0;ht<F;++ht){let nt=ht-B,st=Math.max(0,Math.ceil(nt/j)),pt=Math.min(_,(E+nt)/j),at=0;for(let Ht=je;Ht<Pe;++Ht){let xa=Ht*P-Oe;for(let zt=st;zt<pt;++zt){let ka=zt*j-nt,Cr=ae*ke+le*Ht+xe*zt,Ia=x*(C-1-xa)+b*(E-1-ka)+v*Ee;for(let Ba=0;Ba<k;++Ba){let Ya=y[Cr+ye*Ba],qt=A[Ia+Ba];at+=Ya*qt}}}let _t=ee*ke+te*Me+re*ht+Y*Ee;g[_t]=at}}return a.makeTensorInfo(m.shape,m.dtype,m.values)}var bG={kernelName:qs,backendName:"cpu",kernelFunc:xG};function vG(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,filter:s}=t,{strides:i,pad:o,dilations:l}=r;Ce([n,s],"conv3d");let d=N.computeConv3DInfo(n.shape,s.shape,i,l,o),{filterDepth:u,filterHeight:h,filterWidth:p,dilationDepth:c,dilationHeight:f,dilationWidth:m,padInfo:g}=d,y=g.front,A=g.left,x=g.top,b=new aa(d.outShape,n.dtype),v=a.data.get(n.dataId).values,T=a.data.get(s.dataId).values,C=b.values,E=w.computeStrides(n.shape),R=w.computeStrides(s.shape);for(let z=0;z<d.batchSize;++z){let F=z*E[0],k=z*b.strides[0];for(let D=0;D<d.outDepth;++D){let _=k+D*b.strides[1],P=D*d.strideDepth-y;for(let j=0;j<u;++j){let L=P+j*c;if(L<0||L>=d.inDepth)continue;let B=j*R[0],W=F+L*E[1];for(let ee=0;ee<d.outHeight;++ee){let te=_+ee*b.strides[2],re=ee*d.strideHeight-x;for(let Y=0;Y<h;++Y){let ae=re+Y*f;if(ae<0||ae>=d.inHeight)continue;let le=B+Y*R[1],xe=W+ae*E[2];for(let ye=0;ye<d.outWidth;++ye){let ke=te+ye*d.outChannels,Ee=ye*d.strideWidth-A;for(let Me=0;Me<p;++Me){let Oe=Ee+Me*m;if(Oe<0||Oe>=d.inWidth)continue;let je=le+Me*R[2],Pe=xe+Oe*d.inChannels,ht=je;for(let nt=0;nt<d.inChannels;++nt){let st=v[Pe+nt];for(let pt=0;pt<d.outChannels;++pt)C[ke+pt]+=st*T[ht+pt];ht+=d.outChannels}}}}}}}}return a.makeTensorInfo(b.shape,b.dtype,b.values)}var wG={kernelName:Ah,backendName:"cpu",kernelFunc:vG};function kG(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,dy:s}=t,{strides:i,pad:o,filterShape:l}=r;Ce([n,s],"conv3dBackpropFilterV2");let d=w.computeStrides(n.shape),u=w.computeStrides(s.shape),h=N.computeConv3DInfo(n.shape,l,i,1,o),p=h.strideDepth,c=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,A=new aa(h.filterShape,"float32"),x=A.values,[b,v,T,C]=A.strides,E=a.data.get(s.dataId).values,[R,z,F,k]=u,D=a.data.get(n.dataId).values,[_,P,j,L]=d,B=h.padInfo.front,W=h.padInfo.left,ee=h.padInfo.top;for(let te=0;te<m;++te){let re=Math.max(0,Math.ceil((B-te)/p)),Y=Math.min(h.outDepth,(h.inDepth+B-te)/p),ae=te*b;for(let le=0;le<g;++le){let xe=Math.max(0,Math.ceil((ee-le)/c)),ye=Math.min(h.outHeight,(h.inHeight+ee-le)/c),ke=le*v+ae;for(let Ee=0;Ee<y;++Ee){let Me=Math.max(0,Math.ceil((W-Ee)/f)),Oe=Math.min(h.outWidth,(h.inWidth+W-Ee)/f),je=Ee*T+ke;for(let Pe=0;Pe<h.inChannels;++Pe){let ht=Pe*C+je;for(let nt=0;nt<h.outChannels;++nt){let st=0;for(let pt=0;pt<h.batchSize;++pt){let at=pt*_,_t=pt*R;for(let Ht=re;Ht<Y;++Ht){let xa=(te+Ht*p-B)*P+at,zt=Ht*z+_t;for(let ka=xe;ka<ye;++ka){let Cr=(le+ka*c-ee)*j+xa,Ia=ka*F+zt;for(let Ba=Me;Ba<Oe;++Ba){let Ya=(Ee+Ba*f-W)*L+Cr,qt=Ba*k+Ia;st+=D[Ya+Pe]*E[qt+nt]}}}}x[ht+nt]=st}}}}}return a.makeTensorInfo(A.shape,A.dtype,A.values)}var IG={kernelName:cf,backendName:"cpu",kernelFunc:kG};function SG(e){let{inputs:t,backend:a,attrs:r}=e,{dy:n,filter:s}=t,{pad:i,strides:o,inputShape:l}=r;Ce([n],"conv3dBackpropInputV2");let d=w.computeStrides(n.shape),u=w.computeStrides(s.shape),h=N.computeConv3DInfo(l,s.shape,o,1,i),p=new aa(h.inShape,"float32"),c=p.values,[f,m,g,y]=p.strides,A=a.data.get(n.dataId).values,[x,b,v,T]=d,C=a.data.get(s.dataId).values,[E,R,z,F]=u,{batchSize:k,filterDepth:D,filterHeight:_,filterWidth:P,inChannels:j,inDepth:L,inHeight:B,inWidth:W,outChannels:ee,outDepth:te,outHeight:re,outWidth:Y,strideDepth:ae,strideHeight:le,strideWidth:xe}=h,ye=D-1-h.padInfo.front,ke=_-1-h.padInfo.top,Ee=P-1-h.padInfo.left;for(let Me=0;Me<k;++Me)for(let Oe=0;Oe<j;++Oe)for(let je=0;je<L;++je){let Pe=je-ye,ht=Math.max(0,Math.ceil(Pe/ae)),nt=Math.min(te,(D+Pe)/ae);for(let st=0;st<B;++st){let pt=st-ke,at=Math.max(0,Math.ceil(pt/le)),_t=Math.min(re,(_+pt)/le);for(let Ht=0;Ht<W;++Ht){let xa=Ht-Ee,zt=Math.max(0,Math.ceil(xa/xe)),ka=Math.min(Y,(P+xa)/xe),Cr=0;for(let Ia=ht;Ia<nt;++Ia){let Ba=Ia*ae-Pe;for(let Ya=at;Ya<_t;++Ya){let qt=Ya*le-pt;for(let Tn=zt;Tn<ka;++Tn){let xd=Tn*xe-xa,bd=x*Me+b*Ia+v*Ya+T*Tn,Ja=E*(D-1-Ba)+R*(_-1-qt)+z*(P-1-xd)+F*Oe;for(let Nr=0;Nr<ee;++Nr){let vd=A[bd+Nr],wd=C[Ja+Nr];Cr+=vd*wd}}}}c[f*Me+m*je+g*st+y*Ht+Oe]=Cr}}}return a.makeTensorInfo(p.shape,p.dtype,p.values)}var TG={kernelName:ff,backendName:"cpu",kernelFunc:SG},CG=dt(Xs,e=>Math.cos(e)),NG={kernelName:Xs,backendName:"cpu",kernelFunc:CG},EG=dt(Ks,e=>Math.cosh(e)),RG={kernelName:Ks,backendName:"cpu",kernelFunc:EG};function FG(e){let{inputs:t,backend:a,attrs:r}=e,{image:n,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:d}=r,[u,h,p,c]=n.shape,f=s.shape[0],[m,g]=o,y=Le([f,m,g,c],"float32"),A=a.data.get(s.dataId).values,x=a.data.get(i.dataId).values,b=a.data.get(n.dataId).values,v=w.computeStrides(n.shape),T=w.computeStrides(y.shape);for(let C=0;C<f;C++){let E=C*4,R=A[E],z=A[E+1],F=A[E+2],k=A[E+3],D=x[C];if(D>=u)continue;let _=m>1?(F-R)*(h-1)/(m-1):0,P=g>1?(k-z)*(p-1)/(g-1):0;for(let j=0;j<m;j++){let L=m>1?R*(h-1)+j*_:.5*(R+F)*(h-1);if(L<0||L>h-1){for(let B=0;B<g;B++)for(let W=0;W<c;W++){let ee=W+B*T[2]+j*T[1]+C*T[0];y.values[ee]=d}continue}if(l==="bilinear"){let B=Math.floor(L),W=Math.ceil(L),ee=L-B;for(let te=0;te<g;te++){let re=g>1?z*(p-1)+te*P:.5*(z+k)*(p-1);if(re<0||re>p-1){for(let xe=0;xe<c;xe++){let ye=xe+te*T[2]+j*T[1]+C*T[0];y.values[ye]=d}continue}let Y=Math.floor(re),ae=Math.ceil(re),le=re-Y;for(let xe=0;xe<c;xe++){let ye=xe+Y*v[2]+B*v[1]+D*v[0],ke=b[ye];ye=xe+ae*v[2]+B*v[1]+D*v[0];let Ee=b[ye];ye=xe+Y*v[2]+W*v[1]+D*v[0];let Me=b[ye];ye=xe+ae*v[2]+W*v[1]+D*v[0];let Oe=b[ye],je=ke+(Ee-ke)*le,Pe=Me+(Oe-Me)*le;ye=xe+te*T[2]+j*T[1]+C*T[0],y.values[ye]=je+(Pe-je)*ee}}}else for(let B=0;B<g;++B){let W=g>1?z*(p-1)+B*P:.5*(z+k)*(p-1);if(W<0||W>p-1){for(let re=0;re<c;re++){let Y=re+B*T[2]+j*T[1]+C*T[0];y.values[Y]=d}continue}let ee=Math.round(W),te=Math.round(L);for(let re=0;re<c;re++){let Y=re+ee*v[2]+te*v[1]+D*v[0],ae=re+B*T[2]+j*T[1]+C*T[0];y.values[ae]=b[Y]}}}}return a.makeTensorInfo(y.shape,y.dtype,y.values)}var $G={kernelName:No,backendName:"cpu",kernelFunc:FG};function MG(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{axis:s,exclusive:i,reverse:o}=r;Ce(n,"cumsum");let l=N.getAxesPermutation([s],n.shape.length),d=n;l!=null&&(d=Sr({inputs:{x:n},backend:a,attrs:{perm:l}}));let u=N.getInnerMostAxes(1,n.shape.length)[0];if(u!==d.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${d.shape.length-1} but got axis=${u}`);let h=$a(d.dtype,"int32"),p=w.makeZerosTypedArray(w.sizeFromShape(d.shape),h),c=a.data.get(d.dataId).values,f=d.shape[d.shape.length-1],m=o?(y,A)=>y+f-A-1:(y,A)=>y+A;for(let y=0;y<c.length;y+=f)for(let A=0;A<f;A++){let x=m(y,A);if(A===0)p[x]=i?0:c[x];else{let b=m(y,A-1);p[x]=i?c[b]+p[b]:c[x]+p[b]}}let g=a.makeTensorInfo(d.shape,h,p);if(l!=null){let y=N.getUndoAxesPermutation(l),A=Sr({inputs:{x:g},backend:a,attrs:{perm:y}});return a.disposeIntermediateTensorInfo(g),a.disposeIntermediateTensorInfo(d),A}return g}var _G={kernelName:Co,backendName:"cpu",kernelFunc:MG};function zG(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,weights:s}=t,{size:i,binaryOutput:o}=r;if(n.shape.length===1){let l=a.data.get(n.dataId).values,d=a.data.get(s.dataId).values,u=Fy(l,d,s.dtype,s.shape,i);return a.makeTensorInfo([i],s.dtype,u)}else if(n.shape.length===2){let l=a.bufferSync(n),d=a.bufferSync(s),u=$7(l,d,i,o);return a.makeTensorInfo(u.shape,s.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${n.shape.length}.`)}var OG={kernelName:mf,backendName:"cpu",kernelFunc:zG};function DG(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{blockSize:s,dataFormat:i}=r;w.assert(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);let o=n.shape[0],l=n.shape[1],d=n.shape[2],u=n.shape[3],h=l*s,p=d*s,c=u/(s*s),f=a.data.get(n.dataId).values,m=new Float32Array(o*h*p*c),g=0;for(let y=0;y<o;++y)for(let A=0;A<h;++A){let x=Math.floor(A/s),b=A%s;for(let v=0;v<p;++v){let T=Math.floor(v/s),C=v%s,E=(b*s+C)*c;for(let R=0;R<c;++R){let z=R+E+u*(T+d*(x+l*y));m[g++]=f[z]}}}return a.makeTensorInfo([o,h,p,c],n.dtype,m)}var PG={kernelName:Eo,backendName:"cpu",kernelFunc:DG};function k6(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:d}=r;Ce([n,s],"depthwiseConv2DNative");let u=w.computeStrides(n.shape),h=w.computeStrides(s.shape),p=l;p==null&&(p=[1,1]),w.assert(N.eitherStridesOrDilationsAreOne(i,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`);let c=N.computeConv2DInfo(n.shape,s.shape,i,p,o,d,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:A}=c,x=A.left,b=A.top,v=c.outChannels/c.inChannels,T=new aa(c.outShape,n.dtype),C=a.data.get(n.dataId).values,E=a.data.get(s.dataId).values,R=T.values;for(let z=0;z<c.batchSize;++z){let F=z*u[0],k=z*T.strides[0];for(let D=0;D<c.outHeight;++D){let _=k+D*T.strides[1],P=D*c.strideHeight-b;for(let j=0;j<f;++j){let L=P+j*g;if(L<0||L>=c.inHeight)continue;let B=j*h[0],W=F+L*u[1];for(let ee=0;ee<c.outWidth;++ee){let te=_+ee*T.strides[2],re=ee*c.strideWidth-x;for(let Y=0;Y<m;++Y){let ae=re+Y*y;if(ae<0||ae>=c.inWidth)continue;let le=B+Y*h[1],xe=W+ae*c.inChannels,ye=te,ke=le;for(let Ee=0;Ee<c.inChannels;++Ee){let Me=C[xe+Ee];for(let Oe=0;Oe<v;++Oe)R[ye+Oe]+=Me*E[ke+Oe];ye+=v,ke+=v}}}}}}return a.makeTensorInfo(T.shape,T.dtype,T.values)}var LG={kernelName:Zs,backendName:"cpu",kernelFunc:k6};function WG(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:d,filterShape:u}=r;Ce([n,s],"depthwiseConv2dNativeBackpropFilter");let h=N.computeConv2DInfo(n.shape,u,i,o,l,d,!0),{strideHeight:p,strideWidth:c,filterHeight:f,filterWidth:m}=h,g=new aa(h.filterShape,"float32"),y=h.padInfo.left,A=h.padInfo.top,x=h.outChannels/h.inChannels,b=a.data.get(n.dataId).values,v=new aa(n.shape,n.dtype,b),T=a.data.get(s.dataId).values,C=new aa(s.shape,s.dtype,T);for(let E=0;E<f;++E){let R=Math.max(0,Math.ceil((A-E)/p)),z=Math.min(h.outHeight,(h.inHeight+A-E)/p);for(let F=0;F<m;++F){let k=Math.max(0,Math.ceil((y-F)/c)),D=Math.min(h.outWidth,(h.inWidth+y-F)/c);for(let _=0;_<h.outChannels;++_){let P=Math.trunc(_/x),j=_%x,L=0;for(let B=0;B<h.batchSize;++B)for(let W=R;W<z;++W){let ee=E+W*p-A;for(let te=k;te<D;++te){let re=F+te*c-y;L+=v.get(B,ee,re,P)*C.get(B,W,te,_)}}g.set(L,E,F,P,j)}}}return a.makeTensorInfo(g.shape,g.dtype,g.values)}var BG={kernelName:gf,backendName:"cpu",kernelFunc:WG};function VG(e){let{inputs:t,backend:a,attrs:r}=e,{dy:n,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:d,inputShape:u}=r;Ce([n,s],"depthwiseConv2DNativeBackpropInput");let h=w.computeStrides(n.shape),p=w.computeStrides(s.shape),c=N.computeConv2DInfo(u,s.shape,i,o,l,d,!0),f=new aa(c.inShape,"float32"),m=f.values,[g,y,A]=f.strides,x=a.data.get(n.dataId).values,[b,v,T]=h,C=a.data.get(s.dataId).values,[E,R,z]=p,{batchSize:F,filterHeight:k,filterWidth:D,inChannels:_,inHeight:P,inWidth:j,outChannels:L,outHeight:B,outWidth:W,strideHeight:ee,strideWidth:te}=c,re=k-1-c.padInfo.top,Y=D-1-c.padInfo.left,ae=L/_;for(let le=0;le<F;++le)for(let xe=0;xe<_;++xe)for(let ye=0;ye<P;++ye){let ke=ye-re,Ee=Math.max(0,Math.ceil(ke/ee)),Me=Math.min(B,(k+ke)/ee);for(let Oe=0;Oe<j;++Oe){let je=Oe-Y,Pe=Math.max(0,Math.ceil(je/te)),ht=Math.min(W,(D+je)/te),nt=0;for(let st=Ee;st<Me;++st){let pt=st*ee-ke;for(let at=Pe;at<ht;++at){let _t=at*te-je,Ht=b*le+v*st+T*at,xa=E*(k-1-pt)+R*(D-1-_t)+z*xe;for(let zt=0;zt<ae;++zt){let ka=xe*ae+zt,Cr=x[Ht+ka],Ia=C[xa+zt];nt+=Cr*Ia}}}m[g*le+y*ye+A*Oe+xe]=nt}}return a.makeTensorInfo(f.shape,f.dtype,f.values)}var UG={kernelName:yf,backendName:"cpu",kernelFunc:VG};function GG(e){let{inputs:t,backend:a}=e,{x:r}=t,n=w.sizeFromShape(r.shape),s=a.data.get(r.dataId).values,i=Le([n,n],r.dtype),o=i.values;for(let d=0;d<s.length;d++)o[d*n+d]=s[d];let l=[...r.shape,...r.shape];return a.makeTensorInfo(l,i.dtype,i.values)}var jG={kernelName:Af,backendName:"cpu",kernelFunc:GG},HG={kernelName:xh,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:a})=>{let{x:r,filter:n}=e,{strides:s,pad:i,dilations:o}=a,l=t,d=l.data.get(r.dataId).values,u=r.shape.length,h=l.data.get(n.dataId).values,p=n.shape.length,{batchSize:c,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:A,padInfo:x,strideHeight:b,strideWidth:v,filterHeight:T,filterWidth:C,dilationHeight:E,dilationWidth:R,outShape:z}=N.computeDilation2DInfo(r.shape,n.shape,s,i,"NHWC",o),F=w.sizeFromShape(z),k=z.length,D=w.getArrayFromDType(r.dtype,F);for(let _=0;_<c;++_)for(let P=0;P<y;++P){let j=P*b-x.top;for(let L=0;L<A;++L){let B=L*v-x.left;for(let W=0;W<g;++W){let ee=Number.MIN_SAFE_INTEGER;for(let re=0;re<T;++re){let Y=j+re*E;if(Y>=0&&Y<f)for(let ae=0;ae<C;++ae){let le=B+ae*R;if(le>=0&&le<m){let xe=w.locToIndex([_,Y,le,W],u,w.computeStrides(r.shape)),ye=w.locToIndex([re,ae,W],p,w.computeStrides(n.shape)),ke=d[xe]+h[ye];ke>ee&&(ee=ke)}}}let te=w.locToIndex([_,P,L,W],k,w.computeStrides(z));D[te]=ee}}}return{dataId:l.write(w.toTypedArray(D,r.dtype),z,r.dtype),shape:z,dtype:r.dtype}}},qG={kernelName:Tc,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:a})=>{let{x:r,filter:n,dy:s}=e,{strides:i,pad:o,dilations:l}=a,d=t,u=w.toNestedArray(r.shape,d.data.get(r.dataId).values),h=w.toNestedArray(n.shape,d.data.get(n.dataId).values),{batchSize:p,inHeight:c,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:A,strideHeight:x,strideWidth:b,filterHeight:v,filterWidth:T,dilationHeight:C,dilationWidth:E,outShape:R}=N.computeDilation2DInfo(r.shape,n.shape,i,o,"NHWC",l);w.assert(s.rank===R.length,()=>`Error in ${Tc}, dy must have the same rank as output ${R.length}, but got ${s.rank}`);let z=w.toNestedArray(R,d.data.get(s.dataId).values),F=w.makeZerosNestedTypedArray(n.shape,n.dtype);for(let k=0;k<p;++k)for(let D=0;D<g;++D){let _=D*x-A.top;for(let P=0;P<y;++P){let j=P*b-A.left;for(let L=0;L<m;++L){let B=Number.MIN_SAFE_INTEGER,W=0,ee=0;for(let te=0;te<v;++te){let re=_+te*C;if(re>=0&&re<c)for(let Y=0;Y<T;++Y){let ae=j+Y*E;if(ae>=0&&ae<f){let le=u[k][re][ae][L]+h[te][Y][L];le>B&&(B=le,W=te,ee=Y)}}}F[W][ee][L]+=z[k][D][P][L]}}}return{dataId:d.write(w.toTypedArray(F,r.dtype),n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},XG={kernelName:Sc,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:a})=>{let{x:r,filter:n,dy:s}=e,{strides:i,pad:o,dilations:l}=a,d=t,u=w.toNestedArray(r.shape,d.data.get(r.dataId).values),h=w.toNestedArray(n.shape,d.data.get(n.dataId).values),{batchSize:p,inHeight:c,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:A,strideHeight:x,strideWidth:b,filterHeight:v,filterWidth:T,dilationHeight:C,dilationWidth:E,outShape:R}=N.computeDilation2DInfo(r.shape,n.shape,i,o,"NHWC",l);w.assert(s.rank===R.length,()=>`Error in ${Sc}, dy must have the same rank as output ${R.length}, but got ${s.rank}`);let z=w.toNestedArray(R,d.data.get(s.dataId).values),F=w.makeZerosNestedTypedArray(r.shape,r.dtype);for(let k=0;k<p;++k)for(let D=0;D<g;++D){let _=D*x-A.top;for(let P=0;P<y;++P){let j=P*b-A.left;for(let L=0;L<m;++L){let B=Number.MIN_SAFE_INTEGER,W=_<0?0:_,ee=j<0?0:j;for(let te=0;te<v;++te){let re=_+te*C;if(re>=0&&re<c)for(let Y=0;Y<T;++Y){let ae=j+Y*E;if(ae>=0&&ae<f){let le=u[k][re][ae][L]+h[te][Y][L];le>B&&(B=le,W=re,ee=ae)}}}F[k][W][ee][L]+=z[k][D][P][L]}}}return{dataId:d.write(w.toTypedArray(F,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};function ap(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{axis:s,keepDims:i}=r;Ce(n,"sum");let o;n.dtype==="bool"?o=Ps({inputs:{x:n},backend:a,attrs:{dtype:"int32"}}):o=vn({inputs:{x:n},backend:a});let l=o.shape.length,d=w.parseAxisParam(s,o.shape),u=N.getAxesPermutation(d,l),h=d,p=o;u!=null&&(p=Sr({inputs:{x:o},backend:a,attrs:{perm:u}}),h=N.getInnerMostAxes(h.length,l)),N.assertAxesAreInnerMostDims("sum",h,p.shape.length);let[c,f]=N.computeOutAndReduceShapes(p.shape,h),m=N.upcastType(p.dtype,"int32"),g=Gc(a,c,m),y=w.sizeFromShape(f),A=a.data.get(g.dataId).values,x=a.data.get(p.dataId).values;for(let b=0;b<A.length;++b){let v=b*y,T=0;for(let C=0;C<y;++C)T+=x[v+C];A[b]=T}if(i){let b=N.expandShapeToKeepDim(g.shape,d),v=g;g=Et({inputs:{x:g},backend:a,attrs:{shape:b}}),a.disposeIntermediateTensorInfo(v)}return a.disposeIntermediateTensorInfo(o),u!=null&&a.disposeIntermediateTensorInfo(p),g}var KG={kernelName:Si,backendName:"cpu",kernelFunc:ap};function ZG(e){let{inputs:t,backend:a,attrs:r}=e,{equation:n}=r,s=t,{allDims:i,summedDims:o,idDims:l}=N.decodeEinsumEquation(n,s.length);N.checkEinsumDimSizes(i.length,l,s);let{path:d,steps:u}=N.getEinsumComputePath(o,l),h=u.length,p=null,c=i.length,f=[];for(let m=0;m<h;++m){for(let g of u[m]){let{permutationIndices:y,expandDims:A}=N.getEinsumPermutation(c,l[g]),x;N.isIdentityPermutation(y)?x=s[g]:(x=Sr({inputs:{x:s[g]},backend:a,attrs:{perm:y}}),f.push(x));let b=x.shape.slice();for(let v=0;v<A.length;++v)b.splice(A[v],0,1);w.arraysEqual(x.shape,b)||(x=Et({inputs:{x},backend:a,attrs:{shape:b}}),f.push(x)),p===null?p=x:(p=$0({inputs:{a:x,b:p},backend:a}),f.push(p))}m<h-1&&(d[m]>=0&&(p=ap({inputs:{x:p},backend:a,attrs:{axis:d[m]-(i.length-c),keepDims:!1}}),f.push(p)),c--)}for(let m of f)m!==p&&a.disposeIntermediateTensorInfo(m);return p}var YG={kernelName:bh,backendName:"cpu",kernelFunc:ZG};function JG(e){let{inputs:t,backend:a}=e,{dy:r,y:n}=t;Ce([r,n],"eluGrad");let s=new Float32Array(w.sizeFromShape(n.shape)),i=a.data.get(n.dataId).values,o=a.data.get(r.dataId).values;for(let l=0;l<i.length;++l){let d=i[l];d>=1?s[l]=o[l]:s[l]=o[l]*(d+1)}return a.makeTensorInfo(n.shape,"float32",s)}var QG={kernelName:xf,backendName:"cpu",kernelFunc:JG},ej=N.ERF_P,tj=N.ERF_A1,aj=N.ERF_A2,rj=N.ERF_A3,nj=N.ERF_A4,sj=N.ERF_A5,ij=dt(Mu,e=>{let t=Math.sign(e),a=Math.abs(e),r=1/(1+ej*a);return t*(1-((((sj*r+nj)*r+rj)*r+aj)*r+tj)*r*Math.exp(-a*a))}),oj={kernelName:Mu,backendName:"cpu",kernelFunc:ij};function Hc(e){let{inputs:t,backend:a,attrs:r}=e,{input:n}=t,{dim:s}=r,i=n.shape.length,o=n.shape.slice(),l=s;return s<0&&(w.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+s+1),o.splice(l,0,1),Et({inputs:{x:n},backend:a,attrs:{shape:o}})}var lj={kernelName:Fo,backendName:"cpu",kernelFunc:Hc},uj=Zt((e,t)=>e/t),Wy=fa(Ys,uj),Eg={kernelName:Ys,backendName:"cpu",kernelFunc:Wy};function I6(e,t,a){let r=e.shape,n=r[0],s=r[1],i=a.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,d=[n,s],u=w.sizeFromShape(d),h=w.getTypedArrayFromDType("float32",u),p=w.getTypedArrayFromDType("float32",u);for(let g=0;g<n;g++){let y=go({inputs:{x:o},backend:a,attrs:{begin:[g,0],size:[1,s]}}),A=go({inputs:{x:l},backend:a,attrs:{begin:[g,0],size:[1,s]}}),x=lr({inputs:{real:y,imag:A},backend:a}),{real:b,imag:v}=dj(x,t,a),T=N.mergeRealAndImagArrays(b,v);for(let C=0;C<s;C++){let E=N.getComplexWithIndex(T,C);h[g*s+C]=E.real,p[g*s+C]=E.imag}a.disposeIntermediateTensorInfo(y),a.disposeIntermediateTensorInfo(A),a.disposeIntermediateTensorInfo(x)}let c=a.makeTensorInfo(d,"float32",h),f=a.makeTensorInfo(d,"float32",p),m=lr({inputs:{real:c,imag:f},backend:a});return a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(f),m}function dj(e,t,a){let r=w.sizeFromShape(e.shape),n=a.data.get(e.dataId),s=a.data.get(n.complexTensorInfos.real.dataId).values,i=a.data.get(n.complexTensorInfos.imag.dataId).values;if(hj(r)){let o=Rg(s,i,r,t,a),l=[e.shape[0],e.shape[1]];if(t){let d=a.makeTensorInfo(l,"float32",o.real),u=a.makeTensorInfo(l,"float32",o.imag),h=a.makeTensorInfo([],"float32",w.createScalarValue(r,"float32")),p=vn({inputs:{x:h},backend:a}),c=Eg.kernelFunc({inputs:{a:d,b:h},backend:a}),f=Eg.kernelFunc({inputs:{a:u,b:p},backend:a}),m=a.data.get(c.dataId).values,g=a.data.get(f.dataId).values;return a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(u),a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(f),{real:m,imag:g}}return o}else{let o=N.mergeRealAndImagArrays(s,i),l=pj(o,r,t);return N.splitRealAndImagArrays(l)}}function hj(e){return(e&e-1)===0}function Rg(e,t,a,r,n){if(a===1)return{real:e,imag:t};let s=N.mergeRealAndImagArrays(e,t),i=a/2,o=N.complexWithEvenIndex(s),l=o.real,d=o.imag,u=[l.length],h=n.makeTensorInfo(u,"float32",l),p=n.makeTensorInfo(u,"float32",d),c=lr({inputs:{real:h,imag:p},backend:n}),f=N.complexWithOddIndex(s),m=f.real,g=f.imag,y=[m.length],A=n.makeTensorInfo(y,"float32",m),x=n.makeTensorInfo(y,"float32",g),b=lr({inputs:{real:A,imag:x},backend:n}),v=Rg(l,d,i,r,n),T=v.real,C=v.imag,E=[T.length],R=n.makeTensorInfo(E,"float32",T),z=n.makeTensorInfo(E,"float32",C),F=lr({inputs:{real:R,imag:z},backend:n}),k=Rg(m,g,i,r,n),D=k.real,_=k.imag,P=[D.length],j=n.makeTensorInfo(P,"float32",D),L=n.makeTensorInfo(P,"float32",_),B=lr({inputs:{real:j,imag:L},backend:n}),W=N.exponents(a,r),ee=[W.real.length],te=n.makeTensorInfo(ee,"float32",W.real),re=n.makeTensorInfo(ee,"float32",W.imag),Y=lr({inputs:{real:te,imag:re},backend:n}),ae=$0({inputs:{a:Y,b:B},backend:n}),le=tp({inputs:{a:F,b:ae},backend:n}),xe=Dy({inputs:{a:F,b:ae},backend:n}),ye=mo({inputs:{input:le},backend:n}),ke=mo({inputs:{input:xe},backend:n}),Ee=mu({inputs:{input:le},backend:n}),Me=mu({inputs:{input:xe},backend:n}),Oe=gu({inputs:[ye,ke],backend:n,attrs:{axis:0}}),je=gu({inputs:[Ee,Me],backend:n,attrs:{axis:0}}),Pe=n.data.get(Oe.dataId).values,ht=n.data.get(je.dataId).values;return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(A),n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(R),n.disposeIntermediateTensorInfo(z),n.disposeIntermediateTensorInfo(F),n.disposeIntermediateTensorInfo(j),n.disposeIntermediateTensorInfo(L),n.disposeIntermediateTensorInfo(B),n.disposeIntermediateTensorInfo(te),n.disposeIntermediateTensorInfo(re),n.disposeIntermediateTensorInfo(Y),n.disposeIntermediateTensorInfo(ae),n.disposeIntermediateTensorInfo(le),n.disposeIntermediateTensorInfo(xe),n.disposeIntermediateTensorInfo(ye),n.disposeIntermediateTensorInfo(Ee),n.disposeIntermediateTensorInfo(ke),n.disposeIntermediateTensorInfo(Me),n.disposeIntermediateTensorInfo(Oe),n.disposeIntermediateTensorInfo(je),{real:Pe,imag:ht}}function pj(e,t,a){let r=new Float32Array(t*2);for(let n=0;n<t;n++){let s=0,i=0;for(let o=0;o<t;o++){let l=N.exponent(n*o,t,a),d=N.getComplexWithIndex(e,o);s+=d.real*l.real-d.imag*l.imag,i+=d.real*l.imag+d.imag*l.real}a&&(s/=t,i/=t),N.assignToTypedArray(r,s,i,n)}return r}function cj(e){let{inputs:t,backend:a}=e,{input:r}=t,n=w.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=n/s,o=Et({inputs:{x:r},backend:a,attrs:{shape:[i,s]}}),l=I6(o,!1,a),d=Et({inputs:{x:l},backend:a,attrs:{shape:r.shape}});return a.disposeIntermediateTensorInfo(o),a.disposeIntermediateTensorInfo(l),d}var fj={kernelName:bf,backendName:"cpu",kernelFunc:cj};function By(e){let{backend:t,attrs:a}=e,{shape:r,value:n,dtype:s}=a,i=s||w.inferDtype(n),o=w.getArrayFromDType(i,w.sizeFromShape(r));return gj(o,n),t.makeTensorInfo(r,i,o)}var mj={kernelName:_u,backendName:"cpu",kernelFunc:By};function gj(e,t,a){e.fill(t)}var yj={kernelName:Mo,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:a})=>{let{image:r}=e,n=a,s=w.getTypedArrayFromDType(r.dtype,w.sizeFromShape(r.shape)),[i,o,l,d]=r.shape,u=n.data.get(r.dataId).values;for(let h=0;h<i;h++){let p=h*l*o*d;for(let c=0;c<o;c++){let f=c*(l*d);for(let m=0;m<l;m++){let g=m*d;for(let y=0;y<d;y++){let A=Math.round(l-m-1),x=p+f+g+y,b=u[x];if(A>=0&&A<l){let v=A*d,T=p+f+v+y;b=u[T]}s[x]=b}}}}return{dataId:n.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Aj=Zt((e,t)=>Math.floor(e/t)),xj=fa(ti,Aj,null,"int32"),bj={kernelName:ti,backendName:"cpu",kernelFunc:xj};function vj(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:d,dataFormat:u,dilations:h,dimRoundingMode:p,activation:c,leakyreluAlpha:f}=r,m=w6({inputs:{x:n,filter:s},backend:a,attrs:{strides:l,pad:d,dataFormat:u,dilations:h,dimRoundingMode:p}});if(i){let g=m;m=tp({inputs:{a:m,b:i},backend:a}),a.disposeIntermediateTensorInfo(g)}if(c){let g=m;m=Py(a,m,c,o,f),a.disposeIntermediateTensorInfo(g)}return m}var wj={kernelName:Ts,backendName:"cpu",kernelFunc:vj};function kj(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:d,dataFormat:u,dilations:h,dimRoundingMode:p,activation:c,leakyreluAlpha:f}=r,m=k6({inputs:{x:n,filter:s},backend:a,attrs:{strides:l,pad:d,dataFormat:u,dilations:h,dimRoundingMode:p}});if(i){let g=m;m=tp({inputs:{a:m,b:i},backend:a}),a.disposeIntermediateTensorInfo(g)}if(c){let g=m;m=Py(a,m,c,o,f),a.disposeIntermediateTensorInfo(g)}return m}var Ij={kernelName:Cs,backendName:"cpu",kernelFunc:kj};function Sj(e){let{inputs:t,backend:a}=e,{params:r,indices:n}=t,s=w.sizeFromShape(r.shape),i=n.shape,o=i[i.length-1],[l,d,u,h]=N.prepareAndValidate(r,n);if(d===0)return a.makeTensorInfo(l,r.dtype,[]);let p=a.data.get(n.dataId).values,c=a.bufferSync(r),f=W7(p,c,r.dtype,d,o,u,h,r.shape,s);return a.makeTensorInfo(l,r.dtype,f.values)}var Tj={kernelName:zo,backendName:"cpu",kernelFunc:Sj};function Cj(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,indices:s}=t,{axis:i,batchDims:o}=r;Ce([n,s],"gatherV2");let l=w.parseAxisParam(i,n.shape)[0],d=a.data.get(s.dataId).values,u=n.shape[l];for(let b=0;b<d.length;++b){let v=d[b];w.assert(v<=u-1&&v>=0,()=>`GatherV2: the index value ${v} is not in [0, ${u-1}]`)}let h=o;o==null&&(h=0);let p=w.sizeFromShape(s.shape),c=N.segment_util.collectGatherOpShapeInfo(n,s,l,h),f=Et({inputs:{x:n},backend:a,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),m=Et({inputs:{x:s},backend:a,attrs:{shape:[c.batchSize,p/c.batchSize]}}),g=[c.batchSize,c.outerSize,p/c.batchSize,c.sliceSize],y=a.bufferSync(m),A=a.bufferSync(f),x=B7(A,y,g);return a.disposeIntermediateTensorInfo(f),a.disposeIntermediateTensorInfo(m),a.makeTensorInfo(c.outputShape,x.dtype,x.values)}var Nj={kernelName:_o,backendName:"cpu",kernelFunc:Cj};function Ej(e){let{inputs:t,backend:a}=e,{input:r}=t,n=w.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=n/s,o=Et({inputs:{x:r},backend:a,attrs:{shape:[i,s]}}),l=I6(o,!0,a),d=Et({inputs:{x:l},backend:a,attrs:{shape:r.shape}});return a.disposeIntermediateTensorInfo(o),a.disposeIntermediateTensorInfo(l),d}var Rj={kernelName:vf,backendName:"cpu",kernelFunc:Ej},Fj=dt(zu,e=>Number.isFinite(e)?1:0,"bool"),$j={kernelName:zu,backendName:"cpu",kernelFunc:Fj},Mj=dt(Ou,e=>Math.abs(e)===1/0?1:0,"bool"),_j={kernelName:Ou,backendName:"cpu",kernelFunc:Mj},zj=dt(Du,e=>Number.isNaN(e)?1:0,"bool"),Oj={kernelName:Du,backendName:"cpu",kernelFunc:zj};function Dj(e){let{backend:t,attrs:a}=e,{start:r,stop:n,num:s}=a,i=H7(r,n,s);return t.makeTensorInfo([i.length],"float32",i)}var Pj={kernelName:wf,backendName:"cpu",kernelFunc:Dj},Lj=dt(Pu,e=>Math.log1p(e)),Wj={kernelName:Pu,backendName:"cpu",kernelFunc:Lj},Bj=Zt((e,t)=>e&&t),Vj=fa(Lo,Bj,null,"bool"),Uj={kernelName:Lo,backendName:"cpu",kernelFunc:Vj},Gj=dt(Lu,e=>e?0:1,"bool"),jj={kernelName:Lu,backendName:"cpu",kernelFunc:Gj},Hj=Zt((e,t)=>e||t),qj=fa(wh,Hj,null,"bool"),Xj={kernelName:wh,backendName:"cpu",kernelFunc:qj};function Kj(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r;Ce(n,"LRN");let d=n.shape[3],u=d-1,h=a.data.get(n.dataId).values,p=w.sizeFromShape(n.shape),c=new Float32Array(p);function f(m){let g=m%d,y=m-g+Math.max(0,g-s),A=m-g+Math.min(g+s,u),x=0;for(;y<=A;y++){let b=h[y];x+=b*b}return x}for(let m=0;m<p;m++){let g=f(m),y=h[m]*Math.pow(i+o*g,-l);c[m]=y}return a.makeTensorInfo(n.shape,n.dtype,c)}var Zj={kernelName:kh,backendName:"cpu",kernelFunc:Kj};function Yj(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:d,beta:u}=r;Ce(i,"LRNGrad");let h=w.sizeFromShape(i.shape),p=i.shape[3],c=a.data.get(i.dataId).values,f=a.data.get(n.dataId).values,m=a.data.get(s.dataId).values,g=new Float32Array(h),y=h;for(let A=0;A<y;A++){let x=A%p,b=A-x+Math.max(0,x-o),v=A-x+Math.min(p,x+o+1),T=0;for(let C=b;C<v;C++)T+=Math.pow(f[C],2);T=d*T+l;for(let C=b;C<v;C++){let E=-2*d*u*f[C]*m[A]/T;A===C&&(E+=Math.pow(T,-u)),E*=c[A],g[C]+=E}}return a.makeTensorInfo(i.shape,n.dtype,g)}var Jj={kernelName:kf,backendName:"cpu",kernelFunc:Yj};function S6(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{reductionIndices:s,keepDims:i}=r,o=a,l=n.shape,d=l.length,u=w.parseAxisParam(s,l),h=u,p=N.getAxesPermutation(h,d),c=o.data.get(n.dataId).values;if(p!=null){let b=new Array(d);for(let v=0;v<b.length;v++)b[v]=l[p[v]];c=_y(c,l,n.dtype,p,b),h=N.getInnerMostAxes(h.length,d),l=b}Ce(n,"max"),N.assertAxesAreInnerMostDims("max",h,d);let[f,m]=N.computeOutAndReduceShapes(l,h),g=w.sizeFromShape(m),y=X7(c,g,f,n.dtype),A=o.write(y,f,n.dtype),x=f;return i&&(x=N.expandShapeToKeepDim(f,u)),{dataId:A,shape:x,dtype:n.dtype}}var Qj={kernelName:oi,backendName:"cpu",kernelFunc:S6};function eH(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t;Ce(n,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r,d=1;w.assert(N.eitherStridesOrDilationsAreOne(i,d),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`);let u=N.computePool2DInfo(n.shape,s,i,d,o,l),h;if(u.filterWidth===1&&u.filterHeight===1&&w.arraysEqual(u.inShape,u.outShape))h=vn({inputs:{x:n},backend:a});else{let p=a.data.get(n.dataId).values,c=w.computeStrides(n.shape),f=Ly(p,n.shape,n.dtype,c,u,"max");h=a.makeTensorInfo(u.outShape,n.dtype,f.values)}return h}var tH={kernelName:ui,backendName:"cpu",kernelFunc:eH};function aH(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:d}=r;Ce(n,"maxPool3d");let u=N.computePool3DInfo(n.shape,s,i,1,o,l,d),h=a.data.get(n.dataId).values,p=v6(h,n.shape,n.dtype,w.computeStrides(n.shape),u,"max");return a.makeTensorInfo(p.shape,"float32",p.values)}var rH={kernelName:Ih,backendName:"cpu",kernelFunc:aH};function nH(e){let{inputs:t,backend:a,attrs:r}=e,{dy:n,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:d}=r;Ce([n,s],"maxPool3DGrad");let u=N.computePool3DInfo(s.shape,i,o,1,l,d),h=a.bufferSync(s),p=qU(h,u),c=u.strideDepth,f=u.strideHeight,m=u.strideWidth,g=u.dilationDepth,y=u.dilationHeight,A=u.dilationWidth,x=u.effectiveFilterDepth,b=u.effectiveFilterHeight,v=u.effectiveFilterWidth,T=x-1-u.padInfo.front,C=v-1-u.padInfo.left,E=b-1-u.padInfo.top,R=Le(s.shape,"float32"),z=a.bufferSync(n);for(let F=0;F<u.batchSize;++F)for(let k=0;k<u.inChannels;++k)for(let D=0;D<u.inDepth;++D)for(let _=0;_<u.inHeight;++_)for(let P=0;P<u.inWidth;++P){let j=D-T,L=_-E,B=P-C,W=0;for(let ee=0;ee<x;ee+=g){let te=(j+ee)/c;if(!(te<0||te>=u.outDepth||Math.floor(te)!==te))for(let re=0;re<b;re+=y){let Y=(L+re)/f;if(!(Y<0||Y>=u.outHeight||Math.floor(Y)!==Y))for(let ae=0;ae<v;ae+=A){let le=(B+ae)/m;if(le<0||le>=u.outWidth||Math.floor(le)!==le)continue;let xe=x*b*v-1-p.get(F,te,Y,le,k),ye=ee*b*v+re*v+ae,ke=xe===ye?1:0;ke!==0&&(W+=z.get(F,te,Y,le,k)*ke)}}}R.set(W,F,D,_,P,k)}return a.makeTensorInfo(R.shape,R.dtype,R.values)}var sH={kernelName:Sf,backendName:"cpu",kernelFunc:nH};function iH(e){let{inputs:t,backend:a,attrs:r}=e,{dy:n,input:s,output:i}=t,o=s;Ce([s,i],"maxPoolGrad");let{filterSize:l,strides:d,pad:u,dimRoundingMode:h}=r,p=N.computePool2DInfo(o.shape,l,d,1,u,h),c=a.data.get(o.dataId).values,f=Le(p.outShape,o.dtype,b6(c,o.shape,o.dtype,p).values),m=p.strideHeight,g=p.strideWidth,y=p.dilationHeight,A=p.dilationWidth,x=p.effectiveFilterHeight,b=p.effectiveFilterWidth,v=b-1-p.padInfo.left,T=x-1-p.padInfo.top,C=Le(o.shape,"float32"),E=a.data.get(n.dataId).values,R=Le(n.shape,"float32",E);for(let z=0;z<p.batchSize;++z)for(let F=0;F<p.inChannels;++F)for(let k=0;k<p.inHeight;++k)for(let D=0;D<p.inWidth;++D){let _=k-T,P=D-v,j=0;for(let L=0;L<x;L+=y){let B=(_+L)/m;if(!(B<0||B>=p.outHeight||Math.floor(B)!==B))for(let W=0;W<b;W+=A){let ee=(P+W)/g;if(ee<0||ee>=p.outWidth||Math.floor(ee)!==ee)continue;let te=x*b-1-f.get(z,B,ee,F),re=L*b+W,Y=te===re?1:0;Y!==0&&(j+=R.get(z,B,ee,F)*Y)}}C.set(j,z,k,D,F)}return a.makeTensorInfo(C.shape,C.dtype,C.values)}var oH={kernelName:If,backendName:"cpu",kernelFunc:iH};function lH(e,t,a,r,n){let s=w.computeStrides(t),i=Ly(e,t,a,s,n,"max"),o=b6(e,t,a,n,!0,r);return[i.values,o.values]}var uH={kernelName:Tf,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:a})=>{let{x:r}=e,{filterSize:n,strides:s,pad:i,includeBatchInIndex:o}=t,l=a;Ce(r,"MaxPoolWithArgmax");let d=l.data.get(r.dataId).values,u=N.computePool2DInfo(r.shape,n,s,[1,1],i),[h,p]=lH(d,r.shape,r.dtype,o,u),c=l.write(h,u.outShape,r.dtype),f=l.write(p,u.outShape,r.dtype);return[{dataId:c,shape:u.outShape,dtype:r.dtype},{dataId:f,shape:u.outShape,dtype:"int32"}]}};function dH(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{axis:s,keepDims:i}=r,o=w.parseAxisParam(s,n.shape),l=N.computeOutAndReduceShapes(n.shape,o)[1],d=w.sizeFromShape(l),u=[],h=a.makeTensorInfo([],"float32",new Float32Array([d]));u.push(h);let p=Ps({inputs:{x:n},backend:a,attrs:{dtype:"float32"}});u.push(p);let c=Wy({inputs:{a:p,b:h},backend:a});u.push(c);let f=ap({inputs:{x:c},backend:a,attrs:{axis:s,keepDims:i}});return u.forEach(m=>a.disposeIntermediateTensorInfo(m)),f}var hH={kernelName:di,backendName:"cpu",kernelFunc:dH};function pH(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{axis:s,keepDims:i}=r;Ce(n,"min");let o=w.parseAxisParam(s,n.shape),l=o,d=N.getAxesPermutation(l,n.shape.length),u=n;d!=null&&(u=Sr({inputs:{x:n},backend:a,attrs:{perm:d}}),l=N.getInnerMostAxes(l.length,n.shape.length)),N.assertAxesAreInnerMostDims("min",l,u.shape.length);let[h,p]=N.computeOutAndReduceShapes(u.shape,l),c=w.sizeFromShape(p),f=w.makeZerosTypedArray(w.sizeFromShape(h),u.dtype),m=a.data.get(u.dataId).values;for(let y=0;y<f.length;++y){let A=y*c,x=m[A];for(let b=0;b<c;++b){let v=m[A+b];(Number.isNaN(v)||v<x)&&(x=v)}f[y]=x}d!=null&&a.disposeIntermediateTensorInfo(u);let g=a.makeTensorInfo(h,u.dtype,f);if(i){let y=N.expandShapeToKeepDim(h,o),A=Et({inputs:{x:g},backend:a,attrs:{shape:y}});return a.disposeIntermediateTensorInfo(g),A}return g}var cH={kernelName:hi,backendName:"cpu",kernelFunc:pH};function fH(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{paddings:s,mode:i}=r;Ce(n,"mirrorPad");let o=s.map((A,x)=>A[0]+n.shape[x]+A[1]),l=s.map(A=>A[0]),d=s.map((A,x)=>A[0]+n.shape[x]),u=i==="reflect"?0:1,h=a.data.get(n.dataId).values,p=n.shape.length,c=w.computeStrides(n.shape),f=w.sizeFromShape(o),m=o.length,g=w.computeStrides(o),y=w.getTypedArrayFromDType(n.dtype,f);for(let A=0;A<f;A++){let x=w.indexToLoc(A,m,g);for(let v=0;v<m;v++)x[v]<l[v]?x[v]=l[v]*2-x[v]-u:x[v]>=d[v]&&(x[v]=(d[v]-1)*2-x[v]+u);x=x.map((v,T)=>v-l[T]);let b=w.locToIndex(x,p,c);y[A]=h[b]}return{dataId:a.write(y,o,n.dtype),shape:o,dtype:n.dtype}}var mH={kernelName:ci,backendName:"cpu",kernelFunc:fH},gH=Zt((e,t)=>{let a=e%t;return e<0&&t<0||e>=0&&t>=0?a:(a+t)%t}),yH=fa(Wu,gH),AH={kernelName:Wu,backendName:"cpu",kernelFunc:yH},xH=wo(nf());function T6(e){let{inputs:t,backend:a,attrs:r}=e,{logits:n}=t,{dim:s}=r,i=n.shape.length,o=s;if(o===-1&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);let l=w.parseAxisParam([o],n.shape),d=S6({inputs:{x:n},backend:a,attrs:{reductionIndices:l,keepDims:!1}}),u=N.expandShapeToKeepDim(d.shape,l),h=Et({inputs:{x:d},backend:a,attrs:{shape:u}}),p=Dy({inputs:{a:n,b:h},backend:a}),c=D7({inputs:{x:p},backend:a}),f=ap({inputs:{x:c},backend:a,attrs:{axis:l,keepDims:!1}}),m=Et({inputs:{x:f},backend:a,attrs:{shape:u}}),g=Wy({inputs:{a:c,b:m},backend:a});return a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(f),a.disposeIntermediateTensorInfo(m),g}var bH={kernelName:Ti,backendName:"cpu",kernelFunc:T6};function vH(e){let{inputs:t,backend:a,attrs:r}=e,{logits:n}=t,{numSamples:s,seed:i,normalized:o}=r;Ce(n,"multinomial");let l=o?n:T6({inputs:{logits:n},backend:a,attrs:{dim:-1}}),d=l.shape[0],u=l.shape[1],h=a.data.get(l.dataId).values,p=[d,s],c=w.makeZerosTypedArray(w.sizeFromShape(p),"int32");for(let f=0;f<d;++f){let m=f*u,g=new Float32Array(u-1);g[0]=h[m];for(let x=1;x<g.length;++x)g[x]=g[x-1]+h[m+x];let y=xH.alea(i.toString()),A=f*s;for(let x=0;x<s;++x){let b=y();c[A+x]=g.length;for(let v=0;v<g.length;v++)if(b<g[v]){c[A+x]=v;break}}}return o||a.disposeIntermediateTensorInfo(l),a.makeTensorInfo(p,"int32",c)}var wH={kernelName:Cf,backendName:"cpu",kernelFunc:vH},kH=Pr.nonMaxSuppressionV3Impl;function IH(e){let{inputs:t,backend:a,attrs:r}=e,{boxes:n,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r;Ce(n,"NonMaxSuppression");let d=a.data.get(n.dataId).values,u=a.data.get(s.dataId).values,{selectedIndices:h}=kH(d,u,i,o,l);return a.makeTensorInfo([h.length],"int32",new Int32Array(h))}var SH={kernelName:Vo,backendName:"cpu",kernelFunc:IH},TH=Pr.nonMaxSuppressionV4Impl;function CH(e){let{inputs:t,backend:a,attrs:r}=e,{boxes:n,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:d}=r;Ce(n,"NonMaxSuppressionPadded");let u=a.data.get(n.dataId).values,h=a.data.get(s.dataId).values,{selectedIndices:p,validOutputs:c}=TH(u,h,i,o,l,d);return[a.makeTensorInfo([p.length],"int32",new Int32Array(p)),a.makeTensorInfo([],"int32",new Int32Array([c]))]}var NH={kernelName:Bu,backendName:"cpu",kernelFunc:CH},EH=Pr.nonMaxSuppressionV5Impl;function RH(e){let{inputs:t,backend:a,attrs:r}=e,{boxes:n,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:d}=r;Ce(n,"NonMaxSuppressionWithScore");let u=a.data.get(n.dataId).values,h=a.data.get(s.dataId).values,p=i,c=o,f=l,m=d,{selectedIndices:g,selectedScores:y}=EH(u,h,p,c,f,m);return[a.makeTensorInfo([g.length],"int32",new Int32Array(g)),a.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var FH={kernelName:Uo,backendName:"cpu",kernelFunc:RH};function $H(e){let{inputs:t,backend:a,attrs:r}=e,{indices:n}=t,{depth:s,onValue:i,offValue:o}=r;Ce(n,"oneHot");let l=w.sizeFromShape(n.shape),d=new Float32Array(l*s);d.fill(o);let u=a.data.get(n.dataId).values;for(let h=0;h<l;++h)u[h]>=0&&u[h]<s&&(d[h*s+u[h]]=i);return a.makeTensorInfo([...n.shape,s],"int32",d)}var MH={kernelName:jo,backendName:"cpu",kernelFunc:$H};function qc(e){let{inputs:t,backend:a}=e,{x:r}=t;if(r.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(r.dtype==="complex64"){let n=mo({inputs:{input:r},backend:a}),s=qc({inputs:{x:n},backend:a}),i=mu({inputs:{input:r},backend:a}),o=qc({inputs:{x:i},backend:a}),l=lr({inputs:{real:s,imag:o},backend:a});return a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(o),l}else return By({backend:a,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}var _H={kernelName:ll,backendName:"cpu",kernelFunc:qc};function C6(e){let{inputs:t,backend:a}=e,{x:r}=t;if(r.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(r.dtype==="complex64"){let n=mo({inputs:{input:r},backend:a}),s=C6({inputs:{x:n},backend:a}),i=mu({inputs:{input:r},backend:a}),o=qc({inputs:{x:i},backend:a}),l=lr({inputs:{real:s,imag:o},backend:a});return a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(o),l}else return By({backend:a,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}var zH={kernelName:Go,backendName:"cpu",kernelFunc:C6};function N6(e){let{inputs:t,backend:a,attrs:r}=e,{axis:n}=r;if(t.length===1)return Hc({inputs:{input:t[0]},backend:a,attrs:{dim:n}});let s=t[0].shape,i=t[0].dtype;t.forEach(u=>{w.assertShapesMatch(s,u.shape,"All tensors passed to stack must have matching shapes"),w.assert(i===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=t.map(u=>{let h=Hc({inputs:{input:u},backend:a,attrs:{dim:n}});return o.push(h),h}),d=gu({inputs:l,backend:a,attrs:{axis:n}});return o.forEach(u=>a.disposeIntermediateTensorInfo(u)),d}var OH={kernelName:Ho,backendName:"cpu",kernelFunc:N6};function DH(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{paddings:s,constantValue:i}=r;Ce(n,"pad");let o=s.map((y,A)=>y[0]+n.shape[A]+y[1]),l=s.map(y=>y[0]),d=a.data.get(n.dataId).values,u=w.sizeFromShape(n.shape),h=n.shape.length,p=w.computeStrides(n.shape),c=w.sizeFromShape(o),f=o.length,m=w.computeStrides(o),g=w.getTypedArrayFromDType(n.dtype,c);i!==0&&g.fill(i);for(let y=0;y<u;y++){let A=w.indexToLoc(y,h,p).map((b,v)=>b+l[v]),x=w.locToIndex(A,f,m);g[x]=d[y]}return{dataId:a.write(g,o,n.dtype),shape:o,dtype:n.dtype}}var E6={kernelName:mi,backendName:"cpu",kernelFunc:DH},PH=Zt((e,t)=>Math.pow(e,t)),LH=fa(gi,PH),WH={kernelName:gi,backendName:"cpu",kernelFunc:LH};function BH(e){let{backend:t,attrs:a}=e,{start:r,stop:n,dtype:s,step:i}=a,o=zy(r,n,i,s);return t.makeTensorInfo([o.length],s,o)}var VH={kernelName:Vu,backendName:"cpu",kernelFunc:BH},UH=dt(Uu,e=>1/e),GH={kernelName:Uu,backendName:"cpu",kernelFunc:UH};function jH(e){let{inputs:t,backend:a,attrs:r}=e,{images:n}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;Ce(n,"resizeBilinear");let l=w.computeStrides(n.shape),[d,u]=o,[h,p,c,f]=n.shape,m=a.data.get(n.dataId).values,g=new Float32Array(w.sizeFromShape([h,d,u,f])),y=[s&&d>1?p-1:p,s&&u>1?c-1:c],A=[s&&d>1?d-1:d,s&&u>1?u-1:u],x=0,b=y[0]/A[0],v=y[1]/A[1];for(let T=0;T<h;T++)for(let C=0;C<d;C++){let E;i?E=b*(C+.5)-.5:E=b*C;let R=Math.max(0,Math.floor(E)),z=E-R,F=Math.min(p-1,Math.ceil(E)),k=T*l[0]+R*l[1],D=T*l[0]+F*l[1];for(let _=0;_<u;_++){let P;i?P=v*(_+.5)-.5:P=v*_;let j=Math.max(0,Math.floor(P)),L=P-j,B=Math.min(c-1,Math.ceil(P)),W=k+j*l[2],ee=D+j*l[2],te=k+B*l[2],re=D+B*l[2];for(let Y=0;Y<f;Y++){let ae=m[W+Y],le=m[ee+Y],xe=m[te+Y],ye=m[re+Y],ke=ae+(xe-ae)*L,Ee=le+(ye-le)*L,Me=ke+(Ee-ke)*z;g[x++]=Me}}}return a.makeTensorInfo([h,d,u,f],"float32",g)}var HH={kernelName:xi,backendName:"cpu",kernelFunc:jH};function qH(e){let{inputs:t,backend:a,attrs:r}=e,{images:n,dy:s}=t,{alignCorners:i}=r;Ce([s,n],"resizeBilinearGrad");let o=w.computeStrides(n.shape),[l,d,u,h]=n.shape,[,p,c]=s.shape,f=new Float32Array(l*d*u*h),m=[i&&p>1?d-1:d,i&&c>1?u-1:u],g=[i&&p>1?p-1:p,i&&c>1?c-1:c],y=m[0]/g[0],A=m[1]/g[1],x=a.data.get(s.dataId).values,b=0;for(let v=0;v<l;v++){let T=v*o[0];for(let C=0;C<p;C++){let E=C*y,R=Math.floor(E),z=Math.min(Math.ceil(E),d-1),F=T+R*o[1],k=T+z*o[1],D=E-R,_=1-D;for(let P=0;P<c;P++){let j=P*A,L=Math.floor(j),B=Math.min(Math.ceil(j),u-1),W=j-L,ee=1-W,te=F+L*o[2],re=F+B*o[2],Y=k+L*o[2],ae=k+B*o[2],le=_*ee,xe=_*W,ye=D*ee,ke=D*W;for(let Ee=0;Ee<h;Ee++){let Me=x[b++];f[te+Ee]+=Me*le,f[re+Ee]+=Me*xe,f[Y+Ee]+=Me*ye,f[ae+Ee]+=Me*ke}}}}return a.makeTensorInfo([l,u,d,h],"float32",f)}var XH={kernelName:Ef,backendName:"cpu",kernelFunc:qH};function KH(e){let{inputs:t,backend:a,attrs:r}=e,{images:n}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;Ce(n,"resizeNearestNeighbor");let l=w.computeStrides(n.shape),[d,u]=o,[h,p,c,f]=n.shape,m=a.data.get(n.dataId).values,g=new Float32Array(h*d*u*f),y=[s&&d>1?p-1:p,s&&u>1?c-1:c],A=[s&&d>1?d-1:d,s&&u>1?u-1:u],x=y[0]/A[0],b=y[1]/A[1],v=0;for(let T=0;T<h;T++){let C=T*l[0];for(let E=0;E<d;E++){let R=i?x*(E+.5):x*E,z=Math.min(p-1,s?Math.round(R):Math.floor(R));i&&(z=Math.max(0,z));let F=C+z*l[1];for(let k=0;k<u;k++){let D=i?b*(k+.5):b*k,_=Math.min(c-1,s?Math.round(D):Math.floor(D));i&&(_=Math.max(0,_));let P=F+_*l[2];for(let j=0;j<f;j++){let L=m[P+j];g[v++]=L}}}}return a.makeTensorInfo([h,d,u,f],n.dtype,g)}var ZH={kernelName:Gu,backendName:"cpu",kernelFunc:KH};function YH(e){let{inputs:t,backend:a,attrs:r}=e,{images:n,dy:s}=t,{alignCorners:i}=r;Ce([s,n],"resizeNearestNeighborGrad");let o=w.computeStrides(n.shape),l=w.computeStrides(s.shape),[d,u,h,p]=n.shape,[,c,f]=s.shape,m=new Float32Array(d*u*h*p),g=a.data.get(s.dataId).values,y=[i&&c>1?u-1:u,i&&f>1?h-1:h],A=[i&&c>1?c-1:c,i&&f>1?f-1:f],x=y[0]/A[0],b=y[1]/A[1],v=1/x,T=1/b,C=Math.ceil(v)*2+2,E=Math.ceil(T)*2+2;for(let R=0;R<d;R++){let z=R*o[0];for(let F=0;F<u;F++){let k=z+F*o[1],D=Math.floor(F*v),_=Math.floor(D-C/2);for(let P=0;P<h;P++){let j=k+P*o[2],L=Math.floor(P*T),B=Math.floor(L-E/2);for(let W=0;W<p;W++){let ee=0;for(let te=0;te<C;te++){let re=te+_;if(re<0||re>=c)continue;let Y=z+re*l[1],ae=re*x,le=Math.min(u-1,i?Math.round(ae):Math.floor(ae));if(F===le)for(let xe=0;xe<E;xe++){let ye=xe+B;if(ye<0||ye>=f)continue;let ke=Y+ye*l[2],Ee=ye*b,Me=Math.min(h-1,i?Math.round(Ee):Math.floor(Ee));P===Me&&(ee+=g[ke+W])}}m[j+W]=ee}}}}return a.makeTensorInfo(n.shape,n.dtype,m)}var JH={kernelName:Nf,backendName:"cpu",kernelFunc:YH};function QH(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{dims:s}=r;Ce(n,"reverse");let i=n.shape.length,o=w.parseAxisParam(s,n.shape);if(i===0)return vn({inputs:{x:n},backend:a});let l=new aa(n.shape,n.dtype),d=a.bufferSync(n);for(let u=0;u<l.size;u++){let h=l.indexToLoc(u),p=h.slice();o.forEach(c=>p[c]=n.shape[c]-1-p[c]),l.set(d.get(...p),...h)}return a.makeTensorInfo(l.shape,l.dtype,l.values)}var eq={kernelName:Ko,backendName:"cpu",kernelFunc:QH},tq={kernelName:ul,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:a})=>{let{image:r}=e,{radians:n,fillValue:s,center:i}=t,o=a,l=w.getTypedArrayFromDType(r.dtype,w.sizeFromShape(r.shape)),[d,u,h,p]=r.shape,[c,f]=N.getImageCenter(i,u,h),m=255,g=Math.sin(n),y=Math.cos(n),A=o.data.get(r.dataId).values;for(let x=0;x<d;x++){let b=x*h*u*p;for(let v=0;v<u;v++){let T=v*(h*p);for(let C=0;C<h;C++){let E=C*p;for(let R=0;R<p;R++){let z=[d,v,C,R],F=z[2],k=z[1],D=(F-c)*y-(k-f)*g,_=(F-c)*g+(k-f)*y;D=Math.round(D+c),_=Math.round(_+f);let P=s;if(typeof s!="number"&&(R===3?P=m:P=s[R]),D>=0&&D<h&&_>=0&&_<u){let L=_*(h*p),B=D*p,W=b+L+B+R;P=A[W]}let j=b+T+E+R;l[j]=P}}}}return{dataId:o.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},aq=dt(Zo,e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1}),rq={kernelName:Zo,backendName:"cpu",kernelFunc:aq};function R6(e,t,a,r,n,s,i,o,l,d){let u=[r/n,n],h=e.values,p=t.values;if(r===0)return Le(a,t.dtype);let c=Le(u,t.dtype);c.values.fill(l);for(let f=0;f<s;f++){let m=[],g=0;for(let y=0;y<i;y++){let A=h[f*i+y];m.push(A),g+=A*o[y]}if(g<0||g>=r/n)throw new Error(`Invalid indices: ${m} does not index into ${a}`);for(let y=0;y<n;y++)d?c.values[g*n+y]+=p[f*n+y]:c.values[g*n+y]=t.rank===0?p[0]:p[f*n+y]}return c}function nq(e){let{inputs:t,backend:a,attrs:r}=e,{indices:n,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:d,strides:u,outputSize:h}=N.calculateShapes(s,n,i),p=!0,c=a.bufferSync(n),f=a.bufferSync(s),m=R6(c,f,i,h,d,l,o,u,0,p);return a.makeTensorInfo(i,m.dtype,m.values)}var sq={kernelName:Yo,backendName:"cpu",kernelFunc:nq};function iq(e){let{inputs:t,backend:a}=e,{condition:r,t:n,e:s}=t;Ce([r,n,s],"select");let i=r.shape.length,o=a.data.get(r.dataId).values,l=a.data.get(n.dataId).values,d=a.data.get(s.dataId).values,u=$a(n.dtype,s.dtype),h=w.makeZerosTypedArray(w.sizeFromShape(n.shape),u),p=0,c=i===0||i>1||n.shape.length===1?1:w.sizeFromShape(n.shape.slice(1));for(let f=0;f<o.length;f++)for(let m=0;m<c;m++)o[f]===1?h[p++]=l[f]:h[p++]=d[f];return a.makeTensorInfo(n.shape,u,h)}var oq={kernelName:Jo,backendName:"cpu",kernelFunc:iq},lq=N.SELU_SCALEALPHA,uq=N.SELU_SCALE,dq=dt(ju,e=>e>=0?uq*e:lq*(Math.exp(e)-1)),hq={kernelName:ju,backendName:"cpu",kernelFunc:dq},pq=dt(Hu,e=>e<0?-1:e>0?1:0),cq={kernelName:Hu,backendName:"cpu",kernelFunc:pq},fq=dt(wi,e=>Math.sin(e)),mq={kernelName:wi,backendName:"cpu",kernelFunc:fq},gq=dt(el,e=>Math.sinh(e)),yq={kernelName:el,backendName:"cpu",kernelFunc:gq},Aq=11920928955078125e-23,Ux=Math.log(Aq)+2,xq=dt(qu,e=>{let t=e>-Ux,a=e<Ux,r=Math.exp(e),n;return a?n=r:t?n=e:n=Math.log(1+r),n}),bq={kernelName:qu,backendName:"cpu",kernelFunc:xq};function vq(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{blockShape:s,paddings:i}=r;Ce([n],"spaceToBatchND");let o=w.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let g=1+s.length;g<n.shape.length;++g)l.push([0,0]);let d=E6.kernelFunc({inputs:{x:n},backend:a,attrs:{paddings:l,constantValue:0}}),u=N.getReshaped(d.shape,s,o,!1),h=N.getPermuted(u.length,s.length,!1),p=N.getReshapedPermuted(d.shape,s,o,!1),c=Et({inputs:{x:d},backend:a,attrs:{shape:u}}),f=Sr({inputs:{x:c},backend:a,attrs:{perm:h}}),m=Et({inputs:{x:f},backend:a,attrs:{shape:p}});return a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(f),m}var wq={kernelName:tl,backendName:"cpu",kernelFunc:vq};function kq(e){let{inputs:t,backend:a}=e,{indices:r,values:n,denseShape:s,defaultValue:i}=t;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${s.shape}`);if(r.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${r.shape}`);if(n.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${n.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let o=a.data.get(r.dataId).values,l=a.data.get(n.dataId).values,d=a.data.get(s.dataId).values,u=a.data.get(i.dataId).values[0],[h,p,c,f,m]=a6(o,r.shape,r.dtype,l,n.dtype,d,u);return[a.makeTensorInfo(p,r.dtype,h),a.makeTensorInfo([p[0]],n.dtype,c),a.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),a.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}var Iq={kernelName:Th,backendName:"cpu",kernelFunc:kq};function Sq(e){let{inputs:t,backend:a}=e,{inputIndices:r,inputShape:n,newShape:s}=t;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${r.shape}`);if(n.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${n.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(a.data.get(n.dataId).values),o=a.data.get(r.dataId).values,l=Array.from(a.data.get(s.dataId).values),[d,u,h]=r6(o,r.shape,r.dtype,i,l);return[a.makeTensorInfo(u,r.dtype,d),a.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}var Tq={kernelName:Xu,backendName:"cpu",kernelFunc:Sq};function Cq(e){let{inputs:t,backend:a}=e,{data:r,indices:n,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(n.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${n.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${s.shape}`);if(n.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=a.data.get(r.dataId).values,o=a.data.get(n.dataId).values,l=a.data.get(s.dataId).values,[d,u]=Oy(i,r.shape,r.dtype,o,l,!0);return a.makeTensorInfo(u,r.dtype,d)}var Nq={kernelName:Ch,backendName:"cpu",kernelFunc:Cq};function Eq(e){let{inputs:t,backend:a}=e,{data:r,indices:n,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(n.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${n.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${s.shape}`);if(n.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=a.data.get(r.dataId).values,o=a.data.get(n.dataId).values,l=a.data.get(s.dataId).values,[d,u]=Oy(i,r.shape,r.dtype,o,l);return a.makeTensorInfo(u,r.dtype,d)}var Rq={kernelName:Nh,backendName:"cpu",kernelFunc:Eq};function Fq(e){let{inputs:t,backend:a,attrs:r}=e,{sparseIndices:n,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:d,sliceSize:u,strides:h,outputSize:p}=N.calculateShapes(s,n,o),c=!1,f=a.bufferSync(n),m=a.bufferSync(s),g=a.data.get(i.dataId).values[0],y=R6(f,m,o,p,u,d,l,h,g,c);return a.makeTensorInfo(o,y.dtype,y.values)}var $q={kernelName:Eh,backendName:"cpu",kernelFunc:Fq};function Mq(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{numOrSizeSplits:s,axis:i}=r,o=w.parseAxisParam(i,n.shape)[0],l=N.prepareSplitSize(n,s,o),d=new Array(n.shape.length).fill(0),u=n.shape.slice();return l.map(h=>{let p=[...u];p[o]=h;let c=go({inputs:{x:n},backend:a,attrs:{begin:d,size:p}});return d[o]+=h,c})}var _q={kernelName:al,backendName:"cpu",kernelFunc:Mq},zq={kernelName:Ku,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:a}=e,r=t;Ce(a,"square");let n=r.data.get(a.dataId).values,s=new Float32Array(n.length);for(let i=0;i<n.length;++i){let o=n[i];s[i]=o*o}return{dataId:r.write(s,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},Oq=dt(Fi,(e,t)=>{let a=t;return isNaN(e)?NaN:e>0?1:a.alpha}),Dq={kernelName:Fi,backendName:"cpu",kernelFunc:Oq};function Pq(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:d,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:p}=r;Ce(n,"stridedSlice");let{finalShapeSparse:c,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:A,end:x,strides:b}=Ft.sliceInfo(n.shape,s,i,o,l,d,u,h,p),v;if(m)v=Et({inputs:{x:n},backend:a,attrs:{shape:f}});else if(g||y){w.assert(n.shape.length>=1,()=>`Input must have rank at least 1, got: ${n.shape.length}`);let T=Ft.computeOutShape(A,x,b),C=go({inputs:{x:n},backend:a,attrs:{begin:A,size:T}});v=Et({inputs:{x:C},backend:a,attrs:{shape:f}}),a.disposeIntermediateTensorInfo(C)}else{let T=a.bufferSync(n),C=s6(c,T,b,A);v=a.makeTensorInfo(f,C.dtype,C.values)}return v}var Lq={kernelName:rl,backendName:"cpu",kernelFunc:Pq};function Wq(e){let{inputs:t,backend:a,attrs:r}=e,{separator:n,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:d}=r,{data:u,dataSplits:h}=t,p=a.data.get(u.dataId).values,c=a.data.get(h.dataId).values,[f,m]=i6(p,c,n,s,i,o,l,d);return[a.makeTensorInfo([f.length],"string",f),a.makeTensorInfo(h.shape,"int32",m)]}var Bq={kernelName:Rh,backendName:"cpu",kernelFunc:Wq};function Vq(e){let{inputs:t,backend:a,attrs:r}=e,{skipEmpty:n}=r,{input:s,delimiter:i}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=a.data.get(s.dataId).values,l=a.data.get(i.dataId).values[0],[d,u,h]=o6(o,l,n),p=u.length;return[a.makeTensorInfo([p,2],"int32",d),a.makeTensorInfo([p],"string",u),a.makeTensorInfo([2],"int32",new Int32Array(h))]}var Uq={kernelName:Rf,backendName:"cpu",kernelFunc:Vq};function Gq(e){let{inputs:t,backend:a,attrs:r}=e,{numBuckets:n}=r,{input:s}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(n<=0)throw new Error("Number of buckets must be at least 1");let i=a.data.get(s.dataId).values,o=l6(i,n);return a.makeTensorInfo(s.shape,"int32",o)}var jq={kernelName:Ff,backendName:"cpu",kernelFunc:Gq},Hq=dt(nl,e=>Math.tan(e)),qq={kernelName:nl,backendName:"cpu",kernelFunc:Hq},Xq=dt(Ei,e=>Math.tanh(e)),Kq={kernelName:Ei,backendName:"cpu",kernelFunc:Xq};function Zq(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{reps:s}=r;Ce(n,"tile");let i=d6(a.bufferSync(n),s);return a.makeTensorInfo(i.shape,i.dtype,i.values)}var Yq={kernelName:Kn,backendName:"cpu",kernelFunc:Zq};function Jq(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{k:s,sorted:i}=r;Ce(n,"topk");let o=a.data.get(n.dataId).values,[l,d]=p6(o,n.shape,n.dtype,s,i);return[a.makeTensorInfo(l.shape,l.dtype,l.values),a.makeTensorInfo(d.shape,d.dtype,d.values)]}var Qq={kernelName:sl,backendName:"cpu",kernelFunc:Jq};function eX(e){let{inputs:t,attrs:a,backend:r}=e,{image:n,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:d}=a,[u,h,p,c]=n.shape,[f,m]=d!=null?d:[h,p],g=[u,f,m,c],y=w.computeStrides(n.shape),A=y[0],x=y[1],b=y[2],v=w.getTypedArrayFromDType(n.dtype,w.sizeFromShape(g));v.fill(l);let T=r.data.get(n.dataId).values,C=r.data.get(s.dataId).values;for(let E=0;E<u;++E){let R=s.shape[0]===1?C:C.subarray(E*8,E*8+8);for(let z=0;z<f;++z)for(let F=0;F<m;++F)for(let k=0;k<c;++k){let D,_=R[6]*F+R[7]*z+1;if(_===0)continue;let P=(R[0]*F+R[1]*z+R[2])/_,j=(R[3]*F+R[4]*z+R[5])/_,L=Gx(P,p,o),B=Gx(j,h,o);switch(i){case"nearest":D=iX(T,h,p,A,x,b,E,B,L,k,l);break;case"bilinear":D=oX(T,h,p,A,x,b,E,B,L,k,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}let W=E*A+z*x+F*b+k;v[W]=D}return r.makeTensorInfo(g,n.dtype,v)}return{dataId:r.write(v,g,n.dtype),shape:n.shape,dtype:n.dtype}}var tX={kernelName:il,backendName:"cpu",kernelFunc:eX};function Gx(e,t,a){switch(a){case"reflect":return aX(e,t);case"wrap":return rX(e,t);case"nearest":return sX(e,t);case"constant":default:return nX(e)}}function aX(e,t){let a=e;if(a<0)if(t<=1)a=0;else{let r=2*t;a<r&&(a=r*Math.trunc(-a/r)+a),a=a<-t?a+r:-a-1}else if(a>t-1)if(t<=1)a=0;else{let r=2*t;a-=r*Math.trunc(a/r),a>=t&&(a=r-a-1)}return w.clamp(0,a,t-1)}function rX(e,t){let a=e;if(a<0)if(t<=1)a=0;else{let r=t-1;a+=t*(Math.trunc(-a/r)+1)}else if(a>t-1)if(t<=1)a=0;else{let r=t-1;a-=t*Math.trunc(a/r)}return w.clamp(0,a,t-1)}function nX(e,t){return e}function sX(e,t){return w.clamp(0,e,t-1)}function Ld(e,t,a,r,n,s,i,o,l,d,u){let h=i*r+o*n+l*s+d;return 0<=o&&o<t&&0<=l&&l<a?e[h]:u}function iX(e,t,a,r,n,s,i,o,l,d,u){let h=Math.round(o),p=Math.round(l);return Ld(e,t,a,r,n,s,i,h,p,d,u)}function oX(e,t,a,r,n,s,i,o,l,d,u){let h=Math.floor(o),p=Math.floor(l),c=h+1,f=p+1,m=(f-l)*Ld(e,t,a,r,n,s,i,h,p,d,u)+(l-p)*Ld(e,t,a,r,n,s,i,h,f,d,u),g=(f-l)*Ld(e,t,a,r,n,s,i,c,p,d,u)+(l-p)*Ld(e,t,a,r,n,s,i,c,f,d,u);return(c-o)*m+(o-h)*g}function lX(e){let{inputs:t,attrs:a,backend:r}=e,{axis:n}=a,{x:s}=t;Ce(s,"unique");let i=r.data.get(s.dataId).values,{outputValues:o,outputShape:l,indices:d}=c6(i,n,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([d.length],"int32",d)]}var uX={kernelName:$f,backendName:"cpu",kernelFunc:lX};function dX(e){let{inputs:t,backend:a,attrs:r}=e,{value:n}=t,{axis:s}=r;s<0&&(s+=n.shape.length);let i=n.shape.length,o=n.shape[s],l=new Array(i-1),d=0;for(let c=0;c<i;c++)c!==s&&(l[d++]=n.shape[c]);let u=new Array(i).fill(0),h=n.shape.slice();h[s]=1;let p=new Array(o);for(let c=0;c<p.length;c++){u[s]=c;let f=go({inputs:{x:n},backend:a,attrs:{begin:u,size:h}});p[c]=Et({inputs:{x:f},backend:a,attrs:{shape:l}}),a.disposeIntermediateTensorInfo(f)}return p}var hX={kernelName:ol,backendName:"cpu",kernelFunc:dX};function pX(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,segmentIds:s}=t,{numSegments:i}=r;Ce(n,"unsortedSegmentSum");let o=n.shape.length,l=s.shape.length,d=[],u=[],h=o-l,p=s;for(let f=0;f<h;++f){let m=Hc({inputs:{input:p},backend:a,attrs:{dim:f+1}});p=m,u.push(m)}for(let f=0;f<i;++f){let m=w.createScalarValue(f,"int32"),g=a.makeTensorInfo([],"int32",m),y=z7({inputs:{a:g,b:p},backend:a}),A=Ps({inputs:{x:y},backend:a,attrs:{dtype:"float32"}}),x=$0({inputs:{a:A,b:n},backend:a}),b=ap({inputs:{x},backend:a,attrs:{axis:0,keepDims:!1}});d.push(b),u.push(g),u.push(y),u.push(A),u.push(x),u.push(b)}let c=N6({inputs:d,backend:a,attrs:{axis:0}});return u.forEach(f=>a.disposeIntermediateTensorInfo(f)),c}var cX={kernelName:Fh,backendName:"cpu",kernelFunc:pX},fX=[vU,cV,kU,SU,xV,CU,EU,FU,MU,zU,DU,LU,BU,GU,HU,KU,YU,QU,tG,xU,rG,sG,oG,uG,yV,vV,hG,fV,cG,mG,gG,AG,bG,wG,IG,TG,NG,RG,$G,_G,OG,PG,LG,BG,UG,jG,HG,qG,XG,YG,pU,QG,wV,oj,kV,lj,SV,fj,mj,yj,CV,bj,wj,Ij,Tj,Nj,EV,FV,mV,Rj,fG,$j,_j,Oj,cU,MV,zV,Pj,DV,Wj,Uj,jj,Xj,Zj,Jj,Qj,LV,tH,rH,sH,oH,uH,hH,cH,BV,mH,AH,wH,UV,jV,SH,NH,FH,qV,MH,zH,OH,E6,WH,mU,ZV,VH,gV,Eg,GH,gU,yU,AU,HH,XH,ZH,JH,eq,tq,rq,JV,sq,oq,hq,eU,cq,mq,yq,tU,bH,bq,wq,Iq,Tq,Nq,Rq,$q,_q,nU,zq,iU,Dq,Lq,Bq,Uq,jq,dU,KG,qq,Kq,Yq,Qq,tX,XV,uX,hX,cX,_H];for(let e of fX)An(e);var F6={};ze(F6,{assertNotComplex:()=>id,bindCanvasToFramebuffer:()=>TX,bindColorTextureToFramebuffer:()=>pc,bindTextureToProgramUniformSampler:()=>H6,bindTextureUnit:()=>U6,bindVertexBufferToProgramAttribute:()=>Fg,callAndCheck:()=>ve,canBeRepresented:()=>$6,createFragmentShader:()=>z6,createFramebuffer:()=>V6,createProgram:()=>O6,createStaticIndexBuffer:()=>L6,createStaticVertexBuffer:()=>P6,createTexture:()=>W6,createVertexShader:()=>_6,getBatchDim:()=>yo,getExtensionOrThrow:()=>Wd,getFramebufferErrorMessage:()=>q6,getMaxTexturesInShader:()=>Y6,getNumChannels:()=>IX,getProgramUniformLocation:()=>j6,getProgramUniformLocationOrThrow:()=>G6,getRowsCols:()=>Ao,getShapeAs3D:()=>cc,getTextureShapeFromLogicalShape:()=>K6,getWebGLDisjointQueryTimerVersion:()=>J6,getWebGLErrorMessage:()=>M6,getWebGLMaxTextureSize:()=>Z6,hasExtension:()=>yr,isCapableOfRenderingToFloatTexture:()=>Q6,isDownloadFloatTextureEnabled:()=>e4,isReshapeFree:()=>ph,isWebGLFenceEnabled:()=>t4,isWebGLVersionEnabled:()=>Mg,linkProgram:()=>D6,resetMaxTextureSize:()=>CX,resetMaxTexturesInShader:()=>NX,unbindColorTextureFromFramebuffer:()=>$g,unbindTextureUnit:()=>SX,validateFramebuffer:()=>Bd,validateProgram:()=>hc,validateTextureSize:()=>B6});var Yi={},pm={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Vy(e,t){Yi[e]=t}function nn(e,t){if(!(e in Yi)||t!=null){let r=gX(e,t);if(r!==null)Yi[e]=r;else return console.log("Could not get context for WebGL version",e),null}let a=Yi[e];return a==null||a.isContextLost()?(delete Yi[e],nn(e)):(a.disable(a.DEPTH_TEST),a.disable(a.STENCIL_TEST),a.disable(a.BLEND),a.disable(a.DITHER),a.disable(a.POLYGON_OFFSET_FILL),a.disable(a.SAMPLE_COVERAGE),a.enable(a.SCISSOR_TEST),a.enable(a.CULL_FACE),a.cullFace(a.BACK),Yi[e])}function mX(e){if(typeof OffscreenCanvas!="undefined"&&e===2)return new OffscreenCanvas(300,150);if(typeof document!="undefined")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function gX(e,t){if(e!==1&&e!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let a=t==null?mX(e):t;return a.addEventListener("webglcontextlost",r=>{r.preventDefault(),delete Yi[e]},!1),e===1?a.getContext("webgl",pm)||a.getContext("experimental-webgl",pm):a.getContext("webgl2",pm)}function rp(e,t){return[t,e]}function yX(e,t){return e*t}function Up(e){let t=w.sizeFromShape(e),a=Math.ceil(t/4);return w.sizeToSquarishShape(a)}function sd(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function AX(e,t){let[a,r]=sd(e,t);return a*r*4}function Uy(e,t){let a=e,r,n,s,i,o,l,d,u,h,p;return J().getNumber("WEBGL_VERSION")===2?(r=a.R32F,n=a.R16F,s=a.RGBA16F,i=a.RGBA32F,o=a.RED,d=4,u=1,h=a.HALF_FLOAT,p=a.FLOAT,l=a.RGBA8):(r=e.RGBA,n=e.RGBA,s=e.RGBA,i=a.RGBA,o=e.RGBA,d=4,u=4,h=t!=null?t.HALF_FLOAT_OES:null,p=e.FLOAT,l=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:n,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:d,defaultNumChannels:u,textureTypeHalfFloat:h,textureTypeFloat:p}}function ve(e,t){let a=t();return J().getBool("DEBUG")&&xX(e),a}function xX(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+M6(e,t))}var bX=596e-10,vX=65504;function $6(e){return!!(J().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||e===0||bX<Math.abs(e)&&Math.abs(e)<vX)}function M6(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function Wd(e,t){return es(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function _6(e,t){let a=es(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(ve(e,()=>e.shaderSource(a,t)),ve(e,()=>e.compileShader(a)),e.getShaderParameter(a,e.COMPILE_STATUS)===!1)throw console.log(e.getShaderInfoLog(a)),new Error("Failed to compile vertex shader.");return a}function z6(e,t){let a=es(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(ve(e,()=>e.shaderSource(a,t)),ve(e,()=>e.compileShader(a)),e.getShaderParameter(a,e.COMPILE_STATUS)===!1)throw kX(t,e.getShaderInfoLog(a)),new Error("Failed to compile fragment shader.");return a}var wX=/ERROR: [0-9]+:([0-9]+):/g;function kX(e,t){let a=wX.exec(t);if(a==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(e);return}let r=+a[1],n=e.split(`
`),s=n.length.toString().length+2,i=n.map((h,p)=>w.rightPad((p+1).toString(),s)+h),o=0;for(let h=0;h<i.length;h++)o=Math.max(i[h].length,o);let l=i.slice(0,r-1),d=i.slice(r-1,r),u=i.slice(r);console.log(l.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${w.rightPad(d[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(u.join(`
`))}function O6(e){return es(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}function D6(e,t){if(ve(e,()=>e.linkProgram(t)),e.getProgramParameter(t,e.LINK_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function hc(e,t){if(ve(e,()=>e.validateProgram(t)),e.getProgramParameter(t,e.VALIDATE_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function P6(e,t){let a=es(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return ve(e,()=>e.bindBuffer(e.ARRAY_BUFFER,a)),ve(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),a}function L6(e,t){let a=es(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return ve(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,a)),ve(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),a}function IX(){return J().getNumber("WEBGL_VERSION")===2?1:4}function W6(e){return es(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}function B6(e,t){let a=J().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){let r=`[${e}x${t}]`;throw new Error("Requested texture size "+r+" is invalid.")}if(e>a||t>a){let r=`[${e}x${t}]`,n=`[${a}x${a}]`;throw new Error("Requested texture size "+r+" greater than WebGL maximum on this browser / GPU "+n+".")}}function V6(e){return es(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function Fg(e,t,a,r,n,s,i){let o=e.getAttribLocation(t,a);return o===-1?!1:(ve(e,()=>e.bindBuffer(e.ARRAY_BUFFER,r)),ve(e,()=>e.vertexAttribPointer(o,n,e.FLOAT,!1,s,i)),ve(e,()=>e.enableVertexAttribArray(o)),!0)}function U6(e,t,a){X6(e,a),ve(e,()=>e.activeTexture(e.TEXTURE0+a)),ve(e,()=>e.bindTexture(e.TEXTURE_2D,t))}function SX(e,t){X6(e,t),ve(e,()=>e.activeTexture(e.TEXTURE0+t)),ve(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function G6(e,t,a){return es(e,()=>e.getUniformLocation(t,a),'uniform "'+a+'" not present in program.')}function j6(e,t,a){return e.getUniformLocation(t,a)}function H6(e,t,a,r){ve(e,()=>U6(e,t,r)),ve(e,()=>e.uniform1i(a,r))}function TX(e){ve(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),ve(e,()=>e.viewport(0,0,e.canvas.width,e.canvas.height)),ve(e,()=>e.scissor(0,0,e.canvas.width,e.canvas.height))}function pc(e,t,a){ve(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,a)),ve(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function $g(e,t){ve(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),ve(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function Bd(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+q6(e,t))}function q6(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function es(e,t,a){let r=ve(e,()=>t());if(r==null)throw new Error(a);return r}function X6(e,t){let a=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>a){let n=`[gl.TEXTURE0, gl.TEXTURE${a}]`;throw new Error(`textureUnit must be in ${n}.`)}}function yo(e,t=2){return w.sizeFromShape(e.slice(0,e.length-t))}function Ao(e){if(e.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function cc(e){let t=[1,1,1];return e.length===0||e.length===1&&e[0]===1||(t=[yo(e),...Ao(e)]),t}function K6(e,t=!1){let a=J().getNumber("WEBGL_MAX_TEXTURE_SIZE");t&&(a=a*2,e=e.map((n,s)=>s>=e.length-2?w.nearestLargerEven(e[s]):e[s]),e.length===1&&(e=[2,e[0]])),e.length!==2&&(e=w.squeezeShape(e).newShape);let r=w.sizeFromShape(e);if(e.length<=1&&r<=a)return[1,r];if(e.length===2&&e[0]<=a&&e[1]<=a)return e;if(e.length===3&&e[0]*e[1]<=a&&e[2]<=a)return[e[0]*e[1],e[2]];if(e.length===3&&e[0]<=a&&e[1]*e[2]<=a)return[e[0],e[1]*e[2]];if(e.length===4&&e[0]*e[1]*e[2]<=a&&e[3]<=a)return[e[0]*e[1]*e[2],e[3]];if(e.length===4&&e[0]<=a&&e[1]*e[2]*e[3]<=a)return[e[0],e[1]*e[2]*e[3]];if(t){let n=yo(e),s=2,i=2;return e.length&&([s,i]=Ao(e)),r=n*(s/2)*(i/2),w.sizeToSquarishShape(r).map(o=>o*2)}return w.sizeToSquarishShape(r)}function Gp(e){return e%2===0}function ph(e,t){if(e=e.slice(-2),t=t.slice(-2),w.arraysEqual(e,t)||!e.length||!t.length||e[0]===0||e[1]===0||t[0]===0||t[1]===0)return!0;if(e.length!==t.length){let a=e.slice(-1)[0],r=t.slice(-1)[0];if(a===r||Gp(a)&&Gp(r)&&(e[0]===1||t[0]===1))return!0}return e[1]===t[1]&&Gp(e[0])&&Gp(t[0])}var fc,mc;function Z6(e){if(fc==null){let t=nn(e);fc=t.getParameter(t.MAX_TEXTURE_SIZE)}return fc}function CX(){fc=null}function NX(){mc=null}function Y6(e){if(mc==null){let t=nn(e);mc=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,mc)}function J6(e){if(e===0)return 0;let t,a=nn(e);return yr(a,"EXT_disjoint_timer_query_webgl2")&&e===2?t=2:yr(a,"EXT_disjoint_timer_query")?t=1:t=0,t}function yr(e,t){return e.getExtension(t)!=null}function Mg(e){try{if(nn(e)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function Q6(e){if(e===0)return!1;let t=nn(e);if(e===1){if(!yr(t,"OES_texture_float"))return!1}else if(!yr(t,"EXT_color_buffer_float"))return!1;return _g(t)}function e4(e){if(e===0)return!1;let t=nn(e);if(e===1){if(!yr(t,"OES_texture_float")||!yr(t,"WEBGL_color_buffer_float"))return!1}else{if(yr(t,"EXT_color_buffer_float"))return _g(t);let a="EXT_color_buffer_half_float";if(yr(t,a)){let r=t.getExtension(a);return EX(t,r)}return!1}return _g(t)}function _g(e){let t=Uy(e),a=e.createTexture();e.bindTexture(e.TEXTURE_2D,a);let r=1,n=1;e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,r,n,0,t.textureFormatFloat,t.textureTypeFloat,null);let s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,a,0);let i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(a),e.deleteFramebuffer(s),i}function EX(e,t){let a=Uy(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);let n=1,s=1;e.texImage2D(e.TEXTURE_2D,0,a.internalFormatHalfFloat,n,s,0,a.textureFormatFloat,a.textureTypeHalfFloat,null);let i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);let o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(i),o}function t4(e){return e!==2?!1:nn(e).fenceSync!=null}function id(e,t){Array.isArray(e)||(e=[e]),e.forEach(a=>{a!=null&&w.assert(a.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}var Fe=J();Fe.registerFlag("HAS_WEBGL",()=>Fe.getNumber("WEBGL_VERSION")>0);Fe.registerFlag("WEBGL_VERSION",()=>Mg(2)?2:Mg(1)?1:0);Fe.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Fe.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Fe.get("WEBGL_VERSION")===2);Fe.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Fe.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Fe.registerFlag("WEBGL_PACK",()=>Fe.getBool("HAS_WEBGL"));Fe.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Fe.getBool("WEBGL_PACK"));Fe.registerFlag("WEBGL_PACK_CLIP",()=>Fe.getBool("WEBGL_PACK"));Fe.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Fe.getBool("WEBGL_PACK"));Fe.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Fe.getBool("WEBGL_PACK"));Fe.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Fe.getBool("WEBGL_PACK"));Fe.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Fe.getBool("WEBGL_PACK"));Fe.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Fe.getBool("WEBGL_PACK"));Fe.registerFlag("WEBGL_PACK_REDUCE",()=>Fe.getBool("WEBGL_PACK"));Fe.registerFlag("WEBGL_LAZILY_UNPACK",()=>Fe.getBool("WEBGL_PACK"));Fe.registerFlag("WEBGL_CONV_IM2COL",()=>Fe.getBool("WEBGL_PACK"));Fe.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>Z6(Fe.getNumber("WEBGL_VERSION")));Fe.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>Y6(Fe.getNumber("WEBGL_VERSION")));Fe.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let e=Fe.getNumber("WEBGL_VERSION");return e===0?0:J6(e)});Fe.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Fe.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!zh.isMobile());Fe.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>Q6(Fe.getNumber("WEBGL_VERSION")));Fe.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Fe.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Fe.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Fe.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>e4(Fe.getNumber("WEBGL_VERSION")));Fe.registerFlag("WEBGL_FENCE_API_ENABLED",()=>t4(Fe.getNumber("WEBGL_VERSION")));Fe.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Fe.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Fe.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)});Fe.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>zh.isMobile()?1:-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)});Fe.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);Fe.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);Fe.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);Fe.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);function Pa(){let e,t,a,r,n,s,i,o,l,d;return J().getNumber("WEBGL_VERSION")===2?(e="#version 300 es",t="in",a="out",r="in",n="texture",s="outputColor",i="out vec4 outputColor;",o=`
      bool isnan_custom(float val) {
        return (val > 0.0 || val < 0.0) ? false : val != 0.0;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,l="",d=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(e="",t="attribute",a="varying",r="varying",n="texture2D",s="gl_FragColor",i="",o=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,d=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:e,attribute:t,varyingVs:a,varyingFs:r,texture2D:n,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:d}}function gl(e,t,a="index"){let r=w.computeStrides(t);return r.map((n,s)=>{let i=`int ${e[s]} = ${a} / ${n}`,o=s===r.length-1?`int ${e[s+1]} = ${a} - ${e[s]} * ${n}`:`index -= ${e[s]} * ${n}`;return`${i}; ${o};`}).join("")}function M0(e,t,a="index"){let r=w.computeStrides(t);return r.map((n,s)=>{let i=`int ${e[s]} = ${a} / outShapeStrides[${s}]`,o=s===r.length-1?`int ${e[s+1]} = ${a} - ${e[s]} * outShapeStrides[${s}]`:`index -= ${e[s]} * outShapeStrides[${s}]`;return`${i}; ${o};`}).join("")}function RX(e,t){let a=e.length,r=e.map(s=>`${t}[${s}]`),n=new Array(a-1);n[a-2]=r[a-1];for(let s=a-3;s>=0;--s)n[s]=`(${n[s+1]} * ${r[s+1]})`;return n}function FX(e,t,a="index"){let r=e.map((s,i)=>i),n=RX(r,t);return n.map((s,i)=>{let o=`int ${e[i]} = ${a} / ${n[i]}`,l=i===n.length-1?`int ${e[i+1]} = ${a} - ${e[i]} * ${n[i]}`:`index -= ${e[i]} * ${n[i]}`;return`${o}; ${l};`}).join("")}function Gy(e){let t=w.computeStrides(e).map(a=>a.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function jy(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var a4=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`,{getBroadcastDims:r4}=N;function $X(e,t,a){let r=[];if(e.forEach(p=>{let c=w.sizeFromShape(p.shapeInfo.logicalShape);if(p.shapeInfo.isUniform?r.push(`uniform float ${p.name}${c>1?`[${c}]`:""};`):(r.push(`uniform sampler2D ${p.name};`),r.push(`uniform int offset${p.name};`)),a.enableShapeUniforms){let{uniformShape:f}=Hy(a.packedInputs,p.shapeInfo.logicalShape,p.shapeInfo.texShape);switch(f.length){case 1:r.push(`uniform int ${p.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${p.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${p.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${p.name}Shape;`);break}r.push(`uniform ivec2 ${p.name}TexShape;`)}}),a.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;");break}r.push("uniform ivec2 outTexShape;")}a.customUniforms&&a.customUniforms.forEach(p=>{r.push(`uniform ${p.type} ${p.name}${p.arrayIndex?`[${p.arrayIndex}]`:""};`)});let n=r.join(`
`),s=e.map(p=>MX(p,t,a.packedInputs,a.enableShapeUniforms)).join(`
`),i=t.texShape,o=Pa(),l=OX(o),d,u,h=LX(o);return t.isPacked?(d=_X(t.logicalShape,i,a.enableShapeUniforms),u=PX(o)):(d=zX(t.logicalShape,i,a.enableShapeUniforms),u=DX(o)),a.packedInputs&&(h+=UX),[h,l,u,n,d,s,a.userCode].join(`
`)}function od(e,t=!1){let a=e.shapeInfo.logicalShape;switch(a.length){case 0:return tK(e,t);case 1:return rK(e,t);case 2:return sK(e,t);case 3:return oK(e,t);case 4:return uK(e,t);case 5:return dK(e);case 6:return hK(e);default:throw new Error(`${a.length}-D input sampling is not yet supported`)}}function n4(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return eK(e);case 1:return aK(e,t);case 2:return nK(e,t);case 3:return iK(e,t);default:return lK(e,t)}}function MX(e,t,a=!1,r){let n="";a?n+=n4(e,r):n+=od(e,r);let s=e.shapeInfo.logicalShape,i=t.logicalShape;return s.length<=i.length&&(a?n+=pK(e,t):n+=cK(e,t)),n}function _X(e,t,a){switch(e.length){case 0:return s4();case 1:return GX(e,t,a);case 2:return JX(e,t,a);case 3:return HX(e,t,a);default:return XX(e,t,a)}}function zX(e,t,a){switch(e.length){case 0:return s4();case 1:return jX(e,t,a);case 2:return QX(e,t,a);case 3:return qX(e,t,a);case 4:return KX(e,t,a);case 5:return ZX(e,t);case 6:return YX(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}function OX(e){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${e.texture2D}(textureSampler, uv).r;
    }
  `}function DX(e){return`
    void setOutput(float val) {
      ${e.output} = vec4(val, 0, 0, 0);
    }
  `}function PX(e){return`
    void setOutput(vec4 val) {
      ${e.output} = val;
    }
  `}function LX(e){return`${e.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${e.varyingFs} vec2 resultUV;
    ${e.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${e.defineSpecialNaN}
    ${e.defineSpecialInf}
    ${e.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${WX}
    ${BX}
    ${VX}
  `}var WX=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,BX=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,VX=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,UX=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function s4(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function GX(e,t,a){let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return r[0]===1?a?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${r[1]}.0);
      }
    `:r[1]===1?a?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${r[0]}.0);
      }
    `:a?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);
    }
  `}function jX(e,t,a){return t[0]===1?a?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?a?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:a?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function HX(e,t,a){if(a)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],n=Math.ceil(e[2]/2),s=n*Math.ceil(e[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${n});
      int c = imod(index, ${n}) * 2;

      return ivec3(b, r, c);
    }
  `}function qX(e,t,a){if(a)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${M0(["r","c","d"],e)}
    return ivec3(r, c, d);
  }
`;let r=gl(["r","c","d"],e);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${r}
      return ivec3(r, c, d);
    }
  `}function XX(e,t,a){if(a)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],n=Math.ceil(e[e.length-1]/2),s=n*Math.ceil(e[e.length-2]/2),i=s,o="",l="b, r, c";for(let d=2;d<e.length-1;d++)i*=e[e.length-d-1],o=`
      int b${d} = index / ${i};
      index -= b${d} * ${i};
    `+o,l=`b${d}, `+l;return`
    ivec${e.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      ${o}

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${n});
      int c = imod(index, ${n}) * 2;

      return ivec${e.length}(${l});
    }
  `}function KX(e,t,a){if(a)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${M0(["r","c","d","d2"],e)}
      return ivec4(r, c, d, d2);
    }
  `;let r=gl(["r","c","d","d2"],e);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${r}
      return ivec4(r, c, d, d2);
    }
  `}function ZX(e,t){let a=gl(["r","c","d","d2","d3"],e);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${a}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function YX(e,t){let a=gl(["r","c","d","d2","d3","d4"],e);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${a}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function JX(e,t,a){let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(w.arraysEqual(e,t))return a?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));
      }
    `;let n=Math.ceil(e[1]/2);return a?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));

      int index = resTexRC.x * ${r[1]} + resTexRC.y;
      int r = 2 * (index / ${n});
      int c = imod(index, ${n}) * 2;

      return ivec2(r, c);
    }
  `}function QX(e,t,a){return w.arraysEqual(e,t)?a?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:e[1]===1?a?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:e[0]===1?a?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:a?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${e[1]};
      int c = index - r * ${e[1]};
      return ivec2(r, c);
    }
  `}function yl(e){return`offset${e}`}function eK(e){let t=e.name,a="get"+t.charAt(0).toUpperCase()+t.slice(1),r=Pa();return`
    vec4 ${a}() {
      return ${r.texture2D}(${t}, halfCR);
    }
  `}function tK(e,t){let a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${a};}`;let[n,s]=e.shapeInfo.texShape;if(n===1&&s===1)return`
      float ${r}() {
        return sampleTexture(${a}, halfCR);
      }
    `;let i=yl(a);if(t)return`
    float ${r}() {
      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], ${i});
      return sampleTexture(${a}, uv);
    }
  `;let[o,l]=e.shapeInfo.texShape;return`
    float ${r}() {
      vec2 uv = uvFromFlat(${o}, ${l}, ${i});
      return sampleTexture(${a}, uv);
    }
  `}function aK(e,t){let a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),n=e.shapeInfo.texShape,s=Pa();if(t)return`
    vec4 ${r}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${s.texture2D}(${a}, uv);
    }
  `;let i=[Math.ceil(n[0]/2),Math.ceil(n[1]/2)];return`
    vec4 ${r}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${s.texture2D}(${a}, uv);
    }
  `}function rK(e,t){let a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1);if(e.shapeInfo.isUniform)return`
      float ${r}(int index) {
        ${ld(e)}
      }
    `;let n=e.shapeInfo.texShape,s=n[0],i=n[1];if(i===1&&s===1)return`
      float ${r}(int index) {
        return sampleTexture(${a}, halfCR);
      }
    `;let o=yl(a);return i===1?t?`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${a}TexShape[0]));
        return sampleTexture(${a}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);
        return sampleTexture(${a}, uv);
      }
    `:s===1?t?`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${a}TexShape[1]), 0.5);
        return sampleTexture(${a}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${a}, uv);
      }
    `:t?`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index + ${o});
      return sampleTexture(${a}, uv);
    }
  `:`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});
      return sampleTexture(${a}, uv);
    }
  `}function nK(e,t){let a=e.shapeInfo.logicalShape,r=e.name,n="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=s[0],o=s[1],l=Pa();if(s!=null&&w.arraysEqual(a,s))return t?`
      vec4 ${n}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);

        return ${l.texture2D}(${r}, uv);
      }
    `:`
      vec4 ${n}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);

        return ${l.texture2D}(${r}, uv);
      }
    `;if(t)return`
    vec4 ${n}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${r}, uv);
    }
  `;let d=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],u=Math.ceil(a[1]/2);return`
    vec4 ${n}(int row, int col) {
      vec2 uv = packedUVfrom2D(${u}, ${d[0]}, ${d[1]}, row, col);
      return ${l.texture2D}(${r}, uv);
    }
  `}function sK(e,t){let a=e.shapeInfo.logicalShape,r=e.name,n="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape;if(s!=null&&w.arraysEqual(a,s)){if(t)return`
      float ${n}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `;let p=s[0],c=s[1];return`
    float ${n}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${c}.0, ${p}.0);
      return sampleTexture(${r}, uv);
    }
  `}let{newShape:i,keptDims:o}=w.squeezeShape(a),l=i;if(l.length<a.length){let p=ud(e,l),c=["row","col"];return`
      ${od(p,t)}
      float ${n}(int row, int col) {
        return ${n}(${dd(c,o)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${n}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${a[1]}, 1)));
        ${ld(e)}
      }
    `;let d=s[0],u=s[1],h=yl(r);return u===1?t?`
      float ${n}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${n}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${a[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${d}.0);
      return sampleTexture(${r}, uv);
    }
  `:d===1?t?`
      float ${n}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${n}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${a[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);
      return sampleTexture(${r}, uv);
    }
  `:t?`
      float ${n}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r}Shape[1] + col + ${h};
        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
        return sampleTexture(${r}, uv);
      }
    `:`
  float ${n}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${a[1]} + col + ${h};
    vec2 uv = uvFromFlat(${d}, ${u}, index);
    return sampleTexture(${r}, uv);
  }
`}function iK(e,t){let a=e.shapeInfo.logicalShape,r=e.name,n="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(a[0]===1){let p=a.slice(1),c=[1,2],f=ud(e,p),m=["b","row","col"];return`
        ${n4(f,t)}
        vec4 ${n}(int b, int row, int col) {
          return ${n}(${dd(m,c)});
        }
      `}let o=Pa();if(t)return`
    vec4 ${n}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${o.texture2D}(${r}, uv);
    }
  `;let l=i[0],d=i[1],u=Math.ceil(a[2]/2),h=u*Math.ceil(a[1]/2);return`
    vec4 ${n}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${d}, ${h}, ${u}, b, row, col);
      return ${o.texture2D}(${r}, uv);
    }
  `}function oK(e,t){let a=e.shapeInfo.logicalShape,r=e.name,n="get"+r.charAt(0).toUpperCase()+r.slice(1),s=a[1]*a[2],i=a[2],{newShape:o,keptDims:l}=w.squeezeShape(a),d=o;if(d.length<a.length){let m=ud(e,d),g=["row","col","depth"];return`
        ${od(m,t)}
        float ${n}(int row, int col, int depth) {
          return ${n}(${dd(g,l)});
        }
      `}if(e.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${s}, ${i}, 1)));
        ${ld(e)}
      }
    `;let u=e.shapeInfo.texShape,h=u[0],p=u[1],c=e.shapeInfo.flatOffset;if(p===s&&c==null)return t?`
      float ${n}(int row, int col, int depth) {
        int stride1 = ${r}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
        float ${n}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${i}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${p}.0, ${h}.0);
          return sampleTexture(${r}, uv);
        }
      `;if(p===i&&c==null)return t?`
      float ${n}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${n}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${a[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${h}.0);
      return sampleTexture(${r}, uv);
    }
  `;let f=yl(r);return t?`
    float ${n}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${r}Shape[1] * ${r}Shape[2];
      int stride1 = ${r}Shape[2];
      int index = row * ${s} + col * ${i} + depth + ${f};
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
      return sampleTexture(${r}, uv);
    }
    `:`
      float ${n}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s} + col * ${i} + depth + ${f};
        vec2 uv = uvFromFlat(${h}, ${p}, index);
        return sampleTexture(${r}, uv);
      }
  `}function lK(e,t){let a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),n=Pa();if(t)return`
    vec4 ${r}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${a}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${a}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${a}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${n.texture2D}(${a}, uv);
    }
  `;let s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],d=l[0],u=l[1],h=Math.ceil(s[i-1]/2),p=h*Math.ceil(s[i-2]/2),c="int b, int row, int col",f=`b * ${p} + (row / 2) * ${h} + (col / 2)`;for(let m=2;m<i-1;m++)c=`int b${m}, `+c,p*=s[i-m-1],f=`b${m} * ${p} + `+f;return`
    vec4 ${r}(${c}) {
      int index = ${f};
      int texR = index / ${u};
      int texC = index - texR * ${u};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${d});
      return ${n.texture2D}(${a}, uv);
    }
  `}function uK(e,t){let a=e.shapeInfo.logicalShape,r=e.name,n="get"+r.charAt(0).toUpperCase()+r.slice(1),s=a[3],i=a[2]*s,o=a[1]*i,{newShape:l,keptDims:d}=w.squeezeShape(a);if(l.length<a.length){let A=ud(e,l),x=["row","col","depth","depth2"];return`
      ${od(A,t)}
      float ${n}(int row, int col, int depth, int depth2) {
        return ${n}(${dd(x,d)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${o}, ${i}, ${s}, 1)));
        ${ld(e)}
      }
    `;let u=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],c=h[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(c===o&&u==null)return t?`
      float ${n}(int row, int col, int depth, int depth2) {
        ${f}
        ${m}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${n}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${i}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${c}.0, ${p}.0);
        return sampleTexture(${r}, uv);
      }
    `;if(c===s&&u==null)return t?`
      float ${n}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${n}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${a[1]*a[2]}, ${a[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${c}.0, ${p}.0);
        return sampleTexture(${r}, uv);
      }
    `;let y=yl(r);return t?`
    float ${n}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${m}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});
      return sampleTexture(${r}, uv);
    }
  `:`
    float ${n}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${i} +
          depth * ${s} + depth2;
      vec2 uv = uvFromFlat(${p}, ${c}, index + ${y});
      return sampleTexture(${r}, uv);
    }
  `}function dK(e){let t=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),n=t[4],s=t[3]*n,i=t[2]*s,o=t[1]*i,{newShape:l,keptDims:d}=w.squeezeShape(t);if(l.length<t.length){let m=ud(e,l),g=["row","col","depth","depth2","depth3"];return`
      ${od(m)}
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        return ${r}(${dd(g,d)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${o}, ${i}, ${s}, ${n})) +
          depth3;
        ${ld(e)}
      }
    `;let u=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],c=h[1];if(c===o&&u==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${s}, ${n}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${c}.0, ${p}.0);
        return sampleTexture(${a}, uv);
      }
    `;if(c===n&&u==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${c}.0, ${p}.0);
        return sampleTexture(${a}, uv);
      }
    `;let f=yl(a);return`
    float ${r}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${i} + depth * ${s} +
          depth2 * ${n} + depth3 + ${f};
      vec2 uv = uvFromFlat(${p}, ${c}, index);
      return sampleTexture(${a}, uv);
    }
  `}function hK(e){let t=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),{newShape:n,keptDims:s}=w.squeezeShape(t);if(n.length<t.length){let g=ud(e,n),y=["row","col","depth","depth2","depth3","depth4"];return`
      ${od(g)}
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${r}(${dd(y,s)});
      }
    `}let i=t[5],o=t[4]*i,l=t[3]*o,d=t[2]*l,u=t[1]*d;if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${u}, ${d}, ${l}, ${o})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${ld(e)}
      }
    `;let h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,c=p[0],f=p[1];if(f===u&&h==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${d}, ${l}, ${o}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${c}.0);
        return sampleTexture(${a}, uv);
      }
    `;if(f===i&&h==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${c}.0);
        return sampleTexture(${a}, uv);
      }
    `;let m=yl(a);return`
    float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${u} + col * ${d} + depth * ${l} +
          depth2 * ${o} + depth3 * ${i} + depth4 + ${m};
      vec2 uv = uvFromFlat(${c}, ${f}, index);
      return sampleTexture(${a}, uv);
    }
  `}function ld(e){let t=e.name,a=w.sizeFromShape(e.shapeInfo.logicalShape);return a<2?`return ${t};`:`
    for (int i = 0; i < ${a}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function pK(e,t){let a=e.name,r=a.charAt(0).toUpperCase()+a.slice(1),n="get"+r+"AtOutCoords",s=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=r4(e.shapeInfo.logicalShape,t.logicalShape),l=yt(i),d=i-s,u,h=["x","y","z","w","u","v"];s===0?u="":i<2&&o.length>=1?u="coords = 0;":u=o.map(g=>`coords.${h[g+d]} = 0;`).join(`
`);let p="";i<2&&s>0?p="coords":p=e.shapeInfo.logicalShape.map((g,y)=>`coords.${h[y+d]}`).join(", ");let c="return outputValue;",f=w.sizeFromShape(e.shapeInfo.logicalShape)===1,m=w.sizeFromShape(t.logicalShape)===1;if(s===1&&!f&&!m)c=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(f&&!m)i===1?c=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:c=`
        return vec4(outputValue.x);
      `;else if(o.length){let g=s-2,y=s-1;o.indexOf(g)>-1&&o.indexOf(y)>-1?c="return vec4(outputValue.x);":o.indexOf(g)>-1?c="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(y)>-1&&(c="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${n}() {
      ${l} coords = getOutputCoords();
      ${u}
      vec4 outputValue = get${r}(${p});
      ${c}
    }
  `}function cK(e,t){let a=e.name,r=a.charAt(0).toUpperCase()+a.slice(1),n="get"+r+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&e.shapeInfo.flatOffset==null&&w.arraysEqual(i,s))return`
      float ${n}() {
        return sampleTexture(${a}, resultUV);
      }
    `;let d=yt(l),u=r4(e.shapeInfo.logicalShape,t.logicalShape),h=l-o,p,c=["x","y","z","w","u","v"];o===0?p="":l<2&&u.length>=1?p="coords = 0;":p=u.map(m=>`coords.${c[m+h]} = 0;`).join(`
`);let f="";return l<2&&o>0?f="coords":f=e.shapeInfo.logicalShape.map((m,g)=>`coords.${c[g+h]}`).join(", "),`
    float ${n}() {
      ${d} coords = getOutputCoords();
      ${p}
      return get${r}(${f});
    }
  `}function yt(e){if(e<=1)return"int";if(e===2)return"ivec2";if(e===3)return"ivec3";if(e===4)return"ivec4";if(e===5)return"ivec5";if(e===6)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function Hy(e,t,a){let{newShape:r,keptDims:n}=w.squeezeShape(t),s=t.length,i=e&&s===3&&t[0]===1,o=i?t.slice(1):r,l=!e&&s>1&&!w.arraysEqual(t,a)&&r.length<s||i;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:n}}function ud(e,t){let a=JSON.parse(JSON.stringify(e));return a.shapeInfo.logicalShape=t,a}function dd(e,t){return t.map(a=>e[a]).join(", ")}function fK(e,t,a,r){let n=a.map((b,v)=>{let T={logicalShape:b.shape,texShape:b.isUniform?null:b.texData.texShape,isUniform:b.isUniform,isPacked:b.isUniform?!1:b.texData.isPacked,flatOffset:null};return b.texData!=null&&b.texData.slice!=null&&b.texData.slice.flatOffset>0&&(T.flatOffset=b.texData.slice.flatOffset),{name:t.variableNames[v],shapeInfo:T}}),s=n.map(b=>b.shapeInfo),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=$X(n,i,t),l=z6(e.gl,o),d=e.createProgram(l),u=null,h=e.getUniformLocation(d,"NAN",!1);J().getNumber("WEBGL_VERSION")===1&&(u=e.getUniformLocation(d,"INFINITY",!1));let p=!1,c={},f={},m={};for(let b=0;b<t.variableNames.length;b++){let v=t.variableNames[b];c[v]=e.getUniformLocation(d,v,p),c[`offset${v}`]=e.getUniformLocation(d,`offset${v}`,p),t.enableShapeUniforms&&(f[`${v}Shape`]=e.getUniformLocation(d,`${v}Shape`,p),m[`${v}TexShape`]=e.getUniformLocation(d,`${v}TexShape`,p))}let g,y,A;t.enableShapeUniforms&&(g=e.getUniformLocation(d,"outShape",p),A=e.getUniformLocation(d,"outShapeStrides",p),y=e.getUniformLocation(d,"outTexShape",p));let x=[];return t.customUniforms&&t.customUniforms.forEach((b,v)=>{x[v]=e.getUniformLocation(d,b.name,p)}),{program:t,fragmentShader:l,source:o,webGLProgram:d,uniformLocations:c,customUniformLocations:x,inShapeInfos:s,outShapeInfo:i,infLoc:u,nanLoc:h,inShapesLocations:f,inTexShapesLocations:m,outShapeLocation:g,outShapeStridesLocation:A,outTexShapeLocation:y}}function jx(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((a,r)=>{let n=a.logicalShape,s=t[r],i=s.shape;if(!w.arraysEqual(n,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${n} and ${i} must match`);if(a.isUniform&&s.isUniform)return;let o=a.texShape,l=s.isUniform?null:s.texData.texShape;if(!w.arraysEqual(o,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${l} must match`)})}function mK(e,t,a,r,n){t.program.enableShapeUniforms||(jx(t.inShapeInfos,a),jx([t.outShapeInfo],[r]));let s=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(s.texture,i[0],i[1]):e.setOutputMatrixTexture(s.texture,i[0],i[1]),e.setProgram(t.webGLProgram),J().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&e.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&e.gl.uniform1f(t.nanLoc,NaN),a.forEach((l,d)=>{let u=t.program.variableNames[d],h=t.uniformLocations[u],p=t.uniformLocations[`offset${u}`],c=t.inShapesLocations[`${u}Shape`],f=t.inTexShapesLocations[`${u}TexShape`];if(c){let{uniformShape:m}=Hy(t.program.packedInputs,l.shape,l.texData.texShape);switch(m.length){case 1:e.gl.uniform1iv(c,new Int32Array(m));break;case 2:e.gl.uniform2iv(c,new Int32Array(m));break;case 3:e.gl.uniform3iv(c,new Int32Array(m));break;case 4:e.gl.uniform4iv(c,new Int32Array(m));break}}if(f&&e.gl.uniform2i(f,l.texData.texShape[0],l.texData.texShape[1]),h!=null){if(l.isUniform){if(w.sizeFromShape(l.shape)<2)e.gl.uniform1f(h,l.uniformValues[0]);else{let m=l.uniformValues;m instanceof Float32Array||(m=new Float32Array(m)),e.gl.uniform1fv(h,m)}return}l.texData.slice!=null&&p!=null&&e.gl.uniform1i(p,l.texData.slice.flatOffset),e.setInputMatrixTexture(l.texData.texture.texture,h,d)}});let o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape));break}if(t.outShapeStridesLocation){let l=w.computeStrides(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(l));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(l));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(l));break}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&n&&t.program.customUniforms.forEach((l,d)=>{let u=t.customUniformLocations[d],h=n[d];if(l.type==="float")e.gl.uniform1fv(u,h);else if(l.type==="vec2")e.gl.uniform2fv(u,h);else if(l.type==="vec3")e.gl.uniform3fv(u,h);else if(l.type==="vec4")e.gl.uniform4fv(u,h);else if(l.type==="int")e.gl.uniform1iv(u,h);else if(l.type==="ivec2")e.gl.uniform2iv(u,h);else if(l.type==="ivec3")e.gl.uniform3iv(u,h);else if(l.type==="ivec4")e.gl.uniform4iv(u,h);else throw Error(`uniform type ${l.type} is not supported yet.`)}),e.executeProgram()}function gK(e,t,a){let r="";t.concat(a).forEach(i=>{let o=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!i.isUniform){let l=i.texData.texShape,{useSqueezeShape:d,uniformShape:u,keptDims:h}=Hy(e.packedInputs,i.shape,l),p="",c="",f="";if(u.length===1&&e.packedInputs){let v=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];p=`${v[0]>1}_${v[1]>1}`}else if(u.length===2&&!e.packedInputs)c=`${u[0]>1}_${u[1]>1}`;else if(u.length>2&&!e.packedInputs){let v=w.computeStrides(u);f=`${v[0]===l[1]}_${v[v.length-1]===l[1]}`}let m=i.shape.length,g=u.length===2&&w.arraysEqual(i.shape,l),y=w.sizeFromShape(i.shape)===1,A=N.getBroadcastDims(i.shape,a.shape),x=!e.packedInputs&&m===a.shape.length&&w.arraysEqual(l,a.texData.texShape),b=e.packedInputs||u.length>2?"":`${l[0]>1}_${l[1]>1}`;r+=`${m}_${x}_${d?h:""}_${u.length}_${y}_${A}_${g}_${p}_${c}_${f}_${b}_${o}`}else{let l=i.isUniform?"uniform":i.texData.texShape;r+=`${i.shape}_${l}_${o}`}});let n=e.userCode,s=e.constructor.name;return s+="_"+r+"_"+n+`${J().getNumber("WEBGL_VERSION")}`,s}function Za(e){return J().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var yK=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=Pa();this.outputShape=e,this.enableShapeUniforms=Za(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?M0(["r","c","d"],e):gl(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}},AK=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=Pa();this.outputShape=e,this.enableShapeUniforms=Za(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?M0(["r","c","d"],e):gl(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}},xK=class{constructor(e){this.variableNames=["A"],this.outTexUsage=3;let t=Pa();this.outputShape=e,this.userCode=`
      ${a4}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}},bK=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=3;let t=Pa();this.outputShape=e,this.userCode=`
      ${a4}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}},vK=class{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let a=Pa();this.outputShape=e,this.enableShapeUniforms=Za(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)"),this.userCode=`
      ${this.enableShapeUniforms?jy():Gy(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / texShape[1];
        int c = imod(flatIndex, texShape[1]);
        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
        vec4 values = ${a.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${a.output} = vec4(${r}, 0., 0., 0.);
      }
    `}},wK=class{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let a=Pa();this.outputShape=e,this.enableShapeUniforms=Za(this.outputShape.length);let r="",n="result";t&&(n="floor(result * 255. + 0.5)");for(let s=0;s<=1;s++)for(let i=0;i<=1;i++){let o=s*2+i;r+=`
          localCoords = coords;
          if(localCoords[2] + ${i} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${i};
          if (localCoords[1] + ${s} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${s};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${a.texture2D}(A, uv);

            if (offset == 0) {
              result[${o}] = values[0];
            } else if (offset == 1) {
              result[${o}] = values[1];
            } else if (offset == 2) {
              result[${o}] = values[2];
            } else {
              result[${o}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?jy():Gy(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${r}

          ${a.output} = ${n};
        }
    `}},i4={};ze(i4,{bindVertexProgramAttributeStreams:()=>m4,createBufferFromOutputTexture:()=>A4,createFloat16MatrixTexture:()=>h4,createFloat16PackedMatrixTexture:()=>f4,createFloat32MatrixTexture:()=>d4,createIndexBuffer:()=>u4,createPackedMatrixTexture:()=>c4,createUnsignedBytesMatrixTexture:()=>p4,createVertexBuffer:()=>l4,createVertexShader:()=>o4,downloadByteEncodedFloatMatrixFromOutputTexture:()=>b4,downloadFloat32MatrixFromBuffer:()=>x4,downloadMatrixFromPackedOutputTexture:()=>w4,downloadPackedMatrixFromBuffer:()=>v4,getInternalFormatForFloat16MatrixTexture:()=>Xy,getInternalFormatForFloat16PackedMatrixTexture:()=>Yy,getInternalFormatForFloat32MatrixTexture:()=>qy,getInternalFormatForPackedMatrixTexture:()=>Zy,getInternalFormatForUnsignedBytesMatrixTexture:()=>Ky,uploadDenseMatrixToTexture:()=>g4,uploadPixelDataToTexture:()=>y4});function o4(e){let t=Pa(),a=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return _6(e,a)}function l4(e){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return P6(e,t)}function u4(e){let t=new Uint16Array([0,1,2,2,1,3]);return L6(e,t)}function np(e,t,a,r,n,s){B6(t,a);let i=W6(e),o=e.TEXTURE_2D;return ve(e,()=>e.bindTexture(o,i)),ve(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),ve(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),ve(e,()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST)),ve(e,()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST)),J().getNumber("WEBGL_VERSION")===1?ve(e,()=>e.texImage2D(o,0,r,t,a,0,n,s,null)):ve(e,()=>e.texStorage2D(o,1,r,t,a)),ve(e,()=>e.bindTexture(e.TEXTURE_2D,null)),{texture:i,texShape:[a,t]}}function qy(e){return e.internalFormatFloat}function d4(e,t,a,r){let[n,s]=rp(t,a);return np(e,n,s,qy(r),r.textureFormatFloat,e.FLOAT)}function Xy(e){return e.internalFormatHalfFloat}function h4(e,t,a,r){let[n,s]=rp(t,a);return np(e,n,s,Xy(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function Ky(e){return e.downloadTextureFormat}function p4(e,t,a,r){let[n,s]=rp(t,a);return np(e,n,s,Ky(r),e.RGBA,e.UNSIGNED_BYTE)}function Zy(e){return e.internalFormatPackedFloat}function c4(e,t,a,r){let[n,s]=sd(t,a);return np(e,n,s,Zy(r),e.RGBA,e.FLOAT)}function Yy(e){return e.internalFormatPackedHalfFloat}function f4(e,t,a,r){let[n,s]=sd(t,a);return np(e,n,s,Yy(r),e.RGBA,r.textureTypeHalfFloat)}function m4(e,t,a){return ve(e,()=>e.bindBuffer(e.ARRAY_BUFFER,a)),Fg(e,t,"clipSpacePos",a,3,20,0)&&Fg(e,t,"uv",a,2,20,12)}function g4(e,t,a,r,n,s){ve(e,()=>e.bindTexture(e.TEXTURE_2D,t));let i,o,l;n instanceof Uint8Array?(i=new Uint8Array(a*r*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(a*r*4),o=e.FLOAT,l=s.internalFormatPackedFloat),i.set(n),J().getNumber("WEBGL_VERSION")===2?ve(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,a,r,e.RGBA,o,i)):ve(e,()=>e.texImage2D(e.TEXTURE_2D,0,l,a,r,0,e.RGBA,o,i)),ve(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function y4(e,t,a){ve(e,()=>e.bindTexture(e.TEXTURE_2D,t)),a.data instanceof Uint8Array?J().getNumber("WEBGL_VERSION")===2?ve(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,a.width,a.height,e.RGBA,e.UNSIGNED_BYTE,a.data)):ve(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,a.width,a.height,0,e.RGBA,e.UNSIGNED_BYTE,a.data)):J().getNumber("WEBGL_VERSION")===2?ve(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,a)):ve(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,a)),ve(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function A4(e,t,a,r){let n=e.createBuffer();ve(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,n));let s=4*4*t*a;return ve(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ)),ve(e,()=>e.readPixels(0,0,a,t,e.RGBA,e.FLOAT,0)),ve(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),n}function x4(e,t,a){let r=e,n=new Float32Array(a);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,n),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),n}function b4(e,t,a,r){let[n,s]=rp(t,a),i=4,o=new Uint8Array(yX(t*a,i));return ve(e,()=>e.readPixels(0,0,n,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,o)),new Float32Array(o.buffer)}function v4(e,t,a,r,n,s,i,o){let l=e,d=new Float32Array(AX(s,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,d),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),d}function w4(e,t,a){let r=new Float32Array(t*a*4);return ve(e,()=>e.readPixels(0,0,a,t,e.RGBA,e.FLOAT,r)),r}var Zd=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];let t=J().getNumber("WEBGL_VERSION");e!=null?(this.gl=e,Vy(t,e)):this.gl=nn(t);let a="WEBGL_color_buffer_float",r="EXT_color_buffer_half_float";if(J().getNumber("WEBGL_VERSION")===1){let n="OES_texture_float",s="OES_texture_half_float";if(this.textureFloatExtension=Wd(this.gl,n),yr(this.gl,s))this.textureHalfFloatExtension=Wd(this.gl,s);else if(J().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(a),yr(this.gl,r))this.colorBufferHalfFloatExtension=Wd(this.gl,r);else if(J().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(a="EXT_color_buffer_float",yr(this.gl,a))this.colorBufferFloatExtension=this.gl.getExtension(a);else if(yr(this.gl,r))this.colorBufferHalfFloatExtension=this.gl.getExtension(r);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=l4(this.gl),this.indexBuffer=u4(this.gl),this.framebuffer=V6(this.gl),this.textureConfig=Uy(this.gl,this.textureHalfFloatExtension)}get debug(){return J().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;ve(e,()=>e.finish()),ve(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),ve(e,()=>e.deleteFramebuffer(this.framebuffer)),ve(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),ve(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),ve(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),d4(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),h4(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),p4(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),y4(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,a,r){this.throwIfDisposed(),g4(this.gl,e,t,a,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),f4(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),c4(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&($g(this.gl,this.framebuffer),this.outputTexture=null),ve(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,a){return this.downloadMatrixDriver(e,()=>b4(this.gl,t,a,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,a,r,n,s){return v4(this.gl,e,t,a,r,n,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return x4(this.gl,e,t)}createBufferFromTexture(e,t,a){this.bindTextureToFrameBuffer(e);let r=A4(this.gl,t,a,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,a;if(J().getBool("WEBGL_FENCE_API_ENABLED")){let r=e,n=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),a=()=>{let s=r.clientWaitSync(n,0,0);return s===r.ALREADY_SIGNALED||s===r.CONDITION_SATISFIED},t=n}else J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),a=()=>this.isQueryAvailable(t,J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):a=()=>!0;return{query:t,isFencePassed:a}}downloadMatrixFromPackedTexture(e,t,a){return this.downloadMatrixDriver(e,()=>w4(this.gl,t,a))}createProgram(e){this.throwIfDisposed();let t=this.gl;this.vertexShader==null&&(this.vertexShader=o4(t));let a=O6(t);return ve(t,()=>t.attachShader(a,this.vertexShader)),ve(t,()=>t.attachShader(a,e)),D6(t,a),this.debug&&hc(t,a),this.vertexAttrsAreBound||(this.setProgram(a),this.vertexAttrsAreBound=m4(t,this.program,this.vertexBuffer)),a}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&ve(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&hc(this.gl,this.program),ve(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,a=!0){return this.throwIfDisposed(),a?G6(this.gl,e,t):j6(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),ve(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,a){this.throwIfDisposed(),this.throwIfNoProgram(),H6(this.gl,e,t,a)}setOutputMatrixTexture(e,t,a){this.setOutputMatrixTextureDriver(e,a,t)}setOutputPackedMatrixTexture(e,t,a){this.throwIfDisposed();let[r,n]=sd(t,a);this.setOutputMatrixTextureDriver(e,r,n)}setOutputMatrixWriteRegion(e,t,a,r){this.setOutputMatrixWriteRegionDriver(a,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,a,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&hc(this.gl,this.program),Bd(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&this.debugValidate(),ve(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),ve(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Wd(this.gl,J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let a=this.gl,r=this.getQueryTimerExtensionWebGL2(),n=a.createQuery();return a.beginQuery(r.TIME_ELAPSED_EXT,n),n}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let t=this.gl,a=this.getQueryTimerExtensionWebGL2();t.endQuery(a.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await w.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){let a=this.gl;return a.getQueryParameter(e,a.QUERY_RESULT)/1e6}else{let a=this.getQueryTimerExtensionWebGL1();return a.getQueryObjectEXT(e,a.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){let a=this.gl,r=this.getQueryTimerExtensionWebGL2(),n=a.getQueryParameter(e,a.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),n&&!this.disjoint}else{let a=this.getQueryTimerExtensionWebGL1(),r=a.getQueryObjectEXT(e,a.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(a.GPU_DISJOINT_EXT)),r&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=kK(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:a}=this.itemsToPoll[t];a()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),!(this.itemsToPoll.length>1)&&w.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),pc(this.gl,e,this.framebuffer),this.debug&&Bd(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(pc(this.gl,this.outputTexture,this.framebuffer),this.debug&&Bd(this.gl)):$g(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let a=t();return this.unbindTextureToFrameBuffer(),a}setOutputMatrixTextureDriver(e,t,a){this.throwIfDisposed();let r=this.gl;pc(r,e,this.framebuffer),this.debug&&Bd(r),this.outputTexture=e,ve(r,()=>r.viewport(0,0,t,a)),ve(r,()=>r.scissor(0,0,t,a))}setOutputMatrixWriteRegionDriver(e,t,a,r){this.throwIfDisposed(),ve(this.gl,()=>this.gl.scissor(e,t,a,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function kK(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}var{addImpl:IK,bincountImpl:k4,bincountReduceImpl:SK,ceilImpl:TK,concatImpl:CK,equalImpl:NK,expImpl:EK,expm1Impl:RK,floorImpl:FK,gatherNdImpl:$K,gatherV2Impl:MK,greaterImpl:_K,greaterEqualImpl:zK,lessImpl:OK,lessEqualImpl:DK,linSpaceImpl:PK,logImpl:LK,maxImpl:WK,maximumImpl:BK,minimumImpl:VK,multiplyImpl:UK,negImpl:GK,notEqualImpl:jK,prodImpl:HK,rangeImpl:qK,rsqrtImpl:XK,sigmoidImpl:KK,simpleAbsImpl:I4,sliceImpl:ZK,sparseFillEmptyRowsImpl:YK,sparseReshapeImpl:JK,sparseSegmentReductionImpl:S4,sqrtImpl:QK,stridedSliceImpl:eZ,stringNGramsImpl:tZ,stringSplitImpl:aZ,stringToHashBucketFastImpl:rZ,subImpl:nZ,tileImpl:sZ,topKImpl:iZ,transposeImpl:Jy,uniqueImpl:oZ}=F0;function T4(e,t){return["x","y","z","w","u","v"].slice(0,t).map(a=>`${e}.${a}`)}function Ra(e,t){return t===1?[e]:T4(e,t)}function lZ(e,t){if(e===1)return"rc";let a="";for(let r=0;r<e;r++)a+=t[r],r<e-1&&(a+=",");return a}var uZ=class{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=Za(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let t=Ra("rc",this.rank),a=yt(this.rank),r=this.getOutOfBoundsCondition(t),n=this.getSetup(t),s=this.getOutput(t);this.userCode=`
        void main() {
          ${a} rc = getOutputCoords();

          if(${r}) {
            setOutput(vec4(0));
          } else {
            ${n}

            setOutput(vec4(${s}));
          }
        }
      `}}getSourceCoordsArr(e){let t=[];for(let a=0;a<=1;a++)for(let r=0;r<=1;r++){let n=`${a===0?"r":"rp1"}, ${r===0?"c":"cp1"}`;for(let s=2;s<this.rank;s++)n=`${e[e.length-1-s]},`+n;t.push(n)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let a=this.rank-2;a<this.rank;a++)t+=`${e[a]} >= ${this.enableShapeUniforms?`outShape[${a}]`:this.outputShape[a]}`,a<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";let t=e.slice(-2),a=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${a};
      bool rEdge = rp1 >= ${r};
    `}getOutput(e){let t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}},C4=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=Za(this.outputShape.length);let a="";for(let r=0;r<4;r++){let n="thisRC = rc;";r%2===1&&(n+="thisRC.z += 1;"),r>1&&(n+="thisRC.y += 1;"),a+=`
        ${n}
        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${r}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${r>0?"}":""}
      `}this.userCode=`
      ${dZ(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?jy():Gy(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${a}

        setOutput(result);
      }
    `}};function dZ(e,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?FX(["r","c","d"],"inputShape"):gl(["r","c","d"],e)}
      return ivec3(r, c, d);
    }
  `}var hZ=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,a){let r=qx(t,a),n=Xx(e,r,a);n in this.freeTextures||(this.freeTextures[n]=[]),n in this.usedTextures||(this.usedTextures[n]=[]);let s=Hx(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,a);if(this.freeTextures[n].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();let o=this.freeTextures[n].shift();return this.usedTextures[n].push(o),o}let i;return r===3?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===4?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===1?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===0?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===2&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[n].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(e,t,a,r){if(this.freeTextures==null)return;let n=qx(a,r),s=Xx(t,n,r);s in this.freeTextures||(this.freeTextures[s]=[]);let i=Hx(t,n,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=J().get("WEBGL_DELETE_TEXTURE_THRESHOLD");o!==-1&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let l=this.usedTextures[s],d=l.indexOf(e);if(d<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(d,1),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(let e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function pZ(e,t){let a=e;if(t===a.R32F)return 4;if(t===a.R16F)return 2;if(t===a.RGBA32F||t===e.RGBA)return 16;if(t===a.RGBA16F)return 8;if(t===a.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function Hx(e,t,a,r,n){let s=cZ(t,r),i;if(n){let[l,d]=sd(e[0],e[1]);i=l*d}else{let[l,d]=rp(e[0],e[1]);i=l*d}let o=pZ(a,s);return i*o}function cZ(e,t){switch(e){case 3:return Zy(t);case 4:return Yy(t);case 1:return qy(t);case 0:return Xy(t);case 2:return Ky(t);default:throw new Error(`Unknown physical texture type ${e}`)}}function fZ(e){return J().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?3:1:e?4:0}function qx(e,t){if(e===1)return 3;if(e===0||e==null)return fZ(t);if(e===3||e===2)return 2;throw new Error(`Unknown logical texture type ${e}`)}function Xx(e,t,a){return`${e[0]}_${e[1]}_${t}_${a}`}var Wn=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=Za(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},Wr="if (isnan(x)) return x;",mZ="return x;",Kx="return abs(x);",gZ="return (x >= 0.0) ? x : (exp(x) - 1.0);",yZ=Wr+`
  return (x < 0.0) ? 0.0 : x;
`,AZ=Wr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,zl="return x;",xZ="return 1.0 / (1.0 + exp(-1.0 * x));",bZ="return x;",vZ=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,wZ=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,kZ=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,IZ="return 1.0 / (1.0 + exp(-1.0 * x));",to=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=Za(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}},SZ=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=Za(this.outputShape.length);let t=e.length,a=Ra("rc",t),r=yt(t),n=lZ(t,a),s=a.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`
      void main() {
        ${r} rc = getOutputCoords();
        vec4 packedInput = getA(${n});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}},TZ=Pr.whereImpl,CZ=1e-7,NZ=1e-4,cm={};function EZ(e){return e in cm||(cm[e]={}),cm[e]}var RZ=J().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),FZ=600;function $Z(){return J().global.screen==null?1024:J().global.screen.height*J().global.screen.width*window.devicePixelRatio*FZ/1024/1024}var N4=class extends vu{constructor(e){super();if(this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!J().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof Zd)t=e;else{let a=nn(J().getNumber("WEBGL_VERSION"),e);t=new Zd(a)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let a=nn(J().getNumber("WEBGL_VERSION"));t=new Zd(a),this.binaryCache=EZ(J().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new hZ(this.gpgpu),this.numMBBeforeWarning=$Z(),this.texData=new fh(this,sr())}nextDataId(){return N4.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,a){if((J().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||J().getBool("DEBUG"))&&this.checkNumericalProblems(e),a==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:a,values:e,usage:1,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,a,r,n){if(J().getBool("DEBUG")&&this.checkNumericalProblems(t),r==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:a,dtype:r,values:t,usage:1,refCount:n})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:a,dtype:r,complexTensorInfos:n,slice:s,shape:i,isPacked:o}=t;if(s!=null){let h;o?h=new to(i,zl):h=new Wn(i,zl);let p=this.runWebGLProgram(h,[{dataId:e,shape:i,dtype:r}],r),c=this.readSync(p.dataId);return this.disposeIntermediateTensorInfo(p),c}if(a!=null)return this.convertAndCacheOnCPU(e);if(r==="string")return a;let l=this.activeTimers!=null,d;l&&(d=w.now());let u;if(r==="complex64"){let h=this.readSync(n.real.dataId),p=this.readSync(n.imag.dataId);u=N.mergeRealAndImagArrays(h,p)}else u=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=w.now()-d),this.convertAndCacheOnCPU(e,u)}async read(e){if(this.pendingRead.has(e)){let c=this.pendingRead.get(e);return new Promise(f=>c.push(f))}let t=this.texData.get(e),{values:a,shape:r,slice:n,dtype:s,complexTensorInfos:i,isPacked:o}=t;if(n!=null){let c;o?c=new to(r,zl):c=new Wn(r,zl);let f=this.runWebGLProgram(c,[{dataId:e,shape:r,dtype:s}],s),m=this.read(f.dataId);return this.disposeIntermediateTensorInfo(f),m}if(a!=null)return this.convertAndCacheOnCPU(e);if(J().getBool("DEBUG")&&!J().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&J().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l=null,d;if(s!=="complex64"&&J().get("WEBGL_BUFFER_SUPPORTED")){d=this.decode(e);let c=this.texData.get(d.dataId);l=this.gpgpu.createBufferFromTexture(c.texture.texture,...Up(r))}this.pendingRead.set(e,[]),s!=="complex64"&&await this.gpgpu.createAndWaitForFence();let u;if(s==="complex64"){let c=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),f=c[0],m=c[1];u=N.mergeRealAndImagArrays(f,m)}else if(l==null)u=this.getValuesFromTexture(e);else{let c=w.sizeFromShape(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(l,c)}if(d!=null&&this.disposeIntermediateTensorInfo(d),l!=null){let c=this.gpgpu.gl;ve(c,()=>c.deleteBuffer(l))}let h=this.convertAndCacheOnCPU(e,u),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach(c=>c(h)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&sr().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){let a=this.texData.get(e),{values:r,shape:n,slice:s,dtype:i,isPacked:o,texture:l}=a;if(i==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(s!=null){let p;o?p=new to(n,zl):p=new Wn(n,zl);let c=this.runWebGLProgram(p,[{dataId:e,shape:n,dtype:i}],i),f=this.readToGPU(c,t);return this.disposeIntermediateTensorInfo(c),f}if(l==null)throw r!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let d=this.decode(e,t.customTexShape),u=sr().makeTensorFromDataId(d.dataId,d.shape,d.dtype),h=this.texData.get(d.dataId);return Ze({tensorRef:u},h.texture)}bufferSync(e){let t=this.readSync(e.dataId),a=t;if(e.dtype==="string")try{a=t.map(r=>w.decodeString(r))}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Le(e.shape,e.dtype,a)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){let a=e[t];if(!$6(a))throw J().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${a} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${a} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:a,isPacked:r}=this.texData.get(e),n=w.sizeFromShape(t);if(J().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let h=this.decode(e),p=this.texData.get(h.dataId),c=this.gpgpu.downloadMatrixFromPackedTexture(p.texture.texture,...Up(t)).subarray(0,n);return this.disposeIntermediateTensorInfo(h),c}let s=J().getBool("WEBGL_PACK")&&r===!0,i=s?cc(t):t,o=s?new bK(i):new xK(i),l=this.runWebGLProgram(o,[{shape:i,dtype:a,dataId:e}],"float32"),d=this.texData.get(l.dataId),u=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(d.texture.texture,d.texShape[0],d.texShape[1]).subarray(0,n);return this.disposeIntermediateTensorInfo(l),u}timerAvailable(){return J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let t=this.activeTimers,a=[],r=!1;this.programTimersStack==null?(this.programTimersStack=a,r=!0):this.activeTimers.push(a),this.activeTimers=a,e();let n=w.flatten(this.activeTimers.map(o=>o.query)).filter(o=>o!=null),s=w.flatten(this.activeTimers.map(o=>o.name)).filter(o=>o!=null);this.activeTimers=t,r&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let o=await Promise.all(n);i.kernelMs=w.sum(o),i.getExtraProfileInfo=()=>o.map((l,d)=>({name:s[d],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:w.now(),endMs:null}}endTimer(e){return J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=w.now(),e)}async getQueryTime(e){if(J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:a}=this.texData.get(e);return a!=null&&(this.disposeData(a.real.dataId,t),this.disposeData(a.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:a,texShape:r,usage:n,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),t!=null&&(this.numBytesInGPU-=this.computeBytes(r,a),this.textureManager.releaseTexture(t,r,n,s)));let d=this.texData.get(e);d.texture=null,d.texShape=null,d.isPacked=!1,d.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=RZ){return J().getBool("WEBGL_CPU_FORWARD")&&e.every(a=>this.texData.get(a.dataId).texture==null&&w.sizeFromShape(a.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){N.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return TZ(e.shape,t)}packedUnaryOp(e,t,a){let r=new to(e.shape,t),n=this.compileAndRun(r,[e],a);return sr().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){let r=I4(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,r)}if(J().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Kx,e.dtype);let t=new Wn(e.shape,Kx),a=this.compileAndRun(t,[e]);return sr().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}makeTensorInfo(e,t,a){let r;if(t==="string"&&a!=null&&a.length>0&&w.isString(a[0])){let n=a.map(s=>w.encodeString(s));r=this.write(n,e,t)}else r=this.write(a,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,a){let{dataId:r}=this.makeTensorInfo(e,t,a);return sr().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){let t=new SZ(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new uZ(e.shape),a=!0;return this.runWebGLProgram(t,[e],e.dtype,null,a)}packedReshape(e,t){let a=[yo(e.shape),...Ao(e.shape)],r={dtype:e.dtype,shape:a,dataId:e.dataId},n=[yo(t),...Ao(t)],s=new C4(n,a),i=!0,o=[a],l=this.runWebGLProgram(s,[r],e.dtype,o,i);return{dataId:l.dataId,shape:t,dtype:l.dtype}}decode(e,t){let a=this.texData.get(e),{isPacked:r,shape:n,dtype:s}=a;if(t!=null){let h=w.sizeFromShape(n),p=t[0]*t[1]*4;w.assert(h<=p,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let i=cc(n),o;r?o=new AK(i):o=new yK(i);let l=!0,d=[t!=null?t:Up(i)],u=this.runWebGLProgram(o,[{shape:i,dtype:s,dataId:e}],s,d,l,t);return{dtype:s,shape:n,dataId:u.dataId}}runWebGLProgram(e,t,a,r,n=!1,s){let i=this.makeTensorInfo(e.outputShape,a),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===0){let g=s!=null?s:Up(e.outputShape);o.texShape=g.map(y=>y*2)}if(e.outTexUsage!=null&&(o.usage=e.outTexUsage),w.sizeFromShape(i.shape)===0)return o.values=w.getTypedArrayFromDType(i.dtype,0),i;let l=[],d=t.map(g=>{if(g.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let y=this.texData.get(g.dataId);if(y.texture==null){if(!e.packedInputs&&w.sizeFromShape(g.shape)<=J().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:g.shape,texData:null,isUniform:!0,uniformValues:y.values};e.packedInputs&&(y.isPacked=!0,y.shape=g.shape)}if(this.uploadToGPU(g.dataId),!!y.isPacked!=!!e.packedInputs)g=y.isPacked?this.unpackTensor(g):this.packTensor(g),l.push(g),y=this.texData.get(g.dataId);else if(y.isPacked&&!ph(y.shape,g.shape)){let A=g,x=g.shape;g.shape=y.shape,g=this.packedReshape(g,x),l.push(g),y=this.texData.get(g.dataId),A.shape=x}return{shape:g.shape,texData:y,isUniform:!1}});this.uploadToGPU(i.dataId);let u={shape:i.shape,texData:o,isUniform:!1},h=gK(e,d,u),p=this.getAndSaveBinary(h,()=>fK(this.gpgpu,e,d,u)),c=this.activeTimers!=null,f;c&&(f=this.startTimer()),mK(this.gpgpu,p,d,u,r),l.forEach(g=>this.disposeIntermediateTensorInfo(g)),c&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));let m=J().get("WEBGL_FLUSH_THRESHOLD");if(m>0){let g=w.now();g-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=g)}if(!J().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&n===!1){let g=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),g}return i}compileAndRun(e,t,a,r,n=!1){return a=a||t[0].dtype,this.runWebGLProgram(e,t,a,r,n)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(J().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement!="undefined"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=Z(()=>{if(!J().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=J().getBool("DEBUG");J().set("DEBUG",!1);let t=this.abs(Ie(1e-8)).dataSync()[0];if(J().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?CZ:NZ}uploadToGPU(e){let t=this.texData.get(e),{shape:a,dtype:r,values:n,texture:s,usage:i,isPacked:o}=t;if(s!=null)return;let l=this.activeTimers!=null,d;l&&(d=w.now());let u=t.texShape;if(u==null&&(u=K6(a,o),t.texShape=u),n!=null){let h=cc(a),p,c=u[1],f=u[0],m=n instanceof Uint8Array||n instanceof Uint8ClampedArray;(o||!m)&&([c,f]=sd(u[0],u[1])),o?p=new wK(h,m):p=new vK(h,m);let g=m?[f,c]:u,y=this.makeTensorInfo(g,r),A=this.texData.get(y.dataId);m?A.usage=2:A.usage=1,A.texShape=g,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(y.dataId),c,f,n);let x=[[f,c]],b=!0,v=this.runWebGLProgram(p,[y],r,x,b),T=this.texData.get(v.dataId);t.texture=T.texture,t.texShape=T.texShape,t.isPacked=T.isPacked,t.usage=T.usage,this.disposeIntermediateTensorInfo(y),this.texData.delete(v.dataId),t.values=null,l&&(this.uploadWaitMs+=w.now()-d)}else{let h=this.acquireTexture(u,i,r,o);t.texture=h}}convertAndCacheOnCPU(e,t){let a=this.texData.get(e),{dtype:r}=a;return this.releaseGPUData(e),t!=null&&(a.values=MZ(t,r)),a.values}acquireTexture(e,t,a,r){if(this.numBytesInGPU+=this.computeBytes(e,a),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let n=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${n} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*w.bytesPerElement(t)}},_0=N4;_0.nextDataId=0;function MZ(e,t){if(t==="float32"||t==="complex64")return e;if(t==="int32"||t==="bool"){let a=t==="int32"?new Int32Array(e.length):new Uint8Array(e.length);for(let r=0;r<a.length;++r)a[r]=Math.round(e[r]);return a}else throw new Error(`Unknown dtype ${t}`)}var _Z="0.0.0";function E4(){J().set("WEBGL_FORCE_F16_TEXTURES",!0)}zh.isBrowser()&&Zu("webgl",()=>new _0,2);var zZ={forceHalfFloat:E4},R4=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,yu=class{constructor(e,t,a){this.variableNames=["A","B"],this.outputShape=N.assertAndGetBroadcastShape(t,a),this.enableShapeUniforms=Za(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}},z0=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`,sp=class{constructor(e,t,a,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=N.assertAndGetBroadcastShape(t,a);let n=this.outputShape.length;this.enableShapeUniforms=Za(n);let s="";if(r)if(n===0||w.sizeFromShape(this.outputShape)===1)s=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(s=`
          ${yt(n)} coords = getOutputCoords();
        `,n===1)this.enableShapeUniforms?s+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:s+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let i=Ra("coords",n);this.enableShapeUniforms?s+=`
            bool nextRowOutOfBounds =
              (${i[n-2]} + 1) >= outShape[${n} - 2];
            bool nextColOutOfBounds =
              (${i[n-1]} + 1) >= outShape[${n} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:s+=`
            bool nextRowOutOfBounds =
              (${i[n-2]} + 1) >= ${this.outputShape[n-2]};
            bool nextColOutOfBounds =
              (${i[n-1]} + 1) >= ${this.outputShape[n-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${s}

        setOutput(result);
      }
    `}};function pr(e){let{inputs:t,backend:a}=e,{x:r}=t;return a.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var OZ={kernelName:ni,backendName:"webgl",kernelFunc:pr};function zi(e){let{inputs:t,backend:a}=e,{real:r,imag:n}=t,s=a.makeTensorInfo(r.shape,"complex64"),i=a.texData.get(s.dataId),o=pr({inputs:{x:r},backend:a}),l=pr({inputs:{x:n},backend:a});return i.complexTensorInfos={real:o,imag:l},s}var DZ={kernelName:gh,backendName:"webgl",kernelFunc:zi},F4="return (a < 0.) ? b * a : a;",$4=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function PZ(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{alpha:s}=r,i=a.makeTensorInfo([],"float32",w.createScalarValue(s,"float32")),o=J().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new sp($4,n.shape,i.shape):new yu(F4,n.shape,i.shape),l=a.runWebGLProgram(o,[n,i],"float32");return a.disposeIntermediateTensorInfo(i),l}var LZ={kernelName:si,backendName:"webgl",kernelFunc:PZ},M4="return (a < 0.) ? b * a : a;",_4=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function WZ(e){let{inputs:t,backend:a}=e,{x:r,alpha:n}=t,s=J().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new sp(_4,r.shape,n.shape):new yu(M4,r.shape,n.shape);return a.runWebGLProgram(s,[r,n],"float32")}var BZ={kernelName:yi,backendName:"webgl",kernelFunc:WZ},hd="if (isnan(x)) return x;",VZ=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,UZ=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;function tt({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:a,dtype:r}){return({inputs:n,backend:s})=>{let{x:i}=n,o=s,l=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&a!=null){let h=o.texData.get(i.dataId),p=a(h.values,l);return o.makeTensorInfo(i.shape,l,p)}let d=J().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null,u;return d?u=new to(i.shape,t):u=new Wn(i.shape,e),o.runWebGLProgram(u,[i],l)}}function ga({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:a=!1,supportsComplex:r=!1,cpuKernelImpl:n,dtype:s}){return({inputs:i,backend:o})=>{let{a:l,b:d}=i,u=o;if(r&&l.dtype==="complex64"){let f=u.texData.get(l.dataId),m=u.texData.get(d.dataId),[g,y]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(x=>{let[b,v]=x,T={dataId:b.dataId,dtype:b.dtype,shape:l.shape},C={dataId:v.dataId,dtype:v.dtype,shape:d.shape},E=new yu(e,l.shape,d.shape);return u.runWebGLProgram(E,[T,C],$a(b.dtype,v.dtype))}),A=zi({inputs:{real:g,imag:y},backend:u});return u.disposeIntermediateTensorInfo(g),u.disposeIntermediateTensorInfo(y),A}let h=s||$a(l.dtype,d.dtype);if((l.dtype==="string"||d.dtype==="string"||u.shouldExecuteOnCPU([l,d]))&&n!=null){let f=u.texData.get(l.dataId).values,m=u.texData.get(d.dataId).values,g=l.dtype==="string"?N.fromUint8ToStringArray(f):f,y=l.dtype==="string"?N.fromUint8ToStringArray(m):m,[A,x]=n(l.shape,d.shape,g,y,h),b=u.makeTensorInfo(x,h),v=u.texData.get(b.dataId);return v.values=A,b}let p=J().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null,c;return p?c=new sp(t,l.shape,d.shape,a):c=new yu(e,l.shape,d.shape),u.runWebGLProgram(c,[l,d],h)}}function O0(e,t=!1){if(e==="linear")return t?bZ:mZ;if(e==="relu")return t?wZ:yZ;if(e==="elu")return t?vZ:gZ;if(e==="relu6")return t?kZ:AZ;if(e==="prelu")return t?_4:M4;if(e==="leakyrelu")return t?$4:F4;if(e==="sigmoid")return t?IZ:xZ;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var z4=class{constructor(e,t,a,r=!1,n=!1,s=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a,this.enableShapeUniforms=Za(this.outputShape.length);let d=r?e[1]:e[2],u=Math.ceil(d/2),h=r?"i * 2, rc.y":"rc.y, i * 2",p=n?"rc.z, i * 2":"i * 2, rc.z",c=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=n?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],m="",g="";i&&(o?m=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:l?m=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:m=`vec4 activation(vec4 x) {
          ${i}
        }`,g="result = activation(result);");let y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let A="rc.x",x="rc.x";e[0]<t[0]?A=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`
      ${m}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${u}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${u}; i++) {
          int batchA = ${A};
          int batchB = ${x};
          vec4 a = getMatrixA(batchA, ${h});
          vec4 b = getMatrixB(batchB, ${p});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${c[0]} * ${f[0]});
          result += (${c[1]} * ${f[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${y}

        ${g}

        setOutput(result);
      }
    `}},Zx={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},Yx=class{constructor(e,t,a){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=N.assertAndGetBroadcastShape(t,a),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}},Jx="return a * b;";function Qy(e){let{inputs:t,backend:a}=e,{a:r,b:n}=t,s=N.upcastType(r.dtype,n.dtype);if(r.dtype==="complex64"){let o=a.texData.get(r.dataId),l=a.texData.get(n.dataId),d=new Yx(Zx.REAL,r.shape,n.shape),u=new Yx(Zx.IMAG,r.shape,n.shape),h=[{dataId:o.complexTensorInfos.real.dataId,dtype:o.complexTensorInfos.real.dtype,shape:r.shape},{dataId:o.complexTensorInfos.imag.dataId,dtype:o.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:n.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:n.shape}],p=a.runWebGLProgram(d,h,"float32"),c=a.runWebGLProgram(u,h,"float32"),f=zi({inputs:{real:p,imag:c},backend:a});return a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(c),f}if(a.shouldExecuteOnCPU([r,n])){let o=a.texData.get(r.dataId),l=a.texData.get(n.dataId),[d,u]=UK(r.shape,n.shape,o.values,l.values,s),h=a.makeTensorInfo(u,s),p=a.texData.get(h.dataId);return p.values=d,h}let i;return J().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new sp(Jx,r.shape,n.shape):i=new yu(Jx,r.shape,n.shape),a.runWebGLProgram(i,[r,n],s)}var GZ={kernelName:fi,backendName:"webgl",kernelFunc:Qy};function jZ(e,t,a){let r=[yo(e.shape),...Ao(e.shape)],n={dtype:e.dtype,shape:r,dataId:e.dataId},s=[yo(t),...Ao(t)],i=new C4(s,r),o=!0,l=[r],d=a.runWebGLProgram(i,[n],e.dtype,l,o);return{dataId:d.dataId,shape:t,dtype:d.dtype}}function be(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{shape:s}=r,i=a,o=w.sizeFromShape(n.shape),l=w.inferFromImplicitShape(s,o),d=w.sizeFromShape(l);w.assert(o===d,()=>`The new shape (${l}) has ${d} elements and the old shape (${n.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`);let u=i.texData.get(n.dataId);return u.isPacked&&!ph(n.shape,l)&&!(u.texture!==null&&ph(u.shape,l))?jZ(n,l,i):(i.incRef(n.dataId),{dataId:n.dataId,shape:l,dtype:n.dtype})}var HZ={kernelName:Xo,backendName:"webgl",kernelFunc:be},Qx=class{constructor(e,t){this.variableNames=["x"];let{windowSize:a,batchSize:r,inSize:n,outSize:s}=e;this.outputShape=[r,s];let i=Math.floor(a/4)*4,o=a%4,l="sumValue += dot(values, ones);";if(t!=null){let u=1/t;l=`sumValue += dot(values * ${w.isInt(u)?u.toPrecision(2):u}, ones);`}let d="";n%a>0&&(d=`
        if (inIdx < 0 || inIdx >= ${n}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${d}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${a};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${l}
        }

        int inIdx = inOffset + ${i};
        if (${o===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${l}
        } else if (${o===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${l}
        } else if (${o===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${l}
        }
        setOutput(sumValue);
      }
    `}},qZ=class{constructor(e,t){this.variableNames=["x"];let{windowSize:a,batchSize:r,inSize:n,outSize:s}=e;this.outputShape=[r,s];let i="0.0",o="";t==="prod"?i="1.0":t==="min"?(i="1.0 / 1e-20",o="min"):t==="max"&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?l="sumValue":t==="prod"?l="prodValue":t==="all"?l="allValue":t==="any"&&(l="anyValue");let d=Math.floor(a/4)*4,u=a%4,h=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${o}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${o}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,p="vec4";t==="all"?(i="1.0",h=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,p="bvec4"):t==="any"&&(i="0.0",h=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,p="bvec4");let c="";n%a>0&&(c=`
        if (inIdx < 0 || inIdx >= ${n}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${a};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${d}; i += 4) {
          int inIdx = inOffset + i;
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${h}
        }

        int inIdx = inOffset + ${d};
        if (${u===1}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${h}
        } else if (${u===2}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${h}
        } else if (${u===3}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${h}
        }
        setOutput(${l});
      }
    `}};function XZ(e){let t=[];for(;t.length===0||t[t.length-1].outSize!==1;){let a=t.length?t[t.length-1].outSize:e[1],r=N.computeOptimalWindowSize(a);t.push({inSize:a,windowSize:r,outSize:Math.ceil(a/r)})}return t}function Al(e,t,a,r){let n=XZ(e.shape),s=e;for(let i=0;i<n.length;i++){let{inSize:o,windowSize:l,outSize:d}=n[i],u,h;a==="mean"?u=i===0?new Qx({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:d},o):new Qx({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:d}):u=new qZ({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:d},a),h=s,s=r.runWebGLProgram(u,[s],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return s}var KZ=class{constructor(e,t){this.variableNames=["A"];let a=new Array(e.length);for(let s=0;s<a.length;s++)a[s]=e[t[s]];this.outputShape=a,this.rank=a.length;let r=yt(this.rank),n=ZZ(t);this.userCode=`
    void main() {
      ${r} resRC = getOutputCoords();
      setOutput(getA(${n}));
    }
    `}};function ZZ(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let a=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let n=0;n<e.length;n++)r[e[n]]=a[n];return r.join()}var YZ=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let a=new Array(e.length);for(let d=0;d<a.length;d++)a[d]=e[t[d]];if(this.outputShape=a,this.rank=a.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let r=yt(this.rank),n=T4("rc",this.rank),s=new Array(this.rank);for(let d=0;d<t.length;d++)s[t[d]]=n[d];let i=`vec2(${s.slice(-2).join()})`,o=`++${n[this.rank-1]} < ${a[this.rank-1]}`,l=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`
    void main() {
      ${r} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${l};
      if(${o}) {
        result[1] = ${l};
      }
      --${n[this.rank-1]};
      if(++${n[this.rank-2]} < ${a[this.rank-2]}) {
        result[2] = ${l};
        if(${o}) {
          result[3] = ${l};
        }
      }
      setOutput(result);
    }
    `}};function D0(e,t,a){let r=J().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new YZ(e.shape,t):new KZ(e.shape,t);return a.runWebGLProgram(r,[e],e.dtype)}function JZ(e,t,a,r){let n=t,s=e.shape.length,i=w.parseAxisParam(n,e.shape),o=i,l=N.getAxesPermutation(o,s),d=l!=null,u=e;d&&(u=D0(e,l,r),o=N.getInnerMostAxes(o.length,s)),N.assertAxesAreInnerMostDims("sum",o,s);let[h,p]=N.computeOutAndReduceShapes(u.shape,o),c=h;a&&(c=N.expandShapeToKeepDim(h,i));let f=w.sizeFromShape(p),m=w.sizeFromShape(e.shape)/f,g=be({inputs:{x:u},attrs:{shape:[m,f]},backend:r}),y=_h(e.dtype),A=Al(g,y,"sum",r),x=be({inputs:{x:A},attrs:{shape:c},backend:r});return r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(A),d&&r.disposeIntermediateTensorInfo(u),x}function P0(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{axis:s,keepDims:i}=r;return JZ(n,s,i,a)}var QZ={kernelName:Si,backendName:"webgl",kernelFunc:P0};function za(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{perm:s}=r,i=a,o=n.shape.length,l=new Array(o);for(let u=0;u<l.length;u++)l[u]=n.shape[s[u]];let d;if(i.shouldExecuteOnCPU([n])){let u=i.texData.get(n.dataId).values,h=Jy(u,n.shape,n.dtype,s,l);d=i.makeTensorInfo(l,n.dtype);let p=i.texData.get(d.dataId);p.values=h}else d=D0(n,s,i);return d}var eY={kernelName:Ri,backendName:"webgl",kernelFunc:za},O4=1e3;function Xc({a:e,b:t,transposeA:a,transposeB:r,backend:n,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){let d=e.shape.length,u=t.shape.length,h=a?e.shape[d-2]:e.shape[d-1],p=r?t.shape[u-1]:t.shape[u-2],c=a?e.shape[d-1]:e.shape[d-2],f=r?t.shape[u-2]:t.shape[u-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=w.sizeFromShape(m),A=w.sizeFromShape(g),x=dl.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([c,f]);w.assert(h===p,()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${a} and transposeB=${r} must match.`);let b=a?[y,h,c]:[y,c,h],v=r?[A,f,p]:[A,p,f],T=be({inputs:{x:e},backend:n,attrs:{shape:b}}),C=be({inputs:{x:t},backend:n,attrs:{shape:v}}),E=[T,C],R=Math.max(y,A),z=a?T.shape[1]:T.shape[2],F=s!=null,k=i!=null,D=l==="leakyrelu",_=l!=null?O0(l,!0):null,P=F||k||D||_!=null,j;if((c===1||f===1)&&z>O4&&P===!1){let B=T,W=C;a&&(B=za({inputs:{x:T},backend:n,attrs:{perm:[0,2,1]}}),E.push(B)),r&&(W=za({inputs:{x:C},backend:n,attrs:{perm:[0,2,1]}}),E.push(W));let ee=f!==1,te=f===1,re=B;ee&&(re=be({inputs:{x:B},backend:n,attrs:{shape:[R,z,1]}}),E.push(re));let Y=f===1?2:1,ae=W;te&&(ae=be({inputs:{x:W},backend:n,attrs:{shape:[R,1,z]}}),E.push(ae));let le=Qy({inputs:{a:re,b:ae},backend:n});j=P0({inputs:{x:le},backend:n,attrs:{axis:Y,keepDims:!0}}),E.push(le)}else{let B=$a(e.dtype,t.dtype),W=new z4(b,v,[R,c,f],a,r,F,_,k,D),ee=[T,C];if(s!=null&&ee.push(s),k&&ee.push(i),D){let te=n.makeTensorInfo([],"float32",w.createScalarValue(o,"float32"));ee.push(te),E.push(te)}j=n.runWebGLProgram(W,ee,B)}let L=be({inputs:{x:j},backend:n,attrs:{shape:x}});E.push(j);for(let B of E)n.disposeIntermediateTensorInfo(B);return L}function tY(e){let{inputs:t,backend:a,attrs:r}=e,{a:n,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:d,activation:u,leakyreluAlpha:h}=r;return Xc({a:n,b:s,transposeA:l,transposeB:d,backend:a,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:u})}var aY={kernelName:Ss,backendName:"webgl",kernelFunc:tY},eb="return abs(x);";function rY(e){let{inputs:t,backend:a}=e,{x:r}=t;if(a.shouldExecuteOnCPU([r])&&r.dtype!=="complex64"){let s=a.texData.get(r.dataId),i=I4(s.values);return a.makeTensorInfo(r.shape,r.dtype,i)}let n;return J().getBool("WEBGL_PACK_UNARY_OPERATIONS")?n=new to(r.shape,eb):n=new Wn(r.shape,eb),a.runWebGLProgram(n,[r],r.dtype)}var nY={kernelName:Io,backendName:"webgl",kernelFunc:rY},sY=Wr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,iY=tt({opSnippet:sY}),oY={kernelName:ku,backendName:"webgl",kernelFunc:iY},lY=Wr+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,uY=tt({opSnippet:lY}),dY={kernelName:Iu,backendName:"webgl",kernelFunc:uY},tb="return a + b;",hY=ga({opSnippet:tb,packedOpSnippet:tb,supportsComplex:!0,cpuKernelImpl:IK}),pY={kernelName:qn,backendName:"webgl",kernelFunc:hY},cY=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((n,s)=>`T${s}`);let a=[];this.variableNames.forEach(n=>{a.push(`float v${n} = get${n}AtOutCoords();`)});let r=this.variableNames.map(n=>`v${n}`).join(" + ");this.userCode=`
      void main() {
        ${a.join(`
        `)}

        float result = ${r};
        setOutput(result);
      }
    `}},fY=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((n,s)=>`T${s}`);let a=[];this.variableNames.forEach(n=>{a.push(`vec4 v${n} = get${n}AtOutCoords();`)});let r=this.variableNames.map(n=>`v${n}`).join(" + ");this.userCode=`
      void main() {
        ${a.join(`
        `)}

        vec4 result = ${r};
        setOutput(result);
      }
    `}};function gc(e){let{inputs:t,backend:a}=e,r=t;if(r.length===1)return pr({inputs:{x:r[0]},backend:a});if(r.length>J().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let o=Math.floor(r.length/2),l=gc({inputs:r.slice(0,o),backend:a}),d=gc({inputs:r.slice(o),backend:a});return gc({inputs:[l,d],backend:a})}let n=r.map(o=>o.dtype).reduce((o,l)=>$a(o,l)),s=r.map(o=>o.shape),i=J().getBool("WEBGL_PACK")?new fY(r[0].shape,s):new cY(r[0].shape,s);return a.runWebGLProgram(i,r,n)}var mY={kernelName:Ws,backendName:"webgl",kernelFunc:gc};function gY(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{axis:s,keepDims:i}=r,o=n.shape.length,l=w.parseAxisParam(s,n.shape),d=l,u=N.getAxesPermutation(d,o),h=n;u!=null&&(h=za({inputs:{x:n},backend:a,attrs:{perm:u}}),d=N.getInnerMostAxes(d.length,o)),N.assertAxesAreInnerMostDims("all",d,o);let[p,c]=N.computeOutAndReduceShapes(h.shape,d),f=w.sizeFromShape(c),m=be({inputs:{x:h},backend:a,attrs:{shape:[-1,f]}}),g=Al(m,m.dtype,"all",a),y;if(i){let A=N.expandShapeToKeepDim(p,l);y=be({inputs:{x:g},backend:a,attrs:{shape:A}})}else y=be({inputs:{x:g},backend:a,attrs:{shape:p}});return a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(g),u!=null&&a.disposeIntermediateTensorInfo(h),y}var yY={kernelName:Su,backendName:"webgl",kernelFunc:gY};function AY(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{axis:s,keepDims:i}=r,o=n.shape.length,l=w.parseAxisParam(s,n.shape),d=l,u=N.getAxesPermutation(d,o),h=n;u!=null&&(h=za({inputs:{x:n},backend:a,attrs:{perm:u}}),d=N.getInnerMostAxes(d.length,o)),N.assertAxesAreInnerMostDims("any",d,o);let[p,c]=N.computeOutAndReduceShapes(h.shape,d),f=w.sizeFromShape(c),m=be({inputs:{x:h},backend:a,attrs:{shape:[-1,f]}}),g=Al(m,m.dtype,"any",a),y;if(i){let A=N.expandShapeToKeepDim(p,l);y=be({inputs:{x:g},backend:a,attrs:{shape:A}})}else y=be({inputs:{x:g},backend:a,attrs:{shape:p}});return a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(g),u!=null&&a.disposeIntermediateTensorInfo(h),y}var xY={kernelName:Tu,backendName:"webgl",kernelFunc:AY},bY=class{constructor(e,t,a){this.variableNames=["A"];let{windowSize:r,batchSize:n,outSize:s}=e;a||this.variableNames.push("bestIndicesA"),this.outputShape=[n,s];let i=t==="max"?">":"<",o=a?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${r}; i++) {
          int inIdx = ${o};
          float candidate = getA(batch, inIdx);
          if (candidate ${i} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}},vY=class{constructor(e,t,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,w.assert(e.length>2,()=>`Packed arg${a.charAt(0).toUpperCase()+a.slice(1)} supports only inputs with rank above 2.`);let n=e[e.length-1],s=Math.ceil(n/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");let i=this.outputShape,o=i.length,l=yt(o),d=Ra("coords",o),u,h;if(s===1){h=o+1;let C=yt(h);u=`
        ${C} sourceLocR = ${C}(${d.join()}, 0);
        ++${d[o-1]};
        ${C} sourceLocG = ${C}(${d.join()}, 0);
        ++${d[o-2]};
        ${C} sourceLocA = ${C}(${d.join()}, 0);
        --${d[o-1]};
        ${C} sourceLocB = ${C}(${d.join()}, 0);
        --${d[o-2]};`}else h=o,u=`
        ${l} sourceLocR = coords;
        ++${d[o-1]};
        ${l} sourceLocG = coords;
        ++${d[o-2]};
        ${l} sourceLocA = coords;
        --${d[o-1]};
        ${l} sourceLocB = coords;
        --${d[o-2]};`;let p=["x","y","z","w","u","v"].slice(0,h),c="."+p[h-1],f=p.map(C=>"int "+C),m=Ra("sourceLocR",h-1).concat("inIdx.r"),g=Ra("sourceLocG",h-1).concat("inIdx.g"),y=Ra("sourceLocB",h-1).concat("inIdx.b"),A=Ra("sourceLocA",h-1).concat("inIdx.a"),x=a==="max"?"greaterThan":"lessThan",b=r?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),
                             getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${A.join()})));`,v=`vec4(
            getAChannel(${m.join()}),
            hasNextCol ? getAChannel(${g.join()}) : 0.,
            hasNextRow ? getAChannel(${y.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${A.join()}) : 0.)`,T=r?"":`
      float getBestIndicesAChannel(${f.join()}) {
        return getChannel(getBestIndicesA(${p.join()}),
                                          vec2(${p.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${f.join()}) {
        return getChannel(getA(${p.join()}),
                               vec2(${p.slice(-2).join()}));
      }
      ${T}
      void main() {
        ${l} coords = getOutputCoords();
        bool hasNextCol = ${d[o-1]} < ${i[o-1]-1};
        bool hasNextRow = ${d[o-2]} < ${i[o-2]-1};
        ${u}
        ivec4 srcIdx = ivec4(sourceLocR${c}, sourceLocG${c},
          sourceLocB${c}, sourceLocA${c}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${v};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${b}
          vec4 candidate = ${v};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function D4(e,t,a,r=null){let n=t.shape[0],s=t.shape[1];r!=null&&(n=r.shape[0],s=r.shape[1]);let i=N.computeOptimalWindowSize(s),o={windowSize:i,inSize:s,batchSize:n,outSize:Math.ceil(s/i)},l=new bY(o,a,r==null),d=[t];r!=null&&d.push(r);let u=e.runWebGLProgram(l,d,"int32");if(u.shape[1]===1)return u;let h=D4(e,t,a,u);return e.disposeIntermediateTensorInfo(u),h}function P4(e,t,a,r=null){let n=r!=null?r.shape:t.shape,s=n[n.length-1],i=N.computeOptimalWindowSize(s),o=new vY(n,i,a,r==null),l=r==null?[t]:[t,r],d=e.runWebGLProgram(o,l,"int32");if(d.shape.length===t.shape.length){let u=P4(e,t,a,d);return e.disposeIntermediateTensorInfo(d),u}return d}function L4(e,t,a,r){let n=[a];if(N.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),n,t.shape.length),!J().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let s=[],i=e.texData.get(t.dataId),o=i!==null&&i.isPacked,l=t;o&&(l=e.unpackTensor(t),s.push(l));let[d,u]=N.computeOutAndReduceShapes(l.shape,n),h=w.sizeFromShape(u),p=be({inputs:{x:l},backend:e,attrs:{shape:[-1,h]}});s.push(p);let c=D4(e,p,r);s.push(c);let f=be({inputs:{x:c},backend:e,attrs:{shape:d}});return s.forEach(m=>e.disposeIntermediateTensorInfo(m)),f}return P4(e,t,r)}function wY(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{axis:s}=r,i=w.parseAxisParam(s,n.shape),o=N.getAxesPermutation(i,n.shape.length),l=n,d=[];o!=null&&(l=za({inputs:{x:n},backend:a,attrs:{perm:o}}),d.push(l),i=N.getInnerMostAxes(i.length,l.shape.length)),N.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);let u=L4(a,l,i[0],"max");return d.forEach(h=>a.disposeIntermediateTensorInfo(h)),u}var kY={kernelName:Bs,backendName:"webgl",kernelFunc:wY};function IY(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{axis:s}=r,i=w.parseAxisParam(s,n.shape),o=N.getAxesPermutation(i,n.shape.length),l=n,d=[];o!=null&&(l=za({inputs:{x:n},backend:a,attrs:{perm:o}}),d.push(l),i=N.getInnerMostAxes(i.length,l.shape.length)),N.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);let u=L4(a,l,i[0],"min");return d.forEach(h=>a.disposeIntermediateTensorInfo(h)),u}var SY={kernelName:Cu,backendName:"webgl",kernelFunc:IY},TY=Wr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,CY=tt({opSnippet:TY}),NY={kernelName:Nu,backendName:"webgl",kernelFunc:CY},EY=Wr+"return log(x + sqrt(x * x + 1.0));",RY=tt({opSnippet:EY}),FY={kernelName:Eu,backendName:"webgl",kernelFunc:RY},$Y=Wr+`
  return atan(x);
`,MY=tt({opSnippet:$Y}),_Y={kernelName:Ru,backendName:"webgl",kernelFunc:MY},zY=VZ+`
  return atan(a, b);
`,OY=`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+UZ+`
  return result;
`,DY=ga({opSnippet:zY,packedOpSnippet:OY}),PY={kernelName:$u,backendName:"webgl",kernelFunc:DY},LY=Wr+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,WY=tt({opSnippet:LY}),BY={kernelName:Fu,backendName:"webgl",kernelFunc:WY},ch=class{constructor(e,t,a,r=!1,n=!1){if(this.variableNames=["x"],t==="avg"&&a)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,d=e.dilationWidth,u=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.top,c=e.padInfo.left;this.outputShape=e.outShape;let f=t==="avg",m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,y="0.0";if(f||(y="-1.0 / 1e-20"),a){let C=">=";this.userCode=`
        const ivec2 strides = ivec2(${i}, ${o});
        const ivec2 pads = ivec2(${p}, ${c});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${u};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${h};
                wC += ${d}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${C} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${r?n?m:g:`wR * ${h} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let A="max",x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(x="avgValue / count");let b=Math.floor(s/4)*4,v=s%4,T=`
      if (${f}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${A}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${o});
      const ivec2 pads = ivec2(${p}, ${c});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${u};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${b}; wC += 4) {
            int xC = xCCorner + wC * ${d};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${d}, d),
              getValue(batch, xR, xC + 2 * ${d}, d),
              getValue(batch, xR, xC + 3 * ${d}, d)
            );

            ${T}
          }

          int xC = xCCorner + ${b};
          if (${v===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${T}
          } else if (${v===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${d}, d),
              initializationValue,
              initializationValue
            );

            ${T}
          } else if (${v===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${d}, d),
              getValue(batch, xR, xC + 2 * ${d}, d),
              initializationValue
            );

            ${T}
          }
        }
        setOutput(${x});
      }
    `}},eA=class{constructor(e,t,a,r=!1,n=!1){if(this.variableNames=["x"],t==="avg"&&a)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,d=e.dilationDepth,u=e.dilationHeight,h=e.dilationWidth,p=e.effectiveFilterDepth,c=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;let A=t==="avg",x="0.0";if(A||(x="-1.0 / 1e-20"),a){let R=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${o}, ${l});
        const ivec3 pads = ivec3(${m}, ${g}, ${y});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${p};
              wD += ${d}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${c};
                wR += ${u}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${f};
                  wC += ${h}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${R} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${r?n?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${c} * ${f} +
                      wR * ${f} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let b="max",v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(v="avgValue / count");let T=Math.floor(s/4)*4,C=s%4,E=`
      if (${A}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${b}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${o}, ${l});
      const ivec3 pads = ivec3(${m}, ${g}, ${y});
      const float initializationValue = ${x};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${x});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${d}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${c};
            wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${T}; wC += 4) {
              int xC = xCCorner + wC * ${h};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                getValue(batch, xD, xR, xC + 2 * ${h}, ch),
                getValue(batch, xD, xR, xC + 3 * ${h}, ch)
              );

              ${E}
            }

            int xC = xCCorner + ${T};
            if (${C===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${C===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${C===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                getValue(batch, xD, xR, xC + 2 * ${h}, ch),
                initializationValue
              );

              ${E}
            }
          }
          setOutput(${v});
        }
      }
    `}};function VY(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t;id(n,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r,d=1;w.assert(N.eitherStridesOrDilationsAreOne(i,d),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`);let u=N.computePool2DInfo(n.shape,s,i,d,o,l);if(u.filterWidth===1&&u.filterHeight===1&&w.arraysEqual(u.inShape,u.outShape))return pr({inputs:{x:n},backend:a});let h=new ch(u,"avg",!1);return a.runWebGLProgram(h,[n],"float32")}var UY={kernelName:Vs,backendName:"webgl",kernelFunc:VY};function GY(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:d}=r,u=[1,1,1],h=N.computePool3DInfo(n.shape,s,i,u,o,l,d),p=new eA(h,"avg",!1);return a.runWebGLProgram(p,[n],"float32")}var jY={kernelName:mh,backendName:"webgl",kernelFunc:GY},HY=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,a=e.filterWidth,r=e.strideHeight,n=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,d=o-1-e.padInfo.top,u=l-1-e.padInfo.left,h=1/(t*a);this.userCode=`
      const ivec2 pads = ivec2(${d}, ${u});
      const float avgMultiplier = float(${h});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
            wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},qY=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,a=e.filterHeight,r=e.filterWidth,n=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,d=e.dilationWidth,u=e.effectiveFilterDepth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,c=u-1-e.padInfo.front,f=h-1-e.padInfo.top,m=p-1-e.padInfo.left,g=1/(t*a*r);this.userCode=`
      const ivec3 pads = ivec3(${c}, ${f}, ${m});
      const float avgMultiplier = float(${g});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${u};
            wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${n}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${h};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${d}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function XY(e){let{inputs:t,backend:a,attrs:r}=e,{dy:n,input:s}=t,i=s,{filterSize:o,strides:l,pad:d,dimRoundingMode:u}=r,h=[1,1,1],p=N.computePool3DInfo(i.shape,o,l,h,d,u),c=new qY(p);return a.runWebGLProgram(c,[n],i.dtype)}var KY={kernelName:uf,backendName:"webgl",kernelFunc:XY};function ZY(e){let{inputs:t,backend:a,attrs:r}=e,{dy:n,input:s}=t,i=s;id([n,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:d}=r,u=N.computePool2DInfo(i.shape,o,l,1,d),h=new HY(u);return a.runWebGLProgram(h,[n],i.dtype)}var YY={kernelName:lf,backendName:"webgl",kernelFunc:ZY};function JY(e){let{inputs:t,backend:a,attrs:r}=e,{a:n,b:s}=t,{transposeA:i,transposeB:o}=r;return Xc({a:n,b:s,transposeA:i,transposeB:o,backend:a})}var QY={kernelName:Us,backendName:"webgl",kernelFunc:JY},eJ=class{constructor(e,t,a,r,n,s){this.outputShape=[],this.variableNames=["x","mean","variance"],N.assertAndGetBroadcastShape(e,t),N.assertAndGetBroadcastShape(e,a);let i="0.0";r!=null&&(N.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";n!=null&&(N.assertAndGetBroadcastShape(e,n),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${o};
        float inv = scale * inversesqrt(variance + float(${s}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}},tJ=class{constructor(e,t,a,r,n,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],N.assertAndGetBroadcastShape(e,t),N.assertAndGetBroadcastShape(e,a);let i="vec4(0.0)";r!=null&&(N.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";n!=null&&(N.assertAndGetBroadcastShape(e,n),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${o};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${s}));

        setOutput((x - mean) * inv + offset);
      }
    `}},aJ=({inputs:e,backend:t,attrs:a})=>{let{x:r,mean:n,variance:s,offset:i,scale:o}=e;w.assert(n.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),w.assert(i==null||n.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),w.assert(o==null||n.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=a;l==null&&(l=.001);let d=[r,n,s],u=null;i!=null&&(u=i.shape,d.push(i));let h=null;o!=null&&(h=o.shape,d.push(o));let p=J().getBool("WEBGL_PACK_NORMALIZATION")?new tJ(r.shape,n.shape,s.shape,u,h,l):new eJ(r.shape,n.shape,s.shape,u,h,l);return t.runWebGLProgram(p,d,d[0].dtype)},rJ={kernelName:ai,backendName:"webgl",kernelFunc:aJ},nJ=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=yt(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let a=sJ(this.rank),r,n=e.map((s,i)=>`sourceLoc.${zg[i]} = start[${i}] + coords.${zg[i]};`);r=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${n.join(`
`)}
      `,this.userCode=`
      void main() {
        ${r}
        setOutput(getSource(${a}));
      }
    `}},zg=["x","y","z","w","u","v"];function sJ(e){if(e===1)return"sourceLoc";if(e<=6)return zg.slice(0,e).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}var iJ=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=yt(this.rank),a=Ra("coords",this.rank),r=Ra("sourceLoc",this.rank),n=this.rank===1?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${n})`,i=`
      result.x = ${s};
      if (++${a[this.rank-1]} < ${e[this.rank-1]}) {
        ++${r[this.rank-1]};
        result.y = ${s};
        --${r[this.rank-1]};
      }
    `,o=this.rank===1?"":`
      --${a[this.rank-1]};
      if (++${a[this.rank-2]} < ${e[this.rank-2]}) {
        ++${r[this.rank-2]};
        result.z = ${s};
        if (++${a[this.rank-1]} < ${e[this.rank-1]}) {
          ++${r[this.rank-1]};
          result.w = ${s};
        }
      }
    `,l=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((d,u)=>`start[${u}]`).join()});`:e.map((d,u)=>`${r[u]} = ${a[u]} + start[${u}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${l}
        vec4 result = vec4(0.);
        ${i}
        ${o}
        setOutput(result);
      }
    `}};function oJ(e,t,a,r){let n=r.texData.get(e.dataId),s=r.makeTensorInfo(a,e.dtype),i=r.texData.get(s.dataId);Object.assign(i,n),i.refCount=1,i.shape=a,i.dtype=e.dtype;let o=Ft.computeFlatOffset(t,w.computeStrides(e.shape));n.slice&&(o+=n.slice.flatOffset),i.slice={flatOffset:o,origDataId:n.slice&&n.slice.origDataId||e.dataId};let l=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,l+1),s}function pd(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{begin:s,size:i}=r,[o,l]=Ft.parseSliceParams(n,s,i);if(Ft.assertParamsValid(n,o,l),w.sizeFromShape(l)===0)return a.makeTensorInfo(l,n.dtype,[]);if(a.shouldExecuteOnCPU([n])||n.dtype==="string"){let h=a.texData.get(n.dataId),p=ZK(h.values,o,l,n.shape,n.dtype);return a.makeTensorInfo(l,n.dtype,p)}let{isPacked:d}=a.texData.get(n.dataId),u=Ft.isSliceContinous(n.shape,o,l);if(d||!u){let h=J().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new iJ(l):new nJ(l),p=[o];return a.runWebGLProgram(h,[n],n.dtype,p)}return a.uploadToGPU(n.dataId),oJ(n,o,l,a)}var lJ={kernelName:Qo,backendName:"webgl",kernelFunc:pd},uJ=e=>{let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{blockShape:s,crops:i}=r;w.assert(n.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let o=s.reduce((A,x)=>A*x),l=N.getReshaped(n.shape,s,o),d=N.getPermuted(l.length,s.length),u=N.getReshapedPermuted(n.shape,s,o),h=N.getSliceBeginCoords(i,s.length),p=N.getSliceSize(u,i,s.length),c=[],f=be({inputs:{x:n},backend:a,attrs:{shape:l}}),m=za({inputs:{x:f},backend:a,attrs:{perm:d}}),g=be({inputs:{x:m},backend:a,attrs:{shape:u}}),y=pd({inputs:{x:g},backend:a,attrs:{begin:h,size:p}});return c.push(f),c.push(m),c.push(g),c.forEach(A=>a.disposeIntermediateTensorInfo(A)),y},dJ={kernelName:So,backendName:"webgl",kernelFunc:uJ};function hJ(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,weights:s}=t,{size:i}=r,o=a.readSync(n.dataId),l=a.readSync(s.dataId),d=k4(o,l,s.dtype,s.shape,i);return a.makeTensorInfo([i],s.dtype,d)}var pJ={kernelName:df,backendName:"webgl",kernelFunc:hJ};function cJ(e){let{inputs:t,backend:a}=e,{s0:r,s1:n}=t,s=a.readSync(r.dataId),i=a.readSync(n.dataId),o=N.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return a.makeTensorInfo([o.length],"int32",Int32Array.from(o))}var fJ={kernelName:hf,backendName:"webgl",kernelFunc:cJ},mJ="return float(a != b);",W4=ga({opSnippet:mJ,cpuKernelImpl:jK,dtype:"bool"}),gJ={kernelName:Bo,backendName:"webgl",kernelFunc:W4};function ip(e){let{inputs:t,backend:a}=e,{input:r}=t,n=a.texData.get(r.dataId);return pr({inputs:{x:n.complexTensorInfos.real},backend:a})}var yJ={kernelName:Sh,backendName:"webgl",kernelFunc:ip},AJ="return float(int(x));";function xJ(e,t){let a=new Wn(e.shape,AJ),r=t.runWebGLProgram(a,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}function Og(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{dtype:s}=r;if(s==="complex64"){if(n.dtype==="complex64")return pr({inputs:{x:n},backend:a});let i=Ut(n.shape),o=Og({inputs:{x:n},backend:a,attrs:{dtype:"float32"}}),l=zi({inputs:{real:o,imag:i},backend:a});return i.dispose(),a.disposeIntermediateTensorInfo(o),l}if(n.dtype==="complex64"){let i=ip({inputs:{input:n},backend:a}),o=Og({inputs:{x:i},backend:a,attrs:{dtype:s}});return a.disposeIntermediateTensorInfo(i),o}if(!w.hasEncodingLoss(n.dtype,s)){let i=pr({inputs:{x:n},backend:a});return{dataId:i.dataId,shape:i.shape,dtype:s}}if(s==="int32")return xJ(n,a);if(s==="bool"){let i=a.makeTensorInfo([],"bool",w.getTypedArrayFromDType("bool",1)),o=W4({inputs:{a:n,b:i},backend:a});return a.disposeIntermediateTensorInfo(i),o}throw new Error(`Error in Cast: failed to cast ${n.dtype} to ${s}`)}var bJ={kernelName:Gs,backendName:"webgl",kernelFunc:Og},ab="return ceil(x);",vJ=tt({opSnippet:ab,packedOpSnippet:ab,cpuKernelImpl:TK}),wJ={kernelName:js,backendName:"webgl",kernelFunc:vJ},kJ=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}},IJ=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function SJ(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{clipValueMin:s,clipValueMax:i}=r,o;J().getBool("WEBGL_PACK_CLIP")?o=new IJ(n.shape):o=new kJ(n.shape);let l=[[s],[i]];return a.runWebGLProgram(o,[n],n.dtype,l)}var TJ={kernelName:Xn,backendName:"webgl",kernelFunc:SJ},CJ=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function rb(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}function NJ(e){let{inputs:t,backend:a}=e,{x:r}=t,n=a.texData.get(r.dataId),s=new CJ(r.shape),i=[rb(r,n.complexTensorInfos.real),rb(r,n.complexTensorInfos.imag)];return a.runWebGLProgram(s,i,i[0].dtype)}var EJ={kernelName:yh,backendName:"webgl",kernelFunc:NJ},RJ=class{constructor(e){this.outputShape=[],this.outputShape=N.computeOutShape(e,1),this.variableNames=e.map((s,i)=>`T${i}`);let t=new Array(e.length-1);t[0]=e[0][1];for(let s=1;s<t.length;s++)t[s]=t[s-1]+e[s][1];let a=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let s=1;s<t.length;s++){let i=t[s-1];a.push(`else if (yC < ${t[s]}) setOutput(getT${s}(yR, yC-${i}));`)}let r=t.length,n=t[t.length-1];a.push(`else setOutput(getT${r}(yR, yC-${n}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${a.join(`
        `)}
      }
    `}},FJ=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=N.computeOutShape(e,t);let a=this.outputShape,r=a.length,n=yt(r),s=Ra("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((f,m)=>`T${m}`);let o=new Array(e.length-1);o[0]=e[0][t];for(let f=1;f<o.length;f++)o[f]=o[f-1]+e[f][t];let l=i[t],d=i.slice(-2),u=i.join(),h=`if (${l} < ${o[0]}) {
        return getChannel(
            getT0(${u}), vec2(${d.join()}));
        }`;for(let f=1;f<o.length;f++){let m=o[f-1];h+=`
        if (${l} < ${o[f]}  && ${l} >= ${o[f-1]}) {
          return getChannel(
            getT${f}(${jp(i,l,m)}),
            vec2(${jp(d,l,m)}));
        }`}let p=o.length,c=o[o.length-1];h+=`
        return getChannel(
          getT${p}(${jp(i,l,c)}),
          vec2(${jp(d,l,c)}));`,this.userCode=`
      float getValue(${i.map(f=>"int "+f)}) {
        ${h}
      }

      void main() {
        ${n} coords = getOutputCoords();
        vec4 result = vec4(getValue(${s}), 0., 0., 0.);

        ${s[r-1]} = ${s[r-1]} + 1;
        if (${s[r-1]} < ${a[r-1]}) {
          result.g = getValue(${s});
        }

        ${s[r-2]} = ${s[r-2]} + 1;
        if (${s[r-2]} < ${a[r-2]}) {
          result.a = getValue(${s});
        }

        ${s[r-1]} = ${s[r-1]} - 1;
        if (${s[r-2]} < ${a[r-2]} &&
            ${s[r-1]} < ${a[r-1]}) {
          result.b = getValue(${s});
        }
        setOutput(result);
      }
    `}};function jp(e,t,a){let r=e.indexOf(t);return e.map((n,s)=>s===r?`${n} - ${a}`:n).join()}function L0(e){let{inputs:t,backend:a}=e,{input:r}=t,n=a.texData.get(r.dataId);return pr({inputs:{x:n.complexTensorInfos.imag},backend:a})}var $J={kernelName:vh,backendName:"webgl",kernelFunc:L0};function Hl(e,t,a){let r=e[0].dtype;if(r==="complex64"){let u=e.map(m=>ip({inputs:{input:m},backend:a})),h=e.map(m=>L0({inputs:{input:m},backend:a})),p=Hl(u,t,a),c=Hl(h,t,a),f=zi({inputs:{real:p,imag:c},backend:a});return u.forEach(m=>a.disposeIntermediateTensorInfo(m)),h.forEach(m=>a.disposeIntermediateTensorInfo(m)),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(c),f}let n=a.shouldExecuteOnCPU(e);if(r==="string"&&(n=!0),n){let u=e.map(y=>{let A=w.sizeFromShape(y.shape.slice(t));return be({inputs:{x:y},backend:a,attrs:{shape:[-1,A]}})}),h=u.map(y=>({vals:a.readSync(y.dataId),shape:y.shape})),p=N.computeOutShape(u.map(y=>y.shape),1),c=u[0].shape[0]===1,f=CK(h,p,r,c),m=N.computeOutShape(e.map(y=>y.shape),t),g=a.makeTensorInfo(m,r,f);return u.forEach(y=>a.disposeIntermediateTensorInfo(y)),g}if(e.length>J().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let u=Math.floor(e.length/2),h=Hl(e.slice(0,u),t,a),p=Hl(e.slice(u),t,a),c=Hl([h,p],t,a);return a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(p),c}if(J().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){let u=new FJ(e.map(h=>h.shape),t);return a.runWebGLProgram(u,e,r)}let{tensors2D:s,outShape:i}=MJ(e,t,a),o=new RJ(s.map(u=>u.shape)),l=a.runWebGLProgram(o,s,r);s.forEach(u=>a.disposeIntermediateTensorInfo(u));let d=be({inputs:{x:l},attrs:{shape:i},backend:a});return a.disposeIntermediateTensorInfo(l),d}function MJ(e,t,a){let r=N.computeOutShape(e.map(n=>n.shape),t);return{tensors2D:e.map(n=>be({inputs:{x:n},attrs:{shape:[-1,w.sizeFromShape(n.shape.slice(t))]},backend:a})),outShape:r}}function B4(e){let{inputs:t,backend:a,attrs:r}=e,{axis:n}=r,s=w.parseAxisParam(n,t[0].shape)[0],i=N.computeOutShape(t.map(d=>d.shape),s);if(w.sizeFromShape(i)===0)return a.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter(d=>w.sizeFromShape(d.shape)>0);if(o.length===1)return pr({inputs:{x:o[0]},backend:a});let l=o.map(d=>d.shape);return N.assertParamsConsistent(l,s),Hl(o,s,a)}var _J={kernelName:To,backendName:"webgl",kernelFunc:B4},V4=class{constructor(e,t=!1,a=null,r=!1,n=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,d=e.dilationHeight,u=e.dilationWidth,h=e.filterHeight,p=e.filterWidth,c=Math.floor(e.inChannels/4)*4,f=e.inChannels%4,m=e.dataFormat==="channelsLast",g=m?1:2,y=m?2:3,A=m?3:1,x="",b="";a&&(r?x=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:n?x=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:x=`
          float activation(float x) {
            ${a}
          }
        `,b="result = activation(result);");let v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),n&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${x}

      const ivec2 strides = ivec2(${o}, ${l});
      const ivec2 pads = ivec2(${s}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${A}];

        ivec2 xRCCorner =
            ivec2(coords[${g}], coords[${y}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${h}; wR++) {
          int xR = xRCorner + wR * ${d};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${p}; wC++) {
            int xC = xCCorner + wC * ${u};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${c}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${m}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${f===1}) {

              if (${m}) {
                dotProd +=
                    getX(batch, xR, xC, ${c}) *
                    getW(wR, wC, ${c}, d2);
              } else {
                dotProd +=
                    getX(batch, ${c}, xR, xC) *
                    getW(wR, wC, ${c}, d2);
              }

            } else if (${f===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${c}, d2),
                getW(wR, wC, ${c} + 1, d2)
              );

              if (${m}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${c}),
                  getX(batch, xR, xC, ${c} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${c}, xR, xC),
                  getX(batch, ${c} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${f===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${c}, d2),
                getW(wR, wC, ${c} + 1, d2),
                getW(wR, wC, ${c} + 2, d2)
              );

              if (${m}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${c}),
                  getX(batch, xR, xC, ${c} + 1),
                  getX(batch, xR, xC, ${c} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${c}, xR, xC),
                  getX(batch, ${c} + 1, xR, xC),
                  getX(batch, ${c} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${v}
        ${b}
        setOutput(result);
      }
    `}},zJ=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,a=e.padInfo.top,r=e.padInfo.left,n=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,d=e.dilationWidth,u=e.filterDepth,h=e.filterHeight,p=e.filterWidth,c=Math.floor(e.inChannels/4)*4,f=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${n}, ${s}, ${i});
      const ivec3 pads = ivec3(${t}, ${a}, ${r});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${u}; wF++) {
          int xF = xFCorner + wF * ${o};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${h}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p}; wC++) {
              int xC = xCCorner + wC * ${d};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${c}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${f===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${c}) *
                  getW(wF, wR, wC, ${c}, d2);
              } else if (${f===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${c}),
                  getX(batch, xF, xR, xC, ${c} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${c}, d2),
                  getW(wF, wR, wC, ${c} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${f===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${c}),
                  getX(batch, xF, xR, xC, ${c} + 1),
                  getX(batch, xF, xR, xC, ${c} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${c}, d2),
                  getW(wF, wR, wC, ${c} + 1, d2),
                  getW(wF, wR, wC, ${c} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},OJ=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=Za(this.outputShape.length);let{dataFormat:a}=t,r=Pa(),n=a==="channelsLast",s=n?0:1,i=n?1:2,o=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`,l="";for(let d=0;d<=1;d++)for(let u=0;u<=1;u++)l+=`
          blockIndex = rc.y + ${u};
          pos = rc.x + ${d};

          ${o}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${s}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${i}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${n}) {
                  innerDims = vec2(d1, ch);
                  result[${d*2+u}] = getChannel(
                    getA(d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${d*2+u}] = getChannel(
                    getA(ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec2 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${l}

        ${r.output} = result;
      }
    `}};function U4({x:e,filter:t,convInfo:a,backend:r,bias:n=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let l=e.shape,d=r.texData.get(e.dataId),u=a.inChannels,h=l[0]*l[1]*l[2],p=a.outChannels,c=a.dataFormat==="channelsLast",f=!1,m=!1,g,y=[];if(!((h===1||p===1)&&u>O4)&&d.isPacked&&c&&d.texture!=null&&l[2]%2!==0&&w.arraysEqual(d.shape.slice(-3),l.slice(-3))){let A=l[0]*l[1]*(l[2]+1),x={dataId:e.dataId,shape:[1,A,a.inChannels],dtype:e.dtype},b=d.shape;d.shape=d.shape.slice(),d.shape[d.shape.length-2]++,w.assert(ph(d.shape,x.shape),()=>`packed reshape ${d.shape} to ${x.shape} isn't free`);let v=be({inputs:{x:t},backend:r,attrs:{shape:[1,a.inChannels,a.outChannels]}});y.push(v);let T=Xc({a:x,b:v,backend:r,transposeA:f,transposeB:m,bias:n,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),C=r.texData.get(T.dataId);w.assert(C.isPacked,()=>"batchMatMul result is expected to be packed"),d.shape=b,C.shape=a.outShape,g=pr({inputs:{x:T},backend:r}),g.shape=a.outShape,y.push(T)}else{let A=c?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],x=be({inputs:{x:e},backend:r,attrs:{shape:[1,A,a.inChannels]}}),b=be({inputs:{x:t},backend:r,attrs:{shape:[1,a.inChannels,a.outChannels]}}),v=Xc({a:x,b,transposeA:f,transposeB:m,backend:r,bias:n,activation:o,preluActivationWeights:s,leakyreluAlpha:i});g=be({inputs:{x:v},backend:r,attrs:{shape:a.outShape}}),y.push(x),y.push(b),y.push(v)}for(let A of y)r.disposeIntermediateTensorInfo(A);return g}function G4({x:e,filter:t,convInfo:a,backend:r,bias:n=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let{filterWidth:l,filterHeight:d,inChannels:u,outWidth:h,outHeight:p,dataFormat:c}=a,f=c==="channelsLast",m=l*d*u,g=p*h,y=[m,g],A=!0,x=!1,b=[],v=be({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),T=be({inputs:{x:t},backend:r,attrs:{shape:[1,m,w.sizeFromShape(t.shape)/m]}});b.push(v),b.push(T);let C=new OJ(y,a),E=[v.shape,[a.padInfo.top,a.padInfo.left],[a.strideHeight,a.strideWidth],[a.dilationHeight,a.dilationWidth],[a.inChannels],[a.filterWidth*a.inChannels],[a.outWidth]],R=r.runWebGLProgram(C,[v],"float32",E),z=be({inputs:{x:R},backend:r,attrs:{shape:[1,y[0],y[1]]}});b.push(R),b.push(z);let F=n!=null,k=s!=null,D=o==="leakyrelu",_=o?O0(o,!0):null,P=new z4(z.shape,T.shape,[1,g,a.outChannels],A,x,F,_,k,D),j=[z,T];if(n&&j.push(n),k&&j.push(s),D){let ee=r.makeTensorInfo([],"float32",w.createScalarValue(i,"float32"));j.push(ee),b.push(ee)}let L=r.runWebGLProgram(P,j,"float32"),B=f?[1,p,h,a.outChannels]:[1,a.outChannels,p,h],W=be({inputs:{x:L},backend:r,attrs:{shape:B}});b.push(L);for(let ee of b)r.disposeIntermediateTensorInfo(ee);return W}function DJ(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:d,dimRoundingMode:u}=r,h=N.convertConv2DDataFormat(l),p=N.computeConv2DInfo(n.shape,s.shape,i,d,o,u,!1,h),c;if(p.filterHeight===1&&p.filterWidth===1&&p.dilationHeight===1&&p.dilationWidth===1&&p.strideHeight===1&&p.strideWidth===1&&(p.padInfo.type==="SAME"||p.padInfo.type==="VALID"))c=U4({x:n,filter:s,convInfo:p,backend:a});else if(J().getBool("WEBGL_CONV_IM2COL")&&n.shape[0]===1)c=G4({x:n,filter:s,convInfo:p,backend:a});else{let m=new V4(p);c=a.runWebGLProgram(m,[n,s],"float32")}let f=be({inputs:{x:c},backend:a,attrs:{shape:p.outShape}});return a.disposeIntermediateTensorInfo(c),f}var PJ={kernelName:Hs,backendName:"webgl",kernelFunc:DJ},LJ=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,a=e.strideWidth,r=e.padInfo.top,n=e.padInfo.left,s=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${a} - ${n};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${s}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},WJ=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,a=e.filterWidth,r=e.strideHeight,n=e.strideWidth,s=e.dataFormat==="channelsLast",i=t-1-e.padInfo.top,o=a-1-e.padInfo.left,l=s?1:2,d=s?2:3,u=s?3:1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${u}];

        ivec2 dyCorner = ivec2(coords[${l}], coords[${d}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${a} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${s}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},BJ=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,a=e.strideHeight,r=e.strideWidth,n=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${n};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${a} - ${s};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${r} - ${i};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},VJ=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,a=e.filterHeight,r=e.filterWidth,n=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=a-1-e.padInfo.top,d=r-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${o}, ${l}, ${d});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${n}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${a}; wR++) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${a} - 1 - wR;

            for (int wC = 0; wC < ${r}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${r} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function UJ(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:d,filterShape:u}=r,h=N.convertConv2DDataFormat(l),p=N.computeConv2DInfo(n.shape,u,i,1,o,d,!1,h),c=new LJ(p);return a.runWebGLProgram(c,[n,s],"float32")}var GJ={kernelName:pf,backendName:"webgl",kernelFunc:UJ};function jJ(e){let{inputs:t,backend:a,attrs:r}=e,{dy:n,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:d,dimRoundingMode:u}=r,h=N.convertConv2DDataFormat(d),p=N.computeConv2DInfo(i,s.shape,o,1,l,u,!1,h),c=new WJ(p);return a.runWebGLProgram(c,[n,s],"float32")}var HJ={kernelName:qs,backendName:"webgl",kernelFunc:jJ};function qJ(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,filter:s}=t,{strides:i,pad:o,dilations:l}=r,d=N.computeConv3DInfo(n.shape,s.shape,i,l,o),u=new zJ(d);return a.runWebGLProgram(u,[n,s],"float32")}var XJ={kernelName:Ah,backendName:"webgl",kernelFunc:qJ};function KJ(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,dy:s}=t,{strides:i,pad:o,filterShape:l}=r,d=N.computeConv3DInfo(n.shape,l,i,1,o),u=new BJ(d);return a.runWebGLProgram(u,[n,s],"float32")}var ZJ={kernelName:cf,backendName:"webgl",kernelFunc:KJ};function YJ(e){let{inputs:t,backend:a,attrs:r}=e,{dy:n,filter:s}=t,{pad:i,strides:o,inputShape:l}=r,d=N.computeConv3DInfo(l,s.shape,o,1,i),u=new VJ(d);return a.runWebGLProgram(u,[n,s],"float32")}var JJ={kernelName:ff,backendName:"webgl",kernelFunc:YJ},QJ=hd+`
  return cos(x);
`,eQ=tt({opSnippet:QJ}),tQ={kernelName:Xs,backendName:"webgl",kernelFunc:eQ},aQ=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,rQ=tt({opSnippet:aQ}),nQ={kernelName:Ks,backendName:"webgl",kernelFunc:rQ},sQ=class{constructor(e,t,a,r,n){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[s,i,o,l]=e,[d]=t,[u,h]=a;this.outputShape=[d,u,h,l];let p=r==="bilinear"?1:0,[c,f]=[`${i-1}.0`,`${o-1}.0`],[m,g,y]=u>1?[`${(i-1)/(u-1)}`,"(y2-y1) * height_ratio",`y1*${c} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${c}`],[A,x,b]=h>1?[`${(o-1)/(h-1)}`,"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`
      const float height_ratio = float(${m});
      const float width_ratio = float(${A});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${s}) {
          return;
        }

        float height_scale = ${g};
        float width_scale = ${x};

        float in_y = ${y};
        if( in_y < 0.0 || in_y > ${c} ) {
          setOutput(float(${n}));
          return;
        }
        float in_x = ${b};
        if( in_x < 0.0 || in_x > ${f} ) {
          setOutput(float(${n}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${p} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}},iQ=e=>{let{inputs:t,backend:a,attrs:r}=e,{image:n,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:d}=r,u=new sQ(n.shape,s.shape,o,l,d);return a.runWebGLProgram(u,[n,s,i],"float32")},oQ={kernelName:No,backendName:"webgl",kernelFunc:iQ},nb=class{constructor(e,t,a){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;let r=e.length,n=t?"0.0":`getX(${sb(r,"coords")})`,s=e[e.length-1],i="",o="";t?(i=a?`end != ${s-1}`:"end != 0",o=a?"end + 1":"end - 1"):(i=a?`end + pow2 < ${s}`:"end >= pow2",o=a?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${yt(r)} coords = getOutputCoords();
        int end = ${ib(r,"coords")};
        float val = ${n};
        int pow2 = int(pow(2.0, index));
        if (${i}) {
          int idx = ${o};
          ${ib(r,"coords")} = idx;
          val += getX(${sb(r,"coords")});
        }
        setOutput(val);
      }
    `}};function sb(e,t){if(e===1)return`${t}`;if(e===2)return`${t}.x, ${t}.y`;if(e===3)return`${t}.x, ${t}.y, ${t}.z`;if(e===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function ib(e,t){if(e===1)return`${t}`;if(e===2)return`${t}.y`;if(e===3)return`${t}.z`;if(e===4)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function lQ(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{axis:s,exclusive:i,reverse:o}=r,l=n.shape.length,d=N.getAxesPermutation([s],l),u=n;d!=null&&(u=za({inputs:{x:n},backend:a,attrs:{perm:d}}));let h=N.getInnerMostAxes(1,l)[0];if(h!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${n.shape.length-1} but got axis=${s}`);let p=u.shape[h],c=pr({inputs:{x:u},backend:a});for(let f=0;f<=Math.ceil(Math.log2(p))-1;f++){let m=new nb(u.shape,!1,o),g=[[f]],y=c;c=a.runWebGLProgram(m,[c],c.dtype,g),a.disposeIntermediateTensorInfo(y)}if(i){let f=new nb(u.shape,i,o),m=c;c=a.runWebGLProgram(f,[c],c.dtype),a.disposeIntermediateTensorInfo(m)}if(d!=null){let f=N.getUndoAxesPermutation(d),m=za({inputs:{x:c},backend:a,attrs:{perm:f}});return a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(u),m}return c}var uQ={kernelName:Co,backendName:"webgl",kernelFunc:lQ};function dQ(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,weights:s}=t,{size:i,binaryOutput:o}=r;if(n.shape.length===1){let l=a.readSync(n.dataId),d=a.readSync(s.dataId),u=k4(l,d,s.dtype,s.shape,i);return a.makeTensorInfo([i],s.dtype,u)}else if(n.shape.length===2){let l=a.bufferSync(n),d=a.bufferSync(s),u=SK(l,d,i,o);return a.makeTensorInfo(u.shape,s.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${n.shape.length}.`)}var hQ={kernelName:mf,backendName:"webgl",kernelFunc:dQ},pQ=class{constructor(e,t,a){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=a,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function cQ(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{blockSize:s,dataFormat:i}=r,o=n.shape[0],l=i==="NHWC"?n.shape[1]:n.shape[2],d=i==="NHWC"?n.shape[2]:n.shape[3],u=i==="NHWC"?n.shape[3]:n.shape[1],h=l*s,p=d*s,c=u/(s*s),f=i==="NHWC"?[o,h,p,c]:[o,c,h,p],m=new pQ(f,s,i);return a.runWebGLProgram(m,[n],n.dtype)}var fQ={kernelName:Eo,backendName:"webgl",kernelFunc:cQ},j4=class{constructor(e,t=!1,a=null,r=!1,n=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Za(this.outputShape.length);let s=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels,l="",d="";a&&(r?l=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:n?l=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:l=`
          float activation(float x) {
            ${a}
          }
        `,d="result = activation(result);");let u=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),n&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${l}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${o};
        int q = d2 - d1 * ${o};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${s}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${i}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${u}
        ${d}
        setOutput(result);
      }
    `}},H4=class{constructor(e,t=!1,a=null,r=!1,n=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Za(this.outputShape.length);let s=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,d=e.filterHeight,u=e.filterWidth,h=u,p=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<u;g++)p+=`
          vec4 xTexelC${g*2};
          int xTexelC${g*2}Ready;
          vec4 xTexelC${g*2+1};
          int xTexelC${g*2+1}Ready;
          vec4 xC${g};`;p+=`
    for (int r = 0; r < ${d}; r++) {
      `;for(let g=0;g<u;g++)p+=`
          xTexelC${g*2} = vec4(0.0);
          xTexelC${g*2}Ready = 0;
          xTexelC${g*2+1} = vec4(0.0);
          xTexelC${g*2+1}Ready = 0;
          xC${g} = vec4(0.0);`;p+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let g=0;g<(h+1)/2;g++){let y=g*2;if(p+=`
          xC = xCCorner + ${y*l};
          `,o===1){if(y<u&&(i%2===1?(p+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }
              `,l===1&&y>0?p+=`
                xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);
                `:p+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${y} = vec4(previous.zw, xTexelC${y}.xy);
                  } else {
                    xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);
                  }
                  `):p+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xC${y} = xTexelC${y};
                `,y+1<u)){let A=i%2===0?w.nearestLargerEven(l):l;l%2===0&&i%2===1||l%2!==0&&i%2!==1?(p+=`
                  xCOffset = xC + imod(pads[1], 2) + ${A};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                    xTexelC${y+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${y+1}.zw = vec2(0.0);
                    }
                    xTexelC${y+1}Ready = 1;
                  }
                  `,l>1&&(p+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                      xTexelC${y} = getX(batch, xR, xCOffset, d1);
                      xTexelC${y}Ready = 1;
                    }
                    `),p+=`
                  xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);
                  `):A===1?p+=`
                    xC${y+1} = xTexelC${y};
                    `:p+=`
                    xCOffset = xC + ${A};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                      xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${y+1}.zw = vec2(0.0);
                      }
                      xTexelC${y+1}Ready = 1;
                    }

                    xC${y+1} = xTexelC${y+1};
                    `}}else y<u&&(i%2===1?(p+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.0);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
              `,y+1<u&&(p+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);
                `)):(p+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(
                  xTexelC${y}.xy, xTexelC${y+1}.xy);
              `,y+1<u&&(p+=`
                  xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
                `)));y<u&&(p+=`
            wTexel = getW(r, ${y}, d1, q);
            dotProd += xC${y} * vec4(wTexel.xz, wTexel.xz);
          `,y+1<u&&(p+=`
              wTexel = getW(r, ${y+1}, d1, q);
              dotProd += xC${y+1} * vec4(wTexel.xz, wTexel.xz);
            `))}p+=`
    }
  `,p+=`
      }
    `;let c="",f="";a&&(r?c=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:n?c=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:c=`vec4 activation(vec4 x) {
          ${a}
        }`,f="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),n&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${c}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${s};
        int q = d2 - d1 * ${s};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${p}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${m}
        ${f}
        setOutput(result);
      }
    `}};function mQ(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:d}=r,u=l;u==null&&(u=[1,1]),w.assert(N.eitherStridesOrDilationsAreOne(i,u),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let h=N.computeConv2DInfo(n.shape,s.shape,i,u,o,d,!0),p;J().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?p=new H4(h):p=new j4(h);let c=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return a.runWebGLProgram(p,[n,s],"float32",c)}var gQ={kernelName:Zs,backendName:"webgl",kernelFunc:mQ},yQ=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,a=e.strideWidth,r=e.padInfo.top,n=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${s} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${a} - ${n};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},AQ=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,a=e.filterWidth,r=e.strideHeight,n=e.strideWidth,s=t-1-e.padInfo.top,i=a-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${s}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${a} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${o}; dm++) {
              int d2 = d1 * ${o} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function xQ(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:d,filterShape:u}=r,h=N.computeConv2DInfo(n.shape,u,i,o,l,d,!0),p=new yQ(h);return a.runWebGLProgram(p,[n,s],"float32")}var bQ={kernelName:gf,backendName:"webgl",kernelFunc:xQ};function vQ(e){let{inputs:t,backend:a,attrs:r}=e,{dy:n,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:d,inputShape:u}=r,h=N.computeConv2DInfo(u,s.shape,i,o,l,d,!0),p=new AQ(h);return a.runWebGLProgram(p,[n,s],"float32")}var wQ={kernelName:yf,backendName:"webgl",kernelFunc:vQ},kQ=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function IQ(e){let{inputs:t,backend:a}=e,{x:r}=t,n=[...r.shape,...r.shape],s=w.sizeFromShape(r.shape),i=be({inputs:{x:r},backend:a,attrs:{shape:[s]}}),o=new kQ(s),l=a.runWebGLProgram(o,[i],i.dtype),d=be({inputs:{x:l},backend:a,attrs:{shape:n}});return a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(l),d}var SQ={kernelName:Af,backendName:"webgl",kernelFunc:IQ},TQ=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:a,padInfo:r,strideHeight:n,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:d}=e,{top:u,left:h}=r;this.userCode=`
      const ivec2 strides = ivec2(${n}, ${s});
      const ivec2 pads = ivec2(${u}, ${h});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${o}; w++) {
              int wIn = wBeg + w * ${d};

              if (wIn >= 0 && wIn < ${a}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function CQ(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,filter:s}=t,{strides:i,pad:o,dilations:l}=r,d=N.computeDilation2DInfo(n.shape,s.shape,i,o,"NHWC",l),u,h=new TQ(d);u=a.runWebGLProgram(h,[n,s],"float32");let p=be({inputs:{x:u},backend:a,attrs:{shape:d.outShape}});return a.disposeIntermediateTensorInfo(u),p}var NQ={kernelName:xh,backendName:"webgl",kernelFunc:CQ};function EQ(e){let{inputs:t,backend:a,attrs:r}=e,{equation:n}=r,s=t,{allDims:i,summedDims:o,idDims:l}=N.decodeEinsumEquation(n,s.length);N.checkEinsumDimSizes(i.length,l,s);let{path:d,steps:u}=N.getEinsumComputePath(o,l),h=u.length,p=null,c=i.length,f=[];for(let m=0;m<h;++m){for(let g of u[m]){let{permutationIndices:y,expandDims:A}=N.getEinsumPermutation(c,l[g]),x;N.isIdentityPermutation(y)?x=s[g]:(x=za({inputs:{x:s[g]},backend:a,attrs:{perm:y}}),f.push(x));let b=x.shape.slice();for(let v=0;v<A.length;++v)b.splice(A[v],0,1);w.arraysEqual(x.shape,b)||(x=be({inputs:{x},backend:a,attrs:{shape:b}}),f.push(x)),p===null?p=x:(p=Qy({inputs:{a:x,b:p},backend:a}),f.push(p))}m<h-1&&(d[m]>=0&&(p=P0({inputs:{x:p},backend:a,attrs:{axis:d[m]-(i.length-c),keepDims:!1}}),f.push(p)),c--)}for(let m of f)m!==p&&a.disposeIntermediateTensorInfo(m);return p}var RQ={kernelName:bh,backendName:"webgl",kernelFunc:EQ},FQ="return (x >= 0.0) ? x : (exp(x) - 1.0);",$Q=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,MQ=tt({opSnippet:FQ,packedOpSnippet:$Q}),_Q={kernelName:Js,backendName:"webgl",kernelFunc:MQ},zQ="return (b >= 1.0) ? a : a * (b + 1.0);",OQ=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,DQ=e=>{let{inputs:t,backend:a}=e,{dy:r,y:n}=t,s=J().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new sp(OQ,r.shape,n.shape):new yu(zQ,r.shape,n.shape);return a.runWebGLProgram(s,[r,n],r.dtype)},PQ={kernelName:xf,backendName:"webgl",kernelFunc:DQ},LQ=`
  return vec4(equal(a, b));
`,WQ="return float(a == b);",BQ=ga({opSnippet:WQ,packedOpSnippet:LQ,dtype:"bool",cpuKernelImpl:NK}),VQ={kernelName:Ro,backendName:"webgl",kernelFunc:BQ},UQ=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${N.ERF_P};
  float a1 = ${N.ERF_A1};
  float a2 = ${N.ERF_A2};
  float a3 = ${N.ERF_A3};
  float a4 = ${N.ERF_A4};
  float a5 = ${N.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,GQ=tt({opSnippet:UQ}),jQ={kernelName:Mu,backendName:"webgl",kernelFunc:GQ},HQ=hd+`
  return exp(x);
`,qQ=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,q4=tt({opSnippet:HQ,packedOpSnippet:qQ,cpuKernelImpl:EK,dtype:"float32"}),XQ={kernelName:Qs,backendName:"webgl",kernelFunc:q4};function Dg(e){let{inputs:t,attrs:a,backend:r}=e,{dim:n}=a,{input:s}=t,i=s.shape.length,o=s.shape.slice(),l=n;return n<0&&(w.assert(-(i+1)<=n,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+n+1),o.splice(l,0,1),be({inputs:{x:s},backend:r,attrs:{shape:o}})}var KQ={kernelName:Fo,backendName:"webgl",kernelFunc:Dg},ob="return exp(x) - 1.0;",ZQ=tt({opSnippet:ob,packedOpSnippet:ob,cpuKernelImpl:RK}),YQ={kernelName:$o,backendName:"webgl",kernelFunc:ZQ},lb=class{constructor(e,t,a){this.variableNames=["real","imag"];let r=t[1];this.outputShape=t;let n=a?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=a?`${r}.0`:"1.0",i;if(e==="real")i="return real * expR - imag * expI;";else if(e==="imag")i="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${n};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${r});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${r}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${s};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function X4(e,t,a){let r=a.texData.get(e.dataId),n=w.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=n/s,o=be({inputs:{x:e},backend:a,attrs:{shape:[i,s]}}),l=o.shape,d=new lb("real",l,t),u=new lb("imag",l,t),h=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:l},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:l}],p=a.runWebGLProgram(d,h,"float32"),c=a.runWebGLProgram(u,h,"float32"),f=zi({inputs:{real:p,imag:c},backend:a});a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(c);let m=be({inputs:{x:f},backend:a,attrs:{shape:e.shape}});return a.disposeIntermediateTensorInfo(o),a.disposeIntermediateTensorInfo(f),m}function JQ(e){let{inputs:t,backend:a}=e,{input:r}=t;return X4(r,!1,a)}var QQ={kernelName:bf,backendName:"webgl",kernelFunc:JQ},eee=class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function op(e){let{backend:t,attrs:a}=e,{shape:r,value:n}=a,{dtype:s}=a;if(s=s||w.inferDtype(n),s==="string"){let i=w.getArrayFromDType(s,w.sizeFromShape(r));return i.fill(n),t.makeTensorInfo(r,s,i)}else{let i=new eee(r,n),o=[[n]];return t.runWebGLProgram(i,[],s,o)}}var tee={kernelName:_u,backendName:"webgl",kernelFunc:op},aee=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}},ree={kernelName:Mo,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:a}=e,r=t,n=new aee(a.shape);return r.runWebGLProgram(n,[a],a.dtype)}},ub="return floor(x);",nee=tt({opSnippet:ub,packedOpSnippet:ub,cpuKernelImpl:FK}),see={kernelName:ei,backendName:"webgl",kernelFunc:nee},iee=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,oee=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,lee=ga({opSnippet:iee,packedOpSnippet:oee,dtype:"int32"}),uee={kernelName:ti,backendName:"webgl",kernelFunc:lee},dee=class{constructor(e){this.variableNames=["A"];let t=Pa(),[a,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${a}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}},hee=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=Pa(),[a,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${r}.0, ${a}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}},pee={kernelName:th,backendName:"webgl",kernelFunc:cee},Ol;function cee(e){let{inputs:t,backend:a,attrs:r}=e,{pixels:n}=t,{numChannels:s}=r,i=typeof HTMLVideoElement!="undefined"&&n instanceof HTMLVideoElement,o=typeof HTMLImageElement!="undefined"&&n instanceof HTMLImageElement,[l,d]=i?[n.videoWidth,n.videoHeight]:[n.width,n.height],u=[d,l],h=[d,l,s];(o||i)&&(Ol==null&&(Ol=document.createElement("canvas").getContext("2d")),Ol.canvas.width=l,Ol.canvas.height=d,Ol.drawImage(n,0,0,l,d),n=Ol.canvas);let p=a.makeTensorInfo(u,"int32");a.texData.get(p.dataId).usage=2,a.gpgpu.uploadPixelDataToTexture(a.getTexture(p.dataId),n);let c=J().getBool("WEBGL_PACK")?new hee(h):new dee(h),f=a.runWebGLProgram(c,[p],"int32");return a.disposeData(p.dataId),f}function fee(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:d,dataFormat:u,dilations:h,dimRoundingMode:p,activation:c,leakyreluAlpha:f}=r,m=N.convertConv2DDataFormat(u),g=N.computeConv2DInfo(n.shape,s.shape,l,h,d,p,!1,m),y,A=[];if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))y=U4({x:n,filter:s,convInfo:g,backend:a,bias:i,activation:c,preluActivationWeights:o,leakyreluAlpha:f});else if(J().getBool("WEBGL_CONV_IM2COL")&&n.shape[0]===1)y=G4({x:n,filter:s,convInfo:g,backend:a,bias:i,activation:c,preluActivationWeights:o,leakyreluAlpha:f});else{let b=i!=null,v=o!=null,T=c==="leakyrelu",C=c?O0(c,!1):null,E=new V4(g,b,C,v,T),R=[n,s];if(i&&R.push(i),o&&R.push(o),T){let z=a.makeTensorInfo([],"float32",w.createScalarValue(f,"float32"));R.push(z),A.push(z)}y=a.runWebGLProgram(E,R,"float32")}let x=be({inputs:{x:y},backend:a,attrs:{shape:g.outShape}});return A.push(y),A.forEach(b=>a.disposeIntermediateTensorInfo(b)),x}var mee={kernelName:Ts,backendName:"webgl",kernelFunc:fee};function gee(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:d,dilations:u,dimRoundingMode:h,activation:p,leakyreluAlpha:c}=r,f=[],m=u;m==null&&(m=[1,1]),w.assert(N.eitherStridesOrDilationsAreOne(l,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`);let g=N.computeConv2DInfo(n.shape,s.shape,l,m,d,h,!0),y=J().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,A=p?O0(p,y):null,x=[n,s],b=i!=null,v=o!=null,T=p==="leakyrelu";if(b&&x.push(i),v&&x.push(o),T){let z=a.makeTensorInfo([],"float32",w.createScalarValue(c,"float32"));x.push(z),f.push(z)}let C;y?C=new H4(g,b,A,v,T):C=new j4(g,b,A,v,T);let E=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],R=a.runWebGLProgram(C,x,"float32",E);return f.forEach(z=>a.disposeIntermediateTensorInfo(z)),R}var yee={kernelName:Cs,backendName:"webgl",kernelFunc:gee},Aee=class{constructor(e,t,a){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=a;let r=yt(t.length),n=yt(a.length),s=this.sliceDim>1?"strides[j]":"strides";this.userCode=`
        ${r} strides = ${r}(${this.strides});
         void main() {
          ${n} coords = getOutputCoords();
          int flattenIndex = 0;
          for (int j = 0; j < ${this.sliceDim}; j++) {
            int index = round(getIndices(coords[0], j));
            flattenIndex += index * ${s};
          }
          setOutput(getX(flattenIndex, coords[1]));
        }
      `}};function xee(e){let{inputs:t,backend:a}=e,{params:r,indices:n}=t,s=n.shape,i=s[s.length-1],o=w.sizeFromShape(r.shape),[l,d,u,h]=N.prepareAndValidate(r,n),p=be({inputs:{x:n},backend:a,attrs:{shape:[d,i]}}),c=be({inputs:{x:r},backend:a,attrs:{shape:[w.sizeFromShape(r.shape)/u,u]}});if(a.shouldExecuteOnCPU([r,n])||r.dtype==="string"){let y=a.readSync(n.dataId),A=a.bufferSync(r),x=$K(y,A,r.dtype,d,i,u,h,r.shape,o);return a.makeTensorInfo(l,r.dtype,x.values)}let f=new Aee(i,h,[d,u]),m=a.runWebGLProgram(f,[c,p],c.dtype),g=be({inputs:{x:m},backend:a,attrs:{shape:l}});return a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(m),g}var bee={kernelName:zo,backendName:"webgl",kernelFunc:xee},vee=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let a=yt(this.rank),r=wee(e);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${r}));
      }
    `}};function wee(e,t){let a=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let n=0;n<e.length;n++)n===2?r.push("index"):r.push(`${a[n]}`);return r.join()}function K4(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,indices:s}=t,{axis:i,batchDims:o}=r,l=w.parseAxisParam(i,n.shape)[0];if(J().get("DEBUG")){let A=a.readSync(s.dataId),x=n.shape[l];for(let b=0;b<A.length;++b){let v=A[b];w.assert(v<=x-1&&v>=0,()=>`GatherV2: the index value ${v} is not in [0, ${x-1}]`)}}let d=N.segment_util.collectGatherOpShapeInfo(n,s,l,o),u=w.sizeFromShape(s.shape),h=[],p=be({inputs:{x:n},backend:a,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),c=be({inputs:{x:s},backend:a,attrs:{shape:[d.batchSize,u/d.batchSize]}});h.push(p),h.push(c);let f=[d.batchSize,d.outerSize,u/d.batchSize,d.sliceSize];if(a.shouldExecuteOnCPU([n,s])||n.dtype==="string"){let A=a.bufferSync(c),x=a.bufferSync(p),b=MK(x,A,f);return h.forEach(v=>a.disposeIntermediateTensorInfo(v)),a.makeTensorInfo(d.outputShape,b.dtype,b.values)}let m=new vee(p.shape,f),g=a.runWebGLProgram(m,[p,c],p.dtype);h.push(g);let y=be({inputs:{x:g},backend:a,attrs:{shape:d.outputShape}});return h.forEach(A=>a.disposeIntermediateTensorInfo(A)),y}var kee={kernelName:_o,backendName:"webgl",kernelFunc:K4},Iee="return float(a > b);",See=`
  return vec4(greaterThan(a, b));
`,Tee=ga({opSnippet:Iee,packedOpSnippet:See,cpuKernelImpl:_K,dtype:"bool"}),Cee={kernelName:Oo,backendName:"webgl",kernelFunc:Tee},Nee="return float(a >= b);",Eee=`
  return vec4(greaterThanEqual(a, b));
`,Ree=ga({opSnippet:Nee,packedOpSnippet:Eee,dtype:"bool",cpuKernelImpl:zK}),Fee={kernelName:ri,backendName:"webgl",kernelFunc:Ree};function $ee(e){let{inputs:t,backend:a}=e,{input:r}=t;return X4(r,!0,a)}var Mee={kernelName:vf,backendName:"webgl",kernelFunc:$ee},_ee="return float(!isnan(x) && !isinf(x));",zee=tt({opSnippet:_ee,dtype:"bool"}),Oee={kernelName:zu,backendName:"webgl",kernelFunc:zee},Dee="return float(isinf(x));",Pee=tt({opSnippet:Dee,dtype:"bool"}),Lee={kernelName:Ou,backendName:"webgl",kernelFunc:Pee},Wee="return float(isnan(x));",Bee=tt({opSnippet:Wee,dtype:"bool"}),Vee={kernelName:Du,backendName:"webgl",kernelFunc:Bee},Uee="return float(a < b);",Gee=`
  return vec4(lessThan(a, b));
`,jee=ga({opSnippet:Uee,packedOpSnippet:Gee,cpuKernelImpl:OK,dtype:"bool"}),Hee={kernelName:Do,backendName:"webgl",kernelFunc:jee},qee="return float(a <= b);",Xee=`
  return vec4(lessThanEqual(a, b));
`,Kee=ga({opSnippet:qee,packedOpSnippet:Xee,cpuKernelImpl:DK,dtype:"bool"}),Zee={kernelName:Po,backendName:"webgl",kernelFunc:Kee};function Yee(e){let{backend:t,attrs:a}=e,{start:r,stop:n,num:s}=a,i=PK(r,n,s);return t.makeTensorInfo([i.length],"float32",i)}var Jee={kernelName:wf,backendName:"webgl",kernelFunc:Yee},Qee=hd+`
  return x < 0.0 ? 0./0. : log(x);
`,ete=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,tte=tt({opSnippet:Qee,packedOpSnippet:ete,cpuKernelImpl:LK}),ate={kernelName:ii,backendName:"webgl",kernelFunc:tte},rte=hd+`
  return log(1.0 + x);
`,nte=tt({opSnippet:rte}),ste={kernelName:Pu,backendName:"webgl",kernelFunc:nte},ite="return float(a >= 1.0 && b >= 1.0);",ote=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,lte=ga({opSnippet:ite,packedOpSnippet:ote,dtype:"bool"}),ute={kernelName:Lo,backendName:"webgl",kernelFunc:lte},dte="return float(!(x >= 1.0));",hte=tt({opSnippet:dte}),pte={kernelName:Lu,backendName:"webgl",kernelFunc:hte},cte="return float(a >= 1.0 || b >= 1.0);",fte=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,mte=ga({opSnippet:cte,packedOpSnippet:fte,dtype:"bool"}),gte={kernelName:wh,backendName:"webgl",kernelFunc:mte},yte=class{constructor(e,t,a,r,n){this.variableNames=["x"],this.outputShape=[];let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${a}) + float(${r}) * sum`;n===.5?o=`inversesqrt(${l})`:n===1?o=`1.0/(${l})`:o=`exp(log(${l}) * float(-${n}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${s}; j <= ${s}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${o};
        setOutput(val);
      }
    `}},Ate=class{constructor(e,t,a,r,n){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${a}) + float(${r}) * sum`;n===.5?o=`inversesqrt(${l})`:n===1?o=`1.0/(${l})`:o=`exp(log(${l}) * float(-${n}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${s};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${s}; j <= ${s}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${o};
        setOutput(result);
      }
    `}},xte=e=>{let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r,d=J().getBool("WEBGL_PACK_NORMALIZATION")?new Ate(n.shape,s,i,o,l):new yte(n.shape,s,i,o,l);return a.runWebGLProgram(d,[n],n.dtype)},bte={kernelName:kh,backendName:"webgl",kernelFunc:xte},vte=class{constructor(e,t,a,r,n){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=a,this.alpha=r,this.beta=n,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${r}) * norm + float(${a});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${r})
                * float(${n})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${n});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}},wte=e=>{let{inputs:t,backend:a,attrs:r}=e,{x:n,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:d,beta:u}=r,h=new vte(n.shape,o,l,d,u);return a.runWebGLProgram(h,[n,s,i],n.dtype)},kte={kernelName:kf,backendName:"webgl",kernelFunc:wte};function Ite(e,t,a,r){let n=w.sizeFromShape(t),s=w.sizeFromShape(e.shape)/n,i=be({inputs:{x:e},attrs:{shape:[s,n]},backend:r}),o=Al(i,e.dtype,"max",r),l=be({inputs:{x:o},attrs:{shape:a},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),l}function Z4(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{reductionIndices:s,keepDims:i}=r,o=n.shape.length,l=w.parseAxisParam(s,n.shape),d=l,u=N.getAxesPermutation(d,o),h=u!=null,p=a.shouldExecuteOnCPU([n]),c=n;if(h){if(p){let A=a.texData.get(c.dataId).values,x=new Array(o);for(let T=0;T<x.length;T++)x[T]=n.shape[u[T]];let b=Jy(A,n.shape,n.dtype,u,x);c=a.makeTensorInfo(x,n.dtype);let v=a.texData.get(c.dataId);v.values=b}else c=D0(n,u,a);d=N.getInnerMostAxes(d.length,o)}N.assertAxesAreInnerMostDims("max",d,o);let[f,m]=N.computeOutAndReduceShapes(c.shape,d),g=f;i&&(g=N.expandShapeToKeepDim(f,l));let y;if(p){let A=a.texData.get(c.dataId).values,x=WK(A,w.sizeFromShape(m),g,n.dtype);y=a.makeTensorInfo(g,n.dtype);let b=a.texData.get(y.dataId);b.values=x}else y=Ite(c,m,g,a);return h&&a.disposeIntermediateTensorInfo(c),y}var Ste={kernelName:oi,backendName:"webgl",kernelFunc:Z4},Tte=R4+`
  return max(a, b);
`,Cte=`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+z0+`
  return result;
`,Nte=ga({opSnippet:Tte,packedOpSnippet:Cte,cpuKernelImpl:BK}),Ete={kernelName:li,backendName:"webgl",kernelFunc:Nte};function Rte(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t;id(n,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r,d=1;w.assert(N.eitherStridesOrDilationsAreOne(i,d),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`);let u=N.computePool2DInfo(n.shape,s,i,d,o,l);if(u.filterWidth===1&&u.filterHeight===1&&w.arraysEqual(u.inShape,u.outShape))return pr({inputs:{x:n},backend:a});let h=new ch(u,"max",!1);return a.runWebGLProgram(h,[n],n.dtype)}var Fte={kernelName:ui,backendName:"webgl",kernelFunc:Rte};function $te(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{filterSize:s,strides:i,pad:o,dataFormat:l,dimRoundingMode:d}=r,u=[1,1,1],h=N.computePool3DInfo(n.shape,s,i,u,o,d,l),p=new eA(h,"max",!1);return a.runWebGLProgram(p,[n],n.dtype)}var Mte={kernelName:Ih,backendName:"webgl",kernelFunc:$te},_te=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,a=e.strideWidth,r=e.dilationHeight,n=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=n-1-e.padInfo.top,o=s-1-e.padInfo.left,l=n*s-1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${n};
          wR += ${r}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${s} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},zte=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,a=e.strideHeight,r=e.strideWidth,n=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,d=e.effectiveFilterWidth,u=o-1-e.padInfo.front,h=l-1-e.padInfo.top,p=d-1-e.padInfo.left,c=o*l*d-1;this.userCode=`
      const ivec3 pads = ivec3(${u}, ${h}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${o};
           wD += ${n}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${s}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${d};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${r}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${c} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${d} +
                  wR * ${d} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Ote(e){let{inputs:t,backend:a,attrs:r}=e,{dy:n,input:s}=t,i=s,{filterSize:o,strides:l,pad:d,dimRoundingMode:u}=r,h=[1,1,1],p=N.computePool3DInfo(i.shape,o,l,h,d,u),c=new eA(p,"max",!0),f=a.runWebGLProgram(c,[i],i.dtype),m=new zte(p),g=a.runWebGLProgram(m,[n,f],i.dtype);return a.disposeIntermediateTensorInfo(f),g}var Dte={kernelName:Sf,backendName:"webgl",kernelFunc:Ote};function Pte(e){let{inputs:t,backend:a,attrs:r}=e,{dy:n,input:s,output:i}=t,o=s;id([s,i],"maxPoolGrad");let{filterSize:l,strides:d,pad:u,dimRoundingMode:h}=r,p=N.computePool2DInfo(o.shape,l,d,1,u,h),c=!0,f=new ch(p,"max",c),m=a.runWebGLProgram(f,[o],o.dtype),g=new _te(p),y=a.runWebGLProgram(g,[n,m],o.dtype);return a.disposeIntermediateTensorInfo(m),y}var Lte={kernelName:If,backendName:"webgl",kernelFunc:Pte};function Wte(e,t,a,r){let n=new ch(a,"max",!1),s=r.runWebGLProgram(n,[e],"float32");n=new ch(a,"max",!0,!0,t);let i=r.runWebGLProgram(n,[e],"float32");return[s,i]}var Bte={kernelName:Tf,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:a})=>{let{x:r}=e,{filterSize:n,strides:s,pad:i,includeBatchInIndex:o}=t,l=a;w.assert(r.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);let d=[1,1];w.assert(N.eitherStridesOrDilationsAreOne(s,d),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${d}'`);let u=N.computePool2DInfo(r.shape,n,s,d,i),[h,p]=Wte(r,o,u,l);return[h,p]}};function Vte(e,t,a,r){let n=w.sizeFromShape(t),s=w.sizeFromShape(e.shape)/n,i=be({inputs:{x:e},attrs:{shape:[s,n]},backend:r}),o=Al(i,"float32","mean",r),l=be({inputs:{x:o},attrs:{shape:a},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),l}var Ute={kernelName:di,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:a})=>{let{x:r}=e,{keepDims:n,axis:s}=t,i=a,o=r.shape.length,l=w.parseAxisParam(s,r.shape),d=l,u=N.getAxesPermutation(d,o),h=u!=null,p=i.shouldExecuteOnCPU([r]),c=[],f=r;if(h){if(p){let x=i.texData.get(f.dataId).values,b=new Array(o);for(let C=0;C<b.length;C++)b[C]=r.shape[u[C]];let v=Jy(x,r.shape,r.dtype,u,b);f=i.makeTensorInfo(b,r.dtype);let T=i.texData.get(f.dataId);T.values=v}else f=D0(r,u,i);c.push(f),d=N.getInnerMostAxes(d.length,o)}N.assertAxesAreInnerMostDims("sum",d,o);let[m,g]=N.computeOutAndReduceShapes(f.shape,d),y=m;n&&(y=N.expandShapeToKeepDim(m,l));let A=Vte(f,g,y,i);for(let x of c)i.disposeIntermediateTensorInfo(x);return A}};function Gte(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{axis:s,keepDims:i}=r,o=n.shape.length,l=w.parseAxisParam(s,n.shape),d=l,u=N.getAxesPermutation(d,o),h=n;u!=null&&(h=za({inputs:{x:n},backend:a,attrs:{perm:u}}),d=N.getInnerMostAxes(d.length,n.shape.length)),N.assertAxesAreInnerMostDims("min",d,o);let[p,c]=N.computeOutAndReduceShapes(h.shape,d),f=w.sizeFromShape(c),m=be({inputs:{x:h},backend:a,attrs:{shape:[-1,f]}}),g=Al(m,m.dtype,"min",a),y;if(i){let A=N.expandShapeToKeepDim(p,l);y=be({inputs:{x:g},backend:a,attrs:{shape:A}})}else y=be({inputs:{x:g},backend:a,attrs:{shape:p}});return a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(g),u!=null&&a.disposeIntermediateTensorInfo(h),y}var jte={kernelName:hi,backendName:"webgl",kernelFunc:Gte},Hte=R4+`
  return min(a, b);
`,qte=`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+z0+`
  return result;
`,Xte=ga({opSnippet:Hte,packedOpSnippet:qte,cpuKernelImpl:VK}),Kte={kernelName:pi,backendName:"webgl",kernelFunc:Xte},Zte=class{constructor(e,t,a){this.variableNames=["x"],this.outputShape=t.map((d,u)=>d[0]+e[u]+d[1]);let r=e.length,n=yt(r),s=t.map(d=>d[0]).join(","),i=t.map((d,u)=>d[0]+e[u]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l=a==="reflect"?0:1;if(r===1){this.userCode=`
        int start = ${s};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${l};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${l};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${n} start = ${n}(${s});
      ${n} end = ${n}(${i});

      void main() {
        ${n} outC = getOutputCoords();
        for (int i = 0; i < ${r}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${l};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};
          }
        }
        ${n} coords = outC - start;
        setOutput(getX(${o}));
      }
    `}},Yte=class{constructor(e,t,a){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((c,f)=>c[0]+e[f]+c[1]);let r=e.length,n=yt(r),s=t.map(c=>c[0]).join(","),i=t.map((c,f)=>c[0]+e[f]).join(","),o=Ra("rc",r),l=Ra("source",r),d=`${o[r-1]} < ${this.outputShape[r-1]}`,u=r===1?"source":`vec2(${l.slice(-2).join()})`,h=a==="reflect"?0:1,p="";if(r===1){let c=`
        ${n} source = rc;
        if (source < start) {
          source = start * 2 - source - ${h};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${h};
        }
        source -= start;
      `;p=`
        ${n} rc = outputLoc;
        ${c}
        result[0] = getChannel(getX(${l.join()}), ${u});
        ${o[r-1]} += 1;
        if(${d}) {
          ${c}
          result[1] = getChannel(getX(${l.join()}), ${u});
        }
      `}else{let c=`
        ${n} source = rc;
        ${n} lt = ${n}(lessThan(source, start));
        ${n} gte = ${n}(greaterThanEqual(source, end));
        ${n} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${h}) +
                gte * ((end - 1) * 2 - source + ${h});
        source -= start;
      `;p=`
        ${n} rc = outputLoc;
        ${c}
        result[0] = getChannel(getX(${l.join()}), ${u});
        ${o[r-1]} += 1;
        if(${d}) {
          ${c}
          result[1] = getChannel(getX(${l.join()}), ${u});
        }
        rc = outputLoc;
        ${o[r-2]} += 1;
        if(${o[r-2]} < ${this.outputShape[r-2]}) {
          ${c}
          result[2] = getChannel(getX(${l.join()}), ${u});
          ${o[r-1]} += 1;
          if(${d}) {
            ${c}
            result[3] = getChannel(getX(${l.join()}), ${u});
          }
        }
      `}this.userCode=`
      const ${n} start = ${n}(${s});
      const ${n} end = ${n}(${i});

      void main() {
        ${n} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}},Jte=({inputs:e,backend:t,attrs:a})=>{let{x:r}=e,{paddings:n,mode:s}=a,i=J().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Yte(r.shape,n,s):new Zte(r.shape,n,s);return t.runWebGLProgram(i,[r],r.dtype)},Qte={kernelName:ci,backendName:"webgl",kernelFunc:Jte},eae=`if (b == 0.0) return NAN;
  return mod(a, b);`,tae=`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  `+z0+`
  return result;
`,aae=ga({opSnippet:eae,packedOpSnippet:tae}),rae={kernelName:Wu,backendName:"webgl",kernelFunc:aae},nae=class{constructor(e,t,a){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,a],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}},sae=`
if (a == b) {
  return 1.0;
};
return a / b;`,iae=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,Y4=ga({opSnippet:sae,packedOpSnippet:iae,checkOutOfBounds:!0}),oae={kernelName:Ys,backendName:"webgl",kernelFunc:Y4},db="return a - b;",J4=ga({opSnippet:db,packedOpSnippet:db,supportsComplex:!0,cpuKernelImpl:nZ}),lae={kernelName:Ni,backendName:"webgl",kernelFunc:J4};function Q4(e){let{inputs:t,backend:a,attrs:r}=e,{logits:n}=t,{dim:s}=r,i=w.parseAxisParam([s],n.shape),o=Z4({inputs:{x:n},backend:a,attrs:{reductionIndices:i,keepDims:!1}}),l=N.expandShapeToKeepDim(o.shape,i),d=be({inputs:{x:o},backend:a,attrs:{shape:l}}),u=J4({inputs:{a:n,b:d},backend:a}),h=q4({inputs:{x:u},backend:a}),p=P0({inputs:{x:h},backend:a,attrs:{axis:i,keepDims:!1}}),c=be({inputs:{x:p},backend:a,attrs:{shape:l}}),f=Y4({inputs:{a:h,b:c},backend:a});return a.disposeIntermediateTensorInfo(o),a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(u),a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(c),f}var uae={kernelName:Ti,backendName:"webgl",kernelFunc:Q4};function dae(e){let{inputs:t,backend:a,attrs:r}=e,{logits:n}=t,{numSamples:s,seed:i,normalized:o}=r,l=o?n:Q4({inputs:{logits:n},backend:a,attrs:{dim:n.shape.length-1}}),d=l.shape[0],u=l.shape[1],h=new nae(d,u,s),p=[[i]],c=a.runWebGLProgram(h,[l],"int32",p);return o||a.disposeIntermediateTensorInfo(l),c}var hae={kernelName:Cf,backendName:"webgl",kernelFunc:dae},pae=Wr+`
  return -x;
`,cae=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function fae(e){let{inputs:t,backend:a}=e,{x:r}=t;if(a.shouldExecuteOnCPU([r])){let s=a.texData.get(r.dataId),[i,o]=GK(s.values,r.shape,r.dtype);return a.makeTensorInfo(o,r.dtype,i)}let n;return J().getBool("WEBGL_PACK_UNARY_OPERATIONS")?n=new to(r.shape,cae):n=new Wn(r.shape,pae),a.runWebGLProgram(n,[r],r.dtype)}var mae={kernelName:Wo,backendName:"webgl",kernelFunc:fae},gae=Pr.nonMaxSuppressionV3Impl;function yae(e){N.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:a,attrs:r}=e,{boxes:n,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r,d=a.readSync(n.dataId),u=a.readSync(s.dataId),{selectedIndices:h}=gae(d,u,i,o,l);return a.makeTensorInfo([h.length],"int32",new Int32Array(h))}var Aae={kernelName:Vo,backendName:"webgl",kernelFunc:yae},xae=Pr.nonMaxSuppressionV4Impl;function bae(e){N.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:a,attrs:r}=e,{boxes:n,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:d}=r,u=a.readSync(n.dataId),h=a.readSync(s.dataId),{selectedIndices:p,validOutputs:c}=xae(u,h,i,o,l,d);return[a.makeTensorInfo([p.length],"int32",new Int32Array(p)),a.makeTensorInfo([],"int32",new Int32Array([c]))]}var vae={kernelName:Bu,backendName:"webgl",kernelFunc:bae},wae=Pr.nonMaxSuppressionV5Impl;function kae(e){N.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:a,attrs:r}=e,{boxes:n,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:d}=r,u=a.readSync(n.dataId),h=a.readSync(s.dataId),p=i,c=o,f=l,m=d,{selectedIndices:g,selectedScores:y}=wae(u,h,p,c,f,m);return[a.makeTensorInfo([g.length],"int32",new Int32Array(g)),a.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var Iae={kernelName:Uo,backendName:"webgl",kernelFunc:kae},Sae=class{constructor(e,t,a,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${r}), float(${a}),
                      float(index == coords.y)));
      }
    `}},Tae=e=>{let{inputs:t,backend:a,attrs:r}=e,{indices:n}=t,{depth:s,onValue:i,offValue:o}=r,l=w.sizeFromShape(n.shape),d=new Sae(l,s,i,o),u=be({inputs:{x:n},backend:a,attrs:{shape:[l]}}),h=a.runWebGLProgram(d,[u],n.dtype);a.disposeIntermediateTensorInfo(u);let p=[...n.shape,s],c=be({inputs:{x:h},backend:a,attrs:{shape:p}});return a.disposeIntermediateTensorInfo(h),c},Cae={kernelName:jo,backendName:"webgl",kernelFunc:Tae};function Kc(e){let{inputs:t,backend:a}=e,{x:r}=t;if(r.dtype==="complex64"){let n=ip({inputs:{input:r},backend:a}),s=Kc({inputs:{x:n},backend:a}),i=L0({inputs:{input:r},backend:a}),o=Kc({inputs:{x:i},backend:a}),l=zi({inputs:{real:s,imag:o},backend:a});return a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(o),l}else return op({attrs:{shape:r.shape,dtype:r.dtype,value:r.dtype==="string"?"":0},backend:a})}var Nae={kernelName:ll,backendName:"webgl",kernelFunc:Kc};function eI(e){let{inputs:t,backend:a}=e,{x:r}=t;if(r.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(r.dtype==="complex64"){let n=ip({inputs:{input:r},backend:a}),s=eI({inputs:{x:n},backend:a}),i=L0({inputs:{input:r},backend:a}),o=Kc({inputs:{x:i},backend:a}),l=zi({inputs:{real:s,imag:o},backend:a});return a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(o),l}else return op({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:a})}var Eae={kernelName:Go,backendName:"webgl",kernelFunc:eI};function Rae(e){let{inputs:t,backend:a,attrs:r}=e,{axis:n}=r;if(t.length===1)return Dg({inputs:{input:t[0]},backend:a,attrs:{dim:n}});let s=t[0].shape,i=t[0].dtype;t.forEach(u=>{w.assertShapesMatch(s,u.shape,"All tensors passed to stack must have matching shapes"),w.assert(i===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=t.map(u=>{let h=Dg({inputs:{input:u},backend:a,attrs:{dim:n}});return o.push(h),h}),d=B4({inputs:l,backend:a,attrs:{axis:n}});return o.forEach(u=>a.disposeIntermediateTensorInfo(u)),d}var Fae={kernelName:Ho,backendName:"webgl",kernelFunc:Rae},$ae=class{constructor(e,t,a){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((l,d)=>l[0]+e[d]+l[1]);let r=e.length,n=yt(r),s=t.map(l=>l[0]).join(","),i=t.map((l,d)=>l[0]+e[d]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);if(r===1){this.userCode=`
        int start = ${s};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${n} start = ${n}(${s});
      ${n} end = ${n}(${i});

      void main() {
        ${n} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${n} coords = outC - start;
          setOutput(getX(${o}));
        }
      }
    `}},Mae=class{constructor(e,t,a){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((f,m)=>f[0]+e[m]+f[1]);let r=e.length,n=yt(r),s=t.map(f=>f[0]).join(","),i=t.map((f,m)=>f[0]+e[m]).join(","),o=Ra("rc",r),l=Ra("source",r),d=`${o[r-1]} < ${this.outputShape[r-1]}`,u=r===1?"source":`vec2(${l.slice(-2).join()})`,h=[`${n} rc = outputLoc;`,`${o[r-1]} += 1;
       if(${d}) {
      `,r===1?"":`}
       rc = outputLoc;
       ${o[r-2]} += 1;
       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,r===1?"":`  ${o[r-1]} += 1;
         if(${d}) {`],p=r===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",c="";for(let f=0,m=r===1?2:4;f<m;f++)c+=`
        ${h[f]}
        if (${p}) {
          result[${f}] = float(value);
        } else {
          ${n} source = rc - start;
          result[${f}] = getChannel(getX(${l.join()}), ${u});
        }
      `;c+=r===1?"} ":"}}",this.userCode=`
      const ${n} start = ${n}(${s});
      const ${n} end = ${n}(${i});

      void main() {
        ${n} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${c}
        setOutput(result);
      }
    `}},tI=e=>{let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{paddings:s,constantValue:i}=r;if(w.sizeFromShape(n.shape)===0){let d=s.map((u,h)=>u[0]+n.shape[h]+u[1]);return op({backend:a,attrs:{shape:d,value:i,dtype:n.dtype}})}let o=J().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Mae(n.shape,s,i):new $ae(n.shape,s,i),l=[[i]];return a.runWebGLProgram(o,[n],n.dtype,l)},_ae={kernelName:mi,backendName:"webgl",kernelFunc:tI},zae=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,Oae=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  `+z0+`
  return result;
`,Dae=ga({opSnippet:zae,packedOpSnippet:Oae}),Pae={kernelName:gi,backendName:"webgl",kernelFunc:Dae};function Lae(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{axis:s,keepDims:i}=r,o=n.shape.length,l=[],d=w.parseAxisParam(s,n.shape),u=d,h=N.getAxesPermutation(u,o),p=n;h!=null&&(p=za({inputs:{x:n},backend:a,attrs:{perm:h}}),u=N.getInnerMostAxes(u.length,o),l.push(p)),N.assertAxesAreInnerMostDims("prod",u,o);let c;if(a.shouldExecuteOnCPU([p])){let f=a.texData.get(p.dataId).values,{outVals:m,outShape:g,outDtype:y}=HK(p.shape,p.dtype,f,u);c=a.makeTensorInfo(g,y,m)}else{let[f,m]=N.computeOutAndReduceShapes(p.shape,u),g=w.sizeFromShape(m),y=be({inputs:{x:p},backend:a,attrs:{shape:[-1,g]}}),A=_h(n.dtype),x=Al(y,A,"prod",a);c=be({inputs:{x},backend:a,attrs:{shape:f}}),l.push(y),l.push(x)}if(i){l.push(c);let f=N.expandShapeToKeepDim(c.shape,d);c=be({inputs:{x:c},backend:a,attrs:{shape:f}})}return l.forEach(f=>a.disposeIntermediateTensorInfo(f)),c}var Wae={kernelName:qo,backendName:"webgl",kernelFunc:Lae},aI=e=>{let{backend:t,attrs:a}=e,{start:r,stop:n,step:s,dtype:i}=a,o=qK(r,n,s,i);return t.makeTensorInfo([o.length],i,o)},Bae={kernelName:Vu,backendName:"webgl",kernelFunc:aI},Vae="return 1.0 / x;",Uae=tt({opSnippet:Vae}),Gae={kernelName:Uu,backendName:"webgl",kernelFunc:Uae},jae=Wr+`
  return (x < 0.0) ? 0.0 : x;
`,Hae=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,qae=tt({opSnippet:jae,packedOpSnippet:Hae}),Xae={kernelName:Ai,backendName:"webgl",kernelFunc:qae},Kae=Wr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Zae=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Yae=tt({opSnippet:Kae,packedOpSnippet:Zae}),Jae={kernelName:bi,backendName:"webgl",kernelFunc:Yae},Qae=class{constructor(e,t,a,r,n){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,a,l];let d=[r&&t>1?i-1:i,r&&a>1?o-1:o],u=[r&&t>1?t-1:t,r&&a>1?a-1:a],h;n?h="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":h="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${d[0]/u[0]},
          ${d[1]/u[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${h};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}},ere=class{constructor(e,t,a,r,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,a,l];let d=[r&&t>1?i-1:i,r&&a>1?o-1:o],u=[r&&t>1?t-1:t,r&&a>1?a-1:a],h;n?h="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":h="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${d[0]/u[0]},
          ${d[1]/u[1]},
          ${d[1]/u[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,
                                     ${o}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${h};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${a-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function tre(e){let{inputs:t,backend:a,attrs:r}=e,{images:n}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,d]=o,u=J().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new ere(n.shape,l,d,s,i):new Qae(n.shape,l,d,s,i);return a.runWebGLProgram(u,[n],"float32")}var are={kernelName:xi,backendName:"webgl",kernelFunc:tre},rre=class{constructor(e,t,a){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,n]=t,[,s,i]=e,o=[a&&s>1?r-1:r,a&&i>1?n-1:n],l=[a&&s>1?s-1:s,a&&i>1?i-1:i],d=o[0]/l[0],u=o[1]/l[1],h=1/d,p=1/u,c=Math.ceil(h)*2+2,f=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${d});
        const float widthScale = float(${u});

        const float invHeightScale = float(${h});
        const float invWidthScale = float(${p});

        const int winHeight = int(${c});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${s}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${n-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function nre(e){let{inputs:t,backend:a,attrs:r}=e,{images:n,dy:s}=t,{alignCorners:i}=r,o=new rre(s.shape,n.shape,i);return a.runWebGLProgram(o,[s],s.dtype)}var sre={kernelName:Ef,backendName:"webgl",kernelFunc:nre},ire=class{constructor(e,t,a,r,n){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,a,l];let d=[r&&t>1?i-1:i,r&&a>1?o-1:o],u=[r&&t>1?t-1:t,r&&a>1?a-1:a],h=r?"0.5":"0.0",p;n?p="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${d[0]/u[0]},
          ${d[1]/u[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}},ore=class{constructor(e,t,a,r,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,a,l];let d=[r&&t>1?i-1:i,r&&a>1?o-1:o],u=[r&&t>1?t-1:t,r&&a>1?a-1:a],h=r?"0.5":"0.0",p;n?p="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${d[0]/u[0]},
          ${d[1]/u[1]},
          ${d[1]/u[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,
                                     ${o}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${a-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function lre(e){let{inputs:t,backend:a,attrs:r}=e,{images:n}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,d]=o,u=J().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new ore(n.shape,l,d,s,i):new ire(n.shape,l,d,s,i);return a.runWebGLProgram(u,[n],n.dtype)}var ure={kernelName:Gu,backendName:"webgl",kernelFunc:lre},dre=class{constructor(e,t,a){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,n]=t,[,s,i]=e,o=[a&&s>1?r-1:r,a&&i>1?n-1:n],l=[a&&s>1?s-1:s,a&&i>1?i-1:i],d=o[0]/l[0],u=o[1]/l[1],h=1/d,p=1/u,c=Math.ceil(h)*2+2,f=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${d});
        const float widthScale = float(${u});

        const float invHeightScale = float(${h});
        const float invWidthScale = float(${p});

        const int winHeight = int(${c});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${s}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${o[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${o[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${r}) - 1),
                ${a} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${n}) - 1),
                ${a} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function hre(e){let{inputs:t,backend:a,attrs:r}=e,{images:n,dy:s}=t,{alignCorners:i}=r,o=new dre(s.shape,n.shape,i);return a.runWebGLProgram(o,[s],s.dtype)}var pre={kernelName:Nf,backendName:"webgl",kernelFunc:hre},cre=class{constructor(e,t){this.variableNames=["x"];let a=e.length;if(a>4)throw new Error(`WebGL backend: Reverse of rank-${a} tensor is not yet supported`);if(this.outputShape=e,a===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let r=i=>t.indexOf(i)!==-1&&e[i]!==1?`${e[i]} - coords[${i}] - 1`:`coords[${i}]`,n=e.map((i,o)=>r(o)).join(","),s=yt(a);this.userCode=`
      void main() {
        ${s} coords = getOutputCoords();
        setOutput(getX(${n}));
      }
    `}},fre=class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let a=e.length;if(a>4)throw new Error(`WebGL backend: Reverse of rank-${a} tensor is not yet supported`);this.outputShape=e;let r=Ra("rc",a),n=`${r[a-1]} + 1 < ${this.outputShape[a-1]}`,s=`${r[a-2]} + 1 < ${this.outputShape[a-2]}`,i=yt(a);a===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${n}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${o(r.slice())};
          if(${n}){
            result.g = ${l(r.slice())};
          }
          if(${s}) {
            result.b = ${d(r.slice())};
            if(${n}) {
              result.a = ${u(r.slice())};
            }
          }
          setOutput(result);
        }
    `;function o(c){return h(c)}function l(c){return c[a-1]="("+c[a-1]+" + 1)",h(c)}function d(c){return c[a-2]="("+c[a-2]+" + 1)",h(c)}function u(c){return c[a-1]="("+c[a-1]+" + 1)",c[a-2]="("+c[a-2]+" + 1)",h(c)}function h(c){let f=e.map((y,A)=>p(A,c)),m=f.join(","),g=f.slice(-2).join(",");return`getChannel(getX(${m}), vec2(${g}))`}function p(c,f){return t.indexOf(c)!==-1&&e[c]!==1?`${e[c]} - ${f[c]} - 1`:`${f[c]}`}}};function mre(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{dims:s}=r,i=n.shape.length,o=w.parseAxisParam(s,n.shape);if(i===0)return pr({inputs:{x:n},backend:a});let l=J().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new fre(n.shape,o):new cre(n.shape,o);return a.runWebGLProgram(l,[n],n.dtype)}var gre={kernelName:Ko,backendName:"webgl",kernelFunc:mre},yre=class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let a=e[1],r=e[2];this.outputShape=e;let n="";typeof t=="number"?n=`float outputValue = ${t.toFixed(2)};`:n=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${n}
          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${a}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}},Are={kernelName:ul,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:a})=>{let{image:r}=e,{radians:n,fillValue:s,center:i}=t,o=a,l=new yre(r.shape,s),[d,u]=N.getImageCenter(i,r.shape[1],r.shape[2]),h=[[d,u,Math.sin(n),Math.cos(n)]];return o.runWebGLProgram(l,[r],r.dtype,h)}},xre=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,bre=tt({opSnippet:xre}),vre={kernelName:Zo,backendName:"webgl",kernelFunc:bre},wre="return inversesqrt(x);",kre=tt({opSnippet:wre,cpuKernelImpl:XK}),Ire={kernelName:vi,backendName:"webgl",kernelFunc:kre},rI=class{constructor(e,t,a,r,n,s,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;let o=yt(n.length),l=yt(s.length),d="";a===1?d="i":a===2&&(d="i, j");let u=`getIndices(${d})`,h="";r===1?h="i":r===2&&(h="i, coords[1]");let p=`getUpdates(${h})`,c=t>1?"strides[j]":"strides";this.userCode=`
        ${o} strides = ${o}(${n});

        void main() {
          ${l} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${u});
              flattenedIndex += index * ${c};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${p};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}};function Sre(e){let{inputs:t,backend:a,attrs:r}=e,{indices:n,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:d,strides:u,outputSize:h}=N.calculateShapes(s,n,i),p=[h/d,d];if(h===0)return a.makeTensorInfo(i,n.dtype);let c=be({inputs:{x:n},backend:a,attrs:{shape:[l,o]}}),f=be({inputs:{x:s},backend:a,attrs:{shape:[l,d]}}),m=a.makeTensorInfo([],"float32",new Float32Array([0])),g=new rI(l,o,c.shape.length,f.shape.length,u,p),y=a.runWebGLProgram(g,[f,c,m],f.dtype),A=be({inputs:{x:y},backend:a,attrs:{shape:i}});return a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(f),a.disposeIntermediateTensorInfo(y),a.disposeIntermediateTensorInfo(m),A}var Tre={kernelName:Yo,backendName:"webgl",kernelFunc:Sre},Cre=class{constructor(e,t,a){this.variableNames=["c","a","b"],this.outputShape=t;let r,n;if(a>4)throw Error(`Where for rank ${a} is not yet supported`);if(a===1)n="resRC",r="resRC";else{let i=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[],l=[];for(let d=0;d<t.length;d++)l.push(`${i[d]}`),d<e&&o.push(`${i[d]}`);r=o.join(),n=l.join()}let s=yt(a);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        float cVal = getC(${r});
        if (cVal >= 1.0) {
          setOutput(getA(${n}));
        } else {
          setOutput(getB(${n}));
        }
      }
    `}};function Nre(e){let{inputs:t,backend:a}=e,{condition:r,t:n,e:s}=t,i=new Cre(r.shape.length,n.shape,n.shape.length);return a.runWebGLProgram(i,[r,n,s],$a(n.dtype,s.dtype))}var Ere={kernelName:Jo,backendName:"webgl",kernelFunc:Nre},Rre=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${N.SELU_SCALEALPHA};
  float scale = ${N.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,Fre=tt({opSnippet:Rre}),$re={kernelName:ju,backendName:"webgl",kernelFunc:Fre},Mre=hd+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,_re=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,zre=tt({opSnippet:Mre,packedOpSnippet:_re,cpuKernelImpl:KK}),Ore={kernelName:ki,backendName:"webgl",kernelFunc:zre},Dre=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,Pre=tt({opSnippet:Dre}),Lre={kernelName:Hu,backendName:"webgl",kernelFunc:Pre},Wre=hd+`
  return sin(x);
`,Bre=tt({opSnippet:Wre}),Vre={kernelName:wi,backendName:"webgl",kernelFunc:Bre},Ure=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,Gre=tt({opSnippet:Ure}),jre={kernelName:el,backendName:"webgl",kernelFunc:Gre},Hre=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,qre=tt({opSnippet:Hre}),Xre={kernelName:qu,backendName:"webgl",kernelFunc:qre},Kre=e=>{let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{blockShape:s,paddings:i}=r;w.assert(n.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let o=s.reduce((y,A)=>y*A),l=[[0,0]];l.push(...i);for(let y=1+s.length;y<n.shape.length;++y)l.push([0,0]);let d=[],u=tI({inputs:{x:n},backend:a,attrs:{paddings:l,constantValue:0}}),h=N.getReshaped(u.shape,s,o,!1),p=N.getPermuted(h.length,s.length,!1),c=N.getReshapedPermuted(u.shape,s,o,!1),f=be({inputs:{x:u},backend:a,attrs:{shape:h}}),m=za({inputs:{x:f},backend:a,attrs:{perm:p}}),g=be({inputs:{x:m},backend:a,attrs:{shape:c}});return d.push(u),d.push(f),d.push(m),d.forEach(y=>a.disposeIntermediateTensorInfo(y)),g},Zre={kernelName:tl,backendName:"webgl",kernelFunc:Kre};function Yre(e){let{inputs:t,backend:a}=e,{indices:r,values:n,denseShape:s,defaultValue:i}=t;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${s.shape}`);if(r.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${r.shape}`);if(n.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${n.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let o=a.readSync(r.dataId),l=a.readSync(n.dataId),d=a.readSync(s.dataId),u=a.readSync(i.dataId)[0],[h,p,c,f,m]=YK(o,r.shape,r.dtype,l,n.dtype,d,u);return[a.makeTensorInfo(p,r.dtype,h),a.makeTensorInfo([p[0]],n.dtype,c),a.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),a.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}var Jre={kernelName:Th,backendName:"webgl",kernelFunc:Yre};function Qre(e){let{inputs:t,backend:a}=e,{inputIndices:r,inputShape:n,newShape:s}=t;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(n.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${n.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(a.readSync(n.dataId)),o=a.readSync(r.dataId),l=Array.from(a.readSync(s.dataId)),[d,u,h]=JK(o,r.shape,r.dtype,i,l);return[a.makeTensorInfo(u,r.dtype,d),a.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}var ene={kernelName:Xu,backendName:"webgl",kernelFunc:Qre};function tne(e){let{inputs:t,backend:a}=e,{data:r,indices:n,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(n.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${n.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${s.shape}`);let i=a.readSync(r.dataId),o=a.readSync(n.dataId),l=a.readSync(s.dataId),[d,u]=S4(i,r.shape,r.dtype,o,l,!0);return a.makeTensorInfo(u,r.dtype,d)}var ane={kernelName:Ch,backendName:"webgl",kernelFunc:tne};function rne(e){let{inputs:t,backend:a}=e,{data:r,indices:n,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(n.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${n.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${s.shape}`);let i=a.readSync(r.dataId),o=a.readSync(n.dataId),l=a.readSync(s.dataId),[d,u]=S4(i,r.shape,r.dtype,o,l);return a.makeTensorInfo(u,r.dtype,d)}var nne={kernelName:Nh,backendName:"webgl",kernelFunc:rne};function sne(e){let{inputs:t,backend:a,attrs:r}=e,{sparseIndices:n,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:d,strides:u,outputSize:h}=N.calculateShapes(s,n,o),p=!1,c=new rI(d,l,n.shape.length,s.shape.length,u,[h,1],p),f=a.runWebGLProgram(c,[s,n,i],s.dtype),m=be({inputs:{x:f},backend:a,attrs:{shape:o}});return a.disposeIntermediateTensorInfo(f),m}var ine={kernelName:Eh,backendName:"webgl",kernelFunc:sne};function one(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{numOrSizeSplits:s,axis:i}=r,o=w.parseAxisParam(i,n.shape)[0],l=N.prepareSplitSize(n,s,o),d=n.shape.length,u=new Array(d).fill(0),h=n.shape.slice();return l.map(p=>{let c=[...h];c[o]=p;let f=pd({inputs:{x:n},backend:a,attrs:{begin:u,size:c}});return u[o]+=p,f})}var lne={kernelName:al,backendName:"webgl",kernelFunc:one},hb="return sqrt(x);",une=tt({opSnippet:hb,packedOpSnippet:hb,cpuKernelImpl:QK}),dne={kernelName:Ii,backendName:"webgl",kernelFunc:une},hne="return x * x;",pne=tt({opSnippet:hne}),cne={kernelName:Ku,backendName:"webgl",kernelFunc:pne},pb="return (a - b) * (a - b);",fne=ga({opSnippet:pb,packedOpSnippet:pb}),mne={kernelName:Ci,backendName:"webgl",kernelFunc:fne};function gne({inputs:e,attrs:t,backend:a}){let{x:r}=e,n=Wr+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,s=new Wn(r.shape,n);return a.runWebGLProgram(s,[r],r.dtype)}var yne={kernelName:Fi,backendName:"webgl",kernelFunc:gne},Ane=class{constructor(e,t,a){this.variableNames=["x"],this.outputShape=a;let r=a.length,n=yt(a.length),s=yt(a.length),i="";if(r===1)i="coords * strides + begin";else{let o=0;i=a.map((l,d)=>(o++,a.length===1?`coords * strides[${d}] + begin[${d}]`:`coords[${o-1}] * strides[${d}] + begin[${d}]`)).join(",")}this.userCode=`
      ${n} begin = ${n}(${e});
      ${n} strides = ${n}(${t});

      void main() {
        ${s} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}};function xne(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:d,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:p}=r,{finalShapeSparse:c,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:A,end:x,strides:b}=Ft.sliceInfo(n.shape,s,i,o,l,d,u,h,p),v;if(m)v=be({inputs:{x:n},backend:a,attrs:{shape:f}});else if(g||y){w.assert(n.shape.length>=1,()=>`Input must have rank at least 1, got: ${n.shape.length}`);let C=Ft.computeOutShape(A,x,b),E=pd({inputs:{x:n},backend:a,attrs:{begin:A,size:C}});v=be({inputs:{x:E},backend:a,attrs:{shape:f}}),a.disposeIntermediateTensorInfo(E)}else if(a.shouldExecuteOnCPU([n])){let C=a.readSync(n.dataId),E=Le(n.shape,n.dtype,C),R=eZ(c,E,b,A);v=a.makeTensorInfo(f,n.dtype,R.values)}else{let C=new Ane(A,b,c);v=a.runWebGLProgram(C,[n],n.dtype)}let T=be({inputs:{x:v},backend:a,attrs:{shape:f}});return a.disposeIntermediateTensorInfo(v),T}var bne={kernelName:rl,backendName:"webgl",kernelFunc:xne};function vne(e){let{inputs:t,backend:a,attrs:r}=e,{separator:n,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:d}=r,{data:u,dataSplits:h}=t,p=a.readSync(u.dataId),c=a.readSync(h.dataId),[f,m]=tZ(p,c,n,s,i,o,l,d);return[a.makeTensorInfo([f.length],"string",f),a.makeTensorInfo(h.shape,"int32",m)]}var wne={kernelName:Rh,backendName:"webgl",kernelFunc:vne};function kne(e){let{inputs:t,backend:a,attrs:r}=e,{skipEmpty:n}=r,{input:s,delimiter:i}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=a.readSync(s.dataId),l=a.readSync(i.dataId)[0],[d,u,h]=aZ(o,l,n),p=u.length;return[a.makeTensorInfo([p,2],"int32",d),a.makeTensorInfo([p],"string",u),a.makeTensorInfo([2],"int32",new Int32Array(h))]}var Ine={kernelName:Rf,backendName:"webgl",kernelFunc:kne};function Sne(e){let{inputs:t,backend:a,attrs:r}=e,{numBuckets:n}=r,{input:s}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(n<=0)throw new Error("Number of buckets must be at least 1");let i=a.readSync(s.dataId),o=rZ(i,n);return a.makeTensorInfo(s.shape,"int32",o)}var Tne={kernelName:Ff,backendName:"webgl",kernelFunc:Sne},Cne="return tan(x);",Nne=tt({opSnippet:Cne}),Ene={kernelName:nl,backendName:"webgl",kernelFunc:Nne},Rne=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,Fne=tt({opSnippet:Rne}),$ne={kernelName:Ei,backendName:"webgl",kernelFunc:Fne},Mne=class{constructor(e,t){this.variableNames=["A"];let a=new Array(e.length);for(let s=0;s<a.length;s++)a[s]=e[s]*t[s];this.outputShape=a,this.rank=a.length;let r=yt(this.rank),n=_ne(e);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        setOutput(getA(${n}));
      }
    `}};function _ne(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${e[0]})`;let a=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let n=0;n<e.length;n++)r.push(`imod(${a[n]}, ${e[n]})`);return r.join()}function nI(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{reps:s}=r;if(n.dtype==="string"||n.shape.length>5){let o=a.readSync(n.dataId),l=n.dtype==="string"?o.map(h=>w.decodeString(h)):o,d=Le(n.shape,n.dtype,l),u=sZ(d,s);return a.makeTensorInfo(u.shape,u.dtype,u.values)}let i=new Mne(n.shape,s);return a.runWebGLProgram(i,[n],n.dtype)}var zne={kernelName:Kn,backendName:"webgl",kernelFunc:nI},One=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},Dne=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function Gi(e,t){t!==null&&e.disposeIntermediateTensorInfo(t)}function cb(e){let t=1;for(;t<e;)t*=2;return t}function Pne(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{k:s,sorted:i}=r,o=J().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=J().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),d=n.shape,u=d[d.length-1];if(a.shouldExecuteOnCPU([n])||u<o||s>l){let R=a.readSync(n.dataId),[z,F]=iZ(R,d,n.dtype,s,i);return[a.makeTensorInfo(z.shape,z.dtype,z.values),a.makeTensorInfo(F.shape,F.dtype,F.values)]}if(s===0)return d[d.length-1]=0,[a.makeTensorInfo(d,n.dtype,[]),a.makeTensorInfo(d,"int32",[])];if(u===1)return[n,op({attrs:{shape:d,dtype:"int32",value:0},backend:a})];let h=a.texData.get(n.dataId),p=h!==null&&h.isPacked,c=p?a.unpackTensor(n):n,f=w.sizeFromShape(d)/u,m=be({inputs:{x:c},attrs:{shape:[f,u]},backend:a});p&&Gi(a,c);let g=cb(s),y=cb(u),A=null,x=()=>A===null?[m,m]:[m,A],b=(R,z,F)=>{let k=x(),D=new One(F),_=[[u],[A===null?1:0],[Number.NEGATIVE_INFINITY],[R],[z]],P=A;A=a.runWebGLProgram(D,k,"int32",_),Gi(a,P)};for(let R=1;R<g;R*=2){let z=R*2;for(let F=R;F>=1;F/=2)b(z,F,[f,y])}for(let R=y;R>g;R/=2){let z=x(),F=new Dne([f,R/2]),k=[[u],[A===null?1:0],[g]],D=A;A=a.runWebGLProgram(F,z,"int32",k),Gi(a,D);let _=g/2,P=_*2;for(let j=_;j>=1;j/=2)b(P,j,A.shape)}let v=A;A=pd({inputs:{x:A},backend:a,attrs:{begin:0,size:[f,s]}}),Gi(a,v);let T=K4({inputs:{x:m,indices:A},backend:a,attrs:{axis:1,batchDims:1}});Gi(a,m);let C=d.slice(0,-1);C.push(s),v=A,A=be({inputs:{x:A},attrs:{shape:C},backend:a}),Gi(a,v);let E=T;return T=be({inputs:{x:T},attrs:{shape:C},backend:a}),Gi(a,E),[T,A]}var Lne={kernelName:sl,backendName:"webgl",kernelFunc:Pne},Wne=class{constructor(e,t,a,r,n,s){this.variableNames=["Image","Transforms"],this.outputShape=s;let i=a==="nearest"?1:2,o;switch(r){case"constant":o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4;break;default:o=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${o} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${o} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${o} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${n});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${n});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${i} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function Bne(e){let{inputs:t,backend:a,attrs:r}=e,{image:n,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:d}=r,[u,h,p,c]=n.shape,[f,m]=d!=null?d:[h,p],g=[u,f,m,c],y=new Wne(h,p,i,o,l,g);return a.runWebGLProgram(y,[n,s],"float32")}var Vne={kernelName:il,backendName:"webgl",kernelFunc:Bne};function Une(e){let{inputs:t,attrs:a,backend:r}=e,{axis:n}=a,{x:s}=t;id(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let i=r.readSync(s.dataId),{outputValues:o,outputShape:l,indices:d}=oZ(i,n,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([d.length],"int32",d)]}var Gne={kernelName:$f,backendName:"webgl",kernelFunc:Une};function jne(e){let{inputs:t,backend:a,attrs:r}=e,{value:n}=t,{axis:s}=r;s<0&&(s+=n.shape.length);let i=n,o=i.shape.length,l=n.shape[s],d=new Array(o-1),u=0;for(let m=0;m<o;m++)m!==s&&(d[u++]=i.shape[m]);let h=[],p=new Array(o).fill(0),c=i.shape.slice();c[s]=1;let f=new Array(l);for(let m=0;m<f.length;m++){p[s]=m;let g=pd({inputs:{x:i},backend:a,attrs:{begin:p,size:c}}),y=be({inputs:{x:g},backend:a,attrs:{shape:d}});f[m]=y,h.push(g)}return h.forEach(m=>a.disposeIntermediateTensorInfo(m)),f}var Hne={kernelName:ol,backendName:"webgl",kernelFunc:jne},qne=class{constructor(e,t){this.variableNames=["x","segmentIds"];let a=e.windowSize,r=e.batchSize,n=e.inSize,s=e.numSegments,i=s*Math.ceil(n/a);this.outputShape=[r,i];let o="0.0",l="sumValue",d=Math.floor(a/4)*4,u=a%4,h=`
        sumValue += dot(values, segFilter);
    `,p="";n%a>0&&(p=`
        if (inIdx < 0 || inIdx >= ${n}) {
          return initializationValue;
        }
      `);let c="";n%a>0&&(c=`
        if (inIdx < 0 || inIdx >= ${n}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${o};

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${c}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${s})) * float(${a}));
        int currentSeg = int(mod(float(outIdx), float(${s})));

        float sumValue = 0.0;

        for (int i = 0; i < ${d}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${h}
        }

        int inIdx = inOffset + ${d};
        if (${u===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${h}
        } else if (${u===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${h}
        } else if (${u===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${h}
        }
        setOutput(${l});
      }
    `}};function Xne(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,segmentIds:s}=t,{numSegments:i}=r,o=n.shape.length,l=[],d=0,u=N.getAxesPermutation([d],o),h=n;u!=null&&(h=za({inputs:{x:n},backend:a,attrs:{perm:u}}),l.push(h),d=N.getInnerMostAxes(1,o)[0]);let p=N.segment_util.computeOutShape(h.shape,d,i),c=w.sizeFromShape([h.shape[d]]),f=be({inputs:{x:h},backend:a,attrs:{shape:[-1,c]}});l.push(f);let m=_h(n.dtype),g=(b,v,T,C,E)=>{let R=b.shape[0],z=b.shape[1],F=N.segment_util.segOpComputeOptimalWindowSize(z,E),k={windowSize:F,inSize:z,batchSize:R,numSegments:E},D=new qne(k,v),_=a.compileAndRun(D,[b,T],C);if(l.push(_),_.shape[1]===E)return _;let P=aI({backend:a,attrs:{start:0,stop:E,step:1,dtype:"float32"}}),j=nI({inputs:{x:P},backend:a,attrs:{reps:[z/F]}});return l.push(P),l.push(j),g(_,v,j,C,E)},y=g(f,"unsortedSegmentSum",s,m,i),A=be({inputs:{x:y},backend:a,attrs:{shape:p}}),x=A;if(u!=null){l.push(A);let b=N.getUndoAxesPermutation(u);x=za({inputs:{x},backend:a,attrs:{perm:b}})}return l.forEach(b=>a.disposeIntermediateTensorInfo(b)),x}var Kne={kernelName:Fh,backendName:"webgl",kernelFunc:Xne},Zne=[aY,nY,oY,dY,pY,mY,yY,xY,kY,SY,NY,FY,_Y,PY,BY,UY,jY,KY,YY,QY,rJ,dJ,pJ,fJ,bJ,wJ,TJ,DZ,EJ,_J,PJ,GJ,HJ,XJ,ZJ,JJ,tQ,nQ,oQ,uQ,hQ,fQ,gQ,bQ,wQ,SQ,NQ,RQ,_Q,PQ,VQ,jQ,XQ,KQ,YQ,QQ,tee,ree,see,uee,pee,mee,yee,bee,kee,Cee,Fee,OZ,Mee,$J,Oee,Lee,Vee,LZ,Hee,Zee,Jee,ate,ste,ute,pte,gte,bte,kte,Ste,Ete,Fte,Mte,Dte,Lte,Bte,Ute,jte,Kte,Qte,rae,hae,GZ,mae,Aae,vae,Iae,gJ,Cae,Eae,Fae,_ae,Pae,BZ,Wae,Bae,yJ,oae,Gae,Xae,Jae,HZ,are,sre,ure,pre,gre,Are,vre,Ire,Tre,Ere,$re,Ore,Lre,Vre,jre,lJ,uae,Xre,Zre,Jre,ene,ane,nne,ine,lne,dne,cne,mne,yne,bne,wne,Ine,Tne,lae,QZ,Ene,$ne,zne,Lne,Vne,eY,Gne,Hne,Kne,Nae];for(let e of Zne)An(e);var Sn=J();Sn.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);Sn.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);Sn.registerFlag("WEBGPU_MATMUL_WORK_PER_THREAD",()=>4);Sn.registerFlag("WEBGPU_USE_NAIVE_CONV2D",()=>!1);Sn.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!1);Sn.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",()=>!1);Sn.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);Sn.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);Sn.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);Sn.registerFlag("WEBGPU_USE_IMPORT",()=>!1);function Yne(e,t){if(Math.max(...e)>3)throw new Error("Cannot symbolically compute strides for rank > 4 tensor.");let a=e.length,r=e.map(s=>`${t}[${s}]`),n=new Array(a-1);n[a-2]=r[a-1];for(let s=a-3;s>=0;--s)n[s]=`(${n[s+1]} * ${r[s+1]})`;return n}function pa(e){if(e<=1)return"i32";if(e===2)return"vec2<i32>";if(e===3)return"vec3<i32>";if(e===4)return"vec4<i32>";throw Error(`GPU for rank ${e} is not yet supported`)}function yc(e,t){return e==="float32"?t?"vec4<f32>":"f32":e==="int32"||e==="bool"?t?"vec4<i32>":"i32":e}function tA(){return`
  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)
`}function Oi(){return`
  ${tA()}
  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,
          @builtin(global_invocation_id) GlobalId : vec3<u32>,
          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {
    localId = LocalId;
    globalId = GlobalId;
    numWorkgroups = NumWorkgroups;
`}function Xe(){return`
    ${Oi()}
      let index = getGlobalIndex();
`}function Jne(e,t,a,r=!1){let n=[];if(n.push(`
    let workGroupSizeX = ${a.workGroupSize[0]}u;
    let workGroupSizeY = ${a.workGroupSize[1]}u;
    let workGroupSizeZ = ${a.workGroupSize[2]}u;

    var<private> localId: vec3<u32>;
    var<private> globalId: vec3<u32>;
    var<private> numWorkgroups: vec3<u32>;

    // Only used when the y/z dimension of workgroup size is 1.
    fn getGlobalIndex() -> i32 {
      if (numWorkgroups.y == 1u && numWorkgroups.z == 1u) {
        return i32(globalId.x);
      }

      let localInvocationIndex = localId.z * workGroupSizeX * workGroupSizeY +
          localId.y * workGroupSizeX + localId.x;
      let workGroupID = (globalId - localId)/vec3<u32>(
          workGroupSizeX, workGroupSizeY, workGroupSizeZ);

      return i32((workGroupID.z * numWorkgroups.x * numWorkgroups.y +
        workGroupID.y * numWorkgroups.x + workGroupID.x) *
        (workGroupSizeX * workGroupSizeY * workGroupSizeZ) +
        localInvocationIndex);
    }
  `),r===!0)return n.push(`
      struct Matrix0 {
        numbers: array<${yc(t.dtype,a.isVec4)}>;
      };
      struct Uniform {
        size            : i32;
        numChannels     : i32;
        outShapeStrides : vec2<i32>;
        dispatchSize    : vec3<u32>;
      };

      @group(0) @binding(0) var<storage, write> result : Matrix0;
      @group(0) @binding(2) var<uniform> uniforms: Uniform;
    `),[fb,n.join(`
`),mb(t.shape),a.getUserCode()].join(`
`);let s="struct Uniforms { NAN : f32; ";a.variableNames.forEach((u,h)=>{s+=`${u.charAt(0).toLowerCase()+u.slice(1)}Shape : ${pa(e[h].shape.length)}; `}),s+=`outShape : ${pa(t.shape.length)} ; `;let i=t.shape.length-1;s+=`
       outShapeStrides: ${pa(i)}; `,a.size&&(s+="size : i32; "),a.uniforms&&(s+=a.uniforms),s+="};",n.push(s),a.atomic?n.push(`
    struct Matrix0 {
        numbers: array<atomic<i32>>;
    };

    @group(0) @binding(0) var<storage, read_write> result : Matrix0;
  `):n.push(`
    struct Matrix0 {
        numbers: array<${yc(t.dtype,a.isVec4)}>;
    };

    @group(0) @binding(0) var<storage, write> result : Matrix0;
  `),a.variableNames.forEach((u,h)=>{n.push(`
    struct Matrix${1+h} {
      numbers: array<${yc(e[h].dtype,a.isVec4)}>;
    };
    @group(0) @binding(${1+h}) var<storage, read> ${u} : Matrix${1+h};
    `)}),s!==""&&n.push(`
    @group(0) @binding(${1+a.variableNames.length}) var<uniform> uniforms : Uniforms;
    `);let[o,l]=nse(t.shape,a.dispatchLayout),d=[fb,n.join(`
`),mb(t.shape),o,Qne(t.shape.length)];if(a.atomic||d.push(ese(t.shape,t.dtype,a.isVec4)),l===t.shape.length){let u=e.map(h=>tse(h,t.shape,a.isVec4,a.dispatchLayout.x.length===t.shape.length)).join(`
`);d.push(u)}return d.push(a.getUserCode()),d.join(`
`)}var fb=`
  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) && all(coord < shape);
  }

  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }
  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return dot(coords, vec2<i32>(shape.y, 1));
  }
  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));
  }
  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return dot(coords, vec4<i32>(
        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
  }

  fn idiv(a: i32, b: i32, sign: f32) -> i32 {
    var res: i32 = a / b;
    let mod: i32 = a % b;
    if (sign < 0. && mod != 0) {
      res = res - 1;
    }
    return res;
  }

  fn isNanCustom(val : f32) -> bool {
    if (val > 0.0) {
      return false;
    }
    if (val < 0.0) {
      return false;
    }
    if (val == 0.0) {
      return false;
    }
    return true;
  }
  fn isNanCustomVec4(val : vec4<f32>) -> vec4<bool> {
    return vec4<bool>(isNanCustom(val[0]), isNanCustom(val[1]), isNanCustom(val[2]), isNanCustom(val[3]));
  }
`;function Qne(e){let t="";switch(e){case 0:case 1:t+=`
        fn getOutputIndexFromCoords(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:t+=`
        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {
          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));
        }
        `;break;case 3:t+=`
        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {
          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));
        }
        `;break;case 4:t+=`
        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
          return dot(coords, vec4<i32>(
            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));
        }
        `;break;default:w.assert(!1,()=>`Unsupported ${e}D shape`);break}return t}function ese(e,t,a){let r=e.length,n=yc(t,a),s;if(a?s=`fn setOutputAtIndex(flatIndex : i32, value : vec4<f32>) {
      result.numbers[flatIndex] = ${n}(value);
    }
    fn setOutputAtIndexI32(flatIndex : i32, value : vec4<i32>) {
      result.numbers[flatIndex] = ${n}(value);
    }`:s=`fn setOutputAtIndex(flatIndex : i32, value : f32) {
      result.numbers[flatIndex] = ${n}(value);
    }
    fn setOutputAtIndexI32(flatIndex : i32, value : i32) {
      result.numbers[flatIndex] = ${n}(value);
    }`,r>=2){let i=["d0","d1","d2","d3"].slice(0,r),o=pa(r);a?s+=`
      fn setOutputAtCoords(${i.map(l=>`${l} : i32`).join(", ")}, value : vec4<f32>) {
        let flatIndex = getOutputIndexFromCoords(${o}(${i.join(", ")}));
        setOutputAtIndex(flatIndex / 4, value);
      }
      fn setOutputAtCoordsI32(${i.map(l=>`${l} : i32`).join(", ")}, value : vec4<i32>) {
        let flatIndex = getOutputIndexFromCoords(${o}(${i.join(", ")}));
        setOutputAtIndexI32(flatIndex / 4, value);
      }
    `:s+=`
      fn setOutputAtCoords(${i.map(l=>`${l} : i32`).join(", ")}, value : f32) {
        let flatIndex = getOutputIndexFromCoords(${o}(${i.join(", ")}));
        setOutputAtIndex(flatIndex, value);
      }
      fn setOutputAtCoordsI32(${i.map(l=>`${l} : i32`).join(", ")}, value : i32) {
        let flatIndex = getOutputIndexFromCoords(${o}(${i.join(", ")}));
        setOutputAtIndexI32(flatIndex, value);
      }
    `}return s}function tse(e,t,a,r){let n=ase(e,a);return e.shape.length<=t.length&&(n+=rse(e,t,a,r)),n}function ase(e,t){let a=e.name,r=e.shape.length,n=pa(r),s="get"+a.charAt(0).toUpperCase()+a.slice(1),i=["d0","d1","d2","d3"].slice(0,r),o=i.map(u=>`${u} : i32`).join(", ");if(r<1)return t?`
        fn ${s}() -> vec4<f32> {
          return vec4<f32>(${a}.numbers[0]);
        }
      `:`
      fn ${s}() ->f32 {
        return f32(${a}.numbers[0]);
      }
    `;let l=`uniforms.${a.charAt(0).toLowerCase()+a.slice(1)}Shape`,d=`${r}D`;return r===0&&(d="1D"),t?`
      fn ${s}(${o}) -> vec4<f32> {
        return vec4<f32>(${a}.numbers[getIndexFromCoords${d}(${n}(${i.join(",")}),
          ${l}) / 4]);
      }
      `:`
    fn ${s}(${o}) -> f32 {
      return f32(${a}.numbers[getIndexFromCoords${d}(${n}(${i.join(",")}),
        ${l})]);
    }
   `}function rse(e,t,a,r){let n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),i="get"+s+"ByOutput",o=e.shape.length,l=t.length,d=pa(l);if(w.arraysEqual(e.shape,t)&&r)return a?`
        fn ${i}Index(globalIndex : i32) -> vec4<f32> {
          return vec4<f32>(${n}.numbers[globalIndex]);
        }

        fn ${i}Coords(coords : ${d}) -> vec4<f32> {
          return vec4<f32>(${n}.numbers[${l>1?"getOutputIndexFromCoords(coords)":"coords"} / 4]);
        }
        `:`
      fn ${i}Index(globalIndex : i32) -> f32 {
        return f32(${n}.numbers[globalIndex]);
      }

      fn ${i}Coords(coords : ${d}) -> f32 {
        return f32(${n}.numbers[${l>1?"getOutputIndexFromCoords(coords)":"coords"}]);
      }
      `;let u=N.getBroadcastDims(e.shape,t),h=l-o,p="";if(o===0)return a?`
      fn ${i}Index(globalIndex : i32) -> vec4<f32> {
        return get${s}();
      }

      fn ${i}Coords(coords : ${d}) -> vec4<f32> {
        return get${s}();
      }
    `:`
      fn ${i}Index(globalIndex : i32) -> f32{
        return get${s}();
      }

      fn ${i}Coords(coords : ${d}) -> f32{
        return get${s}();
      }
    `;l<2&&u.length>=1?p="coords = 0;":p=u.map(g=>`coords[${g+h}] = 0;`).join(`
`);let c="";if(l<2&&o>0)c="coords";else if(l>1){let g=pa(o),y=e.shape.map((A,x)=>`coords[${x+h}]`).join(", ");c=`${g}(${y})`}else c="coords";let f=`uniforms.${n.charAt(0).toLowerCase()+n.slice(1)}Shape`,m=`${o}D`;return a?`
      fn ${i}Index(globalIndex : i32) -> vec4<f32> {
        var coords = getCoordsFromIndex(globalIndex);
        ${p}
        return ${n}.numbers[getIndexFromCoords${m}(${c}, ${f}) / 4];
      }

      fn ${i}Coords(coordsIn : ${d}) -> vec4<f32> {
        var coords = coordsIn;
        ${p}
        return ${n}.numbers[getIndexFromCoords${m}(${c}, ${f}) / 4];
      }
    `:`
    fn ${i}Index(globalIndex : i32) -> f32 {
      var coords = getCoordsFromIndex(globalIndex);
      ${p}
      return f32(${n}.numbers[getIndexFromCoords${m}(${c}, ${f})]);
    }

    fn ${i}Coords(coordsIn : ${d}) -> f32 {
      var coords = coordsIn;
      ${p}
      return f32(${n}.numbers[getIndexFromCoords${m}(${c}, ${f})]);
    }
  `}function nse(e,t){let{x:a,y:r=[],z:n=[]}=t,s=e.length;if(a.length===s)return[`fn getOutputCoords() -> ${pa(s)}{
      let globalIndex = getGlobalIndex();
      return getCoordsFromIndex(globalIndex);
    }
    `,s];let i="",o=[a,r,n],l=0;for(let p=0;p<o.length;p++){let c=o[p];if(c.length!==0)if(l+=c.length,c.length===1)i+=`let d${c[0]} = i32(globalId[${p}]);`;else{let f=Yne(c,"uniforms.outShape");i+=`var index${p} = i32(globalId[${p}]);`;for(let m=0;m<f.length;m++)i+=`let d${c[m]} = index${p} / ${f[m]};`,m===f.length-1?i+=`let d${c[m+1]} = index${p} - d${c[m]} * ${f[m]};`:i+=`index${p} = index${p} - d${c[m]} * ${f[m]};`}}let d=[];for(let p=0;p<l;p++)d.push(`d${p}`);let u=pa(l),h=`fn getOutputCoords() -> ${u} {
    ${i}
  `;return d.length===0?h+=`return ${u}(0); }`:h+=`return ${u}(${d.join(",")}); }`,[h,l]}function mb(e){let t=e.length;if(t<=1)return"fn getCoordsFromIndex(index : i32) -> i32 { return index; }";let a=w.computeStrides(e),r=pa(t),n=[];for(let i=0;i<t;i++)n.push(`d${i}`);if(a.length===1)return`    fn getCoordsFromIndex(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.outShapeStrides; let d1 = index - d0 * uniforms.outShapeStrides;
      return vec2<i32>(d0, d1);
    }`;let s="var index2 = index;"+a.map((i,o)=>{let l=`let ${n[o]} = index2 / uniforms.outShapeStrides[${o}]`,d=o===a.length-1?`let ${n[o+1]} = index2 - ${n[o]} * uniforms.outShapeStrides[${o}]`:`index2 = index2 - ${n[o]} * uniforms.outShapeStrides[${o}]`;return`${l}; ${d};`}).join("");return`
    fn getCoordsFromIndex(index : i32) -> ${r} {
      ${s}
      return ${r}(${n.join(",")});
    }
  `}var sI={};ze(sI,{ArrayBufferToTypedArray:()=>oI,GPUBytesPerElement:()=>Pg,computeDispatch:()=>$e,computeWorkGroupSizeForConv2d:()=>aA,computeWorkGroupSizeForMatMul:()=>iI,computeWorkPerThreadForConv2d:()=>rA,flatDispatchLayout:()=>Ge,isWebGPUSupported:()=>nA,tilesFitEvenlyIntoShape:()=>jn});var Dl=65535,oo=e=>{let t=1;for(let a=0;a<e.length;a++)t*=e[a];return t};function jn(e,t){if(e.length!==t.length)throw new Error(`Cannot compute whether rank ${e.length} tiles fit evenly into rank ${t.length} shape - ranks must match.`);return t.every((a,r)=>a%e[r]===0)}function $e(e,t,a=[1,1,1],r=[1,1,1]){let[n,s,i]=[Math.ceil(oo(e.x.map(l=>t[l]))/(a[0]*r[0])),e.y?Math.ceil(oo(e.y.map(l=>t[l]))/(a[1]*r[1])):1,e.z?Math.ceil(oo(e.z.map(l=>t[l]))/(a[2]*r[2])):1];if(n<=Dl&&s<=Dl&&i<=Dl)return[n,s,i];w.assert(n>Dl&&e.y===void 0&&e.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let o=Math.ceil(Math.sqrt(n));return o>Dl?(o=Math.ceil(Math.cbrt(n)),w.assert(o<=Dl,()=>"Total dispatch size exceeds WebGPU maximum."),[o,o,o]):[o,o,1]}function aA(e,t){let a=oo(e.x.map(n=>t[n])),r=oo(e.y.map(n=>t[n]));return a<=4?[4,16,1]:r<=4?[16,4,1]:[16,16,1]}function iI(e,t,a){return e===1?[32,1,1]:a===1?[1,32,1]:[8,8,1]}function rA(e,t){let a=oo(e.x.map(n=>t[n])),r=oo(e.y.map(n=>t[n]));return a<=4?[1,2,1]:r<=4?[2,1,1]:[2,2,1]}function Ge(e){return{x:e.map((t,a)=>a)}}function Pg(e){if(e==="float32"||e==="int32"||e==="bool"||e==="string")return 4;if(e==="complex64")return 8;throw new Error(`Unknown dtype ${e}`)}function oI(e,t){if(t==="float32")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"||t==="string")return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function nA(){return(typeof window!="undefined"||typeof WorkerGlobalScope!="undefined")&&!!navigator.gpu}var sse="return a + b;",ise="return areal * breal - aimag * bimag;",ose="return areal * bimag + aimag * breal;",lse="return a / b;",use="return a * b;",dse="return (a - b) * (a - b);",hse="return a - b;",pse="return f32(a == b);",cse="return vec4<f32>(a == b);",fse="return f32(a > b);",mse="return vec4<f32>(a > b);",gse="return f32(a >= b);",yse="return vec4<f32>(a >= b);",Ase="return f32(a < b);",xse="return vec4<f32>(a < b);",bse="return f32(a <= b);",vse="return vec4<f32>(a <= b);",wse="return f32(f32(a) >= 1.0 && f32(b) >= 1.0);",kse=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,Ise=`
  if (isNanCustom(a)) { return a; }
  if (isNanCustom(b)) { return b; }
  `,lI=`
  if (isNaN.r) {
    resultTemp.r = uniforms.NAN;
  }
  if (isNaN.g) {
    resultTemp.g = uniforms.NAN;
  }
  if (isNaN.b) {
    resultTemp.b = uniforms.NAN;
  }
  if (isNaN.a) {
    resultTemp.a = uniforms.NAN;
  }
  `,Sse=`
  let s = sign(a) * sign(b);
  let ia = i32(round(a));
  let ib = i32(round(b));
  return f32(idiv(ia, ib, s));
  `,Tse=`
  let ia = vec4<i32>(round(a));
  let ib = vec4<i32>(round(b));
  let cond = ib != vec4<i32>(0);
  var resultTemp = vec4<i32>(0);
  let s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    resultTemp[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    resultTemp[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    resultTemp[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    resultTemp[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4<f32>(resultTemp);
  `,Cse="return f32(a != b);",Nse="return vec4<f32>(a != b);",Ese=`
  if(a < 0.0 && floor(b) < b) {
    return uniforms.NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  if (round(abs(b) % 2.0) != 1.0) {
    return pow(abs(a), b);
  }
  return sign(a) * pow(abs(a), b);
  `,Rse=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = a < vec4<f32>(0.0) & floor(b) < b;
  ${lI}
  return resultTemp;
  `,Fse="if (a < 0.0) { return b * a; }  return a;",$se=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
  `;function gb(e,t){let a=t?lI:Ise;return t?`
    var resultTemp = vec4<f32>(${e}(a, b));
    let isNaN = isNanCustomVec4(a) | isNanCustomVec4(b);
    `+a+`
    return resultTemp;
  `:a+`
    return ${e}(a, b);
  `}function lp(e,t){switch(e){case 0:return use;case 1:return sse;case 2:return hse;case 3:return lse;case 4:return t?cse:pse;case 5:return t?mse:fse;case 6:return t?yse:gse;case 7:return t?xse:Ase;case 8:return t?vse:bse;case 9:return t?kse:wse;case 10:return t?Nse:Cse;case 11:return dse;case 12:return t?Tse:Sse;case 14:return t?$se:Fse;case 15:return gb("max",t);case 16:return gb("min",t);case 13:return t?Rse:Ese;case 17:return ise;case 18:return ose;default:throw new Error(`BinaryType ${e} is not implemented!`)}}var Mse="return abs(a);",_se="return ceil(a);",zse="return cos(a);",Ose=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,Dse="return exp(a) - 1.0;",Pse="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",Lse=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,Wse="return exp(a);",Bse="return floor(a);",Vse="return a;",Use=`if (a < 0.0) { return 1.0/0.0; }
  return log(a);`,Gse="return f32(!(a >= 1.0));",jse="return -a;",Hse="return (a < 0.0) ? b * a : a;",qse="if (a < 0.0) { return uniforms.alpha * a; } return a;",Xse="if(a < 0.0) { return 0.0; } return a;",Kse="return clamp(a, 0.0, 6.0);",Zse="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",Yse=`
  var resFloat = a * vec4<f32>(a >= vec4<f32>(0.0));
  let isNaN = isNanCustomVec4(a);

  if (isNaN.r) {
    resFloat.r = a.r;
  }
  if (isNaN.g) {
    resFloat.g = a.g;
  }
  if (isNaN.b) {
    resFloat.b = a.b;
  }
  if (isNaN.a) {
    resFloat.a = a.a;
  }
  return resFloat;
`,Jse="return 1.0/sqrt(a);",Qse="return 1.0 / (1.0 + exp(-1.0 * a));",eie="return sin(a);",tie=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,aie="return sqrt(a);",rie="return a * a;",nie=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,sie="return f32(i32((a)));";function ql(e,t){switch(e){case 0:return Mse;case 2:return zse;case 3:return Ose;case 1:return _se;case 4:return t?Lse:Pse;case 5:return Wse;case 6:return Dse;case 7:return Bse;case 8:return Vse;case 9:return Use;case 10:return Gse;case 11:return jse;case 12:return Hse;case 15:return qse;case 13:return t?Yse:Xse;case 14:return t?Zse:Kse;case 16:return Jse;case 19:return Qse;case 17:return eie;case 18:return tie;case 20:return aie;case 21:return rie;case 22:return nie;case 23:return sie;default:throw new Error(`BinaryType ${e} is not implemented!`)}}function ts(e,t=!1){if(e===null)return null;if(e==="linear")return ql(8);if(e==="relu")return ql(13,t);if(e==="elu")return ql(4,t);if(e==="relu6")return ql(14,t);if(e==="prelu")return lp(14,t);if(e==="sigmoid")return ql(19);throw new Error(`Activation ${e} has not been implemented for the WebGPU backend.`)}function uI(e,t,a,r){return w.assert(r%4===0&&e[0]===4,()=>"tileInner must be divisible by 4. And ColPerThread must be 4"),`
  var<workgroup> mm_Asub : array<array<vec4<f32>, ${r/e[0]}>, ${t}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${a/e[0]}>, ${r}>;

  let RowPerThread = ${e[1]};
  let ColPerThread = ${e[0]};
  let TileInner = ${r};

  ${Oi()}

    let tileRow = ${t===1?"0":"i32(localId.y) * RowPerThread"};
    let tileCol = i32(localId.x);

    let globalRow = ${t===1?"0":"i32(globalId.y) * RowPerThread"};
    let globalCol = i32(globalId.x);
    let numTiles = (uniforms.dimInner - 1) / TileInner + 1;

    var acc: array<vec4<f32>, RowPerThread>;
    var ACached : vec4<f32>;
    var BCached : array<vec4<f32>, 4>;

    // Loop over shared dimension.
    var globalColA = tileCol;
    let RowPerThreadB = TileInner / i32(workGroupSizeY);
    let tileRowB = i32(localId.y) * RowPerThreadB;
    for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            mm_Asub[inputRow][inputCol] = mm_readA(globalRow + innerRow, globalColA, globalId);
        }
        globalColA = globalColA + TileInner / ColPerThread;

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(t * TileInner + inputRow, globalCol, globalId);
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileInner / ColPerThread; k = k + 1) {
            BCached[0] = mm_Bsub[k * ColPerThread][tileCol];
            BCached[1] = mm_Bsub[k * ColPerThread + 1][tileCol];
            BCached[2] = mm_Bsub[k * ColPerThread + 2][tileCol];
            BCached[3] = mm_Bsub[k * ColPerThread + 3][tileCol];

            for (var i = 0; i < RowPerThread; i = i + 1) {
                ACached = mm_Asub[tileRow + i][k];
                acc[i] = BCached[0] * ACached.x + acc[i];
                acc[i] = BCached[1] * ACached.y + acc[i];
                acc[i] = BCached[2] * ACached.z + acc[i];
                acc[i] = BCached[3] * ACached.w + acc[i];
            }
        }

        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        mm_write(globalRow + innerRow,
                 globalCol,
                 acc[innerRow], globalId);
    }
  }`}var iie=class{constructor(e,t,a,r=null,n=null,s=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.workGroupSize=[8,8,1],this.isVec4=!0,this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]},t[1]===1?this.elementsPerThread=[4,1,1]:this.elementsPerThread=[4,4,1],this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread);let i=r!=null,o=s!=null;i&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.tileAOuter=t[1]===1?1:this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=this.tileBOuter,this.aShape=e,this.addBias=i,this.activation=n,this.hasPreluActivationWeights=o,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`matMulPackedVec4_${this.activation}_${this.fitA}_${this.fitB}_${this.elementsPerThread}`}getShapeFit(){let e=this.aShape[2],t=this.outputShape[2],a=[this.outputShape[0],e,t],r=[this.tileAOuter,this.tileInner],n=[this.tileInner,this.tileBOuter];return[jn(r,this.aShape.slice(1)),jn(n,a.slice(1))]}getUserCode(){let e=this.fitA?"return A.numbers[batch * batchASize + row * uniforms.dimInner / 4 + col]":`if (coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
            return A.numbers[batch * batchASize + row * uniforms.dimInner / 4 + col];
        }
        return vec4<f32>(0.0)`,t=this.fitB?"return B.numbers[batch * batchBSize + row * uniforms.dimBOuter / 4 + col]":`if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B.numbers[batch * batchBSize + row * uniforms.dimBOuter / 4 + col];
        }
        return vec4<f32>(0.0)`,a="",r="";if(this.activation){let s=ts(this.activation,this.isVec4);this.hasPreluActivationWeights?a=`fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {
                  let b = getPreluActivationWeightsByOutputCoords(outCoord);
                  ${s}
                }`:a=`
            fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {
              ${s}
            }`,r="value = activation(value, outCoord);"}let n=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${a}
      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2] / 4;
        let batch = i32(globalId.z);
        ${e};
      }

      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2] / 4;
        let batch = i32(globalId.z);
        ${t};
      }

      fn mm_write(row : i32, col : i32, valueIn : vec4<f32>, globalId : vec3<u32>) {
        if (row < uniforms.aShape[1] && col * 4 < uniforms.bShape[2])
        {
          var value = valueIn;
          let batch = i32(globalId.z);
          let outCoord = vec3<i32>(batch, row, col * 4);
          ${n}
          ${r}
          setOutputAtCoords(outCoord[0], outCoord[1], outCoord[2], value);
        }
      }
      ${uI(this.elementsPerThread,this.tileAOuter,this.tileBOuter,this.tileInner)}
    `}};function sA(e,t){let a=t[1]*e[1],r=t[0]*e[0],n=a>r?a:r;return`
    var<workgroup> mm_Asub : array<array<f32, ${n}>, ${a}>;
    var<workgroup> mm_Bsub : array<array<f32, ${r}>, ${n}>;
    ${Oi()}
      let tileRow = i32(localId.y) * ${e[1]};
      let tileCol = i32(localId.x) * ${e[0]};

      let globalRow = i32(globalId.y) * ${e[1]};
      let globalCol = i32(globalId.x) * ${e[0]};

      let numTiles = (uniforms.dimInner - 1) / ${n} + 1;

      var acc : array<array<f32, ${e[0]}>, ${e[1]}>;
      var ACached : f32;
      var BCached : array<f32, ${e[0]}>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {
          acc[innerRow][innerCol] = 0.0;
        }
      }

      let ColPerThreadA = ${n} / ${t[0]};
      let tileColA = i32(localId.x) * ColPerThreadA;
      let RowPerThreadB = ${n} / ${t[1]};
      let tileRowB = i32(localId.y) * RowPerThreadB;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ColPerThreadA; innerCol = innerCol + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileColA + innerCol;

            mm_Asub[inputRow][inputCol] = mm_readA(
                globalRow + innerRow,
                t * ${n} + inputCol, globalId);
          }
        }
        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol + innerCol;

            mm_Bsub[inputRow][inputCol] = mm_readB(
              t * ${n} + inputRow,
              globalCol + innerCol, globalId);
          }
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < ${n}; k = k + 1) {
          for (var inner = 0; inner < ${e[0]}; inner = inner + 1) {
            BCached[inner] = mm_Bsub[k][tileCol + inner];
          }

          for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
            ACached = mm_Asub[tileRow + innerRow][k];
            for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {
              acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
            }
          }
        }

        workgroupBarrier();
      }

      for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {

          if ((globalCol + innerCol) < uniforms.dimBOuter &&
              (globalRow + innerRow) < uniforms.dimAOuter) {
            mm_write(globalRow + innerRow,
                     globalCol + innerCol,
                     acc[innerRow][innerCol], globalId);
          }
        }
      }
    }
  `}function oie(e){return`
    let TileSize = ${e[0]*4};
    var<workgroup> mm_Asub : array<vec4<f32>, ${e[0]}>;

    ${Oi()}
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / TileSize + 1;

      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        let colA = t * TileSize + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(mm_readA(globalRow, colA, globalId),
                                mm_readA(globalRow, colA + 1, globalId),
                                mm_readA(globalRow, colA + 2, globalId),
                                mm_readA(globalRow, colA + 3, globalId));
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileSize / 4; k = k + 1) {
          let rowB = t * TileSize + k * 4;
          let BCached = vec4<f32>(mm_readB(rowB, globalCol, globalId),
                              mm_readB(rowB + 1, globalCol, globalId),
                              mm_readB(rowB + 2, globalCol, globalId),
                              mm_readB(rowB + 3, globalCol, globalId));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      if (globalRow < uniforms.dimAOuter && globalCol < uniforms.dimBOuter) {
        mm_write(globalRow, globalCol, acc, globalId);
      }
    }
  `}var dI=class{constructor(e,t,a,r=!1,n=!1,s=null,i=null,o=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.workGroupSize=[16,16,1],this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};let l=r?e[1]:e[2];this.workGroupSize=iI(t[1],l,t[2]),(t[1]===1||t[2]===1)&&(a=1),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize,[a,a,1]),w.arraysEqual(this.dispatch,[1,1,1])&&(a=1,this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize,[a,a,1]));let d=s!=null,u=o!=null;d&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),this.workPerThread=a,this.aShape=e,this.transposeA=r,this.transposeB=n,this.addBias=d,this.activation=i,this.hasPreluActivationWeights=u;let h=this.outputShape[2],p=this.transposeB?[this.outputShape[0],h,l]:[this.outputShape[0],l,h];[this.fitA,this.fitB]=this.getShapeFit(p),this.shaderKey=`matMulPacked_${this.workPerThread}_${r}_${n}_${this.activation}_${this.fitA}_${this.fitB}_${this.outputShape[1]>1}`}getShapeFit(e){let t=this.workGroupSize[1]*this.workPerThread,a=this.workGroupSize[0]*this.workPerThread,r=t>a?t:a;this.outputShape[1]===1&&(r*=4),w.assert(r%this.workGroupSize[0]===0&&r%this.workGroupSize[1]===0,()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y");let n=[t,r],s=[r,a];return[jn(n,this.aShape.slice(1)),jn(s,e.slice(1))]}getUserCode(){let e;this.transposeA===!1?e=this.fitA?"return A.numbers[batch * batchASize + row * uniforms.dimInner + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
             return A.numbers[batch * batchASize + row * uniforms.dimInner + col];
           }
           return 0.0;`:e=this.fitA?"return A.numbers[batch * batchASize + col * uniforms.dimAOuter + row];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
             return A.numbers[batch* batchASize + col * uniforms.dimAOuter + row];
           }
           return 0.0;`;let t;this.transposeB===!1?t=this.fitB?"return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];
           }
           return 0.0;`:t=this.fitB?"return B.numbers[batch * batchBSize + col * uniforms.dimInner + row];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B.numbers[batch * batchBSize + col * uniforms.dimInner + row];
           }
           return 0.0;`;let a="",r="";if(this.activation){let s=ts(this.activation,!1);this.hasPreluActivationWeights?a=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
               let b = getPreluActivationWeightsByOutputCoords(outCoord);
               ${s}
            }`:a=`
              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
                ${s}
              }
            `,r="value = activation(value, outCoord);"}let n=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${a}

      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        let batch = i32(globalId.z);
        ${e}
      }

      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batch = i32(globalId.z);
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        ${t}
      }

      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {
        var value = valueIn;
        let batch = i32(globalId.z);
        let outCoord = vec3<i32>(batch, row, col);
        ${n}
        ${r}
        setOutputAtCoords(batch, row, col, value);
      }
      ${this.outputShape[1]>1?sA([this.workPerThread,this.workPerThread,1],this.workGroupSize):oie(this.workGroupSize)}
    `}};function lie(){return`
    var<workgroup> sumValues : array<f32, workGroupSizeX>;
    ${Oi()}
      let coords = getOutputCoords();
      let batch = coords[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + i32(workGroupSizeX)) {
        let dataA = mm_readA(batch, row, k);
        let dataB = mm_readB(batch, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = workGroupSizeX / 2u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}var uie=class{constructor(e,t=!1,a=!1,r=null,n=null,s=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.workGroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize);let i=r!=null,o=s!=null;i&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.transposeA=t,this.transposeB=a,this.addBias=i,this.activation=n,this.hasPreluActivationWeights=o,this.shaderKey=`matMulReduce_${this.activation}_${t}_${a}`}getUserCode(){let e;this.transposeA===!1?e="return A.numbers[batch * batchASize + row * uniforms.dimInner + col];":e="return A.numbers[batch * batchASize + col * uniforms.dimAOuter + row];";let t;this.transposeB===!1?t="return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];":t="return B.numbers[batch * batchBSize + col * uniforms.dimInner + row];";let a="",r="";if(this.activation){let s=ts(this.activation,!1);this.hasPreluActivationWeights?a=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
               let b = getPreluActivationWeightsByOutputCoords(outCoord);
               ${s}
            }`:a=`
              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
                ${s}
              }
            `,r="value = activation(value, outCoord);"}let n=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${a}

      fn mm_readA(batch: i32, row : i32, col : i32) -> f32 {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        ${e}
      }

      fn mm_readB(batch: i32, row : i32, col : i32) -> f32 {
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        ${t}
      }

      fn mm_write(batch: i32, row : i32, col : i32, valueIn : f32) {
        var value = valueIn;
        let outCoord = vec3<i32>(batch, row, col);
        ${n}
        ${r}
        setOutputAtCoords(batch, row, col, value);
      }
      ${lie()}
    `}};function die(e){let t=e[1]/2,a=e[0],r=t>a?t:a;return`
  var<workgroup> mm_Asub1 : array<array<f32, ${r}>, ${t}>;
  var<workgroup> mm_Bsub1 : array<array<f32, ${a}>, ${r}>;
  var<workgroup> mm_Asub2 : array<array<f32, ${r}>, ${t}>;
  var<workgroup> mm_Bsub2 : array<array<f32, ${a}>, ${r}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Introduces two shared memory buffers, some logical threads could handle
  // arithmetic operations and others handle IO operations between barrier api,
  // makes ALUs and load/store units work simultaneously, could improves
  // the performance.
  ${Oi()}
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${r} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = tileRow;
    for (var t = 0; t < numTiles; t = t + 1) {
      if (t == 0) {
        if (tileRow < ${t}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub1[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${r};
          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${r};
        }
      } else {
        if (tileRow < ${t}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub1[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${r};
          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${r};
        } else {
          // Compute acc values for a single thread.
          for (var k = 0; k < ${r}; k = k + 1) {
            let subRow = tileRow - ${t};
            if (subRow < 0) {
              continue;
            }
            acc = acc + mm_Asub2[subRow][k] * mm_Bsub2[k][tileCol];
          }
        }
      }
      workgroupBarrier();
      if (t != 0) {
        t = t + 1;
      }

      if (t < numTiles) {
        if (tileRow < ${t}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub2[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${r};
          mm_Bsub2[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${r};
        } else {
          // Compute acc values for a single thread.
          for (var k = 0; k < ${r}; k = k + 1) {
            let subRow = tileRow - ${t};
            if (subRow < 0) {
              continue;
            }
            acc = acc + mm_Asub1[subRow][k] * mm_Bsub1[k][tileCol];
          }
        }
      }
      workgroupBarrier();
    }
    let writeCol = (globalRow - tileRow) / 2 + tileRow - ${t};
    if (tileRow >= ${t} && writeCol >= 0) {
      mm_write(writeCol, globalCol, acc, globalId);
    }
  }
  `}var hie=class{constructor(e,t,a,r=null,n=null,s=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.workGroupSize=[8,16,1],w.assert(e[1]<=16||t[2]<=16,()=>"This program can be only used when A width or B Height are small"),this.outputShape=a,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(a[2]/this.workGroupSize[0]),Math.ceil(a[1]*2/this.workGroupSize[1]),a[0]];let i=r!=null;i&&this.variableNames.push("bias");let o=s!=null;o&&this.variableNames.push("preluActivationWeights"),this.addBias=i,this.activation=n,this.hasPreluActivationWeights=o,this.shaderKey=`matMulSmallOutputSize_${this.activation}`}getUserCode(){let e=`if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
          return A.numbers[batch * batchASize + row * uniforms.dimInner + col];
        }
        return 0.0;`,t=`if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];
         }
         return 0.0;`,a="",r="";if(this.activation){let s=ts(this.activation,!1);this.hasPreluActivationWeights?a=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
            let b = getPreluActivationWeightsByOutputCoords(outCoord);
            ${s}
            }`:a=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
            ${s}
        }`,r="value = activation(value, outCoord);"}let n=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${a}

      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        let batch = i32(globalId.z);
        ${e}
      }
      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batch = i32(globalId.z);
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        ${t}
      }
      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {
        if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimBOuter))) {
          let batch = i32(globalId.z);
          let outCoord = vec3<i32>(batch, row, col);
          var value = valueIn;
          ${n}
          ${r}
          setOutputAtCoords(batch, row, col, value);
        }
      }
      ${die(this.workGroupSize)}
    `}};function Ve(e){let{inputs:t,attrs:a}=e,{x:r}=t,{shape:n}=a,s=w.sizeFromShape(r.shape),i=w.inferFromImplicitShape(n,s),o=w.sizeFromShape(i);return w.assert(s===o,()=>`The new shape (${i}) has ${o} elements and the old shape (${r.shape}) has ${s} elements. The new shape and old shape must have the same number of elements.`),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:i,dtype:r.dtype}}var pie={kernelName:Xo,backendName:"webgpu",kernelFunc:Ve};function iA({a:e,b:t,transposeA:a,transposeB:r,backend:n,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){let d=e.shape.length,u=t.shape.length,h=a?e.shape[d-2]:e.shape[d-1],p=r?t.shape[u-1]:t.shape[u-2],c=a?e.shape[d-1]:e.shape[d-2],f=r?t.shape[u-2]:t.shape[u-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=w.sizeFromShape(m),A=w.sizeFromShape(g),x=dl.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([c,f]);w.assert(h===p,()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${a} and transposeB=${r} must match.`);let b=a?[y,h,c]:[y,c,h],v=r?[A,f,p]:[A,p,f],T=Ve({inputs:{x:e},backend:n,attrs:{shape:b}}),C=Ve({inputs:{x:t},backend:n,attrs:{shape:v}}),E=[T,C],R=Math.max(y,A),z=h%4===0&&f%4===0&&!a&&!r&&f>=32,F;c*f<=32?F=new uie([R,c,f],a,r,s,l,i):!a&&!r&&(c<=16&&(f<=512||p>=2*f)||f<=16&&(c<=512||h>=2*c))?F=new hie(b,v,[R,c,f],s,l,i):z?F=new iie(b,[R,c,f],J().get("WEBGPU_MATMUL_WORK_PER_THREAD"),s,l,i):F=new dI(b,[R,c,f],J().get("WEBGPU_MATMUL_WORK_PER_THREAD"),a,r,s,l,i);let k=[T,C];s&&k.push(s),i&&k.push(i);let D=[{type:"int32",data:[c]},{type:"int32",data:[f]},{type:"int32",data:[h]}],_=n.runWebGPUProgram(F,k,e.dtype,D),P=Ve({inputs:{x:_},backend:n,attrs:{shape:x}});E.push(_);for(let j of E)n.disposeData(j.dataId);return P}function cie(e){let{inputs:t,backend:a,attrs:r}=e,{a:n,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:d,activation:u,leakyreluAlpha:h}=r;return iA({a:n,b:s,transposeA:l,transposeB:d,backend:a,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:u})}var fie={kernelName:Ss,backendName:"webgpu",kernelFunc:cie},yb=class{constructor(e,t,a){this.variableNames=["AReal","AImag","BReal","BImag"],this.workGroupSize=[128,1,1],this.size=!0,this.outputShape=N.assertAndGetBroadcastShape(t,a),this.dispatchLayout=Ge(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${lp(this.op,!1)}
      }

      ${Xe()}
        if(index < uniforms.size) {
          let areal = getARealByOutputIndex(index);
          let aimag = getAImagByOutputIndex(index);
          let breal = getBRealByOutputIndex(index);
          let bimag = getBImagByOutputIndex(index);
          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}},mie=class{constructor(e,t,a,r){this.variableNames=["A","B"],this.size=!0;let n=256;this.workGroupSize=[n,1,1],this.outputShape=N.assertAndGetBroadcastShape(t,a),this.dispatchLayout=Ge(this.outputShape),this.lastDimensionSize=r?a[0]:t[0],this.lastDimensionSize<256?this.workPerThread=1:this.lastDimensionSize<512?this.workPerThread=2:this.workPerThread=4,this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.useSharedMemoryWithB=r,this.op=e,this.shaderKey=`binaryShared_${e}_${this.lastDimensionSize}_${this.useSharedMemoryWithB}`}getUserCode(){let e=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",t=this.useSharedMemoryWithB?`let a = getAByOutputCoords(coords);
         let b = sharedBuf[${e}];`:`let a = sharedBuf[${e}];
         let b = getBByOutputCoords(coords);`;return`
        fn binaryOperation(a : f32, b : f32) -> f32 {
          ${lp(this.op,!1)}
        }
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${Xe()}

          // Fill in the shared memory buffer. Here we need a loop to make sure
          // that all data in A|B are uploaded when |sharedMemorySize| is larger
          // than work group size.
          for(var localIndex = i32(localId.x); localIndex < ${this.lastDimensionSize}; localIndex = localIndex + ${this.workGroupSize[0]}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}.numbers[localIndex]);
          }
          workgroupBarrier();

          for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
            let flatIndex = index * ${this.workPerThread} + i;
            if(flatIndex < uniforms.size) {
              let coords = getCoordsFromIndex(flatIndex);

              ${t}
              setOutputAtIndex(flatIndex, binaryOperation(a, b));
            }
          }
        }
        `}},gie=class{constructor(e,t,a){this.variableNames=["A","B"],this.workPerThread=4,this.isVec4=!0,this.size=!0;let r=128;this.workGroupSize=[r,1,1],this.outputShape=N.assertAndGetBroadcastShape(t,a),this.dispatchLayout=Ge(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.op=e,this.shaderKey=`binaryVec4_${e}`}getUserCode(){return`
      fn binaryOperation(a : vec4<f32>, b : vec4<f32>) -> vec4<f32> {
        ${lp(this.op,this.isVec4)}
      }
      ${Xe()}
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          let b = getBByOutputIndex(index);
          setOutputAtIndex(index, binaryOperation(a, b));
        }
      }
    `}},hI=class{constructor(e,t,a){this.variableNames=["A","B"],this.size=!0;let r=128;this.workGroupSize=[r,1,1],this.outputShape=N.assertAndGetBroadcastShape(t,a),this.dispatchLayout=Ge(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binary_${e}`,this.op=e}getUserCode(){return`
      fn binaryOperation(a : f32, b : f32) -> f32 {
        ${lp(this.op,!1)}
      }
      ${Xe()}
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          let b = getBByOutputIndex(index);
          setOutputAtIndex(index, binaryOperation(a, b));
        }
      }
      `}};function Ab(e,t,a){if(w.arraysEqual(t,a)&&w.sizeFromShape(t)%4===0)return new gie(e,t,a);let r=t.length===1&&a.length>1&&t[0]<1024,n=a.length===1&&t.length>1&&a[0]<1024;return r||n?new mie(e,t,a,n):new hI(e,t,a)}function Or(e){let{inputs:t}=e,{x:a}=t;return e.backend.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}var yie={kernelName:ni,backendName:"webgpu",kernelFunc:Or};function cd(e){let{inputs:t,backend:a}=e,{real:r,imag:n}=t,s=a.makeTensorInfo(r.shape,"complex64"),i=a.tensorMap.get(s.dataId),o=Or({inputs:{x:r},backend:a}),l=Or({inputs:{x:n},backend:a});return i.complexTensorInfos={real:o,imag:l},s}var Aie={kernelName:gh,backendName:"webgpu",kernelFunc:cd},up=class{constructor(e,t){this.variableNames=["A"],this.size=!0;let a=128;this.workGroupSize=[a,1,1],this.outputShape=e,this.dispatchLayout=Ge(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.op=t,this.shaderKey=`unary_${t}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${ql(this.op,!1)}
      }
      ${Xe()}
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          setOutputAtIndex(index, unaryOperation(a));
        }
      }
      `}};function ya({opType:e,cpuKernelImpl:t,dtype:a}){return({inputs:r,backend:n})=>{let{x:s}=r,i=n,o=a||s.dtype;if(i.shouldExecuteOnCPU([s])&&t!=null){let d=i.tensorMap.get(s.dataId),u=t(d.values,o);return i.makeTensorInfo(s.shape,o,u)}let l=new up(s.shape,e);return i.runWebGPUProgram(l,[s],o)}}function La({opSnippet:e,cpuKernelImpl:t,supportsComplex:a=!1,dtype:r}){return({inputs:n,backend:s})=>{let{a:i,b:o}=n,l=s;if(a&&i.dtype==="complex64"){let h=l.tensorMap.get(i.dataId),p=l.tensorMap.get(o.dataId),c,f;if(e!==0)[c,f]=[[h.complexTensorInfos.real,p.complexTensorInfos.real],[h.complexTensorInfos.imag,p.complexTensorInfos.imag]].map(g=>{let[y,A]=g,x={dataId:y.dataId,dtype:y.dtype,shape:i.shape},b={dataId:A.dataId,dtype:A.dtype,shape:o.shape},v=Ab(e,i.shape,o.shape);return l.runWebGPUProgram(v,[x,b],$a(y.dtype,A.dtype))});else{let g=new yb(17,i.shape,o.shape),y=new yb(18,i.shape,o.shape),A=[{dataId:h.complexTensorInfos.real.dataId,dtype:h.complexTensorInfos.real.dtype,shape:i.shape},{dataId:h.complexTensorInfos.imag.dataId,dtype:h.complexTensorInfos.imag.dtype,shape:i.shape},{dataId:p.complexTensorInfos.real.dataId,dtype:p.complexTensorInfos.real.dtype,shape:o.shape},{dataId:p.complexTensorInfos.imag.dataId,dtype:p.complexTensorInfos.imag.dtype,shape:o.shape}];c=l.runWebGPUProgram(g,A,"float32"),f=l.runWebGPUProgram(y,A,"float32")}let m=cd({inputs:{real:c,imag:f},backend:l});return l.disposeData(c.dataId),l.disposeData(f.dataId),m}let d=r||$a(i.dtype,o.dtype);if((i.dtype==="string"||o.dtype==="string"||l.shouldExecuteOnCPU([i,o]))&&t!=null){let h=l.tensorMap.get(i.dataId).values,p=l.tensorMap.get(o.dataId).values,c=i.dtype==="string"?N.fromUint8ToStringArray(h):h,f=i.dtype==="string"?N.fromUint8ToStringArray(p):p,[m,g]=t(i.shape,o.shape,c,f,d);return l.makeTensorInfo(g,d,m)}let u=Ab(e,i.shape,o.shape);return l.runWebGPUProgram(u,[i,o],d)}}var{addImpl:xie,ceilImpl:bie,concatImpl:vie,equalImpl:wie,expImpl:kie,expm1Impl:Iie,floorImpl:Sie,gatherNdImpl:Tie,gatherV2Impl:Cie,greaterEqualImpl:Nie,greaterImpl:Eie,lessEqualImpl:Rie,lessImpl:Fie,logImpl:$ie,maxImpl:Mie,maximumImpl:_ie,minimumImpl:zie,multiplyImpl:Oie,negImpl:Die,notEqualImpl:Pie,prodImpl:Lie,rangeImpl:Wie,rsqrtImpl:Bie,simpleAbsImpl:Vie,sliceImpl:Uie,stridedSliceImpl:Gie,stringNGramsImpl:jie,subImpl:Hie,tileImpl:qie,topKImpl:Xie,transposeImpl:Kie,uniqueImpl:Gge}=F0,Zie=ya({opType:0,cpuKernelImpl:Vie}),Yie={kernelName:Io,backendName:"webgpu",kernelFunc:Zie},Jie=La({opSnippet:1,cpuKernelImpl:xie,supportsComplex:!0}),Qie={kernelName:qn,backendName:"webgpu",kernelFunc:Jie},eoe=class{constructor(e){this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e[0],this.variableNames=e.map((t,a)=>`T${a}`),this.dispatchLayout=Ge(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){let e=[];this.variableNames.forEach(a=>{e.push(`let v${a} = get${a}ByOutputCoords(coords);`)});let t=this.variableNames.map(a=>`v${a}`).join(" + ");return`
      ${Xe()}
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            ${e.join(`
        `)}
            setOutputAtIndex(flatIndex, ${t});
          }
        }
      }
    `}};function toe(e){let{inputs:t,backend:a}=e,r=t;if(r.length===1)return Or({inputs:{x:r[0]},backend:a});let n=r.map(o=>o.dtype).reduce((o,l)=>$a(o,l)),s=r.map(o=>o.shape),i=new eoe(s);return a.runWebGPUProgram(i,r,n)}var aoe={kernelName:Ws,backendName:"webgpu",kernelFunc:toe},pI=class{constructor(e,t,a){this.workGroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="axis : i32; infinityValue : f32;",this.size=!0;let r=[t];N.assertAxesAreInnerMostDims("arg"+a.charAt(0).toUpperCase()+a.slice(1),r,e.length),this.op=a==="min"?"<":">";let[n]=N.computeOutAndReduceShapes(e,r);this.outputShape=n.length===0?[1]:n,this.dispatchLayout=Ge(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,[1,1,1]),this.inputShape=e,this.shaderKey=`argMinMax${this.op}`}getUserCode(){let e=`
      var<workgroup> xBestIndices : array<i32, ${this.workGroupSize[0]}>;
      var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
    `,t=(r,n)=>this.outputShape.length===1?r:`${r}[${n}]`,a=r=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape[${r}]`;return`
      fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
      }

      ${e}

      // In order to get a flattened index into the input tensor, we need to
      // add back the index along the reduced dimension to |outputCoords|.
      // This function outputs the offset to the first value along
      // |axis| and the stride to get the next value of the input along |axis|.
      fn getInputCoordInfo(outputIndex : i32) -> vec2<i32>{
        let outputCoords = getCoordsFromIndex(outputIndex);
        var i = ${this.outputShape.length-1};

        var stride = 1;
        var inputStride = 1;
        var offset = 0;

        for (var r = 1; r <= ${this.inputShape.length}; r = r + 1) {
          let length = ${a(`${this.inputShape.length} - r`)};
          if (${this.inputShape.length} - r == uniforms.axis) {
            inputStride = stride;
          } else {
            offset = offset + ${t("outputCoords","i")} * stride;
            i = i - 1;
          }
          stride = stride * length;
        }

        return vec2<i32>(offset, inputStride);
      }

      fn getInputIndex(coordInfo : vec2<i32>, index : i32) -> i32{
        return coordInfo[0] + coordInfo[1] * index;
      }

      ${Xe()}
        let outputIndex = index / i32(workGroupSizeX);
        let coordInfo = getInputCoordInfo(outputIndex);
        let Length = ${a("uniforms.axis")};

        var bestIndex = i32(localId.x);
        var bestValue = uniforms.infinityValue;

        for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
            k = k + i32(workGroupSizeX)) {
          let candidate = f32(x.numbers[getInputIndex(coordInfo, k)]);
          if (!isNanCustom(candidate) && candidate ${this.op} bestValue) {
            bestValue = candidate;
            bestIndex = k;
          }
        }
        xBestValues[localId.x] = bestValue;
        xBestIndices[localId.x] = bestIndex;
        workgroupBarrier();

        var reduceSize = min(u32(Length), workGroupSizeX);
        for (var currentSize = reduceSize / 2u; reduceSize > 1u;
            currentSize = reduceSize / 2u) {
          let interval = DIV_CEIL(reduceSize, 2u);
          if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              xBestValues[localId.x] = bestValue;
              xBestIndices[localId.x] = xBestIndices[localId.x + interval];
            }
          }
          reduceSize = interval;
          workgroupBarrier();
        }

        if (localId.x == 0u && outputIndex < uniforms.size) {
          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);
        }
      }
    `}},roe=class{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[16,16,1];let a=new Array(e.length);for(let r=0;r<a.length;r++)a[r]=e[t[r]];this.outputShape=a,this.dispatchLayout={x:[0],y:[1]},this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){return`
      let TILE_DIM = ${this.workGroupSize[0]};
      var<workgroup> tile : array<array<f32, ${this.workGroupSize[0]+1}>, ${this.workGroupSize[0]}>;
      ${tA()}
      fn main(@builtin(local_invocation_id) localId : vec3<u32>,
              @builtin(workgroup_id) workgroupId : vec3<u32>) {
        var x = i32(workgroupId.x) * TILE_DIM + i32(localId.x);
        var y = i32(workgroupId.y) * TILE_DIM + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] =
              A.numbers[y * width + x];
        }
        workgroupBarrier();

        x = i32(workgroupId.y) * TILE_DIM + i32(localId.x);
        y = i32(workgroupId.x) * TILE_DIM + i32(localId.y);
        if (x < height && y < width) {
          setOutputAtIndex((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}},noe=class{constructor(e,t){this.variableNames=["A"],this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0;let a=new Array(e.length);for(let r=0;r<a.length;r++)a[r]=e[t[r]];this.outputShape=a,this.dispatchLayout=Ge(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`}getUserCode(){let e=pa(this.outputShape.length),t=soe(this.newDim);return`
      ${Xe()}

        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let resRC = getCoordsFromIndex(flatIndex);
            setOutputAtIndex(flatIndex, A.numbers[getIndexFromCoords${this.outputShape.length}D(
              ${e}(${t}), uniforms.aShape)]);
          }
        }
      }
    `}};function soe(e){let t=e.length;if(t>4)throw Error(`Transpose for rank ${t} is not yet supported`);let a=new Array(t);for(let r=0;r<e.length;r++)a[e[r]]=`resRC[${r}]`;return a.join()}function xl(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{perm:s}=r,i=a,o=n.shape.length,l=new Array(o);for(let u=0;u<l.length;u++)l[u]=n.shape[s[u]];if(a.shouldExecuteOnCPU([n])){let u=i.tensorMap.get(n.dataId).values,h=Kie(u,n.shape,n.dtype,s,l);return a.makeTensorInfo(l,n.dtype,h)}if(n.shape.length===2&&w.arraysEqual(s,[1,0])){let u=new roe(n.shape,s);return i.runWebGPUProgram(u,[n],n.dtype)}let d=new noe(n.shape,s);return i.runWebGPUProgram(d,[n],n.dtype)}var ioe={kernelName:Ri,backendName:"webgpu",kernelFunc:xl};function ooe(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{axis:s}=r,i=w.parseAxisParam(s,n.shape),o=N.getAxesPermutation(i,n.shape.length),l=n,d=[];o!=null&&(l=xl({inputs:{x:n},backend:a,attrs:{perm:o}}),d.push(l),i=N.getInnerMostAxes(i.length,l.shape.length)),N.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);let u=new pI(l.shape,i[0],"max"),h=[{type:"int32",data:[i[0]]},{type:"float32",data:[Number.NEGATIVE_INFINITY]}],p=a.runWebGPUProgram(u,[l],"int32",h);return d.forEach(c=>a.disposeData(c.dataId)),p}var loe={kernelName:Bs,backendName:"webgpu",kernelFunc:ooe};function uoe(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{axis:s}=r,i=w.parseAxisParam(s,n.shape),o=N.getAxesPermutation(i,n.shape.length),l=n,d=[];o!=null&&(l=xl({inputs:{x:n},backend:a,attrs:{perm:o}}),d.push(l),i=N.getInnerMostAxes(i.length,l.shape.length)),N.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);let u=new pI(l.shape,i[0],"min"),h=[{type:"int32",data:[i[0]]},{type:"float32",data:[Number.POSITIVE_INFINITY]}],p=a.runWebGPUProgram(u,[l],"int32",h);return d.forEach(c=>a.disposeData(c.dataId)),p}var doe={kernelName:Cu,backendName:"webgpu",kernelFunc:uoe},cI=class{constructor(e,t){this.variableNames=["x"],this.uniforms="stride : vec2<i32>; pad : vec2<i32>; dilation : vec2<i32>; convDims : vec2<i32>; filterDims : vec2<i32>;",this.workGroupSize=[128,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=Ge(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`pool2D_${t}`,this.poolType=t}getUserCode(){let e="resultValue = max(value, resultValue);";this.poolType==="avg"&&(e="resultValue = resultValue + value; count = count + 1.0;");let t="resultValue";return this.poolType==="avg"&&(t="resultValue / count"),`
      ${Xe()}
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};
          var count = 0.0;

          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilation.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilation.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, coords[3]);
              ${e}
            }
          }

          setOutputAtIndex(index, ${t});
        }
      }
    `}},fI=class{constructor(e){this.variableNames=["x"],this.uniforms="stride : vec2<i32>;",this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=Ge(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${Xe()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];

          let xRCCorner = coords.yz * uniforms.stride;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutputAtIndex(index, value);
        }
      }
    `}};function hoe(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r,d=1,u=N.computePool2DInfo(n.shape,s,i,d,o,l);if(u.filterWidth===1&&u.filterHeight===1&&w.arraysEqual(u.inShape,u.outShape))return Or({inputs:{x:n},backend:a});let h,p=[{type:"int32",data:[u.strideHeight,u.strideWidth]}];return u.filterHeight===1&&u.filterWidth===1?h=new fI(u):(h=new cI(u,"avg"),p.push({type:"int32",data:[u.padInfo.top,u.padInfo.left]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]},{type:"int32",data:[u.inHeight,u.inWidth]},{type:"int32",data:[u.effectiveFilterHeight,u.effectiveFilterWidth]})),a.runWebGPUProgram(h,[n],n.dtype,p)}var poe={kernelName:Vs,backendName:"webgpu",kernelFunc:hoe};function coe(e){let{inputs:t,backend:a,attrs:r}=e,{a:n,b:s}=t,{transposeA:i,transposeB:o}=r;return iA({a:n,b:s,transposeA:i,transposeB:o,backend:a})}var foe={kernelName:Us,backendName:"webgpu",kernelFunc:coe},moe=class{constructor(e,t){this.variableNames=["source"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.rank=t.length,this.dispatchLayout=Ge(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${pa(e.length)}; `,this.shaderKey="slice"}getUserCode(){let e=pa(this.rank),t=goe(this.rank),a;return this.start.length===1?a=this.outputShape.map((r,n)=>"sourceLoc = uniforms.start + coords;"):a=this.outputShape.map((r,n)=>`sourceLoc.${Lg[n]} = uniforms.start[${n}] + coords.${Lg[n]};`),`
      ${Xe()}
        if (index < uniforms.size) {
          var sourceLoc : ${e};
          let coords = getCoordsFromIndex(index);
          ${a.join(`
`)}
          setOutputAtIndex(index, getSource(${t}));
        }
      }
    `}},Lg=["x","y","z","w","u","v"];function goe(e){if(e===1)return"sourceLoc";if(e<=6)return Lg.slice(0,e).map(t=>`sourceLoc.${t}`).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}function fd(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{begin:s,size:i}=r,[o,l]=Ft.parseSliceParams(n,s,i);if(Ft.assertParamsValid(n,o,l),a.shouldExecuteOnCPU([n])||n.dtype==="string"){let h=a.tensorMap.get(n.dataId),p=Uie(h.values,o,l,n.shape,n.dtype);return a.makeTensorInfo(l,n.dtype,p)}if(w.sizeFromShape(l)===0)return a.makeTensorInfo(l,n.dtype,[]);let d=new moe(o,l),u=[{type:"int32",data:o}];return a.runWebGPUProgram(d,[n],n.dtype,u)}var yoe={kernelName:Qo,backendName:"webgpu",kernelFunc:fd},Aoe=e=>{let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{blockShape:s,crops:i}=r;w.assert(n.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");let o=s.reduce((A,x)=>A*x),l=N.getReshaped(n.shape,s,o),d=N.getPermuted(l.length,s.length),u=N.getReshapedPermuted(n.shape,s,o),h=N.getSliceBeginCoords(i,s.length),p=N.getSliceSize(u,i,s.length),c=[],f=Ve({inputs:{x:n},backend:a,attrs:{shape:l}}),m=xl({inputs:{x:f},backend:a,attrs:{perm:d}}),g=Ve({inputs:{x:m},backend:a,attrs:{shape:u}}),y=fd({inputs:{x:g},backend:a,attrs:{begin:h,size:p}});return c.push(f),c.push(m),c.push(g),c.forEach(A=>a.disposeData(A.dataId)),y},xoe={kernelName:So,backendName:"webgpu",kernelFunc:Aoe},mI=La({opSnippet:10,dtype:"bool",cpuKernelImpl:Pie}),boe={kernelName:Bo,backendName:"webgpu",kernelFunc:mI};function dp(e){let{inputs:t,backend:a}=e,{input:r}=t,n=a.tensorMap.get(r.dataId);return Or({inputs:{x:n.complexTensorInfos.real},backend:a})}var voe={kernelName:Sh,backendName:"webgpu",kernelFunc:dp};function woe(e,t){let a=new up(e.shape,23),r=t.runWebGPUProgram(a,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}function Wg(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{dtype:s}=r;if(s==="complex64"){if(n.dtype==="complex64")return Or({inputs:{x:n},backend:a});let i=Ut(n.shape),o=Wg({inputs:{x:n},backend:a,attrs:{dtype:"float32"}}),l=cd({inputs:{real:o,imag:i},backend:a});return i.dispose(),a.disposeData(o.dataId),l}if(n.dtype==="complex64"){let i=dp({inputs:{input:n},backend:a}),o=Wg({inputs:{x:i},backend:a,attrs:{dtype:s}});return a.disposeData(i.dataId),o}if(!w.hasEncodingLoss(n.dtype,s)){let i=Or({inputs:{x:n},backend:a});return{dataId:i.dataId,shape:i.shape,dtype:s}}if(s==="int32")return woe(n,a);if(s==="bool"){let i=a.makeTensorInfo([],"bool",w.getTypedArrayFromDType("bool",1)),o=mI({inputs:{a:n,b:i},backend:a});return a.disposeData(i.dataId),o}throw new Error(`Error in Cast: failed to cast ${n.dtype} to ${s}`)}var koe={kernelName:Gs,backendName:"webgpu",kernelFunc:Wg},Ioe=ya({opType:1,cpuKernelImpl:bie}),Soe={kernelName:js,backendName:"webgpu",kernelFunc:Ioe},Toe=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32; maxVal : f32;",this.workPerThread=4,this.workGroupSize=[64,1,1],this.isVec4=!0,this.size=!0,this.outputShape=e,this.dispatchLayout=Ge(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`
      ${Xe()}
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          var clampedValue : vec4<f32>;
          for (var i = 0; i < 4; i = i + 1) {
            if (isNanCustom(value[i])) {
              clampedValue[i] = value[i];
            } else {
              clampedValue[i] = clamp(value[i], uniforms.minVal, uniforms.maxVal);
            }
          }

          setOutputAtIndex(index, clampedValue);
        }
      }
    `}},Coe=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32; maxVal : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ge(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="clip"}getUserCode(){return`
      ${Xe()}
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          if (isNanCustom(value)) {
            setOutputAtIndex(index, value);
            return;
          }
          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}};function Noe(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{clipValueMin:s,clipValueMax:i}=r,o,l=[{type:"float32",data:[s]},{type:"float32",data:[i]}];return w.sizeFromShape(n.shape)%4===0?o=new Toe(n.shape):o=new Coe(n.shape),a.runWebGPUProgram(o,[n],n.dtype,l)}var Eoe={kernelName:Xn,backendName:"webgpu",kernelFunc:Noe},Roe=class{constructor(e){this.uniforms="",this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=N.computeOutShape(e,1),this.variableNames=e.map((t,a)=>`T${a}`),this.dispatchLayout=Ge(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let t=0;t<this.offsetLength;t++)this.uniforms+=`offset${t} : i32;`;this.shaderKey="concat"}getUserCode(){let e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let r=1;r<this.offsetLength;r++)e.push(`else if (yC < uniforms.offset${[r]}){ setOutputAtCoords(coords.x, coords.y, getT${r}(yR, yC - uniforms.offset${r-1})); }`);let t=this.offsetLength,a=this.offsetLength-1;e.push(`else { setOutputAtCoords(coords.x, coords.y, getT${t}(yR, yC - uniforms.offset${a})); }`)}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`
      ${Xe()}
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${e.join(`
        `)}
          }
        }
      }
    `}};function W0(e){let{inputs:t,backend:a}=e,{input:r}=t,n=a.tensorMap.get(r.dataId);return Or({inputs:{x:n.complexTensorInfos.imag},backend:a})}var Foe={kernelName:vh,backendName:"webgpu",kernelFunc:W0};function Bg(e,t,a){let r=e[0].dtype;if(r==="complex64"){let c=e.map(A=>dp({inputs:{input:A},backend:a})),f=e.map(A=>W0({inputs:{input:A},backend:a})),m=Bg(c,t,a),g=Bg(f,t,a),y=cd({inputs:{real:m,imag:g},backend:a});return c.forEach(A=>a.disposeData(A.dataId)),f.forEach(A=>a.disposeData(A.dataId)),a.disposeData(m.dataId),a.disposeData(g.dataId),y}let n=a.shouldExecuteOnCPU(e);if(r==="string"&&(n=!0),n){let c=e.map(b=>{let v=w.sizeFromShape(b.shape.slice(t));return Ve({inputs:{x:b},backend:a,attrs:{shape:[-1,v]}})}),f=c.map(b=>({vals:a.readSync(b.dataId),shape:b.shape})),m=N.computeOutShape(c.map(b=>b.shape),1),g=c[0].shape[0]===1,y=vie(f,m,r,g),A=N.computeOutShape(e.map(b=>b.shape),t),x=a.makeTensorInfo(A,r,y);return c.forEach(b=>a.disposeData(b.dataId)),x}let{tensors2D:s,outShape:i}=$oe(e,t,a),o=s.map(c=>c.shape),l=new Roe(o),d=[],u=new Array(o.length-1);if(u.length>0){u[0]=o[0][1],d.push({type:"int32",data:[u[0]]});for(let c=1;c<u.length;c++)u[c]=u[c-1]+o[c][1],d.push({type:"int32",data:[u[c]]})}let h=a.runWebGPUProgram(l,s,s[0].dtype,d);s.forEach(c=>a.disposeData(c.dataId));let p=Ve({inputs:{x:h},backend:a,attrs:{shape:i}});return a.disposeData(h.dataId),p}function $oe(e,t,a){let r=N.computeOutShape(e.map(n=>n.shape),t);return{tensors2D:e.map(n=>Ve({inputs:{x:n},backend:a,attrs:{shape:[w.sizeFromShape(n.shape.slice(0,t)),w.sizeFromShape(n.shape.slice(t))]}})),outShape:r}}function gI(e){let{inputs:t,backend:a,attrs:r}=e,{axis:n}=r,s=w.parseAxisParam(n,t[0].shape)[0],i=N.computeOutShape(t.map(d=>d.shape),s);if(w.sizeFromShape(i)===0)return a.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter(d=>w.sizeFromShape(d.shape)>0);if(o.length===1)return Or({inputs:{x:o[0]},backend:a});let l=o.map(d=>d.shape);return N.assertParamsConsistent(l,s),Bg(o,s,a)}var Moe={kernelName:To,backendName:"webgpu",kernelFunc:gI},_oe=class{constructor(e,t){this.variableNames=["A"],this.uniforms=`pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; outWidth : i32; itemsPerBlockRow : i32;
      inChannels : i32;`,this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ge(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.isChannelsLast=t,this.shaderKey=`im2col_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?0:1,t=this.isChannelsLast?1:2;return`
    ${Xe()}

      for(var i = 0; i<${this.workPerThread}; i = i + 1) {
        let flatIndex = index * ${this.workPerThread} + i;

        let rc = getCoordsFromIndex(flatIndex);

        if(flatIndex < uniforms.size) {
          let blockIndex = rc[0];
          let pos = rc[1];

          let offsetY = blockIndex / uniforms.outWidth * uniforms.stride[1] - uniforms.pad[1];
          let d0 = offsetY + uniforms.dilation[1] * pos / uniforms.itemsPerBlockRow;
          var value = 0.0;
          if(d0 < uniforms.aShape[${e}] && d0 >= 0) {
            let offsetX = (blockIndex % uniforms.outWidth) * uniforms.stride[0] -
              uniforms.pad[0];
            let d1 = offsetX + uniforms.dilation[0] * ((pos %
              uniforms.itemsPerBlockRow) / uniforms.inChannels);
            let ch = pos % uniforms.inChannels;
            if(d1 < uniforms.aShape[${t}] && d1 >= 0) {
              value = getA(d0, d1, ch);
            }
          }
          setOutputAtIndex(flatIndex, value);
        }
      }
    }
  `}},zoe=class{constructor(e,t=!1,a=null,r=!1,n=!1){this.variableNames=["x","W"],this.uniforms=`filterDims : vec2<i32>; pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>;
      dimAOuter : i32; dimBOuter : i32; dimInner : i32;`,this.workGroupSize=[8,8,1],this.isVec4=!0,this.outputShape=e.outShape,w.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.outputShape[1]===1?this.elementsPerThread=[4,1,1]:this.elementsPerThread=[4,4,1],this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.convInfo=e,this.addBias=t,this.activation=a,this.hasPreluActivationWeights=r,this.hasLeakyreluAlpha=n,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.hasLeakyreluAlpha&&this.variableNames.push("leakyreluAlpha"),this.tileAOuter=this.outputShape[1]===1?1:this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=this.tileBOuter,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`conv2DMMVec4_${this.activation}_${this.fitA}_${this.fitB}_${this.elementsPerThread}`}getShapeFit(){let e=[this.tileAOuter,this.tileInner],t=[this.tileInner,this.tileBOuter],a=this.outputShape[1]*this.outputShape[2],r=this.outputShape[3],n=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[jn(e,[a,n]),jn(t,[n,r])]}getSampleAWithRemainder(e){return`let flatIndex${e} = getIndexFromCoords4D(coord, uniforms.xShape);
    let divBy4Remainder${e} = flatIndex${e} % 4;
    let divBy4Index${e} = flatIndex${e} / 4;
    let curData${e} = x.numbers[divBy4Index${e}];
    if (divBy4Remainder${e} == 0) {
      temp = curData${e};
    } else {
      // TODO: This could end up being a redundant load with another one in
      // the same shader invocation. Perhaps there's an opportunity for
      // optimization
      let nextData${e} = x.numbers[divBy4Index${e} + 1];
      if (divBy4Remainder${e} == 1) {
        temp = vec4<f32>(curData${e}.yzw, nextData${e}.x);
      } else if (divBy4Remainder${e} == 2) {
        temp = vec4<f32>(curData${e}.zw, nextData${e}.xy);
      } else if (divBy4Remainder${e} == 3) {
        temp = vec4<f32>(curData${e}.w, nextData${e}.xyz);
      }
    }
    `}getUserCode(){let e=uI(this.elementsPerThread,this.tileAOuter,this.tileBOuter,this.tileInner),t=`let outRow = r / uniforms.outShape[2];
        let outCol = r % uniforms.outShape[2];
        let WRow = c / (uniforms.filterDims[1] * uniforms.xShape[3]);
        let WCol = c / uniforms.xShape[3] % uniforms.filterDims[1];
        let inChCoord = c % uniforms.xShape[3];
        var coord = vec4<i32>(
            batch,
            outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0],
            outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1],
            inChCoord);
        var resData = vec4<f32>(0.0);
        ${this.convInfo.inChannels%4===0?`// The bounds checking is always needed since we use it to pad zero for
          // the 'same' padding type.
          if (coordsInBounds4D(coord, uniforms.xShape)) {
            resData = x.numbers[getIndexFromCoords4D(coord, uniforms.xShape) / 4];
          } else {
            resData = vec4<f32>(0.0); }`:`var temp = vec4<f32>(0.0);
          ${this.getSampleAWithRemainder(1)}
          resData = temp;
          if (WCol == (uniforms.filterDims[1] - 1)) {
            coord = vec4<i32>(
              coord.x, coord.y + 1, coord.z + 1 - uniforms.filterDims[1], 0);
              ${this.getSampleAWithRemainder(2)}
            if (inChCoord == 0) {
              resData = vec4<f32>(resData.xyz, temp.x);
            } else if (inChCoord == 1) {
              resData = vec4<f32>(resData.xy, temp.xy);
            } else {
              resData = vec4<f32>(resData.x, temp.xyz);
            }
          }
          `}
        return resData;`,a=this.fitA?`${t}`:`if (r < uniforms.dimAOuter && c < uniforms.dimInner) {
          ${t}
         }
         return vec4<f32>(0.0);
        `,r=this.fitB?"return W.numbers[row * uniforms.dimBOuter / 4 + col];":`if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return W.numbers[row * uniforms.dimBOuter / 4 + col];
         }
         return vec4<f32>(0.0);
        `,n="",s="";if(this.activation){let o=ts(this.activation,this.isVec4);if(this.hasPreluActivationWeights)n=`fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          let b = getPreluActivationWeightsByOutputCoords(outCoord);
          ${o}
        }`;else{if(this.hasLeakyreluAlpha)throw n=`fn activation(outCoord: vec4<f32>) -> vec4<f32> {
          let b = getLeakyreluAlphaByOutputCoords(outCoord);
          ${o}
        }`,new Error("Leakyrelu is not supported.");n=`
        fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          ${o}
        }`}s="value = activation(value, outCoord);"}let i=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
        ${n}
        fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {
          let r = row;
          let c = col * 4;
          var batch = i32(globalId.z);
          ${a}
        }

        fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {
          ${r}
        }

        fn mm_write(row : i32, col : i32, valueInput : vec4<f32>, globalId : vec3<u32>) {
          var batch = i32(globalId.z);
          var value = valueInput;
          if (row < uniforms.dimAOuter && col * 4 < uniforms.dimBOuter)
          {
            let outCoord = vec4<i32>(
              batch,
              row / uniforms.outShape[2],
              row % uniforms.outShape[2],
              col * 4);
            ${i}
            ${s}
            setOutputAtCoords(outCoord[0], outCoord[1], outCoord[2], outCoord[3],
              value);
          }
        }
        ${e}
      `}},Ooe=class{constructor(e,t=!1,a=null,r=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>; pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.outputShape=e.outShape,w.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=aA(this.dispatchLayout,this.outputShape),this.elementsPerThread=rA(this.dispatchLayout,this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=a,this.hasPreluActivationWeights=r,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}_${this.fitA}_${this.fitB}`}getShapeFit(){let e=this.workGroupSize[1]*this.elementsPerThread[1],t=this.workGroupSize[0]*this.elementsPerThread[0],a=e>t?e:t;w.assert(a%this.workGroupSize[0]===0&&a%this.workGroupSize[1]===0,()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y");let r=[e,a],n=[a,t],s=this.outputShape[1]*this.outputShape[2],i=this.outputShape[3],o=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[jn(r,[s,o]),jn(n,[o,i])]}getUserCode(){let e=sA(this.elementsPerThread,this.workGroupSize),t=`
    let outRow = row / uniforms.outShape[2];
    let outCol = row % uniforms.outShape[2];

    let WRow = col / (uniforms.filterDims[1] * uniforms.xShape[3]);
    let WCol = col / uniforms.xShape[3] % uniforms.filterDims[1];
    let coord = vec4<i32>(
        batch,
        outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0],
        outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1],
        col % uniforms.xShape[3]);
    // The bounds checking is always needed since we use it to pad zero for the
    // 'same' padding type.
    if(coordsInBounds4D(coord, uniforms.xShape)) {
      return x.numbers[getIndexFromCoords4D(coord, uniforms.xShape)];
    }
    return 0.0;`,a=this.fitA?`${t}`:`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
      ${t}
    }
    return 0.0;
    `,r=this.fitB?"return W.numbers[row * uniforms.dimBOuter + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return W.numbers[row * uniforms.dimBOuter + col];
	 }
	 return 0.0;
	 `,n="",s="";if(this.activation){let o=ts(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a: f32, outCoord : vec4<i32>) -> f32 {
                  let b = getPreluActivationWeightsByOutputCoords(outCoord);
                  ${o}
                }`:n=`
                  fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
                    ${o}
                  }
                `,s="value = activation(value, outCoord);"}let i=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
    ${n}
    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      var batch = i32(globalId.z);
      ${a}
    }

    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      ${r}
    }

    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {
      var batch = i32(globalId.z);
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      ${i}
      ${s}
      result.numbers[getIndexFromCoords4D(outCoord, uniforms.outShape)] = value;
    }
    ${e}
  `}},Doe=class{constructor(e,t=!1,a=null,r=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>; pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>;",this.workGroupSize=[128,1,1],this.outputShape=e.outShape,this.dispatchLayout=Ge(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),w.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=a,this.hasPreluActivationWeights=r,this.shaderKey=`conv2DNaive_${this.activation}`}getUserCode(){let e="",t="";if(this.activation){let r=ts(this.activation);this.hasPreluActivationWeights?e=`fn activation(a : f32, outCoord : vec4<i32>) -> f32{
               let b = getPreluActivationWeightsByOutputCoords(outCoord);
               ${r}
             }`:e=`
                  fn activation(a : f32, outCoord : vec4<i32>) -> f32{
                    ${r}
                  }
                `,t="value = activation(value, outCoord);"}let a=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${e}
      fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32 {
        let coord = vec4<i32>(batch, row, col, chan);
        if(coordsInBounds4D(coord, uniforms.xShape)) {
          return getX(batch, row, col, chan);
        }
        return 0.0;
      }

      fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{
        let coord = vec4<i32>(row, col, xChannel, outChannel);
        if(coordsInBounds4D(coord, uniforms.wShape)) {
          return getW(row, col, xChannel, outChannel);
        }
        return 0.0;
      }

      fn writeResult(batch : i32, row : i32, col : i32, chan : i32, value : f32) {
        let coord = vec4<i32>(batch, row, col, chan);
        if (coordsInBounds4D(coord, uniforms.outShape)) {
          ${a}
          ${t}
          setOutputAtCoords(batch, row, col, chan, value);
        }
      }

      ${Oi()}
        let coords = getOutputCoords();
        let batch = coords[0];
        let outChannel = coords[3];

        var acc = 0.0;

        for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {
          for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {
            for (var xChannel = 0; xChannel < uniforms.xShape[3]; xChannel = xChannel + 1) {
              let coordRow = coords[1] * uniforms.stride[0] + uniforms.dilation[0] * row - uniforms.pad[0];
              let coordCol = coords[2] * uniforms.stride[1] + uniforms.dilation[1] * col - uniforms.pad[1];
              let v = readInp(batch, coordRow, coordCol, xChannel);
              let f = readFilt(row, col, xChannel, outChannel);
              acc = acc + v * f;
            }
          }
        }

        writeResult(batch, coords[1], coords[2], outChannel, acc);
      }
    `}};function Poe({x:e,filter:t,convInfo:a,backend:r,bias:n=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let l=e.shape,d=a.dataFormat==="channelsLast",u=!1,h=!1,p=a.filterHeight===a.inHeight&&a.filterWidth===a.inWidth&&a.padInfo.type==="VALID",c,f;if(p){let y=a.inHeight*a.inWidth*a.inChannels;c=Ve({inputs:{x:e},backend:r,attrs:{shape:[1,a.batchSize,y]}}),f=Ve({inputs:{x:t},backend:r,attrs:{shape:[1,y,a.outChannels]}})}else{let y=d?l[0]*l[1]*l[2]:l[0]*l[2]*l[3];c=Ve({inputs:{x:e},backend:r,attrs:{shape:[1,y,a.inChannels]}}),f=Ve({inputs:{x:t},backend:r,attrs:{shape:[1,a.inChannels,a.outChannels]}})}let m=iA({a:c,b:f,transposeA:u,transposeB:h,backend:r,bias:n,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),g=Ve({inputs:{x:m},backend:r,attrs:{shape:a.outShape}});return r.disposeData(c.dataId),r.disposeData(f.dataId),r.disposeData(m.dataId),g}function Loe({x:e,filter:t,convInfo:a,backend:r,bias:n=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let{filterWidth:l,filterHeight:d,inChannels:u,strideWidth:h,strideHeight:p,padInfo:c,outWidth:f,outHeight:m,dilationWidth:g,dilationHeight:y,dataFormat:A}=a,x=A==="channelsLast",b=l*d*u,v=m*f,T=[v,b],C=!1,E=!1,R=[],z=Ve({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),F=Ve({inputs:{x:t},backend:r,attrs:{shape:[1,b,-1]}});R.push(z),R.push(F);let k=new _oe(T,x),D=[{type:"int32",data:[c.left,c.top]},{type:"int32",data:[h,p]},{type:"int32",data:[g,y]},{type:"int32",data:[f]},{type:"int32",data:[u*l]},{type:"int32",data:[u]}],_=r.runWebGPUProgram(k,[z],z.dtype,D),P=Ve({inputs:{x:_},backend:r,attrs:{shape:[1,T[0],T[1]]}});R.push(_),R.push(P);let j=[1,T[0],T[1]],L=new dI(j,[1,v,a.outChannels],J().get("WEBGPU_MATMUL_WORK_PER_THREAD"),C,E,n,o,s),B=j[1],W=j[2],ee=a.outChannels,te=[{type:"int32",data:[B]},{type:"int32",data:[ee]},{type:"int32",data:[W]}],re=[P,F];n&&re.push(n),s&&re.push(s);let Y=r.runWebGPUProgram(L,re,P.dtype,te),ae=x?[1,m,f,a.outChannels]:[1,a.outChannels,m,f],le=Ve({inputs:{x:Y},backend:r,attrs:{shape:ae}});R.push(Y);for(let xe of R)r.disposeData(xe.dataId);return le}function yI({x:e,filter:t,convInfo:a,backend:r,bias:n=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let l=n!=null,d=s!=null,u;if(a.filterHeight===a.inHeight&&a.filterWidth===a.inWidth&&a.padInfo.type==="VALID"||a.filterHeight===1&&a.filterWidth===1&&a.dilationHeight===1&&a.dilationWidth===1&&a.strideHeight===1&&a.strideWidth===1&&(a.padInfo.type==="SAME"||a.padInfo.type==="VALID"))return Poe({x:e,filter:t,convInfo:a,backend:r,bias:n,activation:o,preluActivationWeights:s,leakyreluAlpha:i});if(J().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")&&e.shape[0]===1)return Loe({x:e,filter:t,convInfo:a,backend:r,bias:n,preluActivationWeights:s,leakyreluAlpha:i,activation:o});let h=J().getBool("WEBGPU_USE_NAIVE_CONV2D"),p=(a.inChannels%4===0||a.inChannels===3&&a.padInfo.type==="VALID")&&a.outChannels%4===0&&a.outChannels>=32,c=[a.padInfo.top,a.padInfo.left],f=[{type:"int32",data:[a.filterHeight,a.filterWidth]},{type:"int32",data:[...c]},{type:"int32",data:[a.strideHeight,a.strideWidth]},{type:"int32",data:[a.dilationHeight,a.dilationWidth]}];if(h)u=new Doe(a,l,o,d);else{p?u=new zoe(a,l,o,d):u=new Ooe(a,l,o,d);let g=a.outShape[1]*a.outShape[2],y=a.outShape[3],A=a.filterHeight*a.filterWidth*a.inShape[3];f.push({type:"int32",data:[g]},{type:"int32",data:[y]},{type:"int32",data:[A]})}let m=[e,t];return l&&m.push(n),d&&m.push(s),r.runWebGPUProgram(u,m,e.dtype,f)}function Woe(e){let{inputs:t,attrs:a,backend:r}=e,{x:n,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:d,dimRoundingMode:u}=a,h=N.convertConv2DDataFormat(l),p=N.computeConv2DInfo(n.shape,s.shape,i,d,o,u,!1,h);return yI({x:n,filter:s,convInfo:p,backend:r})}var Boe={kernelName:Hs,backendName:"webgpu",kernelFunc:Woe},Voe=class{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>; pads : vec2<i32>; stride : vec2<i32>; outBackprop : vec4<i32>; dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.outputShape=e.inShape,w.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=aA(this.dispatchLayout,this.outputShape),this.elementsPerThread=rA(this.dispatchLayout,this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.shaderKey=`conv2DDerInputMM_${this.elementsPerThread}`}getUserCode(){return`
    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      var batch = i32(globalId.z);
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
      
    let outRow = row / uniforms.outShape[2];
    let outCol = row % uniforms.outShape[2];

    let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
    let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.stride[0]);
    let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.stride[1]);
    if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
      return 0.0;
    }
    if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
      return 0.0;
    }
    let coord = vec4<i32>(
        batch,
        i32(xR),
        i32(xC),
        col % uniforms.outBackprop[3]);
    return x.numbers[getIndexFromCoords4D(coord, uniforms.xShape)];
    }
    return 0.0;
    }

    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      let coordX = uniforms.filterDims.x - 1 -
          row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let coordY = uniforms.filterDims.y - 1 -
          (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
      if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
          coordX >= 0 && coordY >= 0) {
        let coord = vec4<i32>(coordX, coordY, col,
            row % uniforms.outBackprop[3]);
        return W.numbers[getIndexFromCoords4D(coord, uniforms.wShape)];
      }
      return 0.0;
    }

    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {
      var batch = i32(globalId.z);
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result.numbers[getIndexFromCoords4D(outCoord, uniforms.outShape)] = value;
    }

    ${sA(this.elementsPerThread,this.workGroupSize)}
  `}},Uoe=class{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>; pads : vec2<i32>; stride : vec2<i32>; outBackprop : vec4<i32>;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=Ge(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",this.shaderKey=`conv2DDerInput_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,a=this.isChannelsLast?3:1;return`
    ${Xe()} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[${a}];

        let dyCorner = vec2<i32>(coords[${e}]), coords[${t}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.stride.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = dyR;

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.stride.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = dyC;

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              if (${this.isChannelsLast}) {
                let xValue = getDy(batch, idyR, idyC, d2);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              } else {
                let xValue = getDy(batch, d2, idyR, idyC);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              }

            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}};function Goe(e){let{inputs:t,backend:a,attrs:r}=e,{dy:n,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:d,dimRoundingMode:u}=r,h=N.convertConv2DDataFormat(d),p=N.computeConv2DInfo(i,s.shape,o,1,l,u,!1,h),c=[{type:"int32",data:[p.filterHeight,p.filterWidth]},{type:"int32",data:[p.filterHeight-1-p.padInfo.top,p.filterWidth-1-p.padInfo.left]},{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.batchSize,p.outHeight,p.outWidth,p.outChannels]}],f;if(J().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE"))f=new Uoe(p);else{f=new Voe(p);let m=p.inShape[1]*p.inShape[2],g=p.inShape[3],y=p.filterHeight*p.filterWidth*p.outChannels;c.push({type:"uint32",data:[m]},{type:"uint32",data:[g]},{type:"uint32",data:[y]})}return a.runWebGPUProgram(f,[n,s],"float32",c)}var joe={kernelName:qs,backendName:"webgpu",kernelFunc:Goe},Hoe=ya({opType:2}),qoe={kernelName:Xs,backendName:"webgpu",kernelFunc:Hoe},Xoe=ya({opType:3}),Koe={kernelName:Ks,backendName:"webgpu",kernelFunc:Xoe},Zoe=class{constructor(e,t,a,r){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32;",this.workGroupSize=[64,1,1],this.size=!0;let[n]=t;this.outputShape=[n,a[0],a[1],e],this.dispatchLayout=Ge(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.methodId=r==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){let[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[a,r,n]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[s,i,o]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`
      ${Xe()}
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let height_ratio = f32(${a});
        let width_ratio = f32(${s});
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${r};
        let width_scale = ${i};
        let in_y = ${n};
        if( in_y < 0.0 || in_y > ${e} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${o};
        if( in_x < 0.0 || in_x > ${t} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          setOutputAtIndex(index, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutputAtIndex(index, newValue);
        }
      }
    }
    `}},Yoe=e=>{let{inputs:t,backend:a,attrs:r}=e,{image:n,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:d}=r,u=new Zoe(n.shape[3],s.shape,o,l),h=[{type:"float32",data:[d]}];return a.runWebGPUProgram(u,[n,s,i],"float32",h)},Joe={kernelName:No,backendName:"webgpu",kernelFunc:Yoe},Qoe=class{constructor(e,t){this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32;",this.outputShape=e,this.dispatchLayout=Ge(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`depthToSpace_${t}`,this.dataFormat=t}getUserCode(){return`
      ${Xe()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputAtIndex(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function ele(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{blockSize:s,dataFormat:i}=r,o=n.shape[0],l=i==="NHWC"?n.shape[1]:n.shape[2],d=i==="NHWC"?n.shape[2]:n.shape[3],u=i==="NHWC"?n.shape[3]:n.shape[1],h=l*s,p=d*s,c=u/(s*s),f=i==="NHWC"?[o,h,p,c]:[o,c,h,p],m=[{type:"int32",data:[s]}],g=new Qoe(f,i);return a.runWebGPUProgram(g,[n],n.dtype,m)}var tle={kernelName:Eo,backendName:"webgpu",kernelFunc:ele},AI=class{constructor(e,t=!1,a=null,r=!1){this.variableNames=["x","W"],this.uniforms="pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; inDims : vec2<i32>;",this.workGroupSize=[4,4,4],this.isVec4=!0,this.outputShape=e.outShape,this.dispatchLayout={x:[0,1],y:[2],z:[3]},this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,4,4]),w.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=a,this.hasPreluActivation=r,this.shaderKey=`depthwise3x3_${a}`}getUserCode(){let e="",t="";if(this.activation){let r=ts(this.activation,this.isVec4);this.hasPreluActivation?e=`fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          let b = getPreluActivationWeightsByOutputCoords(outCoord);
          ${r}
        }`:e=`
        fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
            ${r}
          }
        `,t="dotProd[i] = activation(dotProd[i], coords);"}let a=this.addBias?"dotProd[i] = dotProd[i] + getBiasByOutputCoords(coords);":"";return`
      ${e}

      ${tA()}
      fn main(@builtin(global_invocation_id) globalId: vec3<u32>) {
        let batch = 0;
        let r = i32(globalId.x);
        let c = i32(globalId.y) * 4;
        let d2 = i32(globalId.z) * 4;
        let xRCCorner = vec2<i32>(r, c) * uniforms.stride - uniforms.pad;
        let d1 = d2;
        let q = 0;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;

        var wVals : array<vec4<f32>, 9>;
        wVals[0] = getW(0, 0, d1, q);
        wVals[1] = getW(0, 1, d1, q);
        wVals[2] = getW(0, 2, d1, q);
        wVals[3] = getW(1, 0, d1, q);
        wVals[4] = getW(1, 1, d1, q);
        wVals[5] = getW(1, 2, d1, q);
        wVals[6] = getW(2, 0, d1, q);
        wVals[7] = getW(2, 1, d1, q);
        wVals[8] = getW(2, 2, d1, q);

        var xVals : array<array<vec4<f32>, 6>, 3>;
        for (var wR = 0; wR < 3; wR = wR + 1) {
          let xR = xRCorner + wR * uniforms.dilation[0];
          for (var wC = 0; wC < 6; wC = wC + 1) {
            let xC = xCCorner + wC * uniforms.dilation[1];
            if (xR < 0 || xR >= uniforms.inDims[0] || xC < 0 || xC >= uniforms.inDims[1]) {
              xVals[wR][wC] = vec4<f32>(0.0);
            } else {
              xVals[wR][wC] = getX(batch, xR, xC, d1);
            }
          }
        }

        var dotProd : array<vec4<f32>, 4>;
        dotProd[0] = vec4<f32>(0.0);
        dotProd[1] = vec4<f32>(0.0);
        dotProd[2] = vec4<f32>(0.0);
        dotProd[3] = vec4<f32>(0.0);

        for (var wR = 0; wR < 3; wR = wR + 1) {
          for (var wC = 0; wC < 3; wC = wC + 1) {
            let indexW = wR * 3 + wC;
            dotProd[0] = dotProd[0] + xVals[wR][0 + wC] * wVals[indexW];
            dotProd[1] = dotProd[1] + xVals[wR][1 + wC] * wVals[indexW];
            dotProd[2] = dotProd[2] + xVals[wR][2 + wC] * wVals[indexW];
            dotProd[3] = dotProd[3] + xVals[wR][3 + wC] * wVals[indexW];
          }
        }

        for (var i = 0; i < 4; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d2);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            ${a}
            ${t}
            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], dotProd[i]);
          }
        }
      }
    `}},xI=class{constructor(e,t=!1,a=null,r=!1){this.variableNames=["x","W"],this.uniforms=`pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>;
      inDims : vec2<i32>; filterHeight : i32; filterWidth : i32;
      channelMul : i32;`,this.workGroupSize=[256,1,1],this.outputShape=e.outShape,this.dispatchLayout=Ge(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),w.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=a,this.hasPreluActivation=r,this.shaderKey=`depthwise_${this.activation}`}getUserCode(){let e="",t="";if(this.activation){let r=ts(this.activation,!1);this.hasPreluActivation?e=`fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
          let b = getPreluActivationWeightsByOutputCoords(outCoord);
          ${r}
        }`:e=`
          fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
            ${r}
          }
        `,t="dotProd = activation(dotProd, coords);"}let a=this.addBias?"dotProd = dotProd + getBiasByOutputCoords(coords);":"";return`
      ${e}

      fn writeResult(batch : i32, row : i32, col : i32, chan : i32,
          value : f32) {
        let coord = vec4<i32>(batch, row, col, chan);
        if (coordsInBounds4D(coord, uniforms.outShape)) {
          setOutputAtCoords(batch, row, col, chan, value);
        }
      }

      ${Oi()}
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
        let d2 = coords[3];
        let d1 = d2 / uniforms.channelMul;
        let q = d2 - d1 * uniforms.channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;
        let inputRowEnd = inputRowStart + uniforms.filterHeight *
            uniforms.dilation[0];
        let inputColEnd = inputColStart + uniforms.filterWidth *
            uniforms.dilation[1];

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;

        // Extract if checking out of for loop for performance.
        if (inputRowStart >= 0 && inputColStart >= 0 &&
          inputRowEnd < uniforms.inDims[0] &&
              inputColEnd < uniforms.inDims[1]) {
            // Here using a constant value |this.convInfo.filterHeight| instead
            // of uniform value is in order to loop unrolling.
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                let xVal = getX(batch, xR, xC, d1);
                let wVal = getW(wR, wC, d1, q);
                dotProd = dotProd + xVal * wVal;
              }
            }
          } else {
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              if (xR < 0 || xR >= uniforms.inDims[0]) {
                continue;
              }

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                if (xC < 0 || xC >= uniforms.inDims[1]) {
                  continue;
                }

                let xVal = getX(batch, xR, xC, d1);
                let wVal = getW(wR, wC, d1, q);
                dotProd = dotProd + xVal * wVal;
              }
            }
          }

        ${a}
        ${t}
        writeResult(batch, coords[1], coords[2], d2, dotProd);
      }
    `}};function ale(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:d}=r,u=l;u==null&&(u=[1,1]);let h=N.computeConv2DInfo(n.shape,s.shape,i,u,o,d,!0),p=[{type:"int32",data:[h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.dilationHeight,h.dilationWidth]},{type:"int32",data:[h.inHeight,h.inWidth]}],c;return h.batchSize===1&&h.inHeight===h.outHeight&&h.inWidth===h.outWidth&&h.strideHeight===1&&h.strideWidth===1&&h.filterHeight===h.filterWidth&&h.inChannels===h.outChannels&&h.filterHeight===3&&h.inChannels%4===0?c=new AI(h):(c=new xI(h),p.push({type:"int32",data:[h.filterHeight]},{type:"int32",data:[h.filterWidth]},{type:"int32",data:[h.outChannels/h.inChannels]})),a.runWebGPUProgram(c,[n,s],n.dtype,p)}var rle={kernelName:Zs,backendName:"webgpu",kernelFunc:ale},bI=La({opSnippet:0,cpuKernelImpl:Oie,supportsComplex:!0}),nle={kernelName:fi,backendName:"webgpu",kernelFunc:bI},sle=class{constructor(e,t){this.workGroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="reduceSize : i32;",this.size=!0,this.inputShape=[e.batchSize,e.inSize];let[a]=N.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=a.length===0?[1]:a,this.dispatchLayout=Ge(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey=`reduce_${t}`}getUserCode(){let e="",t="0.0";this.reduceType==="min"||this.reduceType==="max"?(e=`
         if (isNanCustom(candidate)) {
          bestValue = uniforms.NAN;
         } else if (!isNanCustom(bestValue) && candidate ${this.reduceType==="min"?"<":">"} bestValue)
           {  bestValue = candidate; }`,t="f32(x.numbers[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?e=" bestValue = bestValue + candidate; ":this.reduceType==="prod"&&(e=" bestValue = bestValue * candidate; ",t="1.0");let a=this.reduceType==="mean"?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`
       fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
       }

       ${`
         var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
       `}
       fn getOffset(outputIndex : i32) -> i32 {
         let outputCoords = getCoordsFromIndex(outputIndex);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
          return offset;
       }
       ${Xe()}
         let outputIndex = index / i32(workGroupSizeX);
         let offset = getOffset(outputIndex);
         var bestValue = ${t};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(u32(Length), workGroupSizeX);
         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
             k = k + i32(workGroupSizeX)) {
           let candidate = f32(x.numbers[offset + k]);
           ${e}
         }
         xBestValues[localId.x] = bestValue;
         workgroupBarrier();

         var reduceSize = min(u32(Length), workGroupSizeX);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            ${e}
            xBestValues[localId.x] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (localId.x == 0u && outputIndex < uniforms.size) {
          ${a}
        }
       }
     `}};function hp(e,t,a,r,n){let s=e.shape.length,i=[],o=w.parseAxisParam(t,e.shape),l=o,d=N.getAxesPermutation(l,s),u=e;d!=null&&(u=xl({inputs:{x:e},attrs:{perm:d},backend:n}),l=N.getInnerMostAxes(l.length,s),i.push(u)),N.assertAxesAreInnerMostDims(r,l,s);let[h,p]=N.computeOutAndReduceShapes(u.shape,l),c=h;a&&(c=N.expandShapeToKeepDim(h,o));let f;if((r==="max"||r==="prod")&&n.shouldExecuteOnCPU([u])){let m=n.tensorMap.get(u.dataId).values;switch(r){case"max":let g=Mie(m,w.sizeFromShape(p),c,e.dtype);f=n.makeTensorInfo(c,e.dtype,g);break;case"prod":let{outVals:y,outShape:A,outDtype:x}=Lie(u.shape,u.dtype,m,l);f=n.makeTensorInfo(A,x,y);break;default:throw new Error(`${r} CPU implementation is not yet supported.`)}}else{let m=w.sizeFromShape(p),g=w.sizeFromShape(u.shape)/m,y={windowSize:m,inSize:m,batchSize:g,outSize:1},A=r==="mean"?"float32":_h(e.dtype),x=[{type:"int32",data:[m]}],b=new sle(y,r),v=n.runWebGPUProgram(b,[u],A,x);i.push(v),f=Ve({inputs:{x:v},attrs:{shape:c},backend:n})}return i.forEach(m=>n.disposeData(m.dataId)),f}function oA(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{axis:s,keepDims:i}=r;return hp(n,s,i,"sum",a)}var ile={kernelName:Si,backendName:"webgpu",kernelFunc:oA};function ole(e){let{inputs:t,backend:a,attrs:r}=e,{equation:n}=r,s=t,{allDims:i,summedDims:o,idDims:l}=N.decodeEinsumEquation(n,s.length);N.checkEinsumDimSizes(i.length,l,s);let{path:d,steps:u}=N.getEinsumComputePath(o,l),h=u.length,p=null,c=i.length,f=[];for(let m=0;m<h;++m){for(let g of u[m]){let{permutationIndices:y,expandDims:A}=N.getEinsumPermutation(c,l[g]),x;N.isIdentityPermutation(y)?x=s[g]:(x=xl({inputs:{x:s[g]},backend:a,attrs:{perm:y}}),f.push(x));let b=x.shape.slice();for(let v=0;v<A.length;++v)b.splice(A[v],0,1);w.arraysEqual(x.shape,b)||(x=Ve({inputs:{x},backend:a,attrs:{shape:b}}),f.push(x)),p===null?p=x:(p=bI({inputs:{a:x,b:p},backend:a}),f.push(p))}m<h-1&&(d[m]>=0&&(p=oA({inputs:{x:p},backend:a,attrs:{axis:d[m]-(i.length-c),keepDims:!1}}),f.push(p)),c--)}for(let m of f)m!==p&&a.disposeData(m.dataId);return p}var lle={kernelName:bh,backendName:"webgpu",kernelFunc:ole},ule=ya({opType:4}),dle={kernelName:Js,backendName:"webgpu",kernelFunc:ule},hle=La({opSnippet:4,dtype:"bool",cpuKernelImpl:wie}),ple={kernelName:Ro,backendName:"webgpu",kernelFunc:hle},vI=ya({opType:5,cpuKernelImpl:kie,dtype:"float32"}),cle={kernelName:Qs,backendName:"webgpu",kernelFunc:vI};function Vg(e){let{inputs:t,attrs:a,backend:r}=e,{dim:n}=a,{input:s}=t,i=s.shape.length,o=s.shape.slice(),l=n;return n<0&&(w.assert(-(i+1)<=n,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+n+1),o.splice(l,0,1),Ve({inputs:{x:s},backend:r,attrs:{shape:o}})}var fle={kernelName:Fo,backendName:"webgpu",kernelFunc:Vg},mle=ya({opType:6,cpuKernelImpl:Iie}),gle={kernelName:$o,backendName:"webgpu",kernelFunc:mle},yle=class{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ge(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="fill"}getUserCode(){return`
    ${Xe()}
      if (index < uniforms.size) {
        setOutputAtIndex(index, uniforms.value);
      }
    }
  `}};function md(e){let{backend:t,attrs:a}=e,{shape:r,value:n}=a,{dtype:s}=a;if(s=s||w.inferDtype(n),s==="string"){let i=w.getArrayFromDType(s,w.sizeFromShape(r));return i.fill(n),t.makeTensorInfo(r,s,i)}else{let i=new yle(r),o=[{type:"float32",data:[n]}];return t.runWebGPUProgram(i,[],s,o)}}var Ale={kernelName:_u,backendName:"webgpu",kernelFunc:md},xle=class{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ge(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`
      ${Xe()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputAtIndex(index, outputValue);
        }
      }
    `}},ble={kernelName:Mo,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{image:a}=e,r=t,n=new xle(a.shape);return r.runWebGPUProgram(n,[a],a.dtype)}},vle=ya({opType:7,cpuKernelImpl:Sie}),wle={kernelName:ei,backendName:"webgpu",kernelFunc:vle},kle=La({opSnippet:12,dtype:"int32"}),Ile={kernelName:ti,backendName:"webgpu",kernelFunc:kle},Sle=(e,t,a,r,n)=>{let s=[r,...a];return n&&s.push(n),e.createBindGroup({layout:t,entries:s.map((i,o)=>({binding:o,resource:i}))})},wI=(e,t,a,r,n,s=!1)=>{let i={dtype:n.dtype,shape:n.shape},o=Jne(r,i,t,s),l=e.createShaderModule({code:o,label:t.constructor.name});return e.createComputePipeline({layout:a,compute:{module:l,entryPoint:"main"},label:t.constructor.name})};function kI(e,t,a,r="",n=""){return e.shaderKey+"_"+(e.workGroupSize?e.workGroupSize.join(","):"")+t.map(s=>s.length).join(",")+a.join(",")+e.variableNames.join(",")+r+n}function xb(e){let{externalImage:t,backend:a,attrs:r,outShape:n,useImport:s}=e,{numChannels:i}=r,o=w.sizeFromShape(n),l=w.computeStrides(n),d=a.makeTensorInfo(n,"int32"),u=a.getFromPixelsProgram(s?"import":"copyExternal");u.updateOutputShape(n);let h=[d.shape],p=[d.dtype,s?"import":"copyExternal"],c=kI(u,h,p),f=u.getLayout(a.device),m=a.getAndSavePipeline(c,()=>wI(a.device,u,f.pipelineLayout,[],d,!0));u.setPipeline(m),s||a.queue.copyExternalImageToTexture({source:t,origin:{x:0,y:0}},{texture:u.makeInputTexture(a.device,n[1],n[0])},[n[1],n[0]]);let g=a.tensorMap.get(d.dataId);g.bufferInfo.buffer=a.acquireBuffer(g.bufferInfo.byteSize);let y=[o,i,...l,...u.dispatch];u.setUniform(a.device,y);let A;if(s){let x={source:t};A=a.device.importExternalTexture(x)}else A=u.inputTexture.createView();return a.runFromPixelsProgram(u,g.bufferInfo.buffer,f,A,d.dataId),d}var Tle={kernelName:th,backendName:"webgpu",kernelFunc:Cle},Pl;function Cle(e){let{inputs:t,backend:a,attrs:r}=e,{pixels:n}=t,{numChannels:s}=r;if(n==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let i=typeof HTMLVideoElement!="undefined"&&n instanceof HTMLVideoElement,o=typeof HTMLImageElement!="undefined"&&n instanceof HTMLImageElement,l=typeof HTMLCanvasElement!="undefined"&&n instanceof HTMLCanvasElement||typeof OffscreenCanvas!="undefined"&&n instanceof OffscreenCanvas,d=typeof ImageBitmap!="undefined"&&n instanceof ImageBitmap,[u,h]=i?[n.videoWidth,n.videoHeight]:[n.width,n.height],p=[h,u,s];if(J().getBool("WEBGPU_USE_IMPORT")&&i)return xb({externalImage:n,backend:a,attrs:r,outShape:p,useImport:!0});if((i||o)&&(Pl==null&&(Pl=document.createElement("canvas").getContext("2d")),Pl.canvas.width=u,Pl.canvas.height=h,Pl.drawImage(n,0,0,u,h),n=Pl.canvas),d||l||i||o)return xb({externalImage:n,backend:a,attrs:r,outShape:p,useImport:!1});let c=n.data,f=c;if(s!=null&&s!==4){f=new Uint8Array(n.width*n.height*s);let y=c.length,A=0;for(let x=0;x<y;x++)x%4<s&&(f[A++]=c[x])}let m=a.makeTensorInfo(p,"int32"),g=a.tensorMap.get(m.dataId);return g.values=new Int32Array(f),a.maybeReleaseBuffer(m.dataId),a.uploadToGPU(m.dataId),m}var Nle=class{constructor(e,t,a,r,n){this.uniforms="varianceEpsilon : f32;",this.workGroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],N.assertAndGetBroadcastShape(e,t),N.assertAndGetBroadcastShape(e,a),this.outputShape=e,this.dispatchLayout=Ge(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),r!=null&&(N.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset")),n!=null&&(N.assertAndGetBroadcastShape(e,n),this.variableNames.push("scale")),this.offsetShape=r,this.scaleShape=n,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";this.offsetShape!=null&&(e="getOffsetByOutputIndex(index)");let t="1.0";return this.scaleShape!=null&&(t="getScaleByOutputIndex(index)"),`
      ${Xe()}
        if (index < uniforms.size)
        {
          let xValue = getXByOutputIndex(index);
          let meanValue = getMeanByOutputIndex(index);
          let varianValue = getVarianceByOutputIndex(index);
          let offsetValue = ${e};
          let scaleValue = ${t};
          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
        }
      }
  `}},Ele={kernelName:ai,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:a})=>{let{x:r,scale:n,offset:s,mean:i,variance:o}=e,{varianceEpsilon:l}=t,d=a,u=[r,i,o],h=null;s!=null&&(h=s.shape,u.push(s));let p=null;n!=null&&(p=n.shape,u.push(n));let c=new Nle(r.shape,i.shape,o.shape,h,p),f=[{type:"float32",data:[l]}];return d.runWebGPUProgram(c,u,r.dtype,f)}};function Rle(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:d,dataFormat:u,dilations:h,dimRoundingMode:p,activation:c,leakyreluAlpha:f}=r,m=N.convertConv2DDataFormat(u),g=N.computeConv2DInfo(n.shape,s.shape,l,h,d,p,!1,m);return yI({x:n,filter:s,convInfo:g,backend:a,bias:i,preluActivationWeights:o,leakyreluAlpha:f,activation:c})}var Fle={kernelName:Ts,backendName:"webgpu",kernelFunc:Rle};function $le(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:d,dilations:u,dimRoundingMode:h,activation:p}=r,c=u;c==null&&(c=[1,1]),w.assert(N.eitherStridesOrDilationsAreOne(l,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${c}'`);let f=N.computeConv2DInfo(n.shape,s.shape,l,c,d,h,!0),m=[n,s],g=i!=null,y=o!=null;g&&m.push(i),y&&m.push(o);let A=[{type:"int32",data:[f.padInfo.top,f.padInfo.left]},{type:"int32",data:[f.strideHeight,f.strideWidth]},{type:"int32",data:[f.dilationHeight,f.dilationWidth]},{type:"int32",data:[f.inHeight,f.inWidth]}],x;return f.batchSize===1&&f.inHeight===f.outHeight&&f.inWidth===f.outWidth&&f.strideHeight===1&&f.strideWidth===1&&f.filterHeight===f.filterWidth&&f.inChannels===f.outChannels&&f.filterHeight===3&&f.inChannels%4===0?x=new AI(f,g,p,y):(x=new xI(f,g,p,y),A.push({type:"int32",data:[f.filterHeight]},{type:"int32",data:[f.filterWidth]},{type:"int32",data:[f.outChannels/f.inChannels]})),a.runWebGPUProgram(x,m,"float32",A)}var Mle={kernelName:Cs,backendName:"webgpu",kernelFunc:$le},_le=class{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=Ge(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32; strides : ${pa(e)};`}getUserCode(){let e;return this.sliceDim>1?e="uniforms.strides[j]":e="uniforms.strides",`
        ${Xe()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${e};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }

          setOutputAtIndex(index, getA(flattenIndex, coords[1]));
        }
      }
      `}};function zle(e){let{inputs:t,backend:a}=e,{params:r,indices:n}=t,s=n.shape,i=s[s.length-1],o=w.sizeFromShape(r.shape),[l,d,u,h]=N.prepareAndValidate(r,n),p=Ve({inputs:{x:n},backend:a,attrs:{shape:[d,i]}}),c=Ve({inputs:{x:r},backend:a,attrs:{shape:[w.sizeFromShape(r.shape)/u,u]}});if(a.shouldExecuteOnCPU([r,n])||r.dtype==="string"){let A=a.readSync(n.dataId),x=a.bufferSync(r),b=Tie(A,x,r.dtype,d,i,u,h,r.shape,o);return a.makeTensorInfo(l,r.dtype,b.values)}let f=new _le(i,[d,u]),m=[{type:"int32",data:[i]},{type:"int32",data:h}],g=a.runWebGPUProgram(f,[c,p],c.dtype,m),y=Ve({inputs:{x:g},backend:a,attrs:{shape:l}});return a.disposeData(p.dataId),a.disposeData(c.dataId),a.disposeData(g.dataId),y}var Ole={kernelName:zo,backendName:"webgpu",kernelFunc:zle},Dle=class{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=Ge(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="gather"}getUserCode(){let e=Ple(this.aShape,"i32");return`
      ${Xe()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${e}));
        }
      }
    `}};function Ple(e,t="int"){let a=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let n=0;n<e.length;n++)n===2?r.push(`${t}(getIndices(resRC.x, resRC.z))`):r.push(`${a[n]}`);return r.join()}function II(e){let{inputs:t,backend:a,attrs:r}=e,{x:n,indices:s}=t,{axis:i,batchDims:o}=r,l=w.parseAxisParam(i,n.shape)[0],d=N.segment_util.collectGatherOpShapeInfo(n,s,l,o),u=w.sizeFromShape(s.shape),h=[],p=Ve({inputs:{x:n},backend:a,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),c=Ve({inputs:{x:s},backend:a,attrs:{shape:[d.batchSize,u/d.batchSize]}});h.push(p),h.push(c);let f=[d.batchSize,d.outerSize,u/d.batchSize,d.sliceSize];if(a.shouldExecuteOnCPU([n,s])){let A=a.tensorMap.get(c.dataId).values,x=Le(c.shape,c.dtype,A),b=a.tensorMap.get(p.dataId).values,v=Le(p.shape,p.dtype,b),T=Cie(v,x,f);return h.forEach(C=>a.disposeData(C.dataId)),a.makeTensorInfo(d.outputShape,T.dtype,T.values)}let m=new Dle(p.shape,f),g=a.runWebGPUProgram(m,[p,c],p.dtype);h.push(g);let y=Ve({inputs:{x:g},backend:a,attrs:{shape:d.outputShape}});return h.forEach(A=>a.disposeData(A.dataId)),y}var Lle={kernelName:_o,backendName:"webgpu",kernelFunc:II},Wle=La({opSnippet:5,cpuKernelImpl:Eie,dtype:"bool"}),Ble={kernelName:Oo,backendName:"webgpu",kernelFunc:Wle},Vle=La({opSnippet:6,dtype:"bool",cpuKernelImpl:Nie}),Ule={kernelName:ri,backendName:"webgpu",kernelFunc:Vle};function Gle(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{alpha:s}=r,i=[{type:"float32",data:[s]}],o=new up(n.shape,15);return o.uniforms="alpha : f32;",a.runWebGPUProgram(o,[n],"float32",i)}var jle={kernelName:si,backendName:"webgpu",kernelFunc:Gle},Hle=La({opSnippet:7,dtype:"bool",cpuKernelImpl:Fie}),qle={kernelName:Do,backendName:"webgpu",kernelFunc:Hle},Xle=La({opSnippet:8,dtype:"bool",cpuKernelImpl:Rie}),Kle={kernelName:Po,backendName:"webgpu",kernelFunc:Xle},Zle=ya({opType:9,cpuKernelImpl:$ie}),Yle={kernelName:ii,backendName:"webgpu",kernelFunc:Zle},Jle=La({opSnippet:9,dtype:"bool"}),Qle={kernelName:Lo,backendName:"webgpu",kernelFunc:Jle},eue=ya({opType:10}),tue={kernelName:Lu,backendName:"webgpu",kernelFunc:eue};function SI(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{reductionIndices:s,keepDims:i}=r;return hp(n,s,i,"max",a)}var aue={kernelName:oi,backendName:"webgpu",kernelFunc:SI},rue=La({opSnippet:15,cpuKernelImpl:_ie}),nue={kernelName:li,backendName:"webgpu",kernelFunc:rue};function sue(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r,d=1,u=N.computePool2DInfo(n.shape,s,i,d,o,l),h,p=[];if(u.filterHeight===1&&u.filterWidth===1){if(w.arraysEqual(u.inShape,u.outShape))return Or({inputs:{x:n},backend:a});h=new fI(u),p.push({type:"int32",data:[u.strideHeight,u.strideWidth]})}else h=new cI(u,"max"),p.push({type:"int32",data:[u.strideHeight,u.strideWidth]},{type:"int32",data:[u.padInfo.top,u.padInfo.left]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]},{type:"int32",data:[u.inHeight,u.inWidth]},{type:"int32",data:[u.effectiveFilterHeight,u.effectiveFilterWidth]});return a.runWebGPUProgram(h,[n],n.dtype,p)}var iue={kernelName:ui,backendName:"webgpu",kernelFunc:sue};function oue(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{keepDims:s,axis:i}=r;return hp(n,i,s,"mean",a)}var lue={kernelName:di,backendName:"webgpu",kernelFunc:oue};function uue(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{axis:s,keepDims:i}=r;return hp(n,s,i,"min",a)}var due={kernelName:hi,backendName:"webgpu",kernelFunc:uue},hue=La({opSnippet:16,cpuKernelImpl:zie}),pue={kernelName:pi,backendName:"webgpu",kernelFunc:hue},cue=class{constructor(e,t,a){this.uniforms="",this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((r,n)=>r[0]+e[n]+r[1]),this.dispatchLayout=Ge(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.xShape=e,t.map((r,n)=>{this.uniforms+=` pad${n} : vec2<i32>;`}),this.offset=a==="reflect"?0:1,this.shaderKey=`mirrorPad_${a}`}getUserCode(){let e=this.xShape.length,t=this.xShape.map((l,d)=>`uniforms.pad${d}[0]`).join(","),a=this.xShape.map((l,d)=>`uniforms.pad${d}[0] + uniforms.xShape${e>1?`[${d}]`:""}`).join(","),r=e===1?"start":"start[i]",n=e===1?"end":"end[i]",s=e===1?"outC":"outC[i]",i=pa(e),o=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${Xe()}
        if (index < uniforms.size) {
          let start = ${i}(${t});
          let end = ${i}(${a});
          var outC = getCoordsFromIndex(index);
          for (var i = 0; i < ${e}; i = i + 1) {
            if (${s} < ${r}) {
              ${s} = ${r} * 2 - ${s} - ${this.offset};
            } else if(${s} >= ${n}) {
              ${s} = (${n} - 1) * 2 - ${s} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputAtIndex(index, getX(${o}));
        }
      }
    `}},fue={kernelName:ci,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:a})=>{let{x:r}=e,{paddings:n,mode:s}=t,i=a,o=n.map(d=>({type:"int32",data:[d[0],d[1]]})),l=new cue(r.shape,n,s);return i.runWebGPUProgram(l,[r],r.dtype,o)}};function mue(e){let{inputs:t,backend:a}=e,{x:r}=t;if(a.shouldExecuteOnCPU([r])){let s=a.tensorMap.get(r.dataId),[i,o]=Die(s.values,r.shape,r.dtype);return a.makeTensorInfo(o,r.dtype,i)}let n=new up(r.shape,11);return a.runWebGPUProgram(n,[r],r.dtype)}var gue={kernelName:Wo,backendName:"webgpu",kernelFunc:mue};function yue(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:a,attrs:r}=e,{boxes:n,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r,d=a.readSync(n.dataId),u=a.readSync(s.dataId),{selectedIndices:h}=Pr.nonMaxSuppressionV3Impl(d,u,i,o,l);return a.makeTensorInfo([h.length],"int32",new Int32Array(h))}var Aue={kernelName:Vo,backendName:"webgpu",kernelFunc:yue};function xue(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:a,attrs:r}=e,{boxes:n,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:d}=r,u=a.readSync(n.dataId),h=a.readSync(s.dataId),p=i,c=o,f=l,m=d,{selectedIndices:g,selectedScores:y}=Pr.nonMaxSuppressionV5Impl(u,h,p,c,f,m);return[a.makeTensorInfo([g.length],"int32",new Int32Array(g)),a.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var bue={kernelName:Uo,backendName:"webgpu",kernelFunc:xue};function Zc(e){let{inputs:t,backend:a}=e,{x:r}=t;if(r.dtype==="complex64"){let n=dp({inputs:{input:r},backend:a}),s=Zc({inputs:{x:n},backend:a}),i=W0({inputs:{input:r},backend:a}),o=Zc({inputs:{x:i},backend:a}),l=cd({inputs:{real:s,imag:o},backend:a});return a.disposeData(n.dataId),a.disposeData(s.dataId),a.disposeData(i.dataId),a.disposeData(o.dataId),l}else return md({attrs:{shape:r.shape,dtype:r.dtype,value:r.dtype==="string"?"":0},backend:a})}var vue={kernelName:ll,backendName:"webgpu",kernelFunc:Zc};function TI(e){let{inputs:t,backend:a}=e,{x:r}=t;if(r.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(r.dtype==="complex64"){let n=dp({inputs:{input:r},backend:a}),s=TI({inputs:{x:n},backend:a}),i=W0({inputs:{input:r},backend:a}),o=Zc({inputs:{x:i},backend:a}),l=cd({inputs:{real:s,imag:o},backend:a});return a.disposeData(n.dataId),a.disposeData(s.dataId),a.disposeData(i.dataId),a.disposeData(o.dataId),l}else return md({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:a})}var wue={kernelName:Go,backendName:"webgpu",kernelFunc:TI};function kue(e){let{inputs:t,backend:a,attrs:r}=e,{axis:n}=r;if(t.length===1)return Vg({inputs:{input:t[0]},backend:a,attrs:{dim:n}});let s=t[0].shape,i=t[0].dtype;t.forEach(u=>{w.assertShapesMatch(s,u.shape,"All tensors passed to stack must have matching shapes"),w.assert(i===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=t.map(u=>{let h=Vg({inputs:{input:u},backend:a,attrs:{dim:n}});return o.push(h),h}),d=gI({inputs:l,backend:a,attrs:{axis:n}});return o.forEach(u=>a.disposeData(u.dataId)),d}var Iue={kernelName:Ho,backendName:"webgpu",kernelFunc:kue},Sue=class{constructor(e,t){this.variableNames=["x"],this.uniforms="constantValue : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((a,r)=>a[0]+e[r]+a[1]),this.dispatchLayout=Ge(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),t.map((a,r)=>{this.uniforms+=` pad${r} : vec2<i32>;`}),this.xShape=e,this.shaderKey="pad"}getUserCode(){let e=this.xShape.length,t=pa(e),a=this.xShape.map((d,u)=>`uniforms.pad${u}[0]`).join(","),r=this.xShape.map((d,u)=>`uniforms.pad${u}[0] + uniforms.xShape${e>1?`[${u}]`:""}`).join(","),n=e>1?`${t}(${a})`:`${a}`,s=e>1?`${t}(${r})`:`${r}`,i=e>1?"any(outC < start)":"outC < start",o=e>1?"any(outC >= end)":"outC >= end",l=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${Xe()}
        if (index < uniforms.size) {
          let start = ${n};
          let end = ${s};
          let outC = getCoordsFromIndex(index);

          if (${i} || ${o}) {
            setOutputAtIndex(index, uniforms.constantValue);
          } else {
            let coords = outC - start;
            setOutputAtIndex(index, getX(${l}));
          }
        }
      }
    `}},CI=e=>{let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{paddings:s,constantValue:i}=r;if(s.every(d=>w.arraysEqual(d,[0,0])))return Or({inputs:{x:n},backend:a});if(w.sizeFromShape(n.shape)===0){let d=s.map((u,h)=>u[0]+n.shape[h]+u[1]);return md({backend:a,attrs:{shape:d,value:i,dtype:n.dtype}})}let o=[{type:"float32",data:[i]}];s.map(d=>o.push({type:"int32",data:[d[0],d[1]]}));let l=new Sue(n.shape,s);return a.runWebGPUProgram(l,[n],n.dtype,o)},Tue={kernelName:mi,backendName:"webgpu",kernelFunc:CI},Cue=La({opSnippet:13}),Nue={kernelName:gi,backendName:"webgpu",kernelFunc:Cue};function Eue(e){let{inputs:t,backend:a}=e,{x:r,alpha:n}=t,s=new hI(14,r.shape,n.shape);return a.runWebGPUProgram(s,[r,n],"float32")}var Rue={kernelName:yi,backendName:"webgpu",kernelFunc:Eue};function Fue(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{axis:s,keepDims:i}=r;return hp(n,s,i,"prod",a)}var $ue={kernelName:qo,backendName:"webgpu",kernelFunc:Fue},Mue=e=>{let{backend:t,attrs:a}=e,{start:r,stop:n,step:s,dtype:i}=a,o=Wie(r,n,s,i);return t.makeTensorInfo([o.length],i,o)},_ue={kernelName:Vu,backendName:"webgpu",kernelFunc:Mue},NI=La({opSnippet:3}),zue={kernelName:Ys,backendName:"webgpu",kernelFunc:NI},Oue=ya({opType:13}),Due={kernelName:Ai,backendName:"webgpu",kernelFunc:Oue},Pue=ya({opType:14}),Lue={kernelName:bi,backendName:"webgpu",kernelFunc:Pue},Wue=class{constructor(e,t,a){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>; halfPixelCenters : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,a,e[3]],this.dispatchLayout=Ge(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`
      ${Xe()}
        if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC =
            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *
            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function Bue(e){let{inputs:t,backend:a,attrs:r}=e,{images:n}=t,{alignCorners:s,size:i,halfPixelCenters:o}=r,[l,d]=i,u=s&&l>1?1:0,h=s&&d>1?1:0,p=[{type:"float32",data:[u,h]},{type:"float32",data:[o?.5:0]}],c=new Wue(n.shape,l,d);return a.runWebGPUProgram(c,[n],"float32",p)}var Vue={kernelName:xi,backendName:"webgpu",kernelFunc:Bue},Uue=class{constructor(e,t,a,r){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>; roundBase : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,a,e[3]],this.dispatchLayout=Ge(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.halfPixelCenters=r,this.shaderKey=`resizeNearest_${r}`}getUserCode(){let e;return this.halfPixelCenters?e="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":e="vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`
      ${Xe()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${e};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function Gue(e){let{inputs:t,backend:a,attrs:r}=e,{images:n}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,d]=o,u=s&&l>1?1:0,h=s&&d>1?1:0,p=[{type:"float32",data:[u,h]},{type:"float32",data:[s?.5:0]}],c=new Uue(n.shape,l,d,i);return a.runWebGPUProgram(c,[n],n.dtype,p)}var jue={kernelName:Gu,backendName:"webgpu",kernelFunc:Gue},Hue=class{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ge(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`centerX : f32; centerY : f32; sinRadians : f32;
          cosRadians : f32;`,this.shaderKey="rotate",this.outputShape=e,typeof t=="number"?(this.uniforms+=" fillValue : f32;",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>;",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${Xe()}

          if (index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputAtIndex(index, outputValue);
          }
        }
      `}},que={kernelName:ul,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:a})=>{let{image:r}=e,{radians:n,fillValue:s,center:i}=t,o=a,l=new Hue(r.shape,s),[d,u]=N.getImageCenter(i,r.shape[1],r.shape[2]),h=[{type:"float32",data:[d]},{type:"float32",data:[u]},{type:"float32",data:[Math.sin(n)]},{type:"float32",data:[Math.cos(n)]}];return typeof s=="number"?h.push({type:"float32",data:[Number.parseFloat(s.toFixed(2))]}):h.push({type:"float32",data:s}),o.runWebGPUProgram(l,[r],r.dtype,h)}},Xue=ya({opType:16,cpuKernelImpl:Bie}),Kue={kernelName:vi,backendName:"webgpu",kernelFunc:Xue},Zue=class{constructor(e,t,a,r,n,s,i){this.variableNames=["updates","indices"],this.workGroupSize=[64,1,1],this.atomic=!0,this.outputShape=s,this.type=i,this.dispatchLayout=Ge(e),this.dispatch=$e(this.dispatchLayout,e,this.workGroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${a}_${r}_${this.sliceDimGreaterThanOne}_${i}`;let o=pa(n.length);this.uniforms=`sliceDim : i32; strides: ${o}; size: i32;`,this.updatesRank=r,this.indicesRank=a}getUserCode(){let e="";this.indicesRank===1?e="coords[0]":this.indicesRank===2&&(e="coords[0], j");let t=`getIndices(${e})`,a=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides",r="",n="",s="";this.updatesRank===1?(r="coords[0]",n="flattenedIndex",s=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.updatesRank===2&&(r="coords[0], coords[1]",n="vec2<i32>(flattenedIndex, coords[1])",s=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        let d0 = index / uniforms.updatesShape[1];
        let d1 = index - d0 * uniforms.updatesShape[1];
        return vec2<i32>(d0, d1);
      }
      `);let i=`getUpdates(${r})`,o=this.type==="int32"?"atomicAdd(&(result.numbers[flatIndex]), i32(updateValue));":`
     var assumed = atomicLoad(&(result.numbers[flatIndex]));
     var success = 0;
     for (; success == 0;) {
       let new = bitcast<f32>(assumed) + updateValue;
       let newI32 = bitcast<i32>(new);
       let resValue = atomicCompareExchangeWeak(&(result.numbers[flatIndex]), assumed, newI32);
       assumed = resValue[0];
       success = resValue[1];
     }
     `;return`
    ${s}

      ${Xe()}

        if (index < uniforms.size) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${t}));
            flattenedIndex = flattenedIndex + indexInside * ${a};
          }
          let updateValue = ${i};
          let flatIndex = getOutputIndexFromCoords(${n});

         ${o}
        }
      }`}};function Yue(e){let{inputs:t,backend:a,attrs:r}=e,{indices:n,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:d,strides:u,outputSize:h}=N.calculateShapes(s,n,i),p=[h/d,d];if(h===0)return a.makeTensorInfo(i,n.dtype);let c=Ve({inputs:{x:n},backend:a,attrs:{shape:[l,o]}}),f=Ve({inputs:{x:s},backend:a,attrs:{shape:[l,d]}}),m=f.dtype,g=md({backend:a,attrs:{shape:p,value:0,dtype:m}}),y=w.sizeFromShape(f.shape),A=[{type:"int32",data:[o]},{type:"int32",data:u},{type:"int32",data:[y]}],x=new Zue(f.shape,o,c.shape.length,f.shape.length,u,p,m),b=a.runWebGPUProgram(x,[f,c],m,A,g),v=Ve({inputs:{x:b},backend:a,attrs:{shape:i}});return a.disposeData(c.dataId),a.disposeData(f.dataId),a.disposeData(b.dataId),v}var Jue={kernelName:Yo,backendName:"webgpu",kernelFunc:Yue},Que=class{constructor(e,t,a){this.variableNames=["c","a","b"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=Ge(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.cRank=e,this.rank=a,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)t="resRC",e="resRC";else{let a=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[],n=[];for(let s=0;s<this.outputShape.length;s++)n.push(`${a[s]}`),s<this.cRank&&r.push(`${a[s]}`);e=r.join(),t=n.join()}return`
      ${Xe()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let cVal = getC(${e});
          if (cVal >= 1.0) {
            setOutputAtIndex(index, getA(${t}));
          } else {
            setOutputAtIndex(index, getB(${t}));
          }
        }
      }
    `}};function ede(e){let{inputs:t,backend:a}=e,{condition:r,t:n,e:s}=t,i=new Que(r.shape.length,n.shape,n.shape.length);return a.runWebGPUProgram(i,[r,n,s],$a(n.dtype,s.dtype))}var tde={kernelName:Jo,backendName:"webgpu",kernelFunc:ede},ade=ya({opType:19}),rde={kernelName:ki,backendName:"webgpu",kernelFunc:ade},nde=ya({opType:17}),sde={kernelName:wi,backendName:"webgpu",kernelFunc:nde},ide=ya({opType:18}),ode={kernelName:el,backendName:"webgpu",kernelFunc:ide},EI=La({opSnippet:2,cpuKernelImpl:Hie,supportsComplex:!0}),lde={kernelName:Ni,backendName:"webgpu",kernelFunc:EI};function ude(e){let{inputs:t,backend:a,attrs:r}=e,{logits:n}=t,{dim:s}=r,i=w.parseAxisParam([s],n.shape),o=SI({inputs:{x:n},backend:a,attrs:{reductionIndices:i,keepDims:!1}}),l=N.expandShapeToKeepDim(o.shape,i),d=Ve({inputs:{x:o},backend:a,attrs:{shape:l}}),u=EI({inputs:{a:n,b:d},backend:a}),h=vI({inputs:{x:u},backend:a}),p=oA({inputs:{x:h},backend:a,attrs:{axis:i,keepDims:!1}}),c=Ve({inputs:{x:p},backend:a,attrs:{shape:l}}),f=NI({inputs:{a:h,b:c},backend:a});return a.disposeData(o.dataId),a.disposeData(d.dataId),a.disposeData(u.dataId),a.disposeData(h.dataId),a.disposeData(p.dataId),a.disposeData(c.dataId),f}var dde={kernelName:Ti,backendName:"webgpu",kernelFunc:ude},hde=e=>{let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{blockShape:s,paddings:i}=r;w.assert(n.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");let o=s.reduce((y,A)=>y*A),l=[[0,0]];l.push(...i);for(let y=1+s.length;y<n.shape.length;++y)l.push([0,0]);let d=[],u=CI({inputs:{x:n},backend:a,attrs:{paddings:l,constantValue:0}}),h=N.getReshaped(u.shape,s,o,!1),p=N.getPermuted(h.length,s.length,!1),c=N.getReshapedPermuted(u.shape,s,o,!1),f=Ve({inputs:{x:u},backend:a,attrs:{shape:h}}),m=xl({inputs:{x:f},backend:a,attrs:{perm:p}}),g=Ve({inputs:{x:m},backend:a,attrs:{shape:c}});return d.push(u),d.push(f),d.push(m),d.forEach(y=>a.disposeData(y.dataId)),g},pde={kernelName:tl,backendName:"webgpu",kernelFunc:hde},cde=class{constructor(e,t,a,r,n,s,i=!0){this.variableNames=["updates","indices","defaultValue"],this.workGroupSize=[64,1,1],this.workPerThread=4,this.size=!0,this.outputShape=s,this.dispatchLayout=Ge(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let o=t>1;this.shaderKey=`scatter_${a}_${r}_${o}`;let l=pa(n.length);this.uniforms=`updateSize : i32; sliceDim : i32; strides: ${l};`;let d="";a===1?d="i":a===2&&(d="i, j"),this.indicesSnippet=`getIndices(${d})`;let u="";r===1?u="i":r===2&&(u="i, coords[1]"),this.updatesSnippet=`getUpdates(${u})`,this.strideString=o?"uniforms.strides[j]":"uniforms.strides"}getUserCode(){return`
      ${Xe()}

        let globalIndex = index * ${this.workPerThread};
        if (globalIndex < uniforms.size) {
          var sum = vec4<f32>(0.0);
          var found = vec4<bool>(false);
          for (var i = 0; i < uniforms.updateSize; i = i + 1) {
            var flattenedIndex = 0;
            for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
              let indexInside = i32(round(${this.indicesSnippet}));
              flattenedIndex = flattenedIndex + indexInside * ${this.strideString};
            }
            for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {
              let curIndex = globalIndex + innerIndex;
              let coords = getCoordsFromIndex(curIndex);
              if (flattenedIndex == coords[0]) {
                sum[innerIndex] = sum[innerIndex] + ${this.updatesSnippet};
                found[innerIndex] = true;
              }
            }
          }
          for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {
            let curIndex = globalIndex + innerIndex;
            if (curIndex < uniforms.size)
            {
              setOutputAtIndex(curIndex, mix(getDefaultValue(), sum[innerIndex], f32(found[innerIndex])));
            }
          }
        }
      }`}};function fde(e){let{inputs:t,backend:a,attrs:r}=e,{sparseIndices:n,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:d,strides:u,outputSize:h}=N.calculateShapes(s,n,o),p=!1,c=[{type:"int32",data:[d]},{type:"int32",data:[l]},{type:"int32",data:u}],f=new cde(d,l,n.shape.length,s.shape.length,u,[h,1],p),m=a.runWebGPUProgram(f,[s,n,i],s.dtype,c),g=Ve({inputs:{x:m},backend:a,attrs:{shape:o}});return a.disposeData(m.dataId),g}var mde={kernelName:Eh,backendName:"webgpu",kernelFunc:fde};function gde(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{numOrSizeSplits:s,axis:i}=r,o=w.parseAxisParam(i,n.shape)[0],l=N.prepareSplitSize(n,s,o),d=n.shape.length,u=new Array(d).fill(0),h=n.shape.slice();return l.map(p=>{let c=[...h];c[o]=p;let f=fd({inputs:{x:n},backend:a,attrs:{begin:u,size:c}});return u[o]+=p,f})}var yde={kernelName:al,backendName:"webgpu",kernelFunc:gde},Ade=ya({opType:20}),xde={kernelName:Ii,backendName:"webgpu",kernelFunc:Ade},bde={kernelName:Ku,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{x:a}=e,r=t,n=new up(a.shape,21);return r.runWebGPUProgram(n,[a],a.dtype)}},vde=La({opSnippet:11}),wde={kernelName:Ci,backendName:"webgpu",kernelFunc:vde},kde=class{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ge(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let t=pa(this.outputShape.length);this.uniforms=`begin : ${t};  strides : ${t}; `,this.shaderKey="stridedSlice"}getUserCode(){let e=this.outputShape.length,t="";if(e===1)t="coords * uniforms.strides + uniforms.begin";else{let a=0;t=this.outputShape.map((r,n)=>(a++,this.outputShape.length===1?`coords * uniforms.strides[${n}] + uniforms.begin[${n}]`:`coords[${a-1}] * uniforms.strides[${n}] + uniforms.begin[${n}]`)).join(",")}return`
       ${Xe()}
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index);
           setOutputAtIndex(index, getX(${t}));
         }
       }
     `}};function Ide(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:d,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:p}=r,{finalShapeSparse:c,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:A,end:x,strides:b}=Ft.sliceInfo(n.shape,s,i,o,l,d,u,h,p),v;if(m)v=Ve({inputs:{x:n},backend:a,attrs:{shape:f}});else if(g||y){w.assert(n.shape.length>=1,()=>`Input must have rank at least 1, got: ${n.shape.length}`);let T=Ft.computeOutShape(A,x,b),C=fd({inputs:{x:n},backend:a,attrs:{begin:A,size:T}});v=Ve({inputs:{x:C},backend:a,attrs:{shape:f}}),a.disposeData(C.dataId)}else if(a.shouldExecuteOnCPU([n])){let T=a.readSync(n.dataId),C=Le(n.shape,n.dtype,T),E=Gie(c,C,b,A);v=a.makeTensorInfo(f,n.dtype,E.values)}else{let T=new kde(c),C=[{type:"int32",data:A},{type:"int32",data:b}],E=a.runWebGPUProgram(T,[n],n.dtype,C);v=Ve({inputs:{x:E},backend:a,attrs:{shape:f}}),a.disposeData(E.dataId)}return v}var Sde={kernelName:rl,backendName:"webgpu",kernelFunc:Ide};function Tde(e){let{inputs:t,backend:a,attrs:r}=e,{separator:n,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:d}=r,{data:u,dataSplits:h}=t,p=a.readSync(u.dataId),c=a.readSync(h.dataId),[f,m]=jie(p,c,n,s,i,o,l,d);return[a.makeTensorInfo([f.length],"string",f),a.makeTensorInfo(h.shape,"int32",m)]}var Cde={kernelName:Rh,backendName:"webgpu",kernelFunc:Tde},Nde=ya({opType:22}),Ede={kernelName:Ei,backendName:"webgpu",kernelFunc:Nde},Rde=class{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[64,1,1],this.size=!0;let a=new Array(e.length);for(let r=0;r<a.length;r++)a[r]=e[r]*t[r];this.outputShape=a,this.dispatchLayout=Ge(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){let e=Fde(this.rank,"uniforms.");return`
      ${Xe()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${e}));
        }
      }
    `}};function Fde(e,t=""){if(e>=5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`(resRC % ${t}aShape)`;let a=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let n=0;n<e;n++)r.push(`(${a[n]} % ${t}aShape[${n}])`);return r.join()}function $de(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{reps:s}=r;if(a.shouldExecuteOnCPU([n])||n.dtype==="string"||n.shape.length>=5){let o=a.readSync(n.dataId),l=n.dtype==="string"?o.map(h=>w.decodeString(h)):o,d=Le(n.shape,n.dtype,l),u=qie(d,s);return a.makeTensorInfo(u.shape,u.dtype,u.values)}let i=new Rde(n.shape,s);return a.runWebGPUProgram(i,[n],n.dtype)}var Mde={kernelName:Kn,backendName:"webgpu",kernelFunc:$de},_de=class{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ge(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`inputSize : i32; firstPass : i32; negativeInf : f32;
        dir : i32; inc : i32;`,this.shaderKey="swap"}getUserCode(){return`
        ${Xe()}
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}},zde=class{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ge(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms="inputSize : i32; firstPass : i32; k : i32;",this.shaderKey="merge"}getUserCode(){return`
        ${Xe()}
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}};function Ll(e,t){t!==null&&e.disposeData(t.dataId)}function bb(e){let t=1;for(;t<e;)t*=2;return t}function Ode(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{k:s,sorted:i}=r,o=n.shape,l=o[o.length-1];if(a.shouldExecuteOnCPU([n])){let b=a.readSync(n.dataId),[v,T]=Xie(b,o,n.dtype,s,i);return[a.makeTensorInfo(v.shape,v.dtype,v.values),a.makeTensorInfo(T.shape,T.dtype,T.values)]}if(s===0)return o[o.length-1]=0,[a.makeTensorInfo(o,n.dtype,[]),a.makeTensorInfo(o,"int32",[])];if(l===1)return[n,md({attrs:{shape:o,dtype:"int32",value:0},backend:a})];let d=w.sizeFromShape(o)/l,u=Ve({inputs:{x:n},attrs:{shape:[d,l]},backend:a}),h=bb(s),p=bb(l),c=null,f=()=>c===null?[u,u]:[u,c],m=(b,v,T)=>{let C=f(),E=new _de(T),R=[{type:"int32",data:[l]},{type:"int32",data:[c===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[b]},{type:"int32",data:[v]}],z=c;c=a.runWebGPUProgram(E,C,"int32",R),Ll(a,z)};for(let b=1;b<h;b*=2){let v=b*2;for(let T=b;T>=1;T/=2)m(v,T,[d,p])}for(let b=p;b>h;b/=2){let v=f(),T=new zde([d,b/2]),C=[{type:"int32",data:[l]},{type:"int32",data:[c===null?1:0]},{type:"int32",data:[h]}],E=c;c=a.runWebGPUProgram(T,v,"int32",C),Ll(a,E);let R=h/2,z=R*2;for(let F=R;F>=1;F/=2)m(z,F,c.shape)}let g=c;c=fd({inputs:{x:c},backend:a,attrs:{begin:0,size:[d,s]}}),Ll(a,g);let y=II({inputs:{x:u,indices:c},backend:a,attrs:{axis:1,batchDims:1}});Ll(a,u);let A=o.slice(0,-1);A.push(s),g=c,c=Ve({inputs:{x:c},attrs:{shape:A},backend:a}),Ll(a,g);let x=y;return y=Ve({inputs:{x:y},attrs:{shape:A},backend:a}),Ll(a,x),[y,c]}var Dde={kernelName:sl,backendName:"webgpu",kernelFunc:Ode},Pde=class{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32; fillModeId : i32; fillValue : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ge(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${Xe()}
            if (index < uniforms.size) {
              let coords = getCoordsFromIndex(index);
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutputAtIndex(index, outputValue);
            }
          }
        `}};function Lde(e){let{inputs:t,backend:a,attrs:r}=e,{image:n,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:d}=r,[u,h,p,c]=n.shape,[f,m]=d!=null?d:[h,p],g=[u,f,m,c],y=new Pde(g),A=i==="nearest"?1:2,x;switch(o){case"constant":x=1;break;case"reflect":x=2;break;case"wrap":x=3;break;case"nearest":x=4;break;default:x=1;break}let b=[{type:"int32",data:[A]},{type:"int32",data:[x]},{type:"float32",data:[l]}];return a.runWebGPUProgram(y,[n,s],"float32",b)}var Wde={kernelName:il,backendName:"webgpu",kernelFunc:Lde};function Bde(e){let{inputs:t,backend:a,attrs:r}=e,{value:n}=t,{axis:s}=r;s<0&&(s+=n.shape.length);let i=n,o=i.shape.length,l=n.shape[s],d=new Array(o-1),u=0;for(let m=0;m<o;m++)m!==s&&(d[u++]=i.shape[m]);let h=[],p=new Array(o).fill(0),c=i.shape.slice();c[s]=1;let f=new Array(l);for(let m=0;m<f.length;m++){p[s]=m;let g=fd({inputs:{x:i},backend:a,attrs:{begin:p,size:c}}),y=Ve({inputs:{x:g},backend:a,attrs:{shape:d}});f[m]=y,h.push(g)}return h.forEach(m=>a.disposeData(m.dataId)),f}var Vde={kernelName:ol,backendName:"webgpu",kernelFunc:Bde},Ude=[fie,Yie,Qie,aoe,loe,doe,poe,foe,xoe,koe,Soe,Eoe,Aie,Moe,Boe,joe,qoe,Koe,Joe,tle,rle,lle,dle,ple,cle,fle,gle,Ale,ble,Tle,wle,Ile,Ele,Fle,Mle,Ole,Lle,Ble,Ule,yie,Foe,jle,qle,Kle,Yle,Qle,tue,aue,nue,iue,lue,due,pue,fue,nle,gue,Aue,bue,boe,wue,Iue,Tue,Nue,Rue,$ue,_ue,voe,zue,Due,Lue,pie,Vue,jue,que,Kue,Jue,tde,rde,sde,ode,yoe,Sde,Cde,dde,pde,mde,yde,xde,bde,wde,lde,ile,Ede,Mde,Dde,Wde,ioe,Vde,vue];for(let e of Ude)An(e);var Gde=class{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireUploadBuffer(e,t){return this.acquireBuffer(e,t,!0)}acquireBuffer(e,t,a=!1){let r=vb(e,t);if(this.freeBuffers.has(r)||this.freeBuffers.set(r,[]),this.usedBuffers.has(r)||this.usedBuffers.set(r,[]),this.numBytesUsed+=e,this.numUsedBuffers++,this.freeBuffers.get(r).length>0){this.numFreeBuffers--;let s=this.freeBuffers.get(r).shift();return this.usedBuffers.get(r).push(s),s}this.numBytesAllocated+=e;let n=this.device.createBuffer({mappedAtCreation:a,size:e,usage:t});return this.usedBuffers.get(r).push(n),n}releaseBuffer(e,t,a){if(this.freeBuffers.size===0)return;let r=vb(t,a);this.freeBuffers.has(r)||this.freeBuffers.set(r,[]),this.freeBuffers.get(r).push(e),this.numFreeBuffers++,this.numUsedBuffers--;let n=this.usedBuffers.get(r),s=n.indexOf(e);if(s<0)throw new Error("Cannot release a buffer that was never provided by this buffer manager");n.splice(s,1),this.numBytesUsed-=t}releaseUploadBuffer(e,t,a){e.mapAsync(GPUMapMode.WRITE).then(()=>{this.releaseBuffer(e,t,a)},r=>{})}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach((e,t)=>{e.forEach(a=>{a.destroy()})}),this.usedBuffers.forEach((e,t)=>{e.forEach(a=>{a.destroy()})}),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function vb(e,t){return`${e}_${t}`}var RI=class{constructor(){this.outputShape=[0],this.variableNames=[],this.workGroupSize=[256,1,1],this.lastUniformData=[],this.inputTexture=null,this.layout=null,this.lastPixelSize={width:0,height:0},this.disposed=!1,this.shaderKey="fromPixels",this.useImport=!1}updateOutputShape(e){w.arraysEqual(this.outputShape,e)||(this.outputShape=e,this.workPerThread=e[2],this.dispatchLayout=Ge(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]))}makeFromPixelsSource(){let e=this.useImport?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      @binding(1) @group(0) var src: ${this.useImport?"texture_external":"texture_2d<f32>"};

      ${Xe()}
        let flatIndexBase = index * uniforms.numChannels;
        for (var i = 0; i < uniforms.numChannels; i = i + 1) {
          let flatIndex = flatIndexBase + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndexBase);
            let values = ${e};
            result.numbers[flatIndex] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}getUserCode(){return this.makeFromPixelsSource()}setPipeline(e){this.pipeline=e}setUniform(e,t){if(!this.uniform){let a=e.createBuffer({size:t.length*4,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});this.uniform=a}!t||t.length===this.lastUniformData.length&&t.every((a,r)=>a===this.lastUniformData[r])||(e.queue.writeBuffer(this.uniform,0,new Uint32Array(t)),this.lastUniformData=t)}makeInputTexture(e,t,a){return(!this.inputTexture||this.lastPixelSize.width!==t||this.lastPixelSize.height!==a)&&(this.inputTexture&&this.inputTexture.destroy(),this.inputTexture=e.createTexture({size:[t,a],format:"rgba8unorm",usage:GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}),this.lastPixelSize.width=t,this.lastPixelSize.height=a),this.inputTexture}dispose(){this.disposed||(this.uniform&&this.uniform.destroy(),this.inputTexture&&this.inputTexture.destroy(),this.disposed=!0)}getLayout(e){return this.layout===null&&(this.layout=this.createTextureLayout(e)),this.layout}createTextureLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}),t.push({binding:1,visibility:GPUShaderStage.COMPUTE,texture:{}}),t.push({binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{}});let a=e.createBindGroupLayout({entries:t}),r=e.createPipelineLayout({bindGroupLayouts:[a]});return{bindGroupLayout:a,pipelineLayout:r}}},jde=class extends RI{constructor(){super(...arguments);this.layout=null,this.useImport=!0}getUserCode(){return this.makeFromPixelsSource()}getLayout(e){return this.layout===null&&(this.layout=this.createTextureImportLayout(e)),this.layout}createTextureImportLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}),t.push({binding:1,visibility:GPUShaderStage.COMPUTE,externalTexture:{}}),t.push({binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{}});let a=e.createBindGroupLayout({entries:t}),r=e.createPipelineLayout({bindGroupLayouts:[a]});return{bindGroupLayout:a,pipelineLayout:r}}},Hde=J().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),FI=class extends vu{constructor(e,t=!1){super();if(this.commandQueueOwnedIds=new WeakSet,this.tensorDisposalQueue=[],this.uniformDisposalQueue=[],this.stagingDisposalQueue=[],this.disposed=!1,this.uploadWaitMs=0,this.downloadWaitMs=0,this.dispatchNumberInEncoder=0,!nA())throw new Error("WebGPU is not supported on this device");this.layoutCache={},this.pipelineCache={},this.device=e,this.queue=e.queue,this.currentCommandEncoder=null,this.currentComputePass=null,this.supportTimeQuery=t,this.bufferManager=new Gde(this.device),this.tensorMap=new fh(this,sr()),this.supportTimeQuery&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2})),J().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}nextDataId(){return FI.nextDataId++}floatPrecision(){return 32}defaultGpuBufferUsage(){return GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST}flushDisposalQueue(){this.tensorDisposalQueue.forEach(e=>{this.maybeReleaseBuffer(e),this.tensorMap.delete(e)}),this.uniformDisposalQueue.forEach(e=>this.bufferManager.releaseBuffer(e.buffer,e.byteSize,e.usage)),this.stagingDisposalQueue.forEach(e=>this.bufferManager.releaseUploadBuffer(e.buffer,e.byteSize,e.usage)),this.tensorDisposalQueue=[],this.uniformDisposalQueue=[],this.stagingDisposalQueue=[]}disposeData(e,t=!1){if(this.tensorMap.has(e)){let a=this.tensorMap.get(e);if(a.refCount--,!t&&a.refCount>0)return!1;if(this.commandQueueOwnedIds.has(e))return this.tensorDisposalQueue.push(e),!1;this.maybeReleaseBuffer(e);let{complexTensorInfos:r}=this.tensorMap.get(e);r!=null&&(this.disposeData(r.real.dataId,!0),this.disposeData(r.imag.dataId,!0)),this.tensorMap.delete(e)}return!0}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}getBufferManager(){return this.bufferManager}acquireBuffer(e,t=this.defaultGpuBufferUsage()){return this.bufferManager.acquireBuffer(e,t)}maybeReleaseBuffer(e){let t=this.tensorMap.get(e);t!=null&&t.bufferInfo.buffer!=null&&(this.bufferManager.releaseBuffer(t.bufferInfo.buffer,t.bufferInfo.byteSize,t.bufferInfo.usage),t.bufferInfo.buffer=null)}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){let t=this.tensorMap.get(e);t.refCount++}decRef(e){if(this.tensorMap.has(e)){let t=this.tensorMap.get(e);t.refCount--}}write(e,t,a){if(a==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let r={id:this.nextDataId()},n=w.sizeFromShape(t)*Pg(a);return this.tensorMap.set(r,{dtype:a,values:e,bufferInfo:{byteSize:n,usage:this.defaultGpuBufferUsage()},refCount:1}),r}move(e,t,a,r,n){if(r==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let s=w.sizeFromShape(a)*Pg(r);this.tensorMap.set(e,{dtype:r,values:t,bufferInfo:{byteSize:s,usage:this.defaultGpuBufferUsage()},refCount:n})}submitQueue(){this.ensureComputePassEnded(),this.queue.submit([this.currentCommandEncoder.finish()]),this.currentCommandEncoder=null,this.dispatchNumberInEncoder=0,this.commandQueueOwnedIds=new WeakSet,this.flushDisposalQueue()}getBuffer(e){return this.uploadToGPU(e),this.tensorMap.get(e).bufferInfo.buffer}getFromPixelsProgram(e){switch(e){case"copyExternal":return this.fromPixelProgram||(this.fromPixelProgram=new RI),this.fromPixelProgram;case"import":return this.fromPixelImportProgram||(this.fromPixelImportProgram=new jde),this.fromPixelImportProgram;default:w.assert(!1,()=>"Unsupported fromPixels shape");return}}ensureCommandEncoderReady(){this.currentCommandEncoder||(this.currentCommandEncoder=this.device.createCommandEncoder())}ensureComputePassEnded(){this.currentComputePass&&(this.currentComputePass.endPass(),this.currentComputePass=null)}getComputePass(){return this.currentComputePass||(this.currentComputePass=this.currentCommandEncoder.beginComputePass()),this.currentComputePass}async getBufferData(e){if(e.values!=null)return e.values;let t=this.acquireBuffer(e.bufferInfo.byteSize,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e.bufferInfo.buffer,0,t,0,e.bufferInfo.byteSize),this.submitQueue(),await t.mapAsync(GPUMapMode.READ);let a=t.getMappedRange().slice(0);return t.unmap(),t!=null&&this.bufferManager.releaseBuffer(t,e.bufferInfo.byteSize,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ),J().getBool("WEBGPU_USE_PROFILE_TOOL")&&(w.assert(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),a}convertAndCacheOnCPU(e,t){let a=this.tensorMap.get(e);return this.maybeReleaseBuffer(e),a.values=t,a.values}readSync(e){let t=this.tensorMap.get(e),{values:a}=t;if(a==null)throw new Error("WebGPU readSync is only available for CPU-resident tensors.");return a}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);let t=this.tensorMap.get(e),{values:a}=t;if(a!=null)return this.convertAndCacheOnCPU(e,a);let r;if(t.dtype==="complex64"){let n=await Promise.all([this.read(t.complexTensorInfos.real.dataId),this.read(t.complexTensorInfos.imag.dataId)]),s=n[0],i=n[1];r=N.mergeRealAndImagArrays(s,i)}else{let n=await this.getBufferData(t);r=oI(n,t.dtype)}return this.convertAndCacheOnCPU(e,r),r}bufferSync(e){let t=this.readSync(e.dataId),a=t;if(e.dtype==="string")try{a=t.map(r=>w.decodeString(r))}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Le(e.shape,e.dtype,a)}async time(e){let t=this.activeTimers,a=[],r=!1;this.programTimersStack==null?(this.programTimersStack=a,r=!0):this.activeTimers.push(a),this.activeTimers=a,e();let n=w.flatten(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),s=w.flatten(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=t,r&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},o=await Promise.all(n);return i.kernelMs=w.sum(o),i.getExtraProfileInfo=()=>o.map((l,d)=>({name:s[d],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,i}getAndSavePipeline(e,t){return e in this.pipelineCache||(this.pipelineCache[e]=t()),this.pipelineCache[e]}makeTensorInfo(e,t,a){let r;if(t==="string"&&a!=null&&a.length>0&&w.isString(a[0])){let n=a.map(s=>w.encodeString(s));r=this.write(n,e,t)}else r=this.write(a,e,t);return{dataId:r,shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;let t=this.tensorMap.get(e.dataId);return{offset:0,size:t.bufferInfo.byteSize,buffer:t.bufferInfo.buffer}}async getQueryTime(e){return this.supportTimeQuery?this.getTimeFromQuerySet(e):0}uploadToGPU(e){let t=this.tensorMap.get(e);if(t.bufferInfo.buffer==null&&(t.bufferInfo.buffer=this.acquireBuffer(t.bufferInfo.byteSize),t.values)){let a=this.bufferManager.acquireUploadBuffer(t.bufferInfo.byteSize,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC),r=a.getMappedRange();t.dtype==="int32"||t.dtype==="bool"?new Int32Array(r).set(t.values):new Float32Array(r).set(t.values),a.unmap(),this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(a,0,t.bufferInfo.buffer,0,t.bufferInfo.byteSize);let n={byteSize:t.bufferInfo.byteSize,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,buffer:a};this.stagingDisposalQueue.push(n)}}makeUniforms(e){let t=0,a=[];e.forEach(s=>{s.data.length===0&&(s.data=[1]);let i;switch(s.data.length){case 1:i=4;break;case 2:i=8;break;case 3:i=16;break;case 4:i=16;break;default:w.assert(!1,()=>`Unsupported ${s.data.length}D shape`)}t=Math.ceil(t/i)*i,a.push(t),t+=s.data.length*4});let r=new ArrayBuffer(t);e.forEach((s,i)=>{let o=a[i];s.type==="int32"?new Int32Array(r,o,s.data.length).set(s.data):s.type==="uint32"?new Uint32Array(r,o,s.data.length).set(s.data):new Float32Array(r,o,s.data.length).set(s.data)});let n=this.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);return this.queue.writeBuffer(n,0,r,0,t),{offset:0,size:t,buffer:n}}createLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}});for(let n=0;n<e;n++)t.push({binding:n+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"read-only-storage"}});t.push({binding:e+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"uniform"}});let a=this.device.createBindGroupLayout({entries:t}),r=this.device.createPipelineLayout({bindGroupLayouts:[a]});return{bindGroupLayout:a,pipelineLayout:r}}getCachedOrCreateLayout(e){return e in this.layoutCache||(this.layoutCache[e]=this.createLayout(e)),this.layoutCache[e]}runWebGPUProgram(e,t,a,r,n){if(!n){if(n=this.makeTensorInfo(e.outputShape,a),w.sizeFromShape(n.shape)===0){let C=this.tensorMap.get(n.dataId);return C.values=w.getTypedArrayFromDType(n.dtype,0),n}this.uploadToGPU(n.dataId)}let s=[{type:"float32",data:[NaN]}],i=t.concat(n).map(C=>C.shape),o="int32";i.map(C=>{s.push({type:o,data:C})});let l=w.computeStrides(n.shape);if(s.push({type:o,data:l}),e.size){let C=w.sizeFromShape(e.outputShape);s.push({type:o,data:[e.isVec4?C/4:C]})}r&&(s=[...s,...r]);let d=this.makeUniforms(s),u=t.map((C,E)=>{if(C.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(C.dataId),{dtype:this.tensorMap.get(C.dataId).dtype,shape:C.shape,name:e.variableNames[E]}}),h=u.map(C=>C.dtype).concat(n.dtype),p=u.map(C=>N.getBroadcastDims(C.shape,n.shape)),c=u.map(C=>w.arraysEqual(C.shape,n.shape)).join("_"),f=p.map(C=>C.join("_")).join(";"),m=kI(e,i,h,f,c),{bindGroupLayout:g,pipelineLayout:y}=this.getCachedOrCreateLayout(e.variableNames.length),A=this.getAndSavePipeline(m,()=>wI(this.device,e,y,u,n)),x=this.activeTimers!=null,b=Sle(this.device,g,t.map(C=>this.tensorToBinding(C)),this.tensorToBinding(n),d);this.ensureCommandEncoderReady();let v=this.getComputePass();x&&this.supportTimeQuery&&v.writeTimestamp(this.querySet,0),v.setPipeline(A),v.setBindGroup(0,b),v.dispatch(e.dispatch[0],e.dispatch[1],e.dispatch[2]),x&&this.supportTimeQuery&&v.writeTimestamp(this.querySet,1),this.dispatchNumberInEncoder++,t.forEach(C=>{this.commandQueueOwnedIds.add(C.dataId)}),this.commandQueueOwnedIds.add(n.dataId);let T={byteSize:d.size,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM,buffer:d.buffer};return this.uniformDisposalQueue.push(T),J().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchNumberInEncoder&&this.submitQueue(),x&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)}),n}runFromPixelsProgram(e,t,a,r,n){let s=this.device.createBindGroup({layout:a.bindGroupLayout,entries:[{binding:0,resource:{buffer:t}},{binding:1,resource:r},{binding:2,resource:{buffer:e.uniform}}]});this.ensureCommandEncoderReady();let i=this.getComputePass(),o=this.activeTimers!=null;o&&this.supportTimeQuery&&i.writeTimestamp(this.querySet,0),i.setPipeline(e.pipeline),i.setBindGroup(0,s),i.dispatch(e.dispatch[0],e.dispatch[1],e.dispatch[2]),o&&this.supportTimeQuery&&i.writeTimestamp(this.querySet,1),this.commandQueueOwnedIds.add(n),this.submitQueue(),o&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)})}async getTimeFromQuerySet(e){let t=this.acquireBuffer(16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),a=this.acquireBuffer(16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.resolveQuerySet(e,0,2,t,0),this.currentCommandEncoder.copyBufferToBuffer(t,0,a,0,16),this.submitQueue(),await a.mapAsync(GPUMapMode.READ);let r=new BigUint64Array(a.getMappedRange()),n=Number(r[1]-r[0]);return a.unmap(),this.bufferManager.releaseBuffer(a,16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST),this.bufferManager.releaseBuffer(t,16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),n/1e6}shouldExecuteOnCPU(e,t=Hde){return J().getBool("WEBGPU_CPU_FORWARD")&&e.every(a=>this.tensorMap.get(a.dataId).bufferInfo.buffer==null&&w.sizeFromShape(a.shape)<t)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDisposalQueue.length}dispose(){this.disposed||(this.bufferManager.dispose(),this.fromPixelProgram&&this.fromPixelProgram.dispose(),this.fromPixelImportProgram&&this.fromPixelImportProgram.dispose(),this.disposed=!0)}},lA=FI;lA.nextDataId=0;var $I={};ze($I,{WebGPUBackend:()=>lA,webgpu_util:()=>sI});nA()&&Zu("webgpu",async()=>{J().set("CHECK_COMPUTATION_FOR_ERRORS",!1);let e={powerPreference:J().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},t=await navigator.gpu.requestAdapter(e),a={},r=t.features.has("timestamp-query");r?a={requiredFeatures:["timestamp-query"]}:console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --disable-dawn-features=disallow_unsafe_apis then try again. Or zero will shown for the kernel time when profiling mode isenabled. Using performance.now is not workable for webgpu sinceit doesn't support synchronously to read data from GPU.");let n=await t.requestDevice(a);return new lA(n,r)},3);var jt=(e=>(e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64",e))(jt||{}),B0=(e=>(e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu",e))(B0||{}),MI;function qde(e){MI=e.wasm.cwrap(Ss,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function Xde(e){let{inputs:t,backend:a,attrs:r}=e,{a:n,b:s,bias:i,preluActivationWeights:o}=t;if(n.dtype!=="float32"||s.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:l,transposeB:d,activation:u,leakyreluAlpha:h}=r,p=a.dataIdMap.get(n.dataId).id,c=a.dataIdMap.get(s.dataId).id,f=0;if(i!=null){let E=a.dataIdMap.get(i.dataId);if(E.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${E.shape.length}.`);f=E.id}let m=o==null?0:a.dataIdMap.get(o.dataId).id,g=B0[u];if(g==null)throw new Error(`${u} activation not yet supported for FusedConv2D in the wasm backend.`);let y=l?n.shape[2]:n.shape[1],A=d?s.shape[1]:s.shape[2],x=dl.assertAndGetBroadcastShape(n.shape.slice(0,-2),s.shape.slice(0,-2)),b=a.makeOutput([...x,y,A],n.dtype),v=a.dataIdMap.get(b.dataId).id,T=new Uint8Array(new Int32Array(n.shape).buffer),C=new Uint8Array(new Int32Array(s.shape).buffer);return MI(p,T,n.shape.length,c,C,s.shape.length,l,d,g,f,m,h||0,v),b}var Kde={kernelName:Ss,backendName:"wasm",setupFunc:qde,kernelFunc:Xde};function Aa(e,t){let a;function r(s){a=s.wasm.cwrap(e,null,["number","number","number"])}function n(s){let{backend:i,inputs:{x:o}}=s,l=i.dataIdMap.get(o.dataId).id,d=i.makeOutput(o.shape,t||o.dtype),u=i.dataIdMap.get(d.dataId).id;return w.sizeFromShape(d.shape)===0||a(l,jt[o.dtype],u),d}return{kernelName:e,backendName:"wasm",setupFunc:r,kernelFunc:n}}var Zde=Aa(Io);function Wa(e,t,a){let r;function n(i){r=i.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])}function s(i){let{backend:o,inputs:l}=i,{a:d,b:u}=l,h=o.dataIdMap.get(d.dataId).id,p=o.dataIdMap.get(u.dataId).id,c=a!=null?a:d.dtype,f=N.assertAndGetBroadcastShape(d.shape,u.shape),m=o.makeOutput(f,c);if(w.sizeFromShape(f)===0)return m;let g=new Uint8Array(new Int32Array(d.shape).buffer),y=new Uint8Array(new Int32Array(u.shape).buffer),A=o.dataIdMap.get(m.dataId).id;return r(h,g,d.shape.length,p,y,u.shape.length,jt[d.dtype],A),m}return{kernelName:e,backendName:"wasm",setupFunc:n,kernelFunc:s}}var Yde=Wa(qn),_I;function Jde(e){_I=e.wasm.cwrap(Ws,null,["array","number","number","number"])}function Qde(e){let{inputs:t,backend:a}=e,r=a.makeOutput(t[0].shape,t[0].dtype);if(w.sizeFromShape(r.shape)===0)return r;let n=t.map(o=>a.dataIdMap.get(o.dataId).id),s=new Uint8Array(new Int32Array(n).buffer),i=a.dataIdMap.get(r.dataId).id;return _I(s,n.length,jt[r.dtype],i),r}var ehe={kernelName:Ws,backendName:"wasm",setupFunc:Jde,kernelFunc:Qde};function V0(e){let{inputs:{x:t},backend:a}=e,r=a.makeOutput(t.shape,t.dtype),n=a.typedArrayFromHeap(t);return a.typedArrayFromHeap(r).set(n),r}var the={kernelName:ni,backendName:"wasm",kernelFunc:V0},zI;function ahe(e){zI=e.wasm.cwrap(Ri,null,["number","array","number","number","number","array","number"])}function Au(e){let{inputs:t,backend:a,attrs:r}=e,[n,s]=nhe(t.x.shape,r.perm),i=!0;for(let f=0;f<s.length;f++)s[f]!==f&&(i=!1);let o=rhe(t.x.shape,r.perm),l={dataId:t.x.dataId,shape:n,dtype:t.x.dtype};if(i){let f=V0({inputs:t,backend:a});return f.shape=o,f}let d=a.makeOutput(o,l.dtype),u=a.dataIdMap.get(l.dataId).id,h=a.dataIdMap.get(d.dataId).id,p=new Uint8Array(new Int32Array(s).buffer),c=new Uint8Array(new Int32Array(l.shape).buffer);return zI(u,c,l.shape.length,jt[l.dtype],h,p,s.length),d}function rhe(e,t){let a=new Array(e.length);for(let r=0;r<a.length;r++)a[r]=e[t[r]];return a}function nhe(e,t){let a=[],r=[];for(let n=0;n<e.length;++n)e[n]!==1&&a.push(e[n]),e[t[n]]!==1&&r.push(t[n]);for(let n=0;n<r.length;++n){let s=-1;for(let i=0;i<r.length;++i)r[i]>=n&&(s===-1||r[s]>r[i])&&(s=i);r[s]=n}return[a,r]}var she={kernelName:Ri,backendName:"wasm",kernelFunc:Au,setupFunc:ahe};function Di(e,t,a){let r=e.shape,n=e.shape.length,s=w.parseAxisParam(t,r),i=s,o=N.getAxesPermutation(i,n),l=null,d=!1;if(o!=null){let u=new Array(n);for(let p=0;p<u.length;p++)u[p]=r[o[p]];i=N.getInnerMostAxes(i.length,n),l=Au({inputs:{x:e},attrs:{perm:o},backend:a});let h=a.dataIdMap.get(e.dataId).id;a.dataIdMap.get(l.dataId).id!==h&&(d=!0)}return{transposed:l,originalAxes:s,axes:i,inputWasTransposed:d}}var OI;function ihe(e){OI=e.wasm.cwrap(Su,null,["number, number, number"])}function ohe(e){let{backend:t,inputs:a,attrs:r}=e,{axis:n,keepDims:s}=r,{x:i}=a,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:d,axes:u,originalAxes:h,inputWasTransposed:p}=Di(i,n,t);if(p){let A=t.dataIdMap.get(d.dataId).id;l=d,o=A}let c=l.shape.length;N.assertAxesAreInnerMostDims("all",u,c);let[f,m]=N.computeOutAndReduceShapes(l.shape,u),g=w.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(w.sizeFromShape(l.shape)!==0){let A=t.dataIdMap.get(y.dataId).id;OI(o,g,A)}if(p&&t.disposeData(d.dataId),s){let A=N.expandShapeToKeepDim(y.shape,h);y.shape=A}return y}var lhe={kernelName:Su,backendName:"wasm",setupFunc:ihe,kernelFunc:ohe},DI;function uhe(e){DI=e.wasm.cwrap(Tu,null,["number, number, number"])}function dhe(e){let{backend:t,inputs:a,attrs:r}=e,{axis:n,keepDims:s}=r,{x:i}=a,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:d,axes:u,originalAxes:h,inputWasTransposed:p}=Di(i,n,t);if(p){let A=t.dataIdMap.get(d.dataId).id;l=d,o=A}let c=l.shape.length;N.assertAxesAreInnerMostDims("any",u,c);let[f,m]=N.computeOutAndReduceShapes(l.shape,u),g=w.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(w.sizeFromShape(l.shape)!==0){let A=t.dataIdMap.get(y.dataId).id;DI(o,g,A)}if(p&&t.disposeData(d.dataId),s){let A=N.expandShapeToKeepDim(y.shape,h);y.shape=A}return y}var hhe={kernelName:Tu,backendName:"wasm",setupFunc:uhe,kernelFunc:dhe},PI;function phe(e){PI=e.wasm.cwrap(Bs,null,["number","number","number","number","number"])}function che(e){let{backend:t,inputs:a,attrs:r}=e,{axis:n}=r,{x:s}=a,i=t.dataIdMap.get(s.dataId).id,o=i,l=s,{transposed:d,axes:u,inputWasTransposed:h}=Di(s,n,t);if(h){let y=t.dataIdMap.get(d.dataId).id;y!==i&&(l=d,o=y)}let p=l.shape.slice(0,-1),c=t.makeOutput(p,"int32"),f=t.dataIdMap.get(c.dataId).id,m=w.sizeFromShape(c.shape),g=l.shape[u[0]];return PI(o,jt[l.dtype],m,g,f),h&&t.disposeData(d.dataId),c}var fhe={kernelName:Bs,backendName:"wasm",kernelFunc:che,setupFunc:phe},LI;function mhe(e){LI=e.wasm.cwrap(Vs,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function ghe(e){let{inputs:t,attrs:a,backend:r}=e,n=t.x,s=r.dataIdMap.get(n.dataId).id,{filterSize:i,strides:o,pad:l,dimRoundingMode:d}=a,u=N.computePool2DInfo(n.shape,i,o,1,l,d),h=u.filterHeight,p=u.filterWidth,c=u.padInfo.top,f=u.padInfo.right,m=u.padInfo.bottom,g=u.padInfo.left,y=u.strideHeight,A=u.strideWidth,x=u.inChannels;if(u.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${u.dataFormat}'. Please use 'channelsLast'.`);if(u.dilationWidth!==1||u.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${u.dilationHeight}, ${u.dilationWidth}].`);let b=r.makeOutput(u.outShape,"float32"),v=r.dataIdMap.get(b.dataId).id;return LI(s,n.shape[0],n.shape[1],n.shape[2],h,p,c,f,m,g,y,A,x,v),b}var yhe={kernelName:Vs,backendName:"wasm",setupFunc:mhe,kernelFunc:ghe};function qa(e){let{inputs:t,attrs:a}=e,{x:r}=t,{shape:n}=a,s=w.sizeFromShape(r.shape),i=w.inferFromImplicitShape(n,s);return w.assert(s===w.sizeFromShape(i),()=>`new shape: ${i}, old shape: ${r.shape}. New shape and old shape must have the same number of elements.`),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:i,dtype:r.dtype}}var Ahe={kernelName:Xo,backendName:"wasm",kernelFunc:qa},WI;function xhe(e){WI=e.wasm.cwrap(Us,null,["number","array","number","number","array","number","number","number","number"])}function bhe(e){let{inputs:t,backend:a,attrs:r}=e,{a:n,b:s}=t,{transposeA:i,transposeB:o}=r;if(n.dtype!=="float32"||s.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let l=n.shape.length,d=s.shape.length,u=i?n.shape[l-2]:n.shape[l-1],h=o?s.shape[d-1]:s.shape[d-2],p=i?n.shape[l-1]:n.shape[l-2],c=o?s.shape[d-2]:s.shape[d-1],f=n.shape.slice(0,-2),m=s.shape.slice(0,-2),g=w.sizeFromShape(f),y=w.sizeFromShape(m),A=dl.assertAndGetBroadcastShape(n.shape.slice(0,-2),s.shape.slice(0,-2)).concat([p,c]);w.assert(u===h,()=>`Error in matMul: inner shapes (${u}) and (${h}) of Tensors with shapes ${n.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`);let x=i?[g,u,p]:[g,p,u],b=o?[y,c,h]:[y,h,c],v=qa({inputs:{x:n},backend:a,attrs:{shape:x}}),T=qa({inputs:{x:s},backend:a,attrs:{shape:b}}),C=a.dataIdMap.get(v.dataId).id,E=a.dataIdMap.get(T.dataId).id,R=i?v.shape[2]:v.shape[1],z=o?T.shape[1]:T.shape[2],F=Math.max(g,y),k=a.makeOutput([F,R,z],v.dtype),D=a.dataIdMap.get(k.dataId).id,_=new Uint8Array(new Int32Array(v.shape).buffer),P=new Uint8Array(new Int32Array(T.shape).buffer);return WI(C,_,v.shape.length,E,P,T.shape.length,i,o,D),a.disposeData(v.dataId),a.disposeData(T.dataId),k.shape=A,k}var vhe={kernelName:Us,backendName:"wasm",setupFunc:xhe,kernelFunc:bhe};function xo(e){let{inputs:{x:t},attrs:{begin:a,size:r},backend:n}=e,[s,i]=Ft.parseSliceParams(t,a,r),o=Ft.isSliceContinous(t.shape,s,i),l=n.readSync(t.dataId),d=n.makeOutput(i,t.dtype),u=w.computeStrides(t.shape),h=n.dataIdMap.get(d.dataId);if(o){let f=Ft.computeFlatOffset(s,u);return t.dtype==="string"?h.stringBytes=l.slice(f,f+w.sizeFromShape(i)):n.typedArrayFromHeap(d).set(l.subarray(f,f+w.sizeFromShape(i))),d}if(t.dtype==="string"){let f=jc(l,s,i,t.shape,t.dtype);return h.stringBytes=f,d}let p=n.typedArrayFromHeap(d),c=t.shape.length;if(c===2)whe(l,u[0],p,s,i);else if(c===3)khe(l,u[0],u[1],p,s,i);else if(c===4)Ihe(l,u[0],u[1],u[2],p,s,i);else{let f=jc(l,s,i,t.shape,t.dtype);p.set(f)}return d}function whe(e,t,a,r,n){let s=0,i=r[0],o=r[1],l=i+n[0];for(let d=i;d<l;d++){let u=d*t+o;a.set(e.subarray(u,u+n[1]),s),s+=n[1]}}function khe(e,t,a,r,n,s){let i=0,o=n[0],l=n[1],d=n[2],u=o+s[0],h=l+s[1];for(let p=o;p<u;p++)for(let c=l;c<h;c++){let f=p*t+c*a+d;r.set(e.subarray(f,f+s[2]),i),i+=s[2]}}function Ihe(e,t,a,r,n,s,i){let o=0,l=s[0],d=s[1],u=s[2],h=l+i[0],p=d+i[1],c=u+i[2],f=s[3];for(let m=l;m<h;m++)for(let g=d;g<p;g++)for(let y=u;y<c;y++){let A=m*t+g*a+y*r+f;n.set(e.subarray(A,A+i[3]),o),o+=i[3]}}var She={kernelName:Qo,backendName:"wasm",kernelFunc:xo};function The(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{blockShape:s,crops:i}=r,o=s.reduce((y,A)=>y*A),l=N.getReshaped(n.shape,s,o),d=N.getPermuted(l.length,s.length),u=N.getReshapedPermuted(n.shape,s,o),h=N.getSliceBeginCoords(i,s.length),p=N.getSliceSize(u,i,s.length),c=qa({inputs:{x:n},backend:a,attrs:{shape:l}}),f=Au({inputs:{x:c},backend:a,attrs:{perm:d}}),m=qa({inputs:{x:f},backend:a,attrs:{shape:u}}),g=xo({inputs:{x:m},backend:a,attrs:{begin:h,size:p}});return a.disposeData(c.dataId),a.disposeData(f.dataId),a.disposeData(c.dataId),g}var Che={kernelName:So,backendName:"wasm",kernelFunc:The};function pp(e){let{inputs:{x:t},attrs:{dtype:a},backend:r}=e,n=r.makeOutput(t.shape,a),s=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(n).set(s),n}var Nhe={kernelName:Gs,backendName:"wasm",kernelFunc:pp},Ehe=Aa(js),BI;function Rhe(e){BI=e.wasm.cwrap(Xn,null,["number","number","number","number"])}function Fhe(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{clipValueMin:s,clipValueMax:i}=r,o=a.dataIdMap.get(n.dataId).id,l=a.makeOutput(n.shape,n.dtype),d=a.dataIdMap.get(l.dataId).id;return BI(o,s,i,d),l}var $he={kernelName:Xn,backendName:"wasm",setupFunc:Rhe,kernelFunc:Fhe};function VI(e){let{inputs:t,backend:a}=e,r=w.parseAxisParam(e.attrs.axis,t[0].shape)[0],n=N.computeOutShape(t.map(c=>c.shape),r),s=t.filter(c=>w.sizeFromShape(c.shape)>0);if(s.length===1)return V0({inputs:{x:s[0]},backend:a});let i=a.makeOutput(n,t[0].dtype);if(w.sizeFromShape(n)===0)return i;let o=s.map(c=>c.shape);if(N.assertParamsConsistent(o,r),s[0].dtype==="string"){let c=s.map(x=>{let b=w.sizeFromShape(x.shape.slice(r));return qa({inputs:{x},backend:a,attrs:{shape:[-1,b]}})}),f=c.map(x=>({vals:a.readSync(x.dataId),shape:x.shape}));n=N.computeOutShape(c.map(x=>x.shape),1);let m=c[0].shape[0]===1,g=$y(f,n,t[0].dtype,m),y=N.computeOutShape(s.map(x=>x.shape),r);i.shape=y;let A=a.dataIdMap.get(i.dataId);return A.stringBytes=N.fromStringArrayToUint8(g),c.forEach(x=>a.disposeData(x.dataId)),i}let l=w.sizeFromShape(s[0].shape.slice(0,r)),d=0,u=s.map(c=>{let f=w.sizeFromShape(c.shape.slice(r));return d+=f,f}),h=s.map(c=>a.typedArrayFromHeap(c)),p=a.typedArrayFromHeap(i);for(let c=0;c<l;c++){let f=c*d;for(let m=0;m<h.length;m++){let g=u[m],y=c*g,A=h[m].subarray(y,y+g);p.set(A,f),f+=g}}return i}var Mhe={kernelName:To,backendName:"wasm",kernelFunc:VI},UI;function _he(e){UI=e.wasm.cwrap(Hs,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function zhe(e){let{inputs:t,attrs:a,backend:r}=e,{x:n,filter:s}=t,i=r.dataIdMap.get(n.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:d,pad:u,dimRoundingMode:h,dataFormat:p}=a,c=N.convertConv2DDataFormat(p),f=N.computeConv2DInfo(n.shape,s.shape,l,d,u,h,!1,c),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,A=f.padInfo.right,x=f.padInfo.bottom,b=f.padInfo.left,v=f.dilationHeight,T=f.dilationWidth,C=f.strideHeight,E=f.strideWidth,R=f.inChannels,z=f.outChannels,F=f.padInfo.type==="SAME"?1:0;if(f.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let k=r.makeOutput(f.outShape,"float32"),D=r.dataIdMap.get(k.dataId).id;return UI(i,n.shape[0],n.shape[1],n.shape[2],o,m,g,y,A,x,b,F,v,T,C,E,R,z,D),k}var Ohe={kernelName:Hs,backendName:"wasm",setupFunc:_he,kernelFunc:zhe},GI;function Dhe(e){GI=e.wasm.cwrap(qs,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Phe(e){let{backend:t,inputs:a,attrs:r}=e,{dy:n,filter:s}=a,{strides:i,pad:o,dataFormat:l,dimRoundingMode:d,inputShape:u}=r,h=1,p=N.convertConv2DDataFormat(l),c=N.computeConv2DInfo(u,s.shape,i,h,o,d,!1,p),{batchSize:f,filterHeight:m,filterWidth:g,inChannels:y,inHeight:A,inWidth:x,outChannels:b,outHeight:v,outWidth:T,strideHeight:C,strideWidth:E}=c,R=m-1-c.padInfo.top,z=g-1-c.padInfo.left,F=c.dataFormat==="channelsLast",k=w.computeStrides(c.inShape),D=w.computeStrides(n.shape),[_,P,j]=w.computeStrides(s.shape),L=k[0],B=F?k[1]:k[2],W=F?k[2]:1,ee=F?1:k[1],te=D[0],re=F?D[1]:D[2],Y=F?D[2]:1,ae=F?1:D[1],le=t.makeOutput(c.inShape,"float32"),xe=t.dataIdMap.get(le.dataId).id,ye=t.dataIdMap.get(n.dataId).id,ke=t.dataIdMap.get(s.dataId).id;return GI(ye,ke,f,m,g,A,x,y,v,T,b,C,E,R,z,_,P,j,L,B,W,ee,te,re,Y,ae,xe),le}var Lhe={kernelName:qs,backendName:"wasm",setupFunc:Dhe,kernelFunc:Phe},Whe=Aa(Xs),Bhe=Aa(Ks),jI=(e=>(e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest",e))(jI||{}),HI;function Vhe(e){HI=e.wasm.cwrap(No,null,["number","number","number","number","array","number","number","number","number","number"])}function Uhe(e){let{backend:t,inputs:a,attrs:r}=e,{method:n,extrapolationValue:s,cropSize:i}=r,{image:o,boxes:l,boxInd:d}=a,u=l.shape[0],[h,p]=i,c=[u,h,p,o.shape[3]],f=t.dataIdMap.get(o.dataId),m;o.dtype!=="float32"&&(m=pp({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),f=t.dataIdMap.get(m.dataId));let g=f.id,y=t.dataIdMap.get(l.dataId).id,A=t.dataIdMap.get(d.dataId).id,x=t.makeOutput(c,"float32"),b=t.dataIdMap.get(x.dataId).id,v=new Uint8Array(new Int32Array(o.shape).buffer);return HI(g,y,A,u,v,h,p,jI[n],s,b),m!=null&&t.disposeData(m.dataId),x}var Ghe={kernelName:No,backendName:"wasm",setupFunc:Vhe,kernelFunc:Uhe},qI;function jhe(e){qI=e.wasm.cwrap(Co,null,["number","number","number","number","number","number"])}function Hhe(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{axis:s,exclusive:i,reverse:o}=r,l=n.shape.length;w.assert(n.dtype==="float32"||n.dtype==="int32",()=>`cumsum does not support ${n.dtype} tensors in the WASM backend`);let d=N.getAxesPermutation([s],l),u=n;d!==null&&(u=Au({inputs:{x:n},attrs:{perm:d},backend:a}));let h=N.getInnerMostAxes(1,l)[0];N.assertAxesAreInnerMostDims("cumsum",[h],l);let p=a.makeOutput(u.shape,u.dtype),c=u.shape[h],f=a.dataIdMap.get(u.dataId).id,m=a.dataIdMap.get(p.dataId).id;qI(f,i?1:0,o?1:0,c,m,jt[n.dtype]);let g=p;if(d!==null){let y=N.getUndoAxesPermutation(d);g=Au({inputs:{x:p},attrs:{perm:y},backend:a}),a.disposeData(u.dataId),a.disposeData(p.dataId)}return g}var qhe={kernelName:Co,backendName:"wasm",setupFunc:jhe,kernelFunc:Hhe},XI;function Xhe(e){XI=e.wasm.cwrap(Eo,null,["number","number","number","array","number","array","array","number","number"])}function Khe(e){let{backend:t,inputs:a,attrs:r}=e,{x:n}=a,{blockSize:s,dataFormat:i}=r,o=n.shape[0],l=i==="NHWC"?n.shape[1]:n.shape[2],d=i==="NHWC"?n.shape[2]:n.shape[3],u=i==="NHWC"?n.shape[3]:n.shape[1],h=l*s,p=d*s,c=u/(s*s),f=i==="NHWC"?[o,h,p,c]:[o,c,h,p],m=t.makeOutput(f,"float32"),g=t.dataIdMap.get(n.dataId).id,y=new Uint8Array(new Int32Array(w.computeStrides(n.shape)).buffer),A=new Uint8Array(new Int32Array(f).buffer),x=new Uint8Array(new Int32Array(w.computeStrides(f)).buffer),b=t.dataIdMap.get(m.dataId).id;return XI(g,s,i==="NHWC"?1:0,y,n.shape.length-1,A,x,f.length,b),m}var Zhe={kernelName:Eo,backendName:"wasm",setupFunc:Xhe,kernelFunc:Khe},KI;function Yhe(e){KI=e.wasm.cwrap(Zs,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Jhe(e){let{inputs:t,attrs:a,backend:r}=e,{x:n,filter:s}=t,i=r.dataIdMap.get(n.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:d,pad:u,dimRoundingMode:h}=a,p=d==null?[1,1]:d,c=N.computeConv2DInfo(n.shape,s.shape,l,p,u,h,!0),f=c.filterHeight,m=c.filterWidth,g=c.padInfo.top,y=c.padInfo.right,A=c.padInfo.bottom,x=c.padInfo.left,b=c.dilationHeight,v=c.dilationWidth,T=c.strideHeight,C=c.strideWidth,E=c.inChannels,R=c.outChannels,z=c.padInfo.type==="SAME"?1:0;if(c.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);let F=r.makeOutput(c.outShape,"float32"),k=r.dataIdMap.get(F.dataId).id;return KI(i,n.shape[0],n.shape[1],n.shape[2],o,f,m,g,y,A,x,z,b,v,T,C,E,R,k),F}var Qhe={kernelName:Zs,backendName:"wasm",setupFunc:Yhe,kernelFunc:Jhe},epe=Aa(Js),tpe=!1,ape=Wa(Ro,tpe,"bool"),rpe=Aa(Qs,"float32");function Ug(e){let{inputs:t,attrs:a,backend:r}=e,{input:n}=t,{dim:s}=a,i=n.shape.length,o=n.shape.slice(),l=s;return s<0&&(w.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+s+1),o.splice(l,0,1),qa({inputs:{x:n},backend:r,attrs:{shape:o}})}var npe={kernelName:Fo,backendName:"wasm",kernelFunc:Ug};function ZI(e){let{attrs:{shape:t,value:a,dtype:r},backend:n}=e,s=n.makeOutput(t,r);return n.typedArrayFromHeap(s).fill(a),s}var spe={kernelName:_u,backendName:"wasm",kernelFunc:ZI},YI;function ipe(e){YI=e.wasm.cwrap(Mo,null,["number","number","number","number","number","number"])}function ope(e){let{inputs:t,backend:a}=e,{image:r}=t,n=a.makeOutput(r.shape,r.dtype),s=a.dataIdMap.get(r.dataId).id,i=a.dataIdMap.get(n.dataId).id,[o,l,d,u]=r.shape;return YI(s,o,l,d,u,i),n}var lpe={kernelName:Mo,backendName:"wasm",kernelFunc:ope,setupFunc:ipe},upe=Aa(ei),dpe=Wa(ti),JI;function hpe(e){JI=e.wasm.cwrap(ai,null,["number","number","number","number","number","number","number"])}function ppe(e){let{backend:t,inputs:a,attrs:r}=e,{varianceEpsilon:n}=r,{x:s,mean:i,variance:o,offset:l,scale:d}=a,u=t.dataIdMap.get(s.dataId).id,h=t.dataIdMap.get(i.dataId).id,p=t.dataIdMap.get(o.dataId).id,c=l!=null?t.dataIdMap.get(l.dataId).id:0,f=d!=null?t.dataIdMap.get(d.dataId).id:0,m=t.makeOutput(s.shape,s.dtype);if(w.sizeFromShape(s.shape)===0)return m;let g=t.dataIdMap.get(m.dataId).id;return JI(u,h,p,c,f,n,g),m}var cpe={kernelName:ai,backendName:"wasm",setupFunc:hpe,kernelFunc:ppe},QI;function fpe(e){QI=e.wasm.cwrap(Ts,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function mpe(e){let{inputs:t,attrs:a,backend:r}=e,{x:n,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:d,dilations:u,dataFormat:h,dimRoundingMode:p,activation:c,leakyreluAlpha:f}=a,m=N.computeConv2DInfo(n.shape,s.shape,l,u,d,p),g=B0[c];if(g==null)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);let y=r.dataIdMap.get(n.dataId).id,A=r.dataIdMap.get(s.dataId).id,x=m.outChannels,b=0;if(i!=null){let Y=r.dataIdMap.get(i.dataId);if(Y.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${Y.shape.length}.`);if(Y.shape[0]!==x)throw new Error(`FusedConv2D bias shape (${Y.shape}) does not match the number of output channels (${x})`);b=Y.id}let v=m.filterHeight,T=m.filterWidth,C=m.padInfo.top,E=m.padInfo.right,R=m.padInfo.bottom,z=m.padInfo.left,F=m.dilationHeight,k=m.dilationWidth,D=m.strideHeight,_=m.strideWidth,P=m.inChannels,j=m.padInfo.type==="SAME"?1:0,L=m.batchSize,B=m.inHeight,W=m.inWidth;if(h!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);let ee=r.makeOutput(m.outShape,"float32"),te=r.dataIdMap.get(ee.dataId).id,re=o==null?0:r.dataIdMap.get(o.dataId).id;return QI(y,L,B,W,A,v,T,b,C,E,R,z,j,F,k,D,_,P,x,g,re,f||0,te),ee}var gpe={kernelName:Ts,backendName:"wasm",setupFunc:fpe,kernelFunc:mpe},e8;function ype(e){e8=e.wasm.cwrap(Cs,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Ape(e){let{inputs:t,attrs:a,backend:r}=e,{x:n,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:d,dilations:u,dataFormat:h,dimRoundingMode:p,activation:c,leakyreluAlpha:f}=a,m=N.computeConv2DInfo(n.shape,s.shape,l,u,d,p,!0),g=B0[c];if(g==null)throw new Error(`${c} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let y=r.dataIdMap.get(n.dataId).id,A=r.dataIdMap.get(s.dataId).id,x=m.outChannels,b=0;if(i!=null){let Y=r.dataIdMap.get(i.dataId);if(Y.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${Y.shape.length}.`);if(Y.shape[0]!==x)throw new Error(`FusedDepthwiseConv2D bias shape (${Y.shape}) does not match the number of output channels (${x})`);b=Y.id}let v=m.filterHeight,T=m.filterWidth,C=m.padInfo.top,E=m.padInfo.right,R=m.padInfo.bottom,z=m.padInfo.left,F=m.dilationHeight,k=m.dilationWidth,D=m.strideHeight,_=m.strideWidth,P=m.inChannels,j=m.padInfo.type==="SAME"?1:0,L=m.batchSize,B=m.inHeight,W=m.inWidth;if(h!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);let ee=r.makeOutput(m.outShape,"float32"),te=r.dataIdMap.get(ee.dataId).id,re=o==null?0:r.dataIdMap.get(o.dataId).id;return e8(y,L,B,W,A,v,T,b,C,E,R,z,j,F,k,D,_,P,x,g,re,f||0,te),ee}var xpe={kernelName:Cs,backendName:"wasm",setupFunc:ype,kernelFunc:Ape},t8;function bpe(e){t8=e.wasm.cwrap(zo,null,["number","number","number","number","number","number","array","number"])}function vpe(e){let{backend:t,inputs:a}=e,{params:r,indices:n}=a,[s,i,o,l]=l2.prepareAndValidate(r,n),d=t.makeOutput(s,r.dtype);if(i===0)return d;let u=n.shape,h=u[u.length-1],p=t.dataIdMap.get(r.dataId).id,c=t.dataIdMap.get(n.dataId).id,f=new Uint8Array(new Int32Array(l).buffer),m=t.dataIdMap.get(d.dataId).id;return t8(p,jt[r.dtype],c,i,h,o,f,m),d}var wpe={kernelName:zo,backendName:"wasm",setupFunc:bpe,kernelFunc:vpe},a8;function kpe(e){a8=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function Ipe(e){let{backend:t,inputs:a,attrs:r}=e,{x:n,indices:s}=a,{axis:i,batchDims:o}=r,l=w.parseAxisParam(i,n.shape)[0],d=t.readSync(s.dataId),u=n.shape[l];for(let C=0;C<d.length;++C){let E=d[C];w.assert(E<=u-1&&E>=0,()=>`GatherV2: the index value ${E} is not in [0, ${u-1}]`)}let h=N.segment_util.collectGatherOpShapeInfo(n,s,l,o),p=qa({inputs:{x:n},attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]},backend:t}),c=w.sizeFromShape(s.shape),f=qa({inputs:{x:s},attrs:{shape:[h.batchSize,c/h.batchSize]},backend:t}),m=[h.batchSize,h.outerSize,c/h.batchSize,h.sliceSize],g=t.makeOutput(m,n.dtype);if(w.sizeFromShape(n.shape)===0)return g;let y=p.shape.length-1,A=t.dataIdMap.get(p.dataId).id,x=t.dataIdMap.get(f.dataId).id,b=t.dataIdMap.get(g.dataId).id,v=new Uint8Array(new Int32Array(w.computeStrides(p.shape)).buffer),T=new Uint8Array(new Int32Array(w.computeStrides(m)).buffer);return a8(A,jt[n.dtype],v,y,x,h.batchSize,T,b),t.disposeData(p.dataId),t.disposeData(f.dataId),g.shape=h.outputShape,g}var Spe={kernelName:_o,backendName:"wasm",setupFunc:kpe,kernelFunc:Ipe},Tpe=!1,Cpe=Wa(Oo,Tpe,"bool"),Npe=!1,Epe=Wa(ri,Npe,"bool"),r8;function Rpe(e){r8=e.wasm.cwrap(si,null,["number","number","number","number"])}function Fpe(e){let{inputs:{x:t},attrs:{alpha:a},backend:r}=e,n=r.dataIdMap.get(t.dataId).id,s=r.makeOutput(t.shape,"float32");if(w.sizeFromShape(t.shape)!==0){let i=r.dataIdMap.get(s.dataId).id;r8(n,jt[t.dtype],a,i)}return s}var $pe={kernelName:si,backendName:"wasm",setupFunc:Rpe,kernelFunc:Fpe},Mpe=!1,_pe=Wa(Do,Mpe,"bool"),zpe=!1,Ope=Wa(Po,zpe,"bool"),Dpe=Aa(ii),Ppe=!1,Lpe=Wa(Lo,Ppe,"bool"),n8;function Wpe(e){n8=e.wasm.cwrap(oi,null,["number","number","number","number"])}function Bpe(e){let{backend:t,inputs:a,attrs:r}=e,{reductionIndices:n,keepDims:s}=r,{x:i}=a,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:d,axes:u,originalAxes:h,inputWasTransposed:p}=Di(i,n,t);if(p){let A=t.dataIdMap.get(d.dataId).id;l=d,o=A}let c=l.shape.length;N.assertAxesAreInnerMostDims("max",u,c);let[f,m]=N.computeOutAndReduceShapes(l.shape,u),g=w.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(w.sizeFromShape(l.shape)!==0){let A=t.dataIdMap.get(y.dataId).id;n8(o,jt[i.dtype],g,A)}if(p&&t.disposeData(d.dataId),s){let A=N.expandShapeToKeepDim(y.shape,h);y.shape=A}return y}var Vpe={kernelName:oi,backendName:"wasm",setupFunc:Wpe,kernelFunc:Bpe},Upe=Wa(li),s8;function Gpe(e){s8=e.wasm.cwrap(ui,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function jpe(e){let{inputs:t,attrs:a,backend:r}=e,n=t.x,s=r.dataIdMap.get(n.dataId).id;w.assert(n.dtype==="float32",()=>`Error in MaxPool: only float32 input is supported. Got ${n.dtype}.`);let{filterSize:i,strides:o,pad:l,dimRoundingMode:d}=a,u=N.computePool2DInfo(n.shape,i,o,1,l,d),h=u.filterHeight,p=u.filterWidth,c=u.padInfo.top,f=u.padInfo.right,m=u.padInfo.bottom,g=u.padInfo.left,y=u.dilationHeight,A=u.dilationWidth,x=u.strideHeight,b=u.strideWidth,v=u.inChannels,T=u.outChannels;if(u.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${u.dataFormat}'. Please use 'channelsLast'.`);let C=r.makeOutput(u.outShape,"float32"),E=r.dataIdMap.get(C.dataId).id;return s8(s,n.shape[0],n.shape[1],n.shape[2],h,p,c,f,m,g,y,A,x,b,v,T,E),C}var Hpe={kernelName:ui,backendName:"wasm",setupFunc:Gpe,kernelFunc:jpe},i8;function qpe(e){i8=e.wasm.cwrap(di,null,["number, number, number"])}function Xpe(e){let{backend:t,inputs:a,attrs:r}=e,{axis:n,keepDims:s}=r,{x:i}=a,o=t.dataIdMap.get(i.dataId).id,l=o,d=i,{transposed:u,axes:h,originalAxes:p,inputWasTransposed:c}=Di(i,n,t),f=h;if(c){let b=t.dataIdMap.get(u.dataId).id;b!==o&&(d=u,l=b,f=N.getInnerMostAxes(f.length,d.shape.length))}N.assertAxesAreInnerMostDims("mean",f,d.shape.length);let[m,g]=N.computeOutAndReduceShapes(d.shape,f),y=w.sizeFromShape(g),A=d;d.dtype!=="float32"&&(A=pp({backend:t,inputs:{x:d},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(A.dataId).id);let x=t.makeOutput(m,"float32");if(w.sizeFromShape(d.shape)!==0){let b=t.dataIdMap.get(x.dataId).id;i8(l,y,b)}if(c&&t.disposeData(u.dataId),s){let b=N.expandShapeToKeepDim(x.shape,p);x.shape=b}return d.dtype!=="float32"&&t.disposeData(A.dataId),x}var Kpe={kernelName:di,backendName:"wasm",setupFunc:qpe,kernelFunc:Xpe},o8;function Zpe(e){o8=e.wasm.cwrap(hi,null,["number","number","number","number"])}function Ype(e){let{backend:t,inputs:a,attrs:r}=e,{axis:n,keepDims:s}=r,{x:i}=a,o=t.dataIdMap.get(i.dataId).id,l=o,d=i,{transposed:u,axes:h,originalAxes:p,inputWasTransposed:c}=Di(i,n,t);if(c){let x=t.dataIdMap.get(u.dataId).id;x!==o&&(d=u,l=x)}let f=d.shape.length;N.assertAxesAreInnerMostDims("min",h,f);let[m,g]=N.computeOutAndReduceShapes(d.shape,h),y=w.sizeFromShape(g),A=t.makeOutput(m,d.dtype);if(w.sizeFromShape(d.shape)!==0){let x=t.dataIdMap.get(A.dataId).id;o8(l,jt[i.dtype],y,x)}if(c&&t.disposeData(u.dataId),s){let x=N.expandShapeToKeepDim(A.shape,p);A.shape=x}return A}var Jpe={kernelName:hi,backendName:"wasm",setupFunc:Zpe,kernelFunc:Ype},Qpe=Wa(pi),l8=(e=>(e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric",e))(l8||{}),u8;function ece(e){u8=e.wasm.cwrap(ci,null,["number","array","number","number","array","array","number","number"])}function tce(e){let{inputs:{x:t},backend:a,attrs:{paddings:r,mode:n}}=e,s=r.map((f,m)=>f[0]+t.shape[m]+f[1]),i=a.dataIdMap.get(t.dataId).id,o=a.makeOutput(s,t.dtype),l=a.dataIdMap.get(o.dataId).id,d=new Uint8Array(new Int32Array(t.shape).buffer),u=r.map(f=>f[0]),h=r.map(f=>f[1]),p=new Uint8Array(new Int32Array(u).buffer),c=new Uint8Array(new Int32Array(h).buffer);return u8(i,d,t.shape.length,jt[t.dtype],p,c,l8[n],l),o}var ace={kernelName:ci,backendName:"wasm",kernelFunc:tce,setupFunc:ece},rce=Wa(fi),nce=Aa(Wo);function uA(e,t){let a=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=a[0],n=a[1],s=a[2],i=a[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:n,pSelectedScores:s,pValidOutputs:i}}var d8;function sce(e){d8=e.wasm.cwrap(Vo,"number",["number","number","number","number","number"])}function ice(e){let{backend:t,inputs:a,attrs:r}=e,{iouThreshold:n,maxOutputSize:s,scoreThreshold:i}=r,{boxes:o,scores:l}=a,d=t.dataIdMap.get(o.dataId).id,u=t.dataIdMap.get(l.dataId).id,h=d8(d,u,s,n,i),{pSelectedIndices:p,selectedSize:c,pSelectedScores:f,pValidOutputs:m}=uA(t,h);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([c],"int32",p)}var oce={kernelName:Vo,backendName:"wasm",setupFunc:sce,kernelFunc:ice},h8;function lce(e){h8=e.wasm.cwrap(Bu,"number",["number","number","number","number","number","bool"])}function uce(e){let{backend:t,inputs:a,attrs:r}=e,{iouThreshold:n,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=r,{boxes:l,scores:d}=a,u=t.dataIdMap.get(l.dataId).id,h=t.dataIdMap.get(d.dataId).id,p=h8(u,h,s,n,i,o),{pSelectedIndices:c,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=uA(t,p);t.wasm._free(m);let y=t.makeOutput([f],"int32",c),A=t.makeOutput([],"int32",g);return[y,A]}var dce={kernelName:Bu,backendName:"wasm",setupFunc:lce,kernelFunc:uce},p8;function hce(e){p8=e.wasm.cwrap(Uo,"number",["number","number","number","number","number","number"])}function pce(e){let{backend:t,inputs:a,attrs:r}=e,{iouThreshold:n,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=r,{boxes:l,scores:d}=a,u=t.dataIdMap.get(l.dataId).id,h=t.dataIdMap.get(d.dataId).id,p=p8(u,h,s,n,i,o),{pSelectedIndices:c,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=uA(t,p);t.wasm._free(g);let y=t.makeOutput([f],"int32",c),A=t.makeOutput([f],"float32",m);return[y,A]}var cce={kernelName:Uo,backendName:"wasm",setupFunc:hce,kernelFunc:pce},fce=!1,mce=Wa(Bo,fce,"bool"),c8;function gce(e){c8=e.wasm.cwrap(jo,null,["number","number","number","number","number"])}function yce(e){let{inputs:t,backend:a,attrs:r}=e,{indices:n}=t,{depth:s,onValue:i,offValue:o}=r,l=a.makeOutput([...n.shape,s],"int32"),d=a.dataIdMap.get(l.dataId).id,u=a.dataIdMap.get(n.dataId).id;return c8(u,s,i,o,d),l}var Ace={kernelName:jo,backendName:"wasm",setupFunc:gce,kernelFunc:yce};function xce(e){let{inputs:{x:t},backend:a}=e,r=a.makeOutput(t.shape,t.dtype);return a.typedArrayFromHeap(r).fill(1),r}var bce={kernelName:Go,backendName:"wasm",kernelFunc:xce};function vce(e){let{inputs:t,backend:a,attrs:r}=e,{axis:n}=r;if(t.length===1)return Ug({inputs:{input:t[0]},backend:a,attrs:{dim:n}});let s=t[0].shape,i=t[0].dtype;t.forEach(u=>{w.assertShapesMatch(s,u.shape,"All tensors passed to stack must have matching shapes"),w.assert(i===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=t.map(u=>{let h=Ug({inputs:{input:u},backend:a,attrs:{dim:n}});return o.push(h),h}),d=VI({inputs:l,backend:a,attrs:{axis:n}});return o.forEach(u=>a.disposeData(u.dataId)),d}var wce={kernelName:Ho,backendName:"wasm",kernelFunc:vce},f8;function kce(e){f8=e.wasm.cwrap(mi,null,["number","array","number","number","array","array","number","number"])}function Ice(e){let{inputs:{x:t},backend:a,attrs:{paddings:r,constantValue:n}}=e,s=r.map((f,m)=>f[0]+t.shape[m]+f[1]);if(w.sizeFromShape(t.shape)===0)return ZI({backend:a,attrs:{shape:s,value:n,dtype:t.dtype}});let i=a.dataIdMap.get(t.dataId).id,o=a.makeOutput(s,t.dtype),l=a.dataIdMap.get(o.dataId).id,d=new Uint8Array(new Int32Array(t.shape).buffer),u=r.map(f=>f[0]),h=r.map(f=>f[1]),p=new Uint8Array(new Int32Array(u).buffer),c=new Uint8Array(new Int32Array(h).buffer);return f8(i,d,t.shape.length,jt[t.dtype],p,c,n,l),o}var m8={kernelName:mi,backendName:"wasm",kernelFunc:Ice,setupFunc:kce},Sce=Wa(gi),g8;function Tce(e){g8=e.wasm.cwrap(yi,null,["number","number","number"])}function Cce(e){let{inputs:t,backend:a}=e,{x:r,alpha:n}=t,s=a.dataIdMap.get(r.dataId).id,i=a.dataIdMap.get(n.dataId).id,o=s,l=r,d=l;l.dtype!=="float32"&&(d=pp({backend:a,inputs:{x:r},attrs:{dtype:"float32"}}),o=a.dataIdMap.get(d.dataId).id);let u=a.makeOutput(r.shape,"float32"),h=a.dataIdMap.get(u.dataId).id;return g8(o,i,h),l.dtype!=="float32"&&a.disposeData(d.dataId),u}var Nce={kernelName:yi,backendName:"wasm",setupFunc:Tce,kernelFunc:Cce},y8;function Ece(e){y8=e.wasm.cwrap(qo,null,["number","number","number","number"])}function Rce(e){let{backend:t,inputs:a,attrs:r}=e,{axis:n,keepDims:s}=r,{x:i}=a,o=t.dataIdMap.get(i.dataId).id,l=o,d=i,{transposed:u,axes:h,originalAxes:p,inputWasTransposed:c}=Di(i,n,t),f=h;if(c){let x=t.dataIdMap.get(u.dataId).id;x!==o&&(d=u,l=x,f=N.getInnerMostAxes(f.length,d.shape.length))}N.assertAxesAreInnerMostDims("prod",f,d.shape.length);let[m,g]=N.computeOutAndReduceShapes(d.shape,f),y=w.sizeFromShape(g),A=t.makeOutput(m,d.dtype);if(w.sizeFromShape(d.shape)!==0){let x=t.dataIdMap.get(A.dataId).id;y8(l,y,jt[A.dtype],x)}if(c&&t.disposeData(u.dataId),s){let x=N.expandShapeToKeepDim(A.shape,p);A.shape=x}return A}var Fce={kernelName:qo,backendName:"wasm",setupFunc:Ece,kernelFunc:Rce},$ce=e=>{let{backend:t,attrs:a}=e,{start:r,stop:n,step:s,dtype:i}=a,o=zy(r,n,s,i),l=t.makeOutput([o.length],i);return t.typedArrayFromHeap(l).set(o),l},Mce={kernelName:Vu,backendName:"wasm",kernelFunc:$ce},_ce=Wa(Ys),zce=Aa(Ai),Oce=Aa(bi),A8;function Dce(e){A8=e.wasm.cwrap(xi,null,["number","number","number","number","number","number","number","number","number","number"])}function Pce(e){let{backend:t,inputs:a,attrs:r}=e,{images:n}=a,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,d]=o,[u,h,p,c]=n.shape,f=[u,l,d,c],m=t.dataIdMap.get(n.dataId),g;m.dtype!=="float32"&&(g=pp({backend:t,inputs:{x:n},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(g.dataId));let y=m.id,A=t.makeOutput(f,"float32");if(w.sizeFromShape(n.shape)===0)return A;let x=t.dataIdMap.get(A.dataId).id;return A8(y,u,h,p,c,l,d,s?1:0,i?1:0,x),g!=null&&t.disposeData(g.dataId),A}var Lce={kernelName:xi,backendName:"wasm",setupFunc:Dce,kernelFunc:Pce},x8;function Wce(e){x8=e.wasm.cwrap(Ko,null,["number","array","number","array","number","number"])}function Bce(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{dims:s}=r,i=w.parseAxisParam(s,n.shape);if(n.shape.length===0)return V0({inputs:{x:n},backend:a});let o=a.makeOutput(n.shape,n.dtype),l=a.dataIdMap.get(n.dataId).id,d=a.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(i).buffer),h=new Uint8Array(new Int32Array(n.shape).buffer);x8(l,u,i.length,h,n.shape.length,d);let p=qa({inputs:{x:o},attrs:{shape:n.shape},backend:a});return a.disposeData(o.dataId),p}var Vce={kernelName:Ko,backendName:"wasm",kernelFunc:Bce,setupFunc:Wce},b8;function Uce(e){b8=e.wasm.cwrap(ul,null,["number","number","number","number","number","number","number","number","array","number","number"])}function Gce(e){let{inputs:t,backend:a,attrs:r}=e,{image:n}=t,{radians:s,fillValue:i,center:o}=r,l=a.makeOutput(n.shape,n.dtype),d=a.dataIdMap.get(n.dataId).id,u=a.dataIdMap.get(l.dataId).id,[h,p,c,f]=n.shape,[m,g]=N.getImageCenter(o,p,c),y=i===0,A=255,x=typeof i=="number"?[i,i,i,y?0:A]:[...i,A],b=new Uint8Array(new Int32Array(x).buffer);return b8(d,h,p,c,f,s,m,g,b,x.length,u),l}var jce={kernelName:ul,backendName:"wasm",kernelFunc:Gce,setupFunc:Uce},Hce=Aa(Zo),qce=Aa(vi),v8;function Xce(e){v8=e.wasm.cwrap(Yo,null,["number","number","number","number","number","number","array","number","number"])}function Kce(e){let{backend:t,inputs:a,attrs:r}=e,{indices:n,updates:s}=a,{shape:i}=r,o=t.makeOutput(i,s.dtype);if(w.sizeFromShape(i)===0)return o;let{sliceRank:l,numUpdates:d,sliceSize:u,strides:h,outputSize:p}=u2.calculateShapes(s,n,i),c=t.dataIdMap.get(n.dataId).id,f=t.dataIdMap.get(s.dataId).id,m=new Uint8Array(new Int32Array(h).buffer),g=t.dataIdMap.get(o.dataId).id;return v8(c,f,jt[s.dtype],l,d,u,m,p,g),o}var Zce={kernelName:Yo,backendName:"wasm",setupFunc:Xce,kernelFunc:Kce},w8;function Yce(e){w8=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function Jce(e){let{inputs:t,backend:a}=e,{condition:r,t:n,e:s}=t,i=a.dataIdMap.get(r.dataId).id,o=a.dataIdMap.get(n.dataId).id,l=a.dataIdMap.get(s.dataId).id,d=a.makeOutput(n.shape,n.dtype),u=a.dataIdMap.get(d.dataId).id,h=r.shape.length,p=n.shape.length,c=h===0||h>1||p===1?1:w.sizeFromShape(n.shape.slice(1));return w8(i,o,l,c,u),d}var Qce={kernelName:Jo,backendName:"wasm",kernelFunc:Jce,setupFunc:Yce},k8;function efe(e){k8=e.wasm.cwrap(ki,null,["number","number"])}function tfe(e){let{backend:t,inputs:{x:a}}=e,r=t.dataIdMap.get(a.dataId).id,n=t.makeOutput(a.shape,a.dtype),s=t.dataIdMap.get(n.dataId).id;return w.sizeFromShape(n.shape)===0||k8(r,s),n}var afe={kernelName:"Sigmoid",backendName:"wasm",setupFunc:efe,kernelFunc:tfe},rfe=Aa(wi),I8;function nfe(e){I8=e.wasm.cwrap(Ti,null,["number","number","number","number"])}function sfe(e){let{backend:t,inputs:{logits:a},attrs:{dim:r}}=e,n=t.dataIdMap.get(a.dataId).id,s=t.makeOutput(a.shape,a.dtype),i=t.dataIdMap.get(s.dataId).id,o=a.shape[r],l=w.sizeFromShape(a.shape)/o;return w.sizeFromShape(s.shape)===0||I8(n,i,o,l),s}var ife={kernelName:Ti,backendName:"wasm",setupFunc:nfe,kernelFunc:sfe};function ofe(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,{blockShape:s,paddings:i}=r,o=w.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let g=1+s.length;g<n.shape.length;++g)l.push([0,0]);let d=m8.kernelFunc({inputs:{x:n},backend:a,attrs:{paddings:l,constantValue:0}}),u=N.getReshaped(d.shape,s,o,!1),h=N.getPermuted(u.length,s.length,!1),p=N.getReshapedPermuted(d.shape,s,o,!1),c=qa({inputs:{x:d},backend:a,attrs:{shape:u}}),f=Au({inputs:{x:c},backend:a,attrs:{perm:h}}),m=qa({inputs:{x:f},backend:a,attrs:{shape:p}});return a.disposeData(d.dataId),a.disposeData(c.dataId),a.disposeData(f.dataId),m}var lfe={kernelName:tl,backendName:"wasm",kernelFunc:ofe},S8;function ufe(e){S8=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])}function dfe(e){let{backend:t,inputs:a}=e,{indices:r,values:n,denseShape:s,defaultValue:i}=a,o=r.shape[0],l=r.shape[1],d=t.readSync(s.dataId)[0],u=[o+d,l],h=t.dataIdMap.get(r.dataId).id,p=t.dataIdMap.get(n.dataId).id,c=t.dataIdMap.get(i.dataId).id,f=t.makeOutput(u,r.dtype),m=t.dataIdMap.get(f.dataId).id,g=t.makeOutput(u.slice(0,1),n.dtype),y=t.dataIdMap.get(g.dataId).id,A=t.makeOutput([d],"bool"),x=t.dataIdMap.get(A.dataId).id,b=t.makeOutput([o],r.dtype),v=t.dataIdMap.get(b.dataId).id,T=t.makeOutput([4],"int32"),C=t.dataIdMap.get(T.dataId).id,E=S8(h,p,jt[n.dtype],o,d,l,c,m,y,x,v,C),R=t.readSync(T.dataId),z;switch(R[0]){case 1:{z=N.getSparseFillEmptyRowsIndicesDenseShapeMismatch(R[1]);break}case 2:{z=N.getSparseFillEmptyRowsNegativeIndexErrorMessage(R[1],R[2]);break}case 3:z=N.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(R[1],R[2],R[3]);break;default:z=""}if(t.disposeData(T.dataId),z)throw t.disposeData(f.dataId),t.disposeData(g.dataId),t.disposeData(A.dataId),t.disposeData(b.dataId),new Error(z);let F=f,k=g;return E!==u[0]&&(F=xo({inputs:{x:f},attrs:{begin:0,size:[E,l]},backend:t}),k=xo({inputs:{x:g},attrs:{begin:0,size:E},backend:t}),t.disposeData(f.dataId),t.disposeData(g.dataId)),[F,k,A,b]}var hfe={kernelName:Th,backendName:"wasm",setupFunc:ufe,kernelFunc:dfe},T8;function pfe(e){T8=e.wasm.cwrap(Xu,null,["number","number","number","number","number","number","number"])}function cfe(e){let{backend:t,inputs:a}=e,{inputIndices:r,inputShape:n,newShape:s}=a;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${r.shape}`);if(n.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${n.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=t.dataIdMap.get(r.dataId).id,o=t.dataIdMap.get(n.dataId).id,l=t.dataIdMap.get(s.dataId).id,d=r.shape[0],u=w.sizeFromShape(s.shape),h=t.makeOutput([d,u],r.dtype),p=t.dataIdMap.get(h.dataId).id,c=t.makeOutput([u],s.dtype),f=t.dataIdMap.get(c.dataId).id,m=t.makeOutput([3],"int32"),g=t.dataIdMap.get(m.dataId).id;T8(i,o,l,d,p,f,g);let y=t.readSync(m.dataId),A;switch(y[0]){case 0:{A=N.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(y[1],y[2]);break}case 1:{A=N.getSparseReshapeNegativeOutputDimErrorMessage(y[1],y[2]);break}case 2:A=N.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let x=Array.from(t.readSync(n.dataId)),b=Array.from(t.readSync(c.dataId));A=N.getSparseReshapeInputOutputMultipleErrorMessage(x,b);break}case 4:{let x=Array.from(t.readSync(n.dataId)),b=Array.from(t.readSync(c.dataId));A=N.getSparseReshapeInputOutputMismatchErrorMessage(x,b);break}default:A=""}if(t.disposeData(m.dataId),A)throw t.disposeData(h.dataId),t.disposeData(c.dataId),new Error(A);return[h,c]}var ffe={kernelName:Xu,backendName:"wasm",setupFunc:pfe,kernelFunc:cfe},C8;function N8(e){C8=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function E8(e,t){let{backend:a,inputs:r}=e,{data:n,indices:s,segmentIds:i}=r,o=s.shape[0],l=a.readSync(i.dataId,o-1,o)[0],d=o>0?l+1:0;if(d<0)throw new Error(N.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let u=n.shape.slice();u[0]=d;let h=a.dataIdMap.get(n.dataId).id,p=a.dataIdMap.get(s.dataId).id,c=a.dataIdMap.get(i.dataId).id,f=a.makeOutput(u,n.dtype),m=a.dataIdMap.get(f.dataId).id,g=a.makeOutput([4],"int32"),y=a.dataIdMap.get(g.dataId).id;C8(h,jt[n.dtype],n.shape[0],p,c,m,y,t,0);let A=a.readSync(g.dataId),x;switch(A[0]){case 0:{x=N.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break}case 1:{x=N.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break}case 2:x=N.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(A[1],A[2]);break;case 3:x=N.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(A[1],A[2],A[3]);break;default:x=""}if(a.disposeData(g.dataId),x)throw a.disposeData(f.dataId),new Error(x);return f}function mfe(e){return E8(e,!0)}var gfe={kernelName:Ch,backendName:"wasm",setupFunc:N8,kernelFunc:mfe};function yfe(e){return E8(e,!1)}var Afe={kernelName:Nh,backendName:"wasm",setupFunc:N8,kernelFunc:yfe};function xfe(e){let{inputs:t,attrs:a,backend:r}=e,{x:n}=t,{numOrSizeSplits:s,axis:i}=a,o=w.parseAxisParam(i,n.shape)[0],l=N.prepareSplitSize(n,s,o),d=new Array(n.shape.length).fill(0),u=n.shape.slice();return l.map(h=>{let p=[...u];p[o]=h;let c=xo({inputs:{x:n},attrs:{begin:d,size:p},backend:r});return d[o]+=h,c})}var bfe={kernelName:al,backendName:"wasm",kernelFunc:xfe},vfe=Aa(Ii),wfe=Aa(Ku),kfe=Wa(Ci),R8;function Ife(e){R8=e.wasm.cwrap(Fi,null,["number","number","number","number"])}function Sfe(e){let{backend:t,inputs:a,attrs:r}=e,{alpha:n}=r,{x:s}=a,i=t.dataIdMap.get(s.dataId).id,o=t.makeOutput(s.shape,s.dtype),l=t.dataIdMap.get(o.dataId).id;return R8(i,n,jt[s.dtype],l),o}var Tfe={kernelName:Fi,backendName:"wasm",setupFunc:Ife,kernelFunc:Sfe},F8;function Cfe(e){F8=e.wasm.cwrap(rl,null,["number","array","number","array","array","array","array","array","number","number"])}function Nfe(e){let{backend:t,inputs:a,attrs:r}=e,{x:n}=a,{begin:s,end:i,strides:o,beginMask:l,endMask:d,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:p}=r,{finalShapeSparse:c,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:A,end:x,strides:b}=Ft.sliceInfo(n.shape,s,i,o,l,d,u,h,p),v;if(m)v=qa({inputs:{x:n},backend:t,attrs:{shape:f}});else if(g||y){w.assert(n.shape.length>=1,()=>`Input must have rank at least 1, got: ${n.shape.length}`);let T=Ft.computeOutShape(A,x,b),C=xo({inputs:{x:n},backend:t,attrs:{begin:A,size:T}});v=qa({inputs:{x:C},backend:t,attrs:{shape:f}}),t.disposeData(C.dataId)}else{let T=t.makeOutput(c,"float32"),C=t.dataIdMap.get(n.dataId).id,E=new Uint8Array(new Int32Array(w.computeStrides(n.shape)).buffer),R=new Uint8Array(new Int32Array(A).buffer),z=new Uint8Array(new Int32Array(x).buffer),F=new Uint8Array(new Int32Array(b).buffer),k=new Uint8Array(new Int32Array(c).buffer),D=new Uint8Array(new Int32Array(w.computeStrides(c)).buffer),_=t.dataIdMap.get(T.dataId).id;F8(C,E,n.shape.length,R,z,F,k,D,c.length,_),v=qa({inputs:{x:T},backend:t,attrs:{shape:f}}),t.disposeData(T.dataId)}return v}var Efe={kernelName:rl,backendName:"wasm",setupFunc:Cfe,kernelFunc:Nfe},Rfe=Wa(Ni),$8;function Ffe(e){$8=e.wasm.cwrap(Si,null,["number","number","number","number"])}function $fe(e){let{backend:t,inputs:a,attrs:r}=e,{axis:n,keepDims:s}=r,{x:i}=a,o=t.dataIdMap.get(i.dataId).id,l=o,d=i,{transposed:u,axes:h,originalAxes:p,inputWasTransposed:c}=Di(i,n,t),f=h;if(c){let x=t.dataIdMap.get(u.dataId).id;x!==o&&(d=u,l=x,f=N.getInnerMostAxes(f.length,d.shape.length))}N.assertAxesAreInnerMostDims("sum",f,d.shape.length);let[m,g]=N.computeOutAndReduceShapes(d.shape,f),y=w.sizeFromShape(g),A=t.makeOutput(m,d.dtype);if(w.sizeFromShape(d.shape)!==0){let x=t.dataIdMap.get(A.dataId).id;$8(l,y,jt[A.dtype],x)}if(c&&t.disposeData(u.dataId),s){let x=N.expandShapeToKeepDim(A.shape,p);A.shape=x}return A}var Mfe={kernelName:Si,backendName:"wasm",setupFunc:Ffe,kernelFunc:$fe},_fe=Aa(nl),zfe=Aa(Ei),M8;function Ofe(e){M8=e.wasm.cwrap(Kn,null,["number","array","number","array","number","number"])}function Dfe(e){let{inputs:t,backend:a,attrs:r}=e,{x:n}=t,s=a.dataIdMap.get(n.dataId).id,{reps:i}=r,o=new Array(n.shape.length);for(let p=0;p<o.length;p++)o[p]=n.shape[p]*i[p];let l=new Uint8Array(new Int32Array(n.shape).buffer),d=new Uint8Array(new Int32Array(o).buffer),u=a.makeOutput(o,n.dtype),h=a.dataIdMap.get(u.dataId).id;return M8(s,l,n.shape.length,d,o.length,jt[u.dtype],h),u}var Pfe={kernelName:Kn,backendName:"wasm",setupFunc:Ofe,kernelFunc:Dfe},_8;function Lfe(e){_8=e.wasm.cwrap(sl,null,["number","array","number","number","number","bool","number","number"])}var Wfe=({inputs:e,backend:t,attrs:a})=>{let{x:r}=e,{k:n,sorted:s}=a,i=t.dataIdMap.get(r.dataId).id,o=new Uint8Array(new Int32Array(r.shape).buffer),l=r.shape.slice();l[l.length-1]=n;let d=t.makeOutput(l,r.dtype),u=t.dataIdMap.get(d.dataId).id,h=t.makeOutput(l,"int32"),p=t.dataIdMap.get(h.dataId).id;return _8(i,o,r.shape.length,jt[r.dtype],n,s,u,p),[d,h]},Bfe={kernelName:sl,backendName:"wasm",setupFunc:Lfe,kernelFunc:Wfe},z8;function Vfe(e){z8=e.wasm.cwrap(il,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])}function Ufe(e){let{backend:t,inputs:a,attrs:r}=e,{image:n,transforms:s}=a,{interpolation:i,fillMode:o,fillValue:l,outputShape:d}=r,[u,h,p,c]=n.shape,[f,m]=d!=null?d:[h,p],g=[u,f,m,c],y=new Uint8Array(new Int32Array(w.computeStrides(n.shape)).buffer),A=t.makeOutput(g,n.dtype),x=t.dataIdMap.get(A.dataId).id,b=t.dataIdMap.get(n.dataId).id,v=t.dataIdMap.get(s.dataId).id,T=i==="nearest"?1:2,C;switch(o){case"constant":C=1;break;case"reflect":C=2;break;case"wrap":C=3;break;case"nearest":C=4;break;default:C=1;break}return z8(b,v,s.shape[0]>1,u,f,m,c,p,h,y,n.shape.length-1,T,C,l,x),A}var Gfe={kernelName:il,backendName:"wasm",setupFunc:Vfe,kernelFunc:Ufe};function jfe(e){let{inputs:t,backend:a,attrs:r}=e,{value:n}=t,{axis:s}=r;s<0&&(s+=n.shape.length);let i=n.shape[s],o=n.shape.length,l=new Array(o-1),d=0;for(let c=0;c<o;c++)c!==s&&(l[d++]=n.shape[c]);let u=new Array(i),h=new Array(o).fill(0),p=n.shape.slice();p[s]=1;for(let c=0;c<u.length;c++)h[s]=c,u[c]=xo({inputs:{x:n},attrs:{begin:h,size:p},backend:a});return u.map(({dataId:c,dtype:f})=>({dataId:c,dtype:f,shape:l}))}var Hfe={kernelName:ol,backendName:"wasm",kernelFunc:jfe};function qfe(e){let{inputs:{x:t},backend:a}=e,r=a.makeOutput(t.shape,t.dtype);return a.typedArrayFromHeap(r).fill(0),r}var Xfe={kernelName:ll,backendName:"wasm",kernelFunc:qfe},Kfe=[Kde,Zde,Yde,ehe,lhe,hhe,fhe,yhe,vhe,Che,Nhe,Ehe,$he,Mhe,Ohe,Lhe,Whe,Bhe,Ghe,qhe,Zhe,Qhe,epe,ape,rpe,npe,spe,lpe,upe,dpe,cpe,gpe,xpe,wpe,Spe,Cpe,Epe,the,$pe,_pe,Ope,Dpe,Lpe,Vpe,Upe,Hpe,Kpe,Jpe,Qpe,ace,rce,nce,oce,dce,cce,mce,Ace,bce,wce,m8,Sce,Nce,Fce,Mce,_ce,zce,Oce,Ahe,Lce,Vce,jce,Hce,qce,Zce,Qce,afe,rfe,She,ife,lfe,hfe,ffe,gfe,Afe,bfe,vfe,wfe,kfe,Tfe,Efe,Rfe,Mfe,_fe,zfe,Pfe,Bfe,Gfe,she,Hfe,Xfe];for(let e of Kfe)An(e);var Gg=J();Gg.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])));Gg.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(Gg.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}});var wb=wo(IT()),Zfe='var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;this.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);Module["wasmModule"]=null;receiveInstance(instance);return instance.exports};function moduleLoaded(){}this.onmessage=function(e){try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance;moduleLoaded()})}else if(e.data.cmd==="objectTransfer"){Module["PThread"].receiveObjectTransfer(e.data)}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0);var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["_emscripten_tls_init"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].setThreadStatus(Module["_pthread_self"](),1);try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(!Module["getNoExitRuntime"]())Module["PThread"].threadExit(result)}catch(ex){if(ex==="Canceled!"){Module["PThread"].threadCancel()}else if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["getNoExitRuntime"]()){}else{Module["PThread"].threadExit(ex.status)}}else{Module["PThread"].threadExit(-2);throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["PThread"].threadCancel()}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);throw ex}};if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require("worker_threads");global.Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var nodeFS=require("fs");var nodeRead=function(filename){return nodeFS.readFileSync(filename,"utf8")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance==="undefined"){performance={now:function(){return Date.now()}}}}',Yfe=wo(ST()),O8=class extends vu{constructor(e){super();this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(P8),jg=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new fh(this,sr())}write(e,t,a){let r={id:this.dataIdNextNumber++};return this.move(r,e,t,a,1),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=w.now();return e(),{kernelMs:w.now()-t}}move(e,t,a,r,n){let s=this.dataIdNextNumber++;if(r==="string"){let d=t;this.dataIdMap.set(e,{id:s,stringBytes:d,shape:a,dtype:r,memoryOffset:null,refCount:n});return}let i=w.sizeFromShape(a),o=i*w.bytesPerElement(r),l=this.wasm._malloc(o);this.dataIdMap.set(e,{id:s,memoryOffset:l,shape:a,dtype:r,refCount:n}),this.wasm.tfjs.registerTensor(s,i,l),t!=null&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),l)}async read(e){return this.readSync(e)}readSync(e,t,a){let{memoryOffset:r,dtype:n,shape:s,stringBytes:i}=this.dataIdMap.get(e);if(n==="string")return(t==null||t===0)&&(a==null||a>=i.length)?i:i.slice(t,a);t=t||0,a=a||w.sizeFromShape(s);let o=w.bytesPerElement(n),l=this.wasm.HEAPU8.slice(r+t*o,r+a*o);return e0e(l.buffer,n)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let a=this.dataIdMap.get(e);if(a.refCount--,!t&&a.refCount>0)return!1;this.wasm._free(a.memoryOffset),this.wasm.tfjs.disposeData(a.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);t!=null&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,a){let r;if(a==null)r=this.write(null,e,t);else{let n=this.dataIdNextNumber++;r={id:n},this.dataIdMap.set(r,{id:n,memoryOffset:a,shape:e,dtype:t,refCount:1});let s=w.sizeFromShape(e);this.wasm.tfjs.registerTensor(n,s,a)}return{dataId:r,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:a}){let r=this.wasm.HEAPU8.buffer,{memoryOffset:n}=this.dataIdMap.get(a),s=w.sizeFromShape(e);switch(t){case"float32":return new Float32Array(r,n,s);case"int32":return new Int32Array(r,n,s);case"bool":return new Uint8Array(r,n,s);default:throw new Error(`Unknown dtype ${t}`)}}};function Jfe(e){return(t,a)=>(w.fetch(e,{credentials:"same-origin"}).then(r=>{r.ok||t.env.a(`failed to load wasm binary file at '${e}'`),r.arrayBuffer().then(n=>{WebAssembly.instantiate(n,t).then(s=>{a(s.instance,s.module)})})}),{})}function kb(e,t,a){if(Yc!=null)return Yc;let r="tfjs-backend-wasm.wasm";return e&&t?r="tfjs-backend-wasm-threaded-simd.wasm":e&&(r="tfjs-backend-wasm-simd.wasm"),Yd!=null&&Yd[r]!=null?Yd[r]:a+r}async function Qfe(){let[e,t]=await Promise.all([J().getAsync("WASM_HAS_SIMD_SUPPORT"),J().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((a,r)=>{let n={};n.locateFile=(o,l)=>{if(o.endsWith(".worker.js")){let d=Zfe,u=new Blob([d],{type:"application/javascript"});return URL.createObjectURL(u)}return o.endsWith(".wasm")?kb(e,t,Vd!=null?Vd:l):l+o},dA&&(n.instantiateWasm=Jfe(kb(e,t,Vd!=null?Vd:"")));let s=!1;n.onAbort=()=>{s||Jd||(Jd=!0,r({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))};let i;t&&e&&Yc==null?(n.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+wb.default.toString()],{type:"text/javascript"}),i=(0,wb.default)(n)):i=(0,Yfe.default)(n),i.then(o=>{s=!0,Jd=!1;let l=null;o.tfjs={init:o.cwrap("init",null,[]),initWithThreadsCount:o.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:o.cwrap("get_threads_count","number",[]),registerTensor:o.cwrap("register_tensor",null,["number","number","number"]),disposeData:o.cwrap("dispose_data",l,["number"]),dispose:o.cwrap("dispose",l,[])},a({wasm:o})})})}function e0e(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}var t0e=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],Yc=null,Vd=null,Yd={},Jd=!1,dA=!1;function a0e(e,t=!1){if(e3("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),Jd)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");Yc=e,dA=t}function D8(e,t=!1){if(Jd)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if(typeof e=="string")Vd=e;else{Yd=e;let a=t0e.filter(r=>Yd[r]==null);if(a.length>0)throw new Error(`There were no entries found for the following binaries: ${a.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}dA=t}var P8=-1,jg=-1;function r0e(e){P8=e}function n0e(){if(jg===-1)throw new Error("WASM backend not initialized.");return jg}var s0e="0.0.0",i0e=2;Zu("wasm",async()=>{let{wasm:e}=await Qfe();return new O8(e)},i0e);var ls="3.13.0-20220214",hA={tfjs:ls,"tfjs-core":ls,"tfjs-data":ls,"tfjs-layers":ls,"tfjs-converter":ls,"tfjs-backend-cpu":ls,"tfjs-backend-webgl":ls,"tfjs-backend-wasm":ls},o0e=`
  precision highp float;
  attribute vec2 pos;
  attribute vec2 uv;
  varying vec2 vUv;
  uniform float flipY;
  void main(void) {
    vUv = uv;
    gl_Position = vec4(pos.x, pos.y*flipY, 0.0, 1.);
  }
`,l0e=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform float m[20];
  void main(void) {
    vec4 c = texture2D(texture, vUv);
    gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[3] * c.a + m[4];
    gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[8] * c.a + m[9];
    gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[13] * c.a + m[14];
    gl_FragColor.a = m[15] * c.r + m[16] * c.g + m[17] * c.b + m[18] * c.a + m[19];
  }
`,u0e=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform float m[20];
  void main(void) {
    vec4 c = texture2D(texture, vUv);
    gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[4];
    gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[9];
    gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[14];
    gl_FragColor.a = c.a;
  }
`,d0e=`
  precision highp float;
  varying vec2 vUv;
  uniform vec2 size;
  uniform sampler2D texture;
  vec2 pixelate(vec2 coord, vec2 size) {
    return floor( coord / size ) * size;
  }
  void main(void) {
    gl_FragColor = vec4(0.0);
    vec2 coord = pixelate(vUv, size);
    gl_FragColor += texture2D(texture, coord);
  }
`,h0e=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform vec2 px;
  void main(void) {
    gl_FragColor = vec4(0.0);
    gl_FragColor += texture2D(texture, vUv + vec2(-7.0*px.x, -7.0*px.y))*0.0044299121055113265;
    gl_FragColor += texture2D(texture, vUv + vec2(-6.0*px.x, -6.0*px.y))*0.00895781211794;
    gl_FragColor += texture2D(texture, vUv + vec2(-5.0*px.x, -5.0*px.y))*0.0215963866053;
    gl_FragColor += texture2D(texture, vUv + vec2(-4.0*px.x, -4.0*px.y))*0.0443683338718;
    gl_FragColor += texture2D(texture, vUv + vec2(-3.0*px.x, -3.0*px.y))*0.0776744219933;
    gl_FragColor += texture2D(texture, vUv + vec2(-2.0*px.x, -2.0*px.y))*0.115876621105;
    gl_FragColor += texture2D(texture, vUv + vec2(-1.0*px.x, -1.0*px.y))*0.147308056121;
    gl_FragColor += texture2D(texture, vUv                             )*0.159576912161;
    gl_FragColor += texture2D(texture, vUv + vec2( 1.0*px.x,  1.0*px.y))*0.147308056121;
    gl_FragColor += texture2D(texture, vUv + vec2( 2.0*px.x,  2.0*px.y))*0.115876621105;
    gl_FragColor += texture2D(texture, vUv + vec2( 3.0*px.x,  3.0*px.y))*0.0776744219933;
    gl_FragColor += texture2D(texture, vUv + vec2( 4.0*px.x,  4.0*px.y))*0.0443683338718;
    gl_FragColor += texture2D(texture, vUv + vec2( 5.0*px.x,  5.0*px.y))*0.0215963866053;
    gl_FragColor += texture2D(texture, vUv + vec2( 6.0*px.x,  6.0*px.y))*0.00895781211794;
    gl_FragColor += texture2D(texture, vUv + vec2( 7.0*px.x,  7.0*px.y))*0.0044299121055113265;
  }
`,p0e=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform vec2 px;
  uniform float m[9];
  void main(void) {
    vec4 c11 = texture2D(texture, vUv - px); // top left
    vec4 c12 = texture2D(texture, vec2(vUv.x, vUv.y - px.y)); // top center
    vec4 c13 = texture2D(texture, vec2(vUv.x + px.x, vUv.y - px.y)); // top right
    vec4 c21 = texture2D(texture, vec2(vUv.x - px.x, vUv.y) ); // mid left
    vec4 c22 = texture2D(texture, vUv); // mid center
    vec4 c23 = texture2D(texture, vec2(vUv.x + px.x, vUv.y) ); // mid right
    vec4 c31 = texture2D(texture, vec2(vUv.x - px.x, vUv.y + px.y) ); // bottom left
    vec4 c32 = texture2D(texture, vec2(vUv.x, vUv.y + px.y) ); // bottom center
    vec4 c33 = texture2D(texture, vUv + px ); // bottom right
    gl_FragColor = 
    c11 * m[0] + c12 * m[1] + c22 * m[2] +
    c21 * m[3] + c22 * m[4] + c23 * m[5] +
    c31 * m[6] + c32 * m[7] + c33 * m[8];
    gl_FragColor.a = c22.a;
  }
`,fm=(e,t,a)=>{const r=new RegExp("\\b"+t+" \\w+ (\\w+)","ig");e.replace(r,(n,s)=>(a[s]=0,n))},c0e=class{constructor(e,t,a){fe(this,"uniform",{}),fe(this,"attribute",{}),fe(this,"gl"),fe(this,"id"),fe(this,"compile",(s,i)=>{const o=this.gl.createShader(i);return o?(this.gl.shaderSource(o,s),this.gl.compileShader(o),this.gl.getShaderParameter(o,this.gl.COMPILE_STATUS)?o:(de(`filter: gl compile failed: ${this.gl.getShaderInfoLog(o)}`),null)):(de("filter: could not create shader"),null)}),this.gl=e;const r=this.compile(t,this.gl.VERTEX_SHADER),n=this.compile(a,this.gl.FRAGMENT_SHADER);if(this.id=this.gl.createProgram(),!(!r||!n)){if(!this.id){de("filter: could not create webgl program");return}if(this.gl.attachShader(this.id,r),this.gl.attachShader(this.id,n),this.gl.linkProgram(this.id),!this.gl.getProgramParameter(this.id,this.gl.LINK_STATUS)){de(`filter: gl link failed: ${this.gl.getProgramInfoLog(this.id)}`);return}this.gl.useProgram(this.id),fm(t,"attribute",this.attribute);for(const s in this.attribute)this.attribute[s]=this.gl.getAttribLocation(this.id,s);fm(t,"uniform",this.uniform),fm(a,"uniform",this.uniform);for(const s in this.uniform)this.uniform[s]=this.gl.getUniformLocation(this.id,s)}}};function f0e(){let e=0,t=null,a=!1,r=-1,n=[null,null],s=[],i=null,o=null;const l=Qr(100,100),d={},u={INTERMEDIATE:1},h=l.getContext("webgl");if(this.gl=h,!h){de("filter: cannot get webgl context");return}function p(A,x){if(!(A===l.width&&x===l.height)){if(l.width=A,l.height=x,!i){const b=new Float32Array([-1,-1,0,1,1,-1,1,1,-1,1,0,0,-1,1,0,0,1,-1,1,1,1,1,1,0]);i=h.createBuffer(),h.bindBuffer(h.ARRAY_BUFFER,i),h.bufferData(h.ARRAY_BUFFER,b,h.STATIC_DRAW),h.pixelStorei(h.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!0)}h.viewport(0,0,l.width,l.height),n=[null,null]}}function c(A,x){const b=h.createFramebuffer();h.bindFramebuffer(h.FRAMEBUFFER,b);const v=h.createRenderbuffer();h.bindRenderbuffer(h.RENDERBUFFER,v);const T=h.createTexture();return h.bindTexture(h.TEXTURE_2D,T),h.texImage2D(h.TEXTURE_2D,0,h.RGBA,A,x,0,h.RGBA,h.UNSIGNED_BYTE,null),h.texParameteri(h.TEXTURE_2D,h.TEXTURE_MAG_FILTER,h.LINEAR),h.texParameteri(h.TEXTURE_2D,h.TEXTURE_MIN_FILTER,h.LINEAR),h.texParameteri(h.TEXTURE_2D,h.TEXTURE_WRAP_S,h.CLAMP_TO_EDGE),h.texParameteri(h.TEXTURE_2D,h.TEXTURE_WRAP_T,h.CLAMP_TO_EDGE),h.framebufferTexture2D(h.FRAMEBUFFER,h.COLOR_ATTACHMENT0,h.TEXTURE_2D,T,0),h.bindTexture(h.TEXTURE_2D,null),h.bindFramebuffer(h.FRAMEBUFFER,null),{fbo:b,texture:T}}function f(A){return n[A]=n[A]||c(l.width,l.height),n[A]}function m(A=0){if(!o)return;let x=null,b=null,v=!1;e===0?x=t:x=f(r).texture||null,e++,a&&!(A&u.INTERMEDIATE)?(b=null,v=e%2===0):(r=(r+1)%2,b=f(r).fbo||null),h.bindTexture(h.TEXTURE_2D,x),h.bindFramebuffer(h.FRAMEBUFFER,b),h.uniform1f(o.uniform.flipY,v?-1:1),h.drawArrays(h.TRIANGLES,0,6)}function g(A){if(d[A])return o=d[A],h.useProgram((o?o.id:null)||null),o;if(o=new c0e(h,o0e,A),!o)return de("filter: could not get webgl program"),null;const x=Float32Array.BYTES_PER_ELEMENT,b=4*x;return h.enableVertexAttribArray(o.attribute.pos),h.vertexAttribPointer(o.attribute.pos,2,h.FLOAT,!1,b,0*x),h.enableVertexAttribArray(o.attribute.uv),h.vertexAttribPointer(o.attribute.uv,2,h.FLOAT,!1,b,2*x),d[A]=o,o}const y={colorMatrix:A=>{const x=new Float32Array(A);x[4]/=255,x[9]/=255,x[14]/=255,x[19]/=255;const b=x[18]===1&&x[3]===0&&x[8]===0&&x[13]===0&&x[15]===0&&x[16]===0&&x[17]===0&&x[19]===0?u0e:l0e,v=g(b);!v||(h.uniform1fv(v.uniform.m,x),m())},brightness:A=>{const x=(A||0)+1;y.colorMatrix([x,0,0,0,0,0,x,0,0,0,0,0,x,0,0,0,0,0,1,0])},saturation:A=>{const x=(A||0)*2/3+1,b=(x-1)*-.5;y.colorMatrix([x,b,b,0,0,b,x,b,0,0,b,b,x,0,0,0,0,0,1,0])},desaturate:()=>{y.saturation(-1)},contrast:A=>{const x=(A||0)+1,b=-128*(x-1);y.colorMatrix([x,0,0,0,b,0,x,0,0,b,0,0,x,0,b,0,0,0,1,0])},negative:()=>{y.contrast(-2)},hue:A=>{A=(A||0)/180*Math.PI;const x=Math.cos(A),b=Math.sin(A),v=.213,T=.715,C=.072;y.colorMatrix([v+x*(1-v)+b*-v,T+x*-T+b*-T,C+x*-C+b*(1-C),0,0,v+x*-v+b*.143,T+x*(1-T)+b*.14,C+x*-C+b*-.283,0,0,v+x*-v+b*-(1-v),T+x*-T+b*T,C+x*(1-C)+b*C,0,0,0,0,0,1,0])},desaturateLuminance:()=>{y.colorMatrix([.2764723,.929708,.0938197,0,-37.1,.2764723,.929708,.0938197,0,-37.1,.2764723,.929708,.0938197,0,-37.1,0,0,0,1,0])},sepia:()=>{y.colorMatrix([.393,.7689999,.18899999,0,0,.349,.6859999,.16799999,0,0,.272,.5339999,.13099999,0,0,0,0,0,1,0])},brownie:()=>{y.colorMatrix([.5997023498159715,.34553243048391263,-.2708298674538042,0,47.43192855600873,-.037703249837783157,.8609577587992641,.15059552388459913,0,-36.96841498319127,.24113635128153335,-.07441037908422492,.44972182064877153,0,-7.562075277591283,0,0,0,1,0])},vintagePinhole:()=>{y.colorMatrix([.6279345635605994,.3202183420819367,-.03965408211312453,0,9.651285835294123,.02578397704808868,.6441188644374771,.03259127616149294,0,7.462829176470591,.0466055556782719,-.0851232987247891,.5241648018700465,0,5.159190588235296,0,0,0,1,0])},kodachrome:()=>{y.colorMatrix([1.1285582396593525,-.3967382283601348,-.03992559172921793,0,63.72958762196502,-.16404339962244616,1.0835251566291304,-.05498805115633132,0,24.732407896706203,-.16786010706155763,-.5603416277695248,1.6014850761964943,0,35.62982807460946,0,0,0,1,0])},technicolor:()=>{y.colorMatrix([1.9125277891456083,-.8545344976951645,-.09155508482755585,0,11.793603434377337,-.3087833385928097,1.7658908555458428,-.10601743074722245,0,-70.35205161461398,-.231103377548616,-.7501899197440212,1.847597816108189,0,30.950940869491138,0,0,0,1,0])},polaroid:()=>{y.colorMatrix([1.438,-.062,-.062,0,0,-.122,1.378,-.122,0,0,-.016,-.016,1.483,0,0,0,0,0,1,0])},shiftToBGR:()=>{y.colorMatrix([0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0])},convolution:A=>{const x=new Float32Array(A),b=1/l.width,v=1/l.height,T=g(p0e);!T||(h.uniform1fv(T.uniform.m,x),h.uniform2f(T.uniform.px,b,v),m())},detectEdges:()=>{y.convolution.call(this,[0,1,0,1,-4,1,0,1,0])},sobelX:()=>{y.convolution.call(this,[-1,0,1,-2,0,2,-1,0,1])},sobelY:()=>{y.convolution.call(this,[-1,-2,-1,0,0,0,1,2,1])},sharpen:A=>{const x=A||1;y.convolution.call(this,[0,-1*x,0,-1*x,1+4*x,-1*x,0,-1*x,0])},emboss:A=>{const x=A||1;y.convolution.call(this,[-2*x,-1*x,0,-1*x,1,1*x,0,1*x,2*x])},blur:A=>{const x=A/7/l.width,b=A/7/l.height,v=g(h0e);!v||(h.uniform2f(v.uniform.px,0,b),m(u.INTERMEDIATE),h.uniform2f(v.uniform.px,x,0),m())},pixelate:A=>{const x=A/l.width,b=A/l.height,v=g(d0e);!v||(h.uniform2f(v.uniform.size,x,b),m())}};this.add=function(A){const x=Array.prototype.slice.call(arguments,1),b=y[A];s.push({func:b,args:x})},this.reset=function(){s=[]},this.get=function(){return s},this.apply=function(A){p(A.width,A.height),e=0,t||(t=h.createTexture()),h.bindTexture(h.TEXTURE_2D,t),h.texParameteri(h.TEXTURE_2D,h.TEXTURE_WRAP_S,h.CLAMP_TO_EDGE),h.texParameteri(h.TEXTURE_2D,h.TEXTURE_WRAP_T,h.CLAMP_TO_EDGE),h.texParameteri(h.TEXTURE_2D,h.TEXTURE_MIN_FILTER,h.NEAREST),h.texParameteri(h.TEXTURE_2D,h.TEXTURE_MAG_FILTER,h.NEAREST),h.texImage2D(h.TEXTURE_2D,0,h.RGBA,h.RGBA,h.UNSIGNED_BYTE,A);for(let x=0;x<s.length;x++){a=x===s.length-1;const b=s[x];b.func.apply(this,b.args||[])}return l},this.draw=function(A){return this.add("brightness",0),this.apply(A)}}async function L8(e){const t=e.shape.length===4?ft(e):e,a=va(t,3,2),r=[no(a[0]),no(a[1]),no(a[2])],n=[Fa(a[0]),Fa(a[1]),Fa(a[2])],s=await Promise.all(n.map(c=>c.data())),i=.99*Math.max(s[0][0],s[1][0],s[2][0]),o=[me(a[0],r[0]),me(a[1],r[1]),me(a[2],r[2])],l=[me(n[0],r[0]),me(n[1],r[1]),me(n[2],r[2])],d=[ge(i,l[0]),ge(i,l[1]),ge(i,l[2])],u=[V(o[0],d[0]),V(o[1],d[1]),V(o[2],d[2])],h=_a([u[0],u[1],u[2]],2),p=q(h,[1,t.shape[0],t.shape[1],3]);return ne([...a,...r,...n,...o,...l,...d,...u,h,t]),p}var Hp=2048,bt=null,oa=null,Wl=null,vt,Fn={inputSum:0,cacheDiff:1,sumMethod:0,inputTensor:void 0};function Qr(e,t){let a;if(Ne.browser)if(Ne.worker){if(typeof OffscreenCanvas=="undefined")throw new Error("canvas error: attempted to run in web worker but OffscreenCanvas is not supported");a=new OffscreenCanvas(e,t)}else{if(typeof document=="undefined")throw new Error("canvas error: attempted to run in browser but DOM is not defined");a=document.createElement("canvas"),a.width=e,a.height=t}else typeof Ne.Canvas!="undefined"?a=new Ne.Canvas(e,t):typeof globalThis.Canvas!="undefined"&&(a=new globalThis.Canvas(e,t));return a}function mm(e,t){const a=t||Qr(e.width,e.height);return a.getContext("2d").drawImage(e,0,0),a}async function Jc(e,t,a=!0){if(!e)return t.debug&&de("input error: input is missing"),{tensor:null,canvas:null};if(!(e instanceof et)&&!(typeof Image!="undefined"&&e instanceof Image)&&!(typeof Ne.Canvas!="undefined"&&e instanceof Ne.Canvas)&&!(typeof globalThis.Canvas!="undefined"&&e instanceof globalThis.Canvas)&&!(typeof ImageData!="undefined"&&e instanceof ImageData)&&!(typeof ImageBitmap!="undefined"&&e instanceof ImageBitmap)&&!(typeof HTMLImageElement!="undefined"&&e instanceof HTMLImageElement)&&!(typeof HTMLMediaElement!="undefined"&&e instanceof HTMLMediaElement)&&!(typeof HTMLVideoElement!="undefined"&&e instanceof HTMLVideoElement)&&!(typeof HTMLCanvasElement!="undefined"&&e instanceof HTMLCanvasElement)&&!(typeof OffscreenCanvas!="undefined"&&e instanceof OffscreenCanvas))throw new Error("input error: type is not recognized");if(e instanceof et){let r=null;if(e.isDisposedInternal)throw new Error("input error: attempted to use tensor but it is disposed");if(!e.shape)throw new Error("input error: attempted to use tensor without a shape");if(e.shape.length===3){if(e.shape[2]===3)r=ua(e,0);else if(e.shape[2]===4){const n=du(e,[0,0,0],[-1,-1,3]);r=ua(n,0),ne(n)}}else e.shape.length===4&&(e.shape[3]===3?r=Ha(e):e.shape[3]===4&&(r=hu(e,[0,0,0,0],[-1,-1,-1,3])));if(r==null||r.shape.length!==4||r.shape[0]!==1||r.shape[3]!==3)throw new Error(`input error: attempted to use tensor with unrecognized shape: ${e.shape}`);if(r.dtype==="int32"){const n=pe(r,"float32");ne(r),r=n}return{tensor:r,canvas:t.filter.return?oa:null}}else{if(typeof e.readyState!="undefined"&&e.readyState<=2)return t.debug&&de("input stream is not ready"),{tensor:null,canvas:bt};const r=e.naturalWidth||e.videoWidth||e.width||e.shape&&e.shape[1]>0,n=e.naturalHeight||e.videoHeight||e.height||e.shape&&e.shape[2]>0;if(!r||!n)return t.debug&&de("cannot determine input dimensions"),{tensor:null,canvas:bt};let s=r,i=n;if(s>Hp&&(s=Hp,i=Math.trunc(s*n/r)),i>Hp&&(i=Hp,s=Math.trunc(i*r/n)),(t.filter.width||0)>0?s=t.filter.width:(t.filter.height||0)>0&&(s=r*((t.filter.height||0)/n)),(t.filter.height||0)>0?i=t.filter.height:(t.filter.width||0)>0&&(i=n*((t.filter.width||0)/r)),!s||!i)throw new Error("input error: cannot determine dimension");(!bt||(bt==null?void 0:bt.width)!==s||(bt==null?void 0:bt.height)!==i)&&(bt=Qr(s,i));const o=bt.getContext("2d");if(typeof ImageData!="undefined"&&e instanceof ImageData?o.putImageData(e,0,0):t.filter.flip&&typeof o.translate!="undefined"?(o.translate(r,0),o.scale(-1,1),o.drawImage(e,0,0,r,n,0,0,bt==null?void 0:bt.width,bt==null?void 0:bt.height),o.setTransform(1,0,0,1,0,0)):o.drawImage(e,0,0,r,n,0,0,bt==null?void 0:bt.width,bt==null?void 0:bt.height),(!oa||bt.width!==oa.width||(bt==null?void 0:bt.height)!==(oa==null?void 0:oa.height))&&(oa=Qr(bt.width,bt.height)),t.filter.enabled&&Ne.webgl.supported){if(vt||(vt=Ne.browser?new f0e:null),Ne.filter=!!vt,!vt||!vt.add)return t.debug&&de("input process error: cannot initialize filters"),{tensor:null,canvas:bt};vt.reset(),t.filter.brightness!==0&&vt.add("brightness",t.filter.brightness),t.filter.contrast!==0&&vt.add("contrast",t.filter.contrast),t.filter.sharpness!==0&&vt.add("sharpen",t.filter.sharpness),t.filter.blur!==0&&vt.add("blur",t.filter.blur),t.filter.saturation!==0&&vt.add("saturation",t.filter.saturation),t.filter.hue!==0&&vt.add("hue",t.filter.hue),t.filter.negative&&vt.add("negative"),t.filter.sepia&&vt.add("sepia"),t.filter.vintage&&vt.add("brownie"),t.filter.sepia&&vt.add("sepia"),t.filter.kodachrome&&vt.add("kodachrome"),t.filter.technicolor&&vt.add("technicolor"),t.filter.polaroid&&vt.add("polaroid"),t.filter.pixelate!==0&&vt.add("pixelate",t.filter.pixelate),vt.get()>0?oa=vt.apply(bt):oa=vt.draw(bt)}else mm(bt,oa),vt&&(vt=null),Ne.filter=!!vt;if(!a)return{tensor:null,canvas:oa};if(!oa)throw new Error("canvas error: cannot create output");let l,d=3;if(typeof ImageData!="undefined"&&e instanceof ImageData||e.data&&e.width&&e.height)if(Ne.browser&&Ur)l=Ur?Ur.fromPixels(e):null;else{d=e.data.length/e.height/e.width;const p=new Uint8Array(e.data.buffer);l=lt(p,[e.height,e.width,d],"int32")}else if((!Wl||oa.width!==Wl.width||oa.height!==Wl.height)&&(Wl=Qr(oa.width,oa.height)),Ur&&Ne.browser)t.backend==="webgl"||t.backend==="humangl"||t.backend==="webgpu"?l=Ur.fromPixels(oa):(Wl=mm(oa),l=Ur.fromPixels(Wl));else{const f=mm(oa).getContext("2d").getImageData(0,0,s,i);d=f.data.length/s/i;const m=new Uint8Array(f.data.buffer);l=lt(m,[s,i,d])}if(d===4){const p=du(l,[0,0,0],[-1,-1,3]);ne(l),l=p}if(!l)throw new Error("input error: cannot create tensor");const u=pe(l,"float32"),h=t.filter.equalization?await L8(u):ua(u,0);return ne([l,u]),{tensor:h,canvas:t.filter.return?oa:null}}}async function m0e(e,t){let a=!1;if(e.cacheSensitivity===0||!t.shape||t.shape.length!==4||t.shape[1]>2048||t.shape[2]>2048)return a;if(!Fn.inputTensor)Fn.inputTensor=Ha(t);else if(Fn.inputTensor.shape[1]!==t.shape[1]||Fn.inputTensor.shape[2]!==t.shape[2])ne(Fn.inputTensor),Fn.inputTensor=Ha(t);else{const r={};r.diff=me(t,Fn.inputTensor),r.squared=V(r.diff,r.diff),r.sum=we(r.squared);const s=(await r.sum.data())[0]/(t.shape[1]||1)/(t.shape[2]||1)/255/3;ne([Fn.inputTensor,r.diff,r.squared,r.sum]),Fn.inputTensor=Ha(t),a=s<=(e.cacheSensitivity||0)}return a}async function g0e(e,t,a){const r={};if(!t||!a||t.shape.length!==4||t.shape.length!==a.shape.length)return e.debug||de("invalid input tensor or tensor shapes do not match:",t.shape,a.shape),0;if(t.shape[0]!==1||a.shape[0]!==1||t.shape[3]!==3||a.shape[3]!==3)return e.debug||de("input tensors must be of shape [1, height, width, 3]:",t.shape,a.shape),0;r.input1=Ha(t),r.input2=t.shape[1]!==a.shape[1]||t.shape[2]!==a.shape[2]?De.resizeBilinear(a,[t.shape[1],t.shape[2]]):Ha(a),r.diff=me(r.input1,r.input2),r.squared=V(r.diff,r.diff),r.sum=we(r.squared);const s=(await r.sum.data())[0]/(t.shape[1]||1)/(t.shape[2]||1)/255/3;return ne([r.input1,r.input2,r.diff,r.squared,r.sum]),s}var y0e=class{constructor(){if(fe(this,"browser"),fe(this,"node"),fe(this,"worker"),fe(this,"platform",""),fe(this,"agent",""),fe(this,"backends",[]),fe(this,"initial"),fe(this,"filter"),fe(this,"tfjs"),fe(this,"offscreen"),fe(this,"perfadd",!1),fe(this,"wasm",{supported:void 0,backend:void 0,simd:void 0,multithread:void 0}),fe(this,"webgl",{supported:void 0,backend:void 0,version:void 0,renderer:void 0}),fe(this,"webgpu",{supported:void 0,backend:void 0,adapter:void 0}),fe(this,"cpu",{model:void 0,flags:[]}),fe(this,"kernels",[]),fe(this,"Canvas"),fe(this,"Image"),fe(this,"ImageData"),this.browser=typeof navigator!="undefined",this.node=typeof process!="undefined"&&typeof process.versions!="undefined"&&typeof process.versions.node!="undefined",this.tfjs={version:hA["tfjs-core"]},this.offscreen=typeof OffscreenCanvas!="undefined",this.initial=!0,this.worker=this.browser&&this.offscreen?typeof WorkerGlobalScope!="undefined":void 0,typeof navigator!="undefined"){const e=navigator.userAgent.match(/\(([^()]+)\)/g);if(e&&e[0]){const t=e[0].match(/\(([^()]+)\)/g);this.platform=t&&t[0]?t[0].replace(/\(|\)/g,""):"",this.agent=navigator.userAgent.replace(e[0],""),this.platform[1]&&(this.agent=this.agent.replace(e[1],"")),this.agent=this.agent.replace(/  /g," ")}}else typeof process!="undefined"&&(this.platform=`${process.platform} ${process.arch}`,this.agent=`NodeJS ${process.version}`)}async updateBackend(){this.backends=Object.keys(sr().registryFactory),this.wasm.supported=typeof WebAssembly!="undefined",this.wasm.backend=this.backends.includes("wasm"),this.wasm.supported&&this.wasm.backend&&_r()==="wasm"&&(this.wasm.simd=await J().getAsync("WASM_HAS_SIMD_SUPPORT"),this.wasm.multithread=await J().getAsync("WASM_HAS_MULTITHREAD_SUPPORT"));const e=Qr(100,100),t=e?e.getContext("webgl2"):void 0;if(this.webgl.supported=typeof t!="undefined",this.webgl.backend=this.backends.includes("webgl"),this.webgl.supported&&this.webgl.backend&&(_r()==="webgl"||_r()==="humangl")){const a=Es().gpgpu!=="undefined"?await Es().getGPGPUContext().gl:null;a&&(this.webgl.version=a.getParameter(a.VERSION),this.webgl.renderer=a.getParameter(a.RENDERER))}this.webgpu.supported=this.browser&&typeof navigator.gpu!="undefined",this.webgpu.backend=this.backends.includes("webgpu");try{this.webgpu.supported&&(this.webgpu.adapter=(await navigator.gpu.requestAdapter()).name)}catch{this.webgpu.supported=!1}try{this.kernels=uo(_r()).map(a=>a.kernelName.toLowerCase())}catch{}}async updateCPU(){const e={model:"",flags:[]};this.node&&this.platform.startsWith("linux"),this.cpu?this.cpu=e:Object.defineProperty(this,"cpu",{value:e})}},Ne=new y0e,fs={cacheModels:!1,verbose:!0,debug:!1,modelBasePath:""};async function A0e(e,t){return fetch(e,t)}function x0e(e){fs.cacheModels=e.cacheModels,fs.verbose=e.debug,fs.modelBasePath=e.modelBasePath}async function Wt(e){const t=rT(fs.modelBasePath,e||""),a=t.split("/"),r="indexeddb://"+a[a.length-1].replace(".json",""),n=await Na.listModels(),s=fs.cacheModels&&Object.keys(n).includes(r),i=typeof fetch=="undefined"?{}:{fetchFunc:(l,d)=>A0e(l,d)},o=new Ty(s?r:t,i);try{o.findIOHandler(),fs.debug;const l=await o.handler.load();o.loadSync(l),fs.verbose&&de("load model:",o.modelUrl)}catch(l){de("error loading model:",t,l)}if(fs.cacheModels&&!s)try{const l=await o.save(r);de("model saved:",r,l)}catch(l){de("error saving model:",t,l)}return o}var Ib="2.6.3",jr,gm=[],b0e=["white","black","asian","indian","other"],v0e=[15,23,28,35.5,45.5,55.5,65],Sb=0,Tb=0,ym=Number.MAX_SAFE_INTEGER;async function w0e(e){return Ne.initial&&(jr=null),jr?e.debug&&de("cached model:",jr.modelUrl):jr=await Wt(e.face.gear),jr}async function Cb(e,t,a,r){var n,s;if(!jr)return{age:0,gender:"unknown",genderScore:0,race:[]};const i=ym<(((n=t.face.gear)==null?void 0:n.skipFrames)||0),o=(((s=t.face.gear)==null?void 0:s.skipTime)||0)>ue()-Tb;return t.skipAllowed&&o&&i&&Sb===r&&gm[a]?(ym++,gm[a]):(ym=0,new Promise(async l=>{var d,u;if(!(jr==null?void 0:jr.inputs[0].shape))return;const h={},p=[[0,.1,.9,.9]];h.resize=De.cropAndResize(e,p,[0],[jr.inputs[0].shape[2],jr.inputs[0].shape[1]]);const c={age:0,gender:"unknown",genderScore:0,race:[]};((d=t.face.gear)==null?void 0:d.enabled)&&([h.age,h.gender,h.race]=jr.execute(h.resize,["age_output","gender_output","race_output"]));const f=await h.gender.data();c.gender=f[0]>f[1]?"male":"female",c.genderScore=Math.round(100*(f[0]>f[1]?f[0]:f[1]))/100;const m=await h.race.data();for(let x=0;x<m.length;x++)m[x]>(((u=t.face.gear)==null?void 0:u.minConfidence)||.2)&&c.race.push({score:Math.round(100*m[x])/100,race:b0e[x]});c.race.sort((x,b)=>b.score-x.score);const y=Array.from(await h.age.data()).map((x,b)=>[v0e[b],x]).sort((x,b)=>b[1]-x[1]);let A=y[0][0];for(let x=1;x<y.length;x++)A+=y[x][1]*(y[x][0]-A);c.age=Math.round(10*A)/10,Object.keys(h).forEach(x=>ne(h[x])),gm[a]=c,Sb=r,Tb=ue(),l(c)}))}var xt={tf255:255,tf1:1,tf2:2,tf05:.5,tf127:127.5,rgb:[.2989,.587,.114]};function k0e(){xt.tf255=Ie(255,"float32"),xt.tf1=Ie(1,"float32"),xt.tf2=Ie(2,"float32"),xt.tf05=Ie(.5,"float32"),xt.tf127=Ie(127.5,"float32"),xt.rgb=Lt([.2989,.587,.114],"float32")}var mr,qp=[],Nb=0,Eb=0,Am=Number.MAX_SAFE_INTEGER;async function I0e(e){return Ne.initial&&(mr=null),mr?e.debug&&de("cached model:",mr.modelUrl):mr=await Wt(e.face.ssrnet.modelPathAge),mr}async function Rb(e,t,a,r){var n,s,i,o;if(!mr)return{age:0};const l=Am<(((n=t.face.ssrnet)==null?void 0:n.skipFrames)||0),d=(((s=t.face.ssrnet)==null?void 0:s.skipTime)||0)>ue()-Eb;return t.skipAllowed&&l&&d&&Nb===r&&((i=qp[a])==null?void 0:i.age)&&((o=qp[a])==null?void 0:o.age)>0?(Am++,qp[a]):(Am=0,new Promise(async u=>{if(!(mr==null?void 0:mr.inputs)||!mr.inputs[0]||!mr.inputs[0].shape)return;const h={};h.resize=De.resizeBilinear(e,[mr.inputs[0].shape[2],mr.inputs[0].shape[1]],!1),h.enhance=V(h.resize,xt.tf255);const p={age:0};if(t.face.ssrnet.enabled&&(h.age=mr.execute(h.enhance)),h.age){const c=await h.age.data();p.age=Math.trunc(10*c[0])/10}Object.keys(h).forEach(c=>ne(h[c])),qp[a]=p,Nb=r,Eb=ue(),u(p)}))}var Hr,Xp=[],Fb=0,$b=0,xm=Number.MAX_SAFE_INTEGER,bm=[.2989,.587,.114];async function S0e(e){return Ne.initial&&(Hr=null),Hr?e.debug&&de("cached model:",Hr.modelUrl):Hr=await Wt(e.face.ssrnet.modelPathGender),Hr}async function Mb(e,t,a,r){var n,s,i,o;if(!Hr)return{gender:"unknown",genderScore:0};const l=xm<(((n=t.face.ssrnet)==null?void 0:n.skipFrames)||0),d=(((s=t.face.ssrnet)==null?void 0:s.skipTime)||0)>ue()-$b;return t.skipAllowed&&l&&d&&Fb===r&&((i=Xp[a])==null?void 0:i.gender)&&((o=Xp[a])==null?void 0:o.genderScore)>0?(xm++,Xp[a]):(xm=0,new Promise(async u=>{if(!(Hr==null?void 0:Hr.inputs[0].shape))return;const h={};h.resize=De.resizeBilinear(e,[Hr.inputs[0].shape[2],Hr.inputs[0].shape[1]],!1),h.enhance=Z(()=>{const[f,m,g]=va(h.resize,3,3),y=V(f,bm[0]),A=V(m,bm[1]),x=V(g,bm[2]),b=f2([y,A,x]);return V(me(b,xt.tf05),2)});const p={gender:"unknown",genderScore:0};t.face.ssrnet.enabled&&(h.gender=Hr.execute(h.enhance));const c=await h.gender.data();p.gender=c[0]>c[1]?"female":"male",p.genderScore=c[0]>c[1]?Math.trunc(100*c[0])/100:Math.trunc(100*c[1])/100,Object.keys(h).forEach(f=>ne(h[f])),Xp[a]=p,Fb=r,$b=ue(),u(p)}))}var ar,Kp=[],vm=Number.MAX_SAFE_INTEGER,_b=0,zb=0;async function T0e(e){var t;return Ne.initial&&(ar=null),ar?e.debug&&de("cached model:",ar.modelUrl):ar=await Wt((t=e.face.antispoof)==null?void 0:t.modelPath),ar}async function Ob(e,t,a,r){var n,s;if(!ar)return 0;const i=(((n=t.face.antispoof)==null?void 0:n.skipTime)||0)>ue()-zb,o=vm<(((s=t.face.antispoof)==null?void 0:s.skipFrames)||0);return t.skipAllowed&&i&&o&&_b===r&&Kp[a]?(vm++,Kp[a]):(vm=0,new Promise(async l=>{const d=De.resizeBilinear(e,[(ar==null?void 0:ar.inputs[0].shape)?ar.inputs[0].shape[2]:0,(ar==null?void 0:ar.inputs[0].shape)?ar.inputs[0].shape[1]:0],!1),u=ar==null?void 0:ar.execute(d),h=(await u.data())[0];Kp[a]=Math.round(100*h)/100,_b=r,zb=ue(),ne([d,u]),l(Kp[a])}))}var Hn={silhouette:[10,338,297,332,284,251,389,356,454,323,361,288,397,365,379,378,400,377,152,148,176,149,150,136,172,58,132,93,234,127,162,21,54,103,67,109],lipsUpperOuter:[61,185,40,39,37,0,267,269,270,409,291],lipsLowerOuter:[146,91,181,84,17,314,405,321,375,291],lipsUpperInner:[78,191,80,81,82,13,312,311,310,415,308],lipsLowerInner:[78,95,88,178,87,14,317,402,318,324,308],rightEyeUpper0:[246,161,160,159,158,157,173],rightEyeLower0:[33,7,163,144,145,153,154,155,133],rightEyeUpper1:[247,30,29,27,28,56,190],rightEyeLower1:[130,25,110,24,23,22,26,112,243],rightEyeUpper2:[113,225,224,223,222,221,189],rightEyeLower2:[226,31,228,229,230,231,232,233,244],rightEyeLower3:[143,111,117,118,119,120,121,128,245],rightEyebrowUpper:[156,70,63,105,66,107,55,193],rightEyebrowLower:[35,124,46,53,52,65],rightEyeIris:[473,474,475,476,477],leftEyeUpper0:[466,388,387,386,385,384,398],leftEyeLower0:[263,249,390,373,374,380,381,382,362],leftEyeUpper1:[467,260,259,257,258,286,414],leftEyeLower1:[359,255,339,254,253,252,256,341,463],leftEyeUpper2:[342,445,444,443,442,441,413],leftEyeLower2:[446,261,448,449,450,451,452,453,464],leftEyeLower3:[372,340,346,347,348,349,350,357,465],leftEyebrowUpper:[383,300,293,334,296,336,285,417],leftEyebrowLower:[265,353,276,283,282,295],leftEyeIris:[468,469,470,471,472],midwayBetweenEyes:[168],noseTip:[1],noseBottom:[2],noseRightCorner:[98],noseLeftCorner:[327],rightCheek:[205],leftCheek:[425]},Db={count:468,mouth:13,symmetryLine:[13,Hn.midwayBetweenEyes[0]]},Hg={leftEye:0,rightEye:1,nose:2,mouth:3,leftEar:4,rightEar:5,symmetryLine:[3,2]},Pb=[{key:"EyeUpper0",indices:[9,10,11,12,13,14,15]},{key:"EyeUpper1",indices:[25,26,27,28,29,30,31]},{key:"EyeUpper2",indices:[41,42,43,44,45,46,47]},{key:"EyeLower0",indices:[0,1,2,3,4,5,6,7,8]},{key:"EyeLower1",indices:[16,17,18,19,20,21,22,23,24]},{key:"EyeLower2",indices:[32,33,34,35,36,37,38,39,40]},{key:"EyeLower3",indices:[54,55,56,57,58,59,60,61,62]}],U0=[[.499976992607117,.652534008026123],[.500025987625122,.547487020492554],[.499974012374878,.602371990680695],[.482113003730774,.471979022026062],[.500150978565216,.527155995368958],[.499909996986389,.498252987861633],[.499523013830185,.40106201171875],[.289712011814117,.380764007568359],[.499954998493195,.312398016452789],[.499987006187439,.269918978214264],[.500023007392883,.107050001621246],[.500023007392883,.666234016418457],[.5000159740448,.679224014282227],[.500023007392883,.692348003387451],[.499976992607117,.695277988910675],[.499976992607117,.70593398809433],[.499976992607117,.719385027885437],[.499976992607117,.737019002437592],[.499967992305756,.781370997428894],[.499816000461578,.562981009483337],[.473773002624512,.573909997940063],[.104906998574734,.254140973091125],[.365929991006851,.409575998783112],[.338757991790771,.41302502155304],[.311120003461838,.409460008144379],[.274657994508743,.389131009578705],[.393361985683441,.403706014156342],[.345234006643295,.344011008739471],[.370094001293182,.346076011657715],[.319321990013123,.347265005111694],[.297903001308441,.353591024875641],[.24779200553894,.410809993743896],[.396889001131058,.842755019664764],[.280097991228104,.375599980354309],[.106310002505779,.399955987930298],[.2099249958992,.391353011131287],[.355807989835739,.534406006336212],[.471751004457474,.65040397644043],[.474155008792877,.680191993713379],[.439785003662109,.657229006290436],[.414617002010345,.66654098033905],[.450374007225037,.680860996246338],[.428770989179611,.682690978050232],[.374971002340317,.727805018424988],[.486716985702515,.547628998756409],[.485300987958908,.527395009994507],[.257764995098114,.314490020275116],[.401223003864288,.455172002315521],[.429818987846375,.548614978790283],[.421351999044418,.533740997314453],[.276895999908447,.532056987285614],[.483370006084442,.499586999416351],[.33721199631691,.282882988452911],[.296391993761063,.293242990970612],[.169294998049736,.193813979625702],[.447580009698868,.302609980106354],[.392390012741089,.353887975215912],[.354490011930466,.696784019470215],[.067304998636246,.730105042457581],[.442739009857178,.572826027870178],[.457098007202148,.584792017936707],[.381974011659622,.694710969924927],[.392388999462128,.694203019142151],[.277076005935669,.271932005882263],[.422551989555359,.563233017921448],[.385919004678726,.281364023685455],[.383103013038635,.255840003490448],[.331431001424789,.119714021682739],[.229923993349075,.232002973556519],[.364500999450684,.189113974571228],[.229622006416321,.299540996551514],[.173287004232407,.278747975826263],[.472878992557526,.666198015213013],[.446828007698059,.668527007102966],[.422762006521225,.673889994621277],[.445307999849319,.580065965652466],[.388103008270264,.693961024284363],[.403039008378983,.706539988517761],[.403629004955292,.693953037261963],[.460041999816895,.557139039039612],[.431158006191254,.692366003990173],[.452181994915009,.692366003990173],[.475387006998062,.692366003990173],[.465828001499176,.779190003871918],[.472328990697861,.736225962638855],[.473087012767792,.717857003211975],[.473122000694275,.704625964164734],[.473033010959625,.695277988910675],[.427942007780075,.695277988910675],[.426479011774063,.703539967536926],[.423162013292313,.711845993995667],[.4183090031147,.720062971115112],[.390094995498657,.639572978019714],[.013953999616206,.560034036636353],[.499913990497589,.58014702796936],[.413199990987778,.69539999961853],[.409626007080078,.701822996139526],[.468080013990402,.601534962654114],[.422728985548019,.585985004901886],[.463079988956451,.593783974647522],[.37211999297142,.47341400384903],[.334562003612518,.496073007583618],[.411671012639999,.546965003013611],[.242175996303558,.14767599105835],[.290776997804642,.201445996761322],[.327338010072708,.256527006626129],[.399509996175766,.748921036720276],[.441727995872498,.261676013469696],[.429764986038208,.187834024429321],[.412198007106781,.108901023864746],[.288955003023148,.398952007293701],[.218936994671822,.435410976409912],[.41278201341629,.398970007896423],[.257135003805161,.355440020561218],[.427684992551804,.437960982322693],[.448339998722076,.536936044692993],[.178560003638268,.45755398273468],[.247308000922203,.457193970680237],[.286267012357712,.467674970626831],[.332827985286713,.460712015628815],[.368755996227264,.447206974029541],[.398963987827301,.432654976844788],[.476410001516342,.405806005001068],[.189241006970406,.523923993110657],[.228962004184723,.348950982093811],[.490725994110107,.562400996685028],[.404670000076294,.485132992267609],[.019469000399113,.401564002037048],[.426243007183075,.420431017875671],[.396993011236191,.548797011375427],[.266469985246658,.376977026462555],[.439121007919312,.51895797252655],[.032313998788595,.644356966018677],[.419054001569748,.387154996395111],[.462783008813858,.505746960639954],[.238978996872902,.779744982719421],[.198220998048782,.831938028335571],[.107550002634525,.540755033493042],[.183610007166862,.740257024765015],[.134409993886948,.333683013916016],[.385764002799988,.883153975009918],[.490967005491257,.579378008842468],[.382384985685349,.508572995662689],[.174399003386497,.397670984268188],[.318785011768341,.39623498916626],[.343364000320435,.400596976280212],[.396100014448166,.710216999053955],[.187885001301765,.588537991046906],[.430987000465393,.944064974784851],[.318993002176285,.898285031318665],[.266247987747192,.869701027870178],[.500023007392883,.190576016902924],[.499976992607117,.954452991485596],[.366169989109039,.398822009563446],[.393207013607025,.39553701877594],[.410373002290726,.391080021858215],[.194993004202843,.342101991176605],[.388664990663528,.362284004688263],[.365961998701096,.355970978736877],[.343364000320435,.355356991291046],[.318785011768341,.35834002494812],[.301414996385574,.363156020641327],[.058132998645306,.319076001644135],[.301414996385574,.387449026107788],[.499987989664078,.618434011936188],[.415838003158569,.624195992946625],[.445681989192963,.566076993942261],[.465844005346298,.620640993118286],[.49992299079895,.351523995399475],[.288718998432159,.819945991039276],[.335278987884521,.852819979190826],[.440512001514435,.902418971061707],[.128294005990028,.791940987110138],[.408771991729736,.373893976211548],[.455606997013092,.451801002025604],[.499877005815506,.908990025520325],[.375436991453171,.924192011356354],[.11421000212431,.615022003650665],[.448662012815475,.695277988910675],[.4480200111866,.704632043838501],[.447111994028091,.715808033943176],[.444831997156143,.730794012546539],[.430011987686157,.766808986663818],[.406787008047104,.685672998428345],[.400738000869751,.681069016456604],[.392399996519089,.677703022956848],[.367855995893478,.663918972015381],[.247923001646996,.601333022117615],[.452769994735718,.420849978923798],[.43639200925827,.359887003898621],[.416164010763168,.368713974952698],[.413385987281799,.692366003990173],[.228018000721931,.683571994304657],[.468268007040024,.352671027183533],[.411361992359161,.804327011108398],[.499989002943039,.469825029373169],[.479153990745544,.442654013633728],[.499974012374878,.439637005329132],[.432112008333206,.493588984012604],[.499886006116867,.866917014122009],[.49991300702095,.821729004383087],[.456548988819122,.819200992584229],[.344549000263214,.745438992977142],[.37890899181366,.574010014533997],[.374292999505997,.780184984207153],[.319687992334366,.570737957954407],[.357154995203018,.604269981384277],[.295284003019333,.621580958366394],[.447750002145767,.862477004528046],[.410986006259918,.508723020553589],[.31395098567009,.775308012962341],[.354128003120422,.812552988529205],[.324548006057739,.703992962837219],[.189096003770828,.646299958229065],[.279776990413666,.71465802192688],[.1338230073452,.682700991630554],[.336768001317978,.644733011722565],[.429883986711502,.466521978378296],[.455527991056442,.548622965812683],[.437114000320435,.558896005153656],[.467287987470627,.529924988746643],[.414712011814117,.335219979286194],[.37704598903656,.322777986526489],[.344107985496521,.320150971412659],[.312875986099243,.32233202457428],[.283526003360748,.333190023899078],[.241245999932289,.382785975933075],[.102986000478268,.468762993812561],[.267612010240555,.424560010433197],[.297879010438919,.433175981044769],[.333433985710144,.433878004550934],[.366427004337311,.426115989685059],[.396012008190155,.416696012020111],[.420121014118195,.41022801399231],[.007561000064015,.480777025222778],[.432949006557465,.569517970085144],[.458638995885849,.479089021682739],[.473466008901596,.545744001865387],[.476087987422943,.563830018043518],[.468472003936768,.555056989192963],[.433990985155106,.582361996173859],[.483518004417419,.562983989715576],[.482482999563217,.57784903049469],[.42645001411438,.389798998832703],[.438998997211456,.39649498462677],[.450067013502121,.400434017181396],[.289712011814117,.368252992630005],[.276670008897781,.363372981548309],[.517862021923065,.471948027610779],[.710287988185883,.380764007568359],[.526226997375488,.573909997940063],[.895093023777008,.254140973091125],[.634069979190826,.409575998783112],[.661242008209229,.41302502155304],[.688880026340485,.409460008144379],[.725341975688934,.389131009578705],[.606630027294159,.40370500087738],[.654766023159027,.344011008739471],[.629905998706818,.346076011657715],[.680678009986877,.347265005111694],[.702096998691559,.353591024875641],[.75221198797226,.410804986953735],[.602918028831482,.842862963676453],[.719901978969574,.375599980354309],[.893692970275879,.399959981441498],[.790081977844238,.391354024410248],[.643998026847839,.534487962722778],[.528249025344849,.65040397644043],[.525849997997284,.680191040039062],[.560214996337891,.657229006290436],[.585384011268616,.66654098033905],[.549625992774963,.680860996246338],[.57122802734375,.682691991329193],[.624852001667023,.72809898853302],[.513050019741058,.547281980514526],[.51509702205658,.527251958847046],[.742246985435486,.314507007598877],[.598631024360657,.454979002475739],[.570338010787964,.548575043678284],[.578631997108459,.533622980117798],[.723087012767792,.532054007053375],[.516445994377136,.499638974666595],[.662801027297974,.282917976379395],[.70362401008606,.293271005153656],[.830704987049103,.193813979625702],[.552385985851288,.302568018436432],[.607609987258911,.353887975215912],[.645429015159607,.696707010269165],[.932694971561432,.730105042457581],[.557260990142822,.572826027870178],[.542901992797852,.584792017936707],[.6180260181427,.694710969924927],[.607590973377228,.694203019142151],[.722943007946014,.271963000297546],[.577413976192474,.563166975975037],[.614082992076874,.281386971473694],[.616907000541687,.255886018276215],[.668509006500244,.119913995265961],[.770092010498047,.232020974159241],[.635536015033722,.189248979091644],[.77039098739624,.299556016921997],[.826722025871277,.278755009174347],[.527121007442474,.666198015213013],[.553171992301941,.668527007102966],[.577238023281097,.673889994621277],[.554691970348358,.580065965652466],[.611896991729736,.693961024284363],[.59696102142334,.706539988517761],[.596370995044708,.693953037261963],[.539958000183105,.557139039039612],[.568841993808746,.692366003990173],[.547818005084991,.692366003990173],[.52461302280426,.692366003990173],[.534089982509613,.779141008853912],[.527670979499817,.736225962638855],[.526912987232208,.717857003211975],[.526877999305725,.704625964164734],[.526966989040375,.695277988910675],[.572058022022247,.695277988910675],[.573521018028259,.703539967536926],[.57683801651001,.711845993995667],[.581691026687622,.720062971115112],[.609944999217987,.639909982681274],[.986046016216278,.560034036636353],[.5867999792099,.69539999961853],[.590372025966644,.701822996139526],[.531915009021759,.601536989212036],[.577268004417419,.585934996604919],[.536915004253387,.593786001205444],[.627542972564697,.473352015018463],[.665585994720459,.495950996875763],[.588353991508484,.546862006187439],[.757824003696442,.14767599105835],[.709249973297119,.201507985591888],[.672684013843536,.256581008434296],[.600408971309662,.74900496006012],[.55826598405838,.261672019958496],[.570303976535797,.187870979309082],[.588165998458862,.109044015407562],[.711045026779175,.398952007293701],[.781069993972778,.435405015945435],[.587247014045715,.398931980133057],[.742869973182678,.355445981025696],[.572156012058258,.437651991844177],[.55186802148819,.536570012569427],[.821442008018494,.457556009292603],[.752701997756958,.457181990146637],[.71375697851181,.467626988887787],[.66711300611496,.460672974586487],[.631101012229919,.447153985500336],[.6008620262146,.432473003864288],[.523481011390686,.405627012252808],[.810747981071472,.523926019668579],[.771045982837677,.348959028720856],[.509127020835876,.562718033790588],[.595292985439301,.485023975372314],[.980530977249146,.401564002037048],[.573499977588654,.420000016689301],[.602994978427887,.548687994480133],[.733529984951019,.376977026462555],[.560611009597778,.519016981124878],[.967685997486115,.644356966018677],[.580985009670258,.387160003185272],[.537728011608124,.505385041236877],[.760966002941132,.779752969741821],[.801778972148895,.831938028335571],[.892440974712372,.54076099395752],[.816350996494293,.740260004997253],[.865594983100891,.333687007427216],[.614073991775513,.883246004581451],[.508952975273132,.579437971115112],[.617941975593567,.508316040039062],[.825608015060425,.397674977779388],[.681214988231659,.39623498916626],[.656635999679565,.400596976280212],[.603900015354156,.710216999053955],[.81208598613739,.588539004325867],[.56801301240921,.944564998149872],[.681007981300354,.898285031318665],[.733752012252808,.869701027870178],[.633830010890961,.398822009563446],[.606792986392975,.39553701877594],[.589659988880157,.391062021255493],[.805015981197357,.342108011245728],[.611334979534149,.362284004688263],[.634037971496582,.355970978736877],[.656635999679565,.355356991291046],[.681214988231659,.35834002494812],[.698584973812103,.363156020641327],[.941866993904114,.319076001644135],[.698584973812103,.387449026107788],[.584177017211914,.624107003211975],[.554318010807037,.566076993942261],[.534153997898102,.62064003944397],[.711217999458313,.819975018501282],[.664629995822906,.852871000766754],[.559099972248077,.902631998062134],[.871706008911133,.791940987110138],[.591234028339386,.373893976211548],[.544341027736664,.451583981513977],[.624562978744507,.924192011356354],[.88577002286911,.615028977394104],[.551338016986847,.695277988910675],[.551980018615723,.704632043838501],[.552887976169586,.715808033943176],[.555167973041534,.730794012546539],[.569944024085999,.767035007476807],[.593203008174896,.685675978660583],[.599261999130249,.681069016456604],[.607599973678589,.677703022956848],[.631937980651855,.663500010967255],[.752032995223999,.601315021514893],[.547226011753082,.420395016670227],[.563543975353241,.359827995300293],[.583841025829315,.368713974952698],[.586614012718201,.692366003990173],[.771915018558502,.683578014373779],[.531597018241882,.352482974529266],[.588370978832245,.804440975189209],[.52079701423645,.442565023899078],[.567984998226166,.493479013442993],[.543282985687256,.819254994392395],[.655317008495331,.745514988899231],[.621008992195129,.574018001556396],[.625559985637665,.78031200170517],[.680198013782501,.570719003677368],[.64276397228241,.604337990283966],[.704662978649139,.621529996395111],[.552012026309967,.862591981887817],[.589071989059448,.508637011051178],[.685944974422455,.775357007980347],[.645735025405884,.812640011310577],[.675342977046967,.703978002071381],[.810858011245728,.646304965019226],[.72012197971344,.714666962623596],[.866151988506317,.682704985141754],[.663187026977539,.644596993923187],[.570082008838654,.466325998306274],[.544561982154846,.548375964164734],[.562758982181549,.558784961700439],[.531987011432648,.530140042304993],[.585271000862122,.335177004337311],[.622952997684479,.32277899980545],[.655896008014679,.320163011550903],[.687132000923157,.322345972061157],[.716481983661652,.333200991153717],[.758756995201111,.382786989212036],[.897013008594513,.468769013881683],[.732392013072968,.424547016620636],[.70211398601532,.433162987232208],[.66652500629425,.433866024017334],[.633504986763,.426087975502014],[.603875994682312,.416586995124817],[.579657971858978,.409945011138916],[.992439985275269,.480777025222778],[.567192018032074,.569419980049133],[.54136598110199,.478899002075195],[.526564002037048,.546118021011353],[.523913025856018,.563830018043518],[.531529009342194,.555056989192963],[.566035985946655,.582329034805298],[.51631098985672,.563053965568542],[.5174720287323,.577877044677734],[.573594987392426,.389806985855103],[.560697972774506,.395331978797913],[.549755990505219,.399751007556915],[.710287988185883,.368252992630005],[.723330020904541,.363372981548309]],Ud=[127,34,139,11,0,37,232,231,120,72,37,39,128,121,47,232,121,128,104,69,67,175,171,148,157,154,155,118,50,101,73,39,40,9,151,108,48,115,131,194,204,211,74,40,185,80,42,183,40,92,186,230,229,118,202,212,214,83,18,17,76,61,146,160,29,30,56,157,173,106,204,194,135,214,192,203,165,98,21,71,68,51,45,4,144,24,23,77,146,91,205,50,187,201,200,18,91,106,182,90,91,181,85,84,17,206,203,36,148,171,140,92,40,39,193,189,244,159,158,28,247,246,161,236,3,196,54,68,104,193,168,8,117,228,31,189,193,55,98,97,99,126,47,100,166,79,218,155,154,26,209,49,131,135,136,150,47,126,217,223,52,53,45,51,134,211,170,140,67,69,108,43,106,91,230,119,120,226,130,247,63,53,52,238,20,242,46,70,156,78,62,96,46,53,63,143,34,227,173,155,133,123,117,111,44,125,19,236,134,51,216,206,205,154,153,22,39,37,167,200,201,208,36,142,100,57,212,202,20,60,99,28,158,157,35,226,113,160,159,27,204,202,210,113,225,46,43,202,204,62,76,77,137,123,116,41,38,72,203,129,142,64,98,240,49,102,64,41,73,74,212,216,207,42,74,184,169,170,211,170,149,176,105,66,69,122,6,168,123,147,187,96,77,90,65,55,107,89,90,180,101,100,120,63,105,104,93,137,227,15,86,85,129,102,49,14,87,86,55,8,9,100,47,121,145,23,22,88,89,179,6,122,196,88,95,96,138,172,136,215,58,172,115,48,219,42,80,81,195,3,51,43,146,61,171,175,199,81,82,38,53,46,225,144,163,110,246,33,7,52,65,66,229,228,117,34,127,234,107,108,69,109,108,151,48,64,235,62,78,191,129,209,126,111,35,143,163,161,246,117,123,50,222,65,52,19,125,141,221,55,65,3,195,197,25,7,33,220,237,44,70,71,139,122,193,245,247,130,33,71,21,162,153,158,159,170,169,150,188,174,196,216,186,92,144,160,161,2,97,167,141,125,241,164,167,37,72,38,12,145,159,160,38,82,13,63,68,71,226,35,111,158,153,154,101,50,205,206,92,165,209,198,217,165,167,97,220,115,218,133,112,243,239,238,241,214,135,169,190,173,133,171,208,32,125,44,237,86,87,178,85,86,179,84,85,180,83,84,181,201,83,182,137,93,132,76,62,183,61,76,184,57,61,185,212,57,186,214,207,187,34,143,156,79,239,237,123,137,177,44,1,4,201,194,32,64,102,129,213,215,138,59,166,219,242,99,97,2,94,141,75,59,235,24,110,228,25,130,226,23,24,229,22,23,230,26,22,231,112,26,232,189,190,243,221,56,190,28,56,221,27,28,222,29,27,223,30,29,224,247,30,225,238,79,20,166,59,75,60,75,240,147,177,215,20,79,166,187,147,213,112,233,244,233,128,245,128,114,188,114,217,174,131,115,220,217,198,236,198,131,134,177,132,58,143,35,124,110,163,7,228,110,25,356,389,368,11,302,267,452,350,349,302,303,269,357,343,277,452,453,357,333,332,297,175,152,377,384,398,382,347,348,330,303,304,270,9,336,337,278,279,360,418,262,431,304,408,409,310,415,407,270,409,410,450,348,347,422,430,434,313,314,17,306,307,375,387,388,260,286,414,398,335,406,418,364,367,416,423,358,327,251,284,298,281,5,4,373,374,253,307,320,321,425,427,411,421,313,18,321,405,406,320,404,405,315,16,17,426,425,266,377,400,369,322,391,269,417,465,464,386,257,258,466,260,388,456,399,419,284,332,333,417,285,8,346,340,261,413,441,285,327,460,328,355,371,329,392,439,438,382,341,256,429,420,360,364,394,379,277,343,437,443,444,283,275,440,363,431,262,369,297,338,337,273,375,321,450,451,349,446,342,467,293,334,282,458,461,462,276,353,383,308,324,325,276,300,293,372,345,447,382,398,362,352,345,340,274,1,19,456,248,281,436,427,425,381,256,252,269,391,393,200,199,428,266,330,329,287,273,422,250,462,328,258,286,384,265,353,342,387,259,257,424,431,430,342,353,276,273,335,424,292,325,307,366,447,345,271,303,302,423,266,371,294,455,460,279,278,294,271,272,304,432,434,427,272,407,408,394,430,431,395,369,400,334,333,299,351,417,168,352,280,411,325,319,320,295,296,336,319,403,404,330,348,349,293,298,333,323,454,447,15,16,315,358,429,279,14,15,316,285,336,9,329,349,350,374,380,252,318,402,403,6,197,419,318,319,325,367,364,365,435,367,397,344,438,439,272,271,311,195,5,281,273,287,291,396,428,199,311,271,268,283,444,445,373,254,339,263,466,249,282,334,296,449,347,346,264,447,454,336,296,299,338,10,151,278,439,455,292,407,415,358,371,355,340,345,372,390,249,466,346,347,280,442,443,282,19,94,370,441,442,295,248,419,197,263,255,359,440,275,274,300,383,368,351,412,465,263,467,466,301,368,389,380,374,386,395,378,379,412,351,419,436,426,322,373,390,388,2,164,393,370,462,461,164,0,267,302,11,12,374,373,387,268,12,13,293,300,301,446,261,340,385,384,381,330,266,425,426,423,391,429,355,437,391,327,326,440,457,438,341,382,362,459,457,461,434,430,394,414,463,362,396,369,262,354,461,457,316,403,402,315,404,403,314,405,404,313,406,405,421,418,406,366,401,361,306,408,407,291,409,408,287,410,409,432,436,410,434,416,411,264,368,383,309,438,457,352,376,401,274,275,4,421,428,262,294,327,358,433,416,367,289,455,439,462,370,326,2,326,370,305,460,455,254,449,448,255,261,446,253,450,449,252,451,450,256,452,451,341,453,452,413,464,463,441,413,414,258,442,441,257,443,442,259,444,443,260,445,444,467,342,445,459,458,250,289,392,290,290,328,460,376,433,435,250,290,392,411,416,433,341,463,464,453,464,465,357,465,412,343,412,399,360,363,440,437,399,456,420,456,363,401,435,288,372,383,353,339,255,249,448,261,255,133,243,190,133,155,112,33,246,247,33,130,25,398,384,286,362,398,414,362,463,341,263,359,467,263,249,255,466,467,260,75,60,166,238,239,79,162,127,139,72,11,37,121,232,120,73,72,39,114,128,47,233,232,128,103,104,67,152,175,148,173,157,155,119,118,101,74,73,40,107,9,108,49,48,131,32,194,211,184,74,185,191,80,183,185,40,186,119,230,118,210,202,214,84,83,17,77,76,146,161,160,30,190,56,173,182,106,194,138,135,192,129,203,98,54,21,68,5,51,4,145,144,23,90,77,91,207,205,187,83,201,18,181,91,182,180,90,181,16,85,17,205,206,36,176,148,140,165,92,39,245,193,244,27,159,28,30,247,161,174,236,196,103,54,104,55,193,8,111,117,31,221,189,55,240,98,99,142,126,100,219,166,218,112,155,26,198,209,131,169,135,150,114,47,217,224,223,53,220,45,134,32,211,140,109,67,108,146,43,91,231,230,120,113,226,247,105,63,52,241,238,242,124,46,156,95,78,96,70,46,63,116,143,227,116,123,111,1,44,19,3,236,51,207,216,205,26,154,22,165,39,167,199,200,208,101,36,100,43,57,202,242,20,99,56,28,157,124,35,113,29,160,27,211,204,210,124,113,46,106,43,204,96,62,77,227,137,116,73,41,72,36,203,142,235,64,240,48,49,64,42,41,74,214,212,207,183,42,184,210,169,211,140,170,176,104,105,69,193,122,168,50,123,187,89,96,90,66,65,107,179,89,180,119,101,120,68,63,104,234,93,227,16,15,85,209,129,49,15,14,86,107,55,9,120,100,121,153,145,22,178,88,179,197,6,196,89,88,96,135,138,136,138,215,172,218,115,219,41,42,81,5,195,51,57,43,61,208,171,199,41,81,38,224,53,225,24,144,110,105,52,66,118,229,117,227,34,234,66,107,69,10,109,151,219,48,235,183,62,191,142,129,126,116,111,143,7,163,246,118,117,50,223,222,52,94,19,141,222,221,65,196,3,197,45,220,44,156,70,139,188,122,245,139,71,162,145,153,159,149,170,150,122,188,196,206,216,92,163,144,161,164,2,167,242,141,241,0,164,37,11,72,12,144,145,160,12,38,13,70,63,71,31,226,111,157,158,154,36,101,205,203,206,165,126,209,217,98,165,97,237,220,218,237,239,241,210,214,169,140,171,32,241,125,237,179,86,178,180,85,179,181,84,180,182,83,181,194,201,182,177,137,132,184,76,183,185,61,184,186,57,185,216,212,186,192,214,187,139,34,156,218,79,237,147,123,177,45,44,4,208,201,32,98,64,129,192,213,138,235,59,219,141,242,97,97,2,141,240,75,235,229,24,228,31,25,226,230,23,229,231,22,230,232,26,231,233,112,232,244,189,243,189,221,190,222,28,221,223,27,222,224,29,223,225,30,224,113,247,225,99,60,240,213,147,215,60,20,166,192,187,213,243,112,244,244,233,245,245,128,188,188,114,174,134,131,220,174,217,236,236,198,134,215,177,58,156,143,124,25,110,7,31,228,25,264,356,368,0,11,267,451,452,349,267,302,269,350,357,277,350,452,357,299,333,297,396,175,377,381,384,382,280,347,330,269,303,270,151,9,337,344,278,360,424,418,431,270,304,409,272,310,407,322,270,410,449,450,347,432,422,434,18,313,17,291,306,375,259,387,260,424,335,418,434,364,416,391,423,327,301,251,298,275,281,4,254,373,253,375,307,321,280,425,411,200,421,18,335,321,406,321,320,405,314,315,17,423,426,266,396,377,369,270,322,269,413,417,464,385,386,258,248,456,419,298,284,333,168,417,8,448,346,261,417,413,285,326,327,328,277,355,329,309,392,438,381,382,256,279,429,360,365,364,379,355,277,437,282,443,283,281,275,363,395,431,369,299,297,337,335,273,321,348,450,349,359,446,467,283,293,282,250,458,462,300,276,383,292,308,325,283,276,293,264,372,447,346,352,340,354,274,19,363,456,281,426,436,425,380,381,252,267,269,393,421,200,428,371,266,329,432,287,422,290,250,328,385,258,384,446,265,342,386,387,257,422,424,430,445,342,276,422,273,424,306,292,307,352,366,345,268,271,302,358,423,371,327,294,460,331,279,294,303,271,304,436,432,427,304,272,408,395,394,431,378,395,400,296,334,299,6,351,168,376,352,411,307,325,320,285,295,336,320,319,404,329,330,349,334,293,333,366,323,447,316,15,315,331,358,279,317,14,316,8,285,9,277,329,350,253,374,252,319,318,403,351,6,419,324,318,325,397,367,365,288,435,397,278,344,439,310,272,311,248,195,281,375,273,291,175,396,199,312,311,268,276,283,445,390,373,339,295,282,296,448,449,346,356,264,454,337,336,299,337,338,151,294,278,455,308,292,415,429,358,355,265,340,372,388,390,466,352,346,280,295,442,282,354,19,370,285,441,295,195,248,197,457,440,274,301,300,368,417,351,465,251,301,389,385,380,386,394,395,379,399,412,419,410,436,322,387,373,388,326,2,393,354,370,461,393,164,267,268,302,12,386,374,387,312,268,13,298,293,301,265,446,340,380,385,381,280,330,425,322,426,391,420,429,437,393,391,326,344,440,438,458,459,461,364,434,394,428,396,262,274,354,457,317,316,402,316,315,403,315,314,404,314,313,405,313,421,406,323,366,361,292,306,407,306,291,408,291,287,409,287,432,410,427,434,411,372,264,383,459,309,457,366,352,401,1,274,4,418,421,262,331,294,358,435,433,367,392,289,439,328,462,326,94,2,370,289,305,455,339,254,448,359,255,446,254,253,449,253,252,450,252,256,451,256,341,452,414,413,463,286,441,414,286,258,441,258,257,442,257,259,443,259,260,444,260,467,445,309,459,250,305,289,290,305,290,460,401,376,435,309,250,392,376,411,433,453,341,464,357,453,465,343,357,412,437,343,399,344,360,440,420,437,456,360,420,363,361,401,288,265,372,353,390,339,249,339,448,255],C0e=[127,234,132,58,172,150,149,148,152,377,378,379,397,288,361,454,356,70,63,105,66,107,336,296,334,293,300,168,6,195,4,98,97,2,326,327,33,160,158,133,153,144,362,385,387,263,373,380,57,40,37,0,267,270,287,321,314,17,84,91,78,81,13,311,308,402,14,178],N0e=[33,133,362,263,1,62,308,159,145,386,374,6,102,331,2,13,14,70,105,107,336,334,300,54,10,284,50,280,234,454,58,288,152],E0e=[33,133,362,263,1,78,308];C0e.map(e=>U0[e]);N0e.map(e=>U0[e]);E0e.map(e=>U0[e]);var cp=e=>[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])],G0=e=>[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2,1],Lb=(e,t)=>e?[Math.trunc(Math.max(0,e.startPoint[0])),Math.trunc(Math.max(0,e.startPoint[1])),Math.trunc(Math.min(t.shape[2]||0,e.endPoint[0])-Math.max(0,e.startPoint[0])),Math.trunc(Math.min(t.shape[1]||0,e.endPoint[1])-Math.max(0,e.startPoint[1]))]:[0,0,0,0],Wb=(e,t)=>e?[e.startPoint[0]/(t.shape[2]||0),e.startPoint[1]/(t.shape[1]||0),(e.endPoint[0]-e.startPoint[0])/(t.shape[2]||0),(e.endPoint[1]-e.startPoint[1])/(t.shape[1]||0)]:[0,0,0,0],R0e=(e,t)=>{const a=[e.startPoint[0]*t[0],e.startPoint[1]*t[1]],r=[e.endPoint[0]*t[0],e.endPoint[1]*t[1]];return{startPoint:a,endPoint:r,landmarks:e.landmarks,confidence:e.confidence}},wm=(e,t,a)=>{const r=t.shape[1],n=t.shape[2],s=[e.startPoint[1]/r,e.startPoint[0]/n,e.endPoint[1]/r,e.endPoint[0]/n],i=De.cropAndResize(t,[s],[0],a),o=ge(i,xt.tf255);return ne(i),o},W8=(e,t)=>{const a=G0(e),r=cp(e),n=[t*r[0]/2,t*r[1]/2];return{startPoint:[a[0]-n[0],a[1]-n[1]],endPoint:[a[0]+n[0],a[1]+n[1]],landmarks:e.landmarks,confidence:e.confidence}},B8=e=>{const t=G0(e),a=cp(e),r=Math.max(...a)/2;return{startPoint:[Math.round(t[0]-r),Math.round(t[1]-r)],endPoint:[Math.round(t[0]+r),Math.round(t[1]+r)],landmarks:e.landmarks,confidence:e.confidence}},F0e=e=>{const t=e.map(r=>r[0]),a=e.map(r=>r[1]);return{startPoint:[Math.min(...t),Math.min(...a)],endPoint:[Math.max(...t),Math.max(...a)],landmarks:e}},qg=[[1,0,0],[0,1,0],[0,0,1]],$0e=e=>e-2*Math.PI*Math.floor((e+Math.PI)/(2*Math.PI)),M0e=(e,t)=>$0e(Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0])),Bb=(e,t)=>[[1,0,e],[0,1,t],[0,0,1]],bo=(e,t)=>{let a=0;for(let r=0;r<e.length;r++)a+=e[r]*t[r];return a},_0e=(e,t)=>{const a=[];for(let r=0;r<e.length;r++)a.push(e[r][t]);return a},Vb=(e,t)=>{const a=[],r=e.length;for(let n=0;n<r;n++){a.push([]);for(let s=0;s<r;s++)a[n].push(bo(e[n],_0e(t,s)))}return a},V8=(e,t)=>{const a=Math.cos(e),r=Math.sin(e),n=[[a,-r,0],[r,a,0],[0,0,1]],s=Bb(t[0],t[1]),i=Vb(s,n),o=Bb(-t[0],-t[1]);return Vb(i,o)},z0e=e=>{const t=[[e[0][0],e[1][0]],[e[0][1],e[1][1]]],a=[e[0][2],e[1][2]],r=[-bo(t[0],a),-bo(t[1],a)];return[t[0].concat(r[0]),t[1].concat(r[1]),[0,0,1]]},O0e=(e,t)=>[bo(e,t[0]),bo(e,t[1])];function D0e(e){const t={strides:[e/16,e/8],anchors:[2,6]},a=[];for(let r=0;r<t.strides.length;r++){const n=t.strides[r],s=Math.floor((e+n-1)/n),i=Math.floor((e+n-1)/n),o=t.anchors[r];for(let l=0;l<s;l++){const d=n*(l+.5);for(let u=0;u<i;u++){const h=n*(u+.5);for(let p=0;p<o;p++)a.push([h,d])}}}return a}function P0e(e,t,a,r,n){const s=cp(t),i=e.map(c=>[s[0]/n*(c[0]-n/2),s[1]/n*(c[1]-n/2),c[2]||0]),o=a&&a!==0&&Math.abs(a)>.2,l=o?V8(a,[0,0]):qg,d=o?i.map(c=>[...O0e(c,l),c[2]]):i,u=o?z0e(r):qg,h=G0(t),p=[bo(h,u[0]),bo(h,u[1])];return d.map(c=>[Math.trunc(c[0]+p[0]),Math.trunc(c[1]+p[1]),Math.trunc(c[2]||0)])}function L0e(e,t,a,r){const n=t.landmarks.length>=Db.count?Db.symmetryLine:Hg.symmetryLine;let s=0,i=qg,o;if(e&&Ne.kernels.includes("rotatewithoffset"))if(s=M0e(t.landmarks[n[0]],t.landmarks[n[1]]),s&&s!==0&&Math.abs(s)>.2){const d=G0(t),u=[d[0]/a.shape[2],d[1]/a.shape[1]],h=De.rotateWithOffset(a,s,0,u);i=V8(-s,d),o=wm(t,h,[r,r]),ne(h)}else o=wm(t,a,[r,r]);else o=wm(t,a,[r,r]);return[s,i,o]}var W0e=e=>{const t=e.map(r=>r[0]),a=e.map(r=>r[1]);return[Math.min(...t)+(Math.max(...t)-Math.min(...t))/2,Math.min(...a)+(Math.max(...a)-Math.min(...a))/2]},B0e=(e,t)=>{const a=W0e(e),r=cp(t);return{startPoint:[a[0]-r[0]/2,a[1]-r[1]/2],endPoint:[a[0]+r[0]/2,a[1]+r[1]/2]}},Ub=6,V0e=1.2,$n,U8=null,ys=0,Gd=null,km=()=>ys;async function U0e(e){var t;return Ne.initial&&($n=null),$n?e.debug&&de("cached model:",$n.modelUrl):$n=await Wt((t=e.face.detector)==null?void 0:t.modelPath),ys=$n.inputs[0].shape?$n.inputs[0].shape[2]:0,Gd=Ie(ys,"int32"),U8=Vn(D0e(ys)),$n}function G0e(e){const t={};t.boxStarts=_e(e,[0,1],[-1,2]),t.centers=ie(t.boxStarts,U8),t.boxSizes=_e(e,[0,3],[-1,2]),t.boxSizesNormalized=ge(t.boxSizes,Gd),t.centersNormalized=ge(t.centers,Gd),t.halfBoxSize=ge(t.boxSizesNormalized,xt.tf2),t.starts=me(t.centersNormalized,t.halfBoxSize),t.ends=ie(t.centersNormalized,t.halfBoxSize),t.startNormalized=V(t.starts,Gd),t.endNormalized=V(t.ends,Gd);const a=Df([t.startNormalized,t.endNormalized],1);return Object.keys(t).forEach(r=>ne(t[r])),a}async function j0e(e,t){var a,r,n,s;if(!e||e.isDisposedInternal||e.shape.length!==4||e.shape[1]<1||e.shape[2]<1)return[];const i={};i.resized=De.resizeBilinear(e,[ys,ys]),i.div=ge(i.resized,xt.tf127),i.normalized=me(i.div,xt.tf05);const o=$n==null?void 0:$n.execute(i.normalized);if(Array.isArray(o)){const h=o.sort((p,c)=>p.size-c.size);i.concat384=Ct([h[0],h[2]],2),i.concat512=Ct([h[1],h[3]],2),i.concat=Ct([i.concat512,i.concat384],1),i.batch=ft(i.concat,0)}else i.batch=ft(o);ne(o),i.boxes=G0e(i.batch),i.logits=_e(i.batch,[0,0],[-1,1]),i.sigmoid=Ar(i.logits),i.scores=ft(i.sigmoid),i.nms=await De.nonMaxSuppressionAsync(i.boxes,i.scores,((a=t.face.detector)==null?void 0:a.maxDetected)||0,((r=t.face.detector)==null?void 0:r.iouThreshold)||0,((n=t.face.detector)==null?void 0:n.minConfidence)||0);const l=await i.nms.array(),d=[],u=await i.scores.data();for(let h=0;h<l.length;h++){const p=u[l[h]];if(p>(((s=t.face.detector)==null?void 0:s.minConfidence)||0)){const c={};c.bbox=_e(i.boxes,[l[h],0],[1,-1]),c.slice=_e(i.batch,[l[h],Ub-1],[1,-1]),c.squeeze=ft(c.slice),c.landmarks=q(c.squeeze,[Ub,-1]);const f=await c.bbox.data(),m={startPoint:[f[0],f[1]],endPoint:[f[2],f[3]],landmarks:await c.landmarks.array(),confidence:p},g=R0e(m,[(e.shape[2]||0)/ys,(e.shape[1]||0)/ys]),y=W8(g,t.face.scale||V0e),A=B8(y);d.push(A),Object.keys(c).forEach(x=>ne(c[x]))}}return Object.keys(i).forEach(h=>ne(i[h])),d}var G8={};af(G8,{connected:()=>H8,kpt:()=>j8});var j8=["nose","leftEyeInside","leftEye","leftEyeOutside","rightEyeInside","rightEye","rightEyeOutside","leftEar","rightEar","leftMouth","rightMouth","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftPinky","rightPinky","leftIndex","rightIndex","leftThumb","rightThumb","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle","leftHeel","rightHeel","leftFoot","rightFoot","bodyCenter","bodyTop","leftPalm","leftHand","rightPalm","rightHand"],H8={shoulders:["leftShoulder","rightShoulder"],hips:["rightHip","leftHip"],mouth:["leftMouth","rightMouth"],leftLegUpper:["leftHip","leftKnee"],leftLegLower:["leftKnee","leftAnkle"],leftFoot:["leftAnkle","leftHeel","leftFoot"],leftTorso:["leftShoulder","leftHip"],leftArmUpper:["leftShoulder","leftElbow"],leftArmLower:["leftElbow","leftWrist"],leftHand:["leftWrist","leftPalm"],leftHandPinky:["leftPalm","leftPinky"],leftHandIndex:["leftPalm","leftIndex"],leftHandThumb:["leftPalm","leftThumb"],leftEyeOutline:["leftEyeInside","leftEyeOutside"],rightLegUpper:["rightHip","rightKnee"],rightLegLower:["rightKnee","rightAnkle"],rightFoot:["rightAnkle","rightHeel","rightFoot"],rightTorso:["rightShoulder","rightHip"],rightArmUpper:["rightShoulder","rightElbow"],rightArmLower:["rightElbow","rightWrist"],rightHand:["rightWrist","rightPalm"],rightHandPinky:["rightPalm","rightPinky"],rightHandIndex:["rightPalm","rightIndex"],rightHandThumb:["rightPalm","rightThumb"],rightEyeOutline:["rightEyeInside","rightEyeOutside"]},Gb=224,H0e=5,Zp=[8,16,32,32,32];async function q0e(){const e=[];let t=0;for(;t<H0e;){let a=0,r=t;for(;r<Zp.length&&Zp[r]===Zp[t];)a+=2,r++;const n=Zp[t],s=Math.ceil(Gb/n),i=Math.ceil(Gb/n);for(let o=0;o<s;++o)for(let l=0;l<i;++l)for(let d=0;d<a;++d)e.push({x:(l+.5)/i,y:(o+.5)/s});t=r}Lt(e.map(a=>a.x)),Lt(e.map(a=>a.y))}function fp(e,t=[1,1]){const a=[e.map(o=>o[0]),e.map(o=>o[1])],r=[Math.min(...a[0]),Math.min(...a[1])],n=[Math.max(...a[0]),Math.max(...a[1])],s=[r[0],r[1],n[0]-r[0],n[1]-r[1]],i=[s[0]/t[0],s[1]/t[1],s[2]/t[0],s[3]/t[1]];return{box:s,boxRaw:i}}function X0e(e,t=[1,1]){const a=[e.map(d=>d[0]),e.map(d=>d[1])],r=[Math.min(...a[0]),Math.min(...a[1])],n=[Math.max(...a[0]),Math.max(...a[1])],s=[(r[0]+n[0])/2,(r[1]+n[1])/2],i=Math.max(s[0]-r[0],s[1]-r[1],-s[0]+n[0],-s[1]+n[1]),o=[Math.trunc(s[0]-i),Math.trunc(s[1]-i),Math.trunc(2*i),Math.trunc(2*i)],l=[o[0]/t[0],o[1]/t[1],o[2]/t[0],o[3]/t[1]];return{box:o,boxRaw:l}}function Xg(e,t){const a=[e[2]*t,e[3]*t];return[e[0]-(a[0]-e[2])/2,e[1]-(a[1]-e[3])/2,a[0],a[1]]}var nr={detector:null,landmarks:null},xu={detector:[224,224],landmarks:[256,256]},Im=Number.MAX_SAFE_INTEGER,K0e={landmarks:["ld_3d","activation_segmentation","activation_heatmap","world_3d","output_poseflag"],detector:[]},Yp=null,hs=[[0,0],[0,0],[0,0],[0,0]],jb=0,Hb=e=>1-1/(1+Math.exp(e));async function Z0e(e){if(nr.detector=null,!nr.detector&&e.body.detector&&e.body.detector.modelPath){nr.detector=await Wt(e.body.detector.modelPath);const t=Object.values(nr.detector.modelSignature.inputs);xu.detector[0]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[1].size):0,xu.detector[1]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0}else e.debug&&nr.detector&&de("cached model:",nr.detector.modelUrl);return await q0e(),nr.detector}async function Y0e(e){if(nr.landmarks=null,nr.landmarks)e.debug&&de("cached model:",nr.landmarks.modelUrl);else{nr.landmarks=await Wt(e.body.modelPath);const t=Object.values(nr.landmarks.modelSignature.inputs);xu.landmarks[0]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[1].size):0,xu.landmarks[1]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0}return nr.landmarks}async function J0e(e,t){const a={};if(!e.shape||!e.shape[1]||!e.shape[2])return e;let r;if(e.shape[1]!==e.shape[2]){const n=[e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0,e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0],s=[e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0,e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0];hs=[[0,0],n,s,[0,0]],a.pad=kn(a.cropped||e,hs),a.resize=De.resizeBilinear(a.pad,[t,t]),r=ge(a.resize,xt.tf255)}else e.shape[1]!==t?(a.resize=De.resizeBilinear(a.cropped||e,[t,t]),r=ge(a.resize,xt.tf255)):r=ge(a.cropped||e,xt.tf255);return Object.keys(a).forEach(n=>ne(a[n])),r}function Q0e(e,t){for(const a of e)a.position=[Math.trunc(a.position[0]*(t[0]+hs[2][0]+hs[2][1])/t[0]-hs[2][0]),Math.trunc(a.position[1]*(t[1]+hs[1][0]+hs[1][1])/t[1]-hs[1][0]),a.position[2]],a.positionRaw=[a.position[0]/t[0],a.position[1]/t[1],2*a.position[2]/(t[0]+t[1])];return e}async function eme(e){const t=e.find(o=>o.part==="leftPalm"),a=e.find(o=>o.part==="leftWrist"),r=e.find(o=>o.part==="leftIndex");t.position[2]=((a.position[2]||0)+(r.position[2]||0))/2;const n=e.find(o=>o.part==="rightPalm"),s=e.find(o=>o.part==="rightWrist"),i=e.find(o=>o.part==="rightIndex");n.position[2]=((s.position[2]||0)+(i.position[2]||0))/2}async function tme(e,t,a){var r;const n={};[n.ld,n.segmentation,n.heatmap,n.world,n.poseflag]=(r=nr.landmarks)==null?void 0:r.execute(e,K0e.landmarks);const s=(await n.poseflag.data())[0],i=await n.ld.data(),o=await n.world.data();Object.keys(n).forEach(m=>ne(n[m]));const l=[],d=5;for(let m=0;m<i.length/d;m++){const g=Hb(i[d*m+3]),y=Hb(i[d*m+4]),A=Math.trunc(100*g*y*s)/100,x=[i[d*m+0]/xu.landmarks[0],i[d*m+1]/xu.landmarks[1],i[d*m+2]+0],b=[Math.trunc(a[0]*x[0]),Math.trunc(a[1]*x[1]),x[2]],v=[o[d*m+0],o[d*m+1],o[d*m+2]+0];l.push({part:j8[m],positionRaw:x,position:b,distance:v,score:A})}if(s<(t.body.minConfidence||0))return null;eme(l);const u=Q0e(l,a),h=u.map(m=>m.position),p=fp(h,[a[0],a[1]]),c={};for(const[m,g]of Object.entries(H8)){const y=[];for(let A=0;A<g.length-1;A++){const x=u.find(v=>v.part===g[A]),b=u.find(v=>v.part===g[A+1]);x&&b&&y.push([x.position,b.position])}c[m]=y}return{id:0,score:Math.trunc(100*s)/100,box:p.box,boxRaw:p.boxRaw,keypoints:u,annotations:c}}async function qb(e,t){const a=[e.shape[2]||0,e.shape[1]||0],r=(t.body.skipTime||0)>ue()-jb,n=Im<(t.body.skipFrames||0);if(t.skipAllowed&&r&&n&&Yp!==null)Im++;else{const s={};s.landmarks=await J0e(e,256),Yp=await tme(s.landmarks,t,a),Object.keys(s).forEach(i=>ne(s[i])),jb=ue(),Im=0}return Yp?[Yp]:[]}var Ac=[{class:1,label:"person"},{class:2,label:"bicycle"},{class:3,label:"car"},{class:4,label:"motorcycle"},{class:5,label:"airplane"},{class:6,label:"bus"},{class:7,label:"train"},{class:8,label:"truck"},{class:9,label:"boat"},{class:10,label:"traffic light"},{class:11,label:"fire hydrant"},{class:12,label:"stop sign"},{class:13,label:"parking meter"},{class:14,label:"bench"},{class:15,label:"bird"},{class:16,label:"cat"},{class:17,label:"dog"},{class:18,label:"horse"},{class:19,label:"sheep"},{class:20,label:"cow"},{class:21,label:"elephant"},{class:22,label:"bear"},{class:23,label:"zebra"},{class:24,label:"giraffe"},{class:25,label:"backpack"},{class:26,label:"umbrella"},{class:27,label:"handbag"},{class:28,label:"tie"},{class:29,label:"suitcase"},{class:30,label:"frisbee"},{class:31,label:"skis"},{class:32,label:"snowboard"},{class:33,label:"sports ball"},{class:34,label:"kite"},{class:35,label:"baseball bat"},{class:36,label:"baseball glove"},{class:37,label:"skateboard"},{class:38,label:"surfboard"},{class:39,label:"tennis racket"},{class:40,label:"bottle"},{class:41,label:"wine glass"},{class:42,label:"cup"},{class:43,label:"fork"},{class:44,label:"knife"},{class:45,label:"spoon"},{class:46,label:"bowl"},{class:47,label:"banana"},{class:48,label:"apple"},{class:49,label:"sandwich"},{class:50,label:"orange"},{class:51,label:"broccoli"},{class:52,label:"carrot"},{class:53,label:"hot dog"},{class:54,label:"pizza"},{class:55,label:"donut"},{class:56,label:"cake"},{class:57,label:"chair"},{class:58,label:"couch"},{class:59,label:"potted plant"},{class:60,label:"bed"},{class:61,label:"dining table"},{class:62,label:"toilet"},{class:63,label:"tv"},{class:64,label:"laptop"},{class:65,label:"mouse"},{class:66,label:"remote"},{class:67,label:"keyboard"},{class:68,label:"cell phone"},{class:69,label:"microwave"},{class:70,label:"oven"},{class:71,label:"toaster"},{class:72,label:"sink"},{class:73,label:"refrigerator"},{class:74,label:"book"},{class:75,label:"clock"},{class:76,label:"vase"},{class:77,label:"scissors"},{class:78,label:"teddy bear"},{class:79,label:"hair drier"},{class:80,label:"toothbrush"}],ps,ao=0,Sm=[],Xb=0,Tm=Number.MAX_SAFE_INTEGER;async function ame(e){if(Ne.initial&&(ps=null),ps)e.debug&&de("cached model:",ps.modelUrl);else{ps=await Wt(e.object.modelPath);const t=Object.values(ps.modelSignature.inputs);ao=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0}return ps}async function rme(e,t,a){if(!e)return[];const r={},n=[],s=await e.array();r.squeeze=ft(e);const i=va(r.squeeze,6,1);r.stack=_a([i[1],i[0],i[3],i[2]],1),r.boxes=ft(r.stack),r.scores=ft(i[4]),r.classes=ft(i[5]),ne([e,...i]),r.nms=await De.nonMaxSuppressionAsync(r.boxes,r.scores,a.object.maxDetected,a.object.iouThreshold,a.object.minConfidence||0);const o=await r.nms.data();let l=0;for(const d of Array.from(o)){const u=Math.trunc(100*s[0][d][4])/100,h=s[0][d][5],p=Ac[h].label,[c,f]=[s[0][d][0]/ao,s[0][d][1]/ao],m=[c,f,s[0][d][2]/ao-c,s[0][d][3]/ao-f],g=[Math.trunc(m[0]*t[0]),Math.trunc(m[1]*t[1]),Math.trunc(m[2]*t[0]),Math.trunc(m[3]*t[1])];n.push({id:l++,score:u,class:h,label:p,box:g,boxRaw:m})}return Object.keys(r).forEach(d=>ne(r[d])),n}async function Kb(e,t){const a=(t.object.skipTime||0)>ue()-Xb,r=Tm<(t.object.skipFrames||0);return t.skipAllowed&&a&&r&&Sm.length>0?(Tm++,Sm):(Tm=0,new Promise(async n=>{const s=[e.shape[2]||0,e.shape[1]||0],i=De.resizeBilinear(e,[ao,ao]),o=t.object.enabled?ps==null?void 0:ps.execute(i,["tower_0/detections"]):null;Xb=ue(),ne(i);const l=await rme(o,s,t);Sm=l,n(l)}))}var q8={};af(q8,{connected:()=>K8,kpt:()=>X8});var X8=["head","neck","rightShoulder","rightElbow","rightWrist","chest","leftShoulder","leftElbow","leftWrist","bodyCenter","rightHip","rightKnee","rightAnkle","leftHip","leftKnee","leftAnkle"],K8={leftLeg:["leftHip","leftKnee","leftAnkle"],rightLeg:["rightHip","rightKnee","rightAnkle"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist"],rightArm:["rightShoulder","rightElbow","rightWrist"],head:[]},Ga,Zb=0,Ta={id:0,keypoints:[],box:[0,0,0,0],boxRaw:[0,0,0,0],score:0,annotations:{}},Cm=Number.MAX_SAFE_INTEGER;async function nme(e){return Ne.initial&&(Ga=null),Ga?e.debug&&de("cached model:",Ga.modelUrl):Ga=await Wt(e.body.modelPath),Ga}async function sme(e,t){const[a,r]=e.shape,n=q(e,[r*a]),s=Fa(n,0),i=(await s.data())[0];if(ne([n,s]),i>t){const o=Gn(n,0),l=jf(o,a),d=(await l.data())[0],u=ge(o,Ie(a,"int32")),h=(await u.data())[0];return ne([l,u]),[d,h,i]}return[0,0,i]}async function Yb(e,t){const a=(t.body.skipTime||0)>ue()-Zb,r=Cm<(t.body.skipFrames||0);return t.skipAllowed&&a&&r&&Object.keys(Ta.keypoints).length>0?(Cm++,[Ta]):(Cm=0,new Promise(async n=>{var s;const i=Z(()=>{if(!(Ga==null?void 0:Ga.inputs[0].shape))return null;const p=De.resizeBilinear(e,[Ga.inputs[0].shape[2],Ga.inputs[0].shape[1]],!1),c=V(p,xt.tf2);return me(c,xt.tf1)});let o;if(t.body.enabled&&(o=Ga==null?void 0:Ga.execute(i)),Zb=ue(),ne(i),o){Ta.keypoints.length=0;const p=o.squeeze();ne(o);const c=p.unstack(2);ne(p);for(let f=0;f<c.length;f++){const[m,g,y]=await sme(c[f],t.body.minConfidence);y>(((s=t.body)==null?void 0:s.minConfidence)||0)&&Ta.keypoints.push({score:Math.round(100*y)/100,part:X8[f],positionRaw:[m/Ga.inputs[0].shape[2],g/Ga.inputs[0].shape[1]],position:[Math.round(e.shape[2]*m/Ga.inputs[0].shape[2]),Math.round(e.shape[1]*g/Ga.inputs[0].shape[1])]})}c.forEach(f=>ne(f))}Ta.score=Ta.keypoints.reduce((p,c)=>c.score>p?c.score:p,0);const l=Ta.keypoints.map(p=>p.position[0]),d=Ta.keypoints.map(p=>p.position[1]);Ta.box=[Math.min(...l),Math.min(...d),Math.max(...l)-Math.min(...l),Math.max(...d)-Math.min(...d)];const u=Ta.keypoints.map(p=>p.positionRaw[0]),h=Ta.keypoints.map(p=>p.positionRaw[1]);Ta.boxRaw=[Math.min(...u),Math.min(...h),Math.max(...u)-Math.min(...u),Math.max(...h)-Math.min(...h)];for(const[p,c]of Object.entries(K8)){const f=[];for(let m=0;m<c.length-1;m++){const g=Ta.keypoints.find(A=>A.part===c[m]),y=Ta.keypoints.find(A=>A.part===c[m+1]);g&&y&&g.score>(t.body.minConfidence||0)&&y.score>(t.body.minConfidence||0)&&f.push([g.position,y.position])}Ta.annotations[p]=f}n([Ta])}))}var ime=["angry","disgust","fear","happy","sad","surprise","neutral"],qr,Jp=[],Jb=0,Qb=0,Nm=Number.MAX_SAFE_INTEGER;async function ome(e){var t;return Ne.initial&&(qr=null),qr?e.debug&&de("cached model:",qr.modelUrl):qr=await Wt((t=e.face.emotion)==null?void 0:t.modelPath),qr}async function e5(e,t,a,r){var n,s;if(!qr)return[];const i=Nm<(((n=t.face.emotion)==null?void 0:n.skipFrames)||0),o=(((s=t.face.emotion)==null?void 0:s.skipTime)||0)>ue()-Qb;return t.skipAllowed&&o&&i&&Jb===r&&Jp[a]&&Jp[a].length>0?(Nm++,Jp[a]):(Nm=0,new Promise(async l=>{var d,u;const h=[];if((d=t.face.emotion)==null?void 0:d.enabled){const p={},c=(qr==null?void 0:qr.inputs[0].shape)?qr.inputs[0].shape[2]:0;p.resize=De.resizeBilinear(e,[c,c],!1),p.channels=V(p.resize,xt.rgb),p.grayscale=we(p.channels,3,!0),p.grayscaleSub=me(p.grayscale,xt.tf05),p.grayscaleMul=V(p.grayscaleSub,xt.tf2),p.emotion=qr==null?void 0:qr.execute(p.grayscaleMul),Qb=ue();const f=await p.emotion.data();for(let m=0;m<f.length;m++)f[m]>(((u=t.face.emotion)==null?void 0:u.minConfidence)||0)&&h.push({score:Math.min(.99,Math.trunc(100*f[m])/100),emotion:ime[m]});h.sort((m,g)=>g.score-m.score),Object.keys(p).forEach(m=>ne(p[m]))}Jp[a]=h,Jb=r,l(h)}))}var Fr,Em=[],t5=0,a5=0,r5=Number.MAX_SAFE_INTEGER;async function lme(e){return Ne.initial&&(Fr=null),Fr?e.debug&&de("cached model:",Fr.modelUrl):Fr=await Wt(e.face.mobilefacenet.modelPath),Fr}async function n5(e,t,a,r){var n,s;if(!Fr)return[];const i=r5<(((n=t.face.embedding)==null?void 0:n.skipFrames)||0),o=(((s=t.face.embedding)==null?void 0:s.skipTime)||0)>ue()-a5;return t.skipAllowed&&o&&i&&t5===r&&Em[a]?(r5++,Em[a]):new Promise(async l=>{var d;let u=[];if(((d=t.face.embedding)==null?void 0:d.enabled)&&(Fr==null?void 0:Fr.inputs[0].shape)){const h={};h.crop=De.resizeBilinear(e,[Fr.inputs[0].shape[2],Fr.inputs[0].shape[1]],!1),h.data=Fr==null?void 0:Fr.execute(h.crop);const p=await h.data.data();u=Array.from(p)}Em[a]=u,t5=r,a5=ue(),l(u)})}var Mn,ws=0,ume=2.3,Rm=Hn.leftEyeLower0,Fm=Hn.rightEyeLower0,Zl={leftBounds:[Rm[0],Rm[Rm.length-1]],rightBounds:[Fm[0],Fm[Fm.length-1]]},bu={upperCenter:3,lowerCenter:4,index:71,numCoordinates:76};async function dme(e){var t;return Ne.initial&&(Mn=null),Mn?e.debug&&de("cached model:",Mn.modelUrl):Mn=await Wt((t=e.face.iris)==null?void 0:t.modelPath),ws=Mn.inputs[0].shape?Mn.inputs[0].shape[2]:0,ws===-1&&(ws=64),Mn}function Qp(e,t,a,r){for(let n=0;n<Pb.length;n++){const{key:s,indices:i}=Pb[n],o=Hn[`${a}${s}`];if(!r||r.includes(s))for(let l=0;l<i.length;l++){const d=i[l];e[o[l]]=[t[d][0],t[d][1],(t[d][2]+e[o[l]][2])/2]}}}var hme=e=>{const t=e[Zl.leftBounds[0]][2],a=e[Zl.rightBounds[0]][2];return t-a},s5=(e,t,a,r,n,s=!1)=>{const i=B8(W8(F0e([e[a],e[r]]),ume)),o=cp(i);let l=De.cropAndResize(t,[[i.startPoint[1]/n,i.startPoint[0]/n,i.endPoint[1]/n,i.endPoint[0]/n]],[0],[ws,ws]);if(s&&Ne.kernels.includes("flipleftright")){const d=De.flipLeftRight(l);ne(l),l=d}return{box:i,boxSize:o,crop:l}},i5=(e,t,a,r=!1)=>{const n=[];for(let s=0;s<bu.numCoordinates;s++){const i=e[s*3],o=e[s*3+1],l=e[s*3+2];n.push([(r?1-i/ws:i/ws)*a[0]+t.startPoint[0],o/ws*a[1]+t.startPoint[1],l])}return{rawCoords:n,iris:n.slice(bu.index)}},o5=(e,t,a)=>{const r=e[Hn[`${a}EyeUpper0`][bu.upperCenter]][2],n=e[Hn[`${a}EyeLower0`][bu.lowerCenter]][2],s=(r+n)/2;return t.map((i,o)=>{let l=s;return o===2?l=r:o===4&&(l=n),[i[0],i[1],l]})};async function pme(e,t,a,r){if(!Mn)return a.debug&&de("face mesh iris detection requested, but model is not loaded"),e;const{box:n,boxSize:s,crop:i}=s5(e,t,Zl.leftBounds[0],Zl.leftBounds[1],r,!0),{box:o,boxSize:l,crop:d}=s5(e,t,Zl.rightBounds[0],Zl.rightBounds[1],r,!0),u=Ct([i,d]);ne(i),ne(d);const h=Mn.execute(u);ne(u);const p=await h.data();ne(h);const c=p.slice(0,bu.numCoordinates*3),{rawCoords:f,iris:m}=i5(c,n,s,!0),g=p.slice(bu.numCoordinates*3),{rawCoords:y,iris:A}=i5(g,o,l),x=hme(e);Math.abs(x)<30?(Qp(e,f,"left",null),Qp(e,y,"right",null)):x<1?Qp(e,f,"left",["EyeUpper0","EyeLower0"]):Qp(e,y,"right",["EyeUpper0","EyeLower0"]);const b=o5(e,m,"left"),v=o5(e,A,"right");return e.concat(b).concat(v)}var dn={boxes:[],skipped:Number.MAX_SAFE_INTEGER,timestamp:0},_n=null,Xl=0;async function cme(e,t){var a,r,n,s,i,o,l,d,u;const h=(((a=t.face.detector)==null?void 0:a.skipTime)||0)>ue()-dn.timestamp,p=dn.skipped<(((r=t.face.detector)==null?void 0:r.skipFrames)||0);!t.skipAllowed||!h||!p||dn.boxes.length===0?(dn.boxes=await j0e(e,t),dn.timestamp=ue(),dn.skipped=0):dn.skipped++;const c=[],f=[];let m=0;for(let g=0;g<dn.boxes.length;g++){const y=dn.boxes[g];let A=0,x;const b={id:m++,mesh:[],meshRaw:[],box:[0,0,0,0],boxRaw:[0,0,0,0],score:0,boxScore:0,faceScore:0,annotations:{}};if([A,x,b.tensor]=L0e((n=t.face.detector)==null?void 0:n.rotation,y,e,((s=t.face.mesh)==null?void 0:s.enabled)?Xl:km()),(i=t==null?void 0:t.filter)==null?void 0:i.equalization){const v=await L8(b.tensor);ne(b.tensor),b.tensor=v}if(b.boxScore=Math.round(100*y.confidence)/100,(o=t.face.mesh)==null?void 0:o.enabled)if(!_n)t.debug&&de("face mesh detection requested, but model is not loaded");else{const[v,T,C]=_n.execute(b.tensor),E=await T.data();b.faceScore=Math.round(100*E[0])/100;const R=q(C,[-1,3]);let z=await R.array();if(ne([C,R,T,v]),b.faceScore<(((l=t.face.detector)==null?void 0:l.minConfidence)||1))y.confidence=b.faceScore;else{((d=t.face.iris)==null?void 0:d.enabled)&&(z=await pme(z,b.tensor,t,Xl)),b.mesh=P0e(z,y,A,x,Xl),b.meshRaw=b.mesh.map(k=>[k[0]/(e.shape[2]||0),k[1]/(e.shape[1]||0),(k[2]||0)/Xl]);for(const k of Object.keys(Hn))b.annotations[k]=Hn[k].map(D=>b.mesh[D]);b.score=b.faceScore;const F=Sa(Ze({},B0e(b.mesh,y)),{confidence:y.confidence,landmarks:y.landmarks});b.box=Lb(F,e),b.boxRaw=Wb(F,e),f.push(F)}}else{b.box=Lb(y,e),b.boxRaw=Wb(y,e),b.score=b.boxScore,b.mesh=y.landmarks.map(v=>[(y.startPoint[0]+y.endPoint[0])/2+(y.endPoint[0]+y.startPoint[0])*v[0]/km(),(y.startPoint[1]+y.endPoint[1])/2+(y.endPoint[1]+y.startPoint[1])*v[1]/km()]),b.meshRaw=b.mesh.map(v=>[v[0]/(e.shape[2]||0),v[1]/(e.shape[1]||0),(v[2]||0)/Xl]);for(const v of Object.keys(Hg))b.annotations[v]=[b.mesh[Hg[v]]]}b.score>(((u=t.face.detector)==null?void 0:u.minConfidence)||1)?c.push(b):ne(b.tensor)}return dn.boxes=f,c}async function fme(e){var t;return Ne.initial&&(_n=null),_n?e.debug&&de("cached model:",_n.modelUrl):_n=await Wt((t=e.face.mesh)==null?void 0:t.modelPath),Xl=_n.inputs[0].shape?_n.inputs[0].shape[2]:0,_n}var mme=Ud,gme=U0,Mr,ec=[],l5=0,u5=0,$m=Number.MAX_SAFE_INTEGER;async function yme(e){var t;return Ne.initial&&(Mr=null),Mr?e.debug&&de("cached model:",Mr.modelUrl):Mr=await Wt((t=e.face.description)==null?void 0:t.modelPath),Mr}function Z8(e){const t=e.image||e.tensor||e;if(!(Mr==null?void 0:Mr.inputs[0].shape))return t;const a=De.resizeBilinear(t,[Mr.inputs[0].shape[2],Mr.inputs[0].shape[1]],!1),r=V(a,xt.tf255);return ne(a),r}async function d5(e,t,a,r){var n,s,i,o;if(!Mr)return{age:0,gender:"unknown",genderScore:0,descriptor:[]};const l=$m<(((n=t.face.description)==null?void 0:n.skipFrames)||0),d=(((s=t.face.description)==null?void 0:s.skipTime)||0)>ue()-l5;return t.skipAllowed&&l&&d&&u5===r&&((i=ec[a])==null?void 0:i.age)&&((o=ec[a])==null?void 0:o.age)>0?($m++,ec[a]):($m=0,new Promise(async u=>{var h,p;const c={age:0,gender:"unknown",genderScore:0,descriptor:[]};if((h=t.face.description)==null?void 0:h.enabled){const f=Z8(e),m=Mr==null?void 0:Mr.execute(f);l5=ue(),ne(f);const y=await(await m.find(R=>R.shape[1]===1)).data(),A=Math.trunc(200*Math.abs(y[0]-.5))/100;A>(((p=t.face.description)==null?void 0:p.minConfidence)||0)&&(c.gender=y[0]<=.5?"female":"male",c.genderScore=Math.min(.99,A));const x=Gn(m.find(R=>R.shape[1]===100),1),b=(await x.data())[0];ne(x);const T=await m.find(R=>R.shape[1]===100).data();c.age=Math.round(T[b-1]>T[b+1]?10*b-100*T[b-1]:10*b+100*T[b+1])/10;const C=m.find(R=>R.shape[1]===1024),E=C?await C.data():[];c.descriptor=Array.from(E),m.forEach(R=>ne(R))}ec[a]=c,u5=r,u(c)}))}function pA(e){return[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])]}function Qc(e){return[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2]}function Ame(e,t,a){const r=t.shape[1],n=t.shape[2],s=[[e.startPoint[1]/r,e.startPoint[0]/n,e.endPoint[1]/r,e.endPoint[0]/n]];return De.cropAndResize(t,s,[0],a)}function xme(e,t){const a=[e.startPoint[0]*t[0],e.startPoint[1]*t[1]],r=[e.endPoint[0]*t[0],e.endPoint[1]*t[1]],n=e.palmLandmarks.map(s=>[s[0]*t[0],s[1]*t[1]]);return{startPoint:a,endPoint:r,palmLandmarks:n,confidence:e.confidence}}function Mm(e,t=1.5){const a=Qc(e),r=pA(e),n=[t*r[0]/2,t*r[1]/2],s=[a[0]-n[0],a[1]-n[1]],i=[a[0]+n[0],a[1]+n[1]];return{startPoint:s,endPoint:i,palmLandmarks:e.palmLandmarks}}function _m(e){const t=Qc(e),a=pA(e),n=Math.max(...a)/2,s=[t[0]-n,t[1]-n],i=[t[0]+n,t[1]+n];return{startPoint:s,endPoint:i,palmLandmarks:e.palmLandmarks}}function bme(e){return e-2*Math.PI*Math.floor((e+Math.PI)/(2*Math.PI))}function vme(e,t){const a=Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0]);return bme(a)}var h5=(e,t)=>[[1,0,e],[0,1,t],[0,0,1]];function vo(e,t){let a=0;for(let r=0;r<e.length;r++)a+=e[r]*t[r];return a}function wme(e,t){const a=[];for(let r=0;r<e.length;r++)a.push(e[r][t]);return a}function p5(e,t){const a=[],r=e.length;for(let n=0;n<r;n++){a.push([]);for(let s=0;s<r;s++)a[n].push(vo(e[n],wme(t,s)))}return a}function c5(e,t){const a=Math.cos(e),r=Math.sin(e),n=[[a,-r,0],[r,a,0],[0,0,1]],s=h5(t[0],t[1]),i=p5(s,n),o=h5(-t[0],-t[1]);return p5(i,o)}function kme(e){const t=[[e[0][0],e[1][0]],[e[0][1],e[1][1]]],a=[e[0][2],e[1][2]],r=[-vo(t[0],a),-vo(t[1],a)];return[t[0].concat(r[0]),t[1].concat(r[1]),[0,0,1]]}function f5(e,t){return[vo(e,t[0]),vo(e,t[1])]}var Ime=[{x:.015625,y:.015625},{x:.015625,y:.015625},{x:.046875,y:.015625},{x:.046875,y:.015625},{x:.078125,y:.015625},{x:.078125,y:.015625},{x:.109375,y:.015625},{x:.109375,y:.015625},{x:.140625,y:.015625},{x:.140625,y:.015625},{x:.171875,y:.015625},{x:.171875,y:.015625},{x:.203125,y:.015625},{x:.203125,y:.015625},{x:.234375,y:.015625},{x:.234375,y:.015625},{x:.265625,y:.015625},{x:.265625,y:.015625},{x:.296875,y:.015625},{x:.296875,y:.015625},{x:.328125,y:.015625},{x:.328125,y:.015625},{x:.359375,y:.015625},{x:.359375,y:.015625},{x:.390625,y:.015625},{x:.390625,y:.015625},{x:.421875,y:.015625},{x:.421875,y:.015625},{x:.453125,y:.015625},{x:.453125,y:.015625},{x:.484375,y:.015625},{x:.484375,y:.015625},{x:.515625,y:.015625},{x:.515625,y:.015625},{x:.546875,y:.015625},{x:.546875,y:.015625},{x:.578125,y:.015625},{x:.578125,y:.015625},{x:.609375,y:.015625},{x:.609375,y:.015625},{x:.640625,y:.015625},{x:.640625,y:.015625},{x:.671875,y:.015625},{x:.671875,y:.015625},{x:.703125,y:.015625},{x:.703125,y:.015625},{x:.734375,y:.015625},{x:.734375,y:.015625},{x:.765625,y:.015625},{x:.765625,y:.015625},{x:.796875,y:.015625},{x:.796875,y:.015625},{x:.828125,y:.015625},{x:.828125,y:.015625},{x:.859375,y:.015625},{x:.859375,y:.015625},{x:.890625,y:.015625},{x:.890625,y:.015625},{x:.921875,y:.015625},{x:.921875,y:.015625},{x:.953125,y:.015625},{x:.953125,y:.015625},{x:.984375,y:.015625},{x:.984375,y:.015625},{x:.015625,y:.046875},{x:.015625,y:.046875},{x:.046875,y:.046875},{x:.046875,y:.046875},{x:.078125,y:.046875},{x:.078125,y:.046875},{x:.109375,y:.046875},{x:.109375,y:.046875},{x:.140625,y:.046875},{x:.140625,y:.046875},{x:.171875,y:.046875},{x:.171875,y:.046875},{x:.203125,y:.046875},{x:.203125,y:.046875},{x:.234375,y:.046875},{x:.234375,y:.046875},{x:.265625,y:.046875},{x:.265625,y:.046875},{x:.296875,y:.046875},{x:.296875,y:.046875},{x:.328125,y:.046875},{x:.328125,y:.046875},{x:.359375,y:.046875},{x:.359375,y:.046875},{x:.390625,y:.046875},{x:.390625,y:.046875},{x:.421875,y:.046875},{x:.421875,y:.046875},{x:.453125,y:.046875},{x:.453125,y:.046875},{x:.484375,y:.046875},{x:.484375,y:.046875},{x:.515625,y:.046875},{x:.515625,y:.046875},{x:.546875,y:.046875},{x:.546875,y:.046875},{x:.578125,y:.046875},{x:.578125,y:.046875},{x:.609375,y:.046875},{x:.609375,y:.046875},{x:.640625,y:.046875},{x:.640625,y:.046875},{x:.671875,y:.046875},{x:.671875,y:.046875},{x:.703125,y:.046875},{x:.703125,y:.046875},{x:.734375,y:.046875},{x:.734375,y:.046875},{x:.765625,y:.046875},{x:.765625,y:.046875},{x:.796875,y:.046875},{x:.796875,y:.046875},{x:.828125,y:.046875},{x:.828125,y:.046875},{x:.859375,y:.046875},{x:.859375,y:.046875},{x:.890625,y:.046875},{x:.890625,y:.046875},{x:.921875,y:.046875},{x:.921875,y:.046875},{x:.953125,y:.046875},{x:.953125,y:.046875},{x:.984375,y:.046875},{x:.984375,y:.046875},{x:.015625,y:.078125},{x:.015625,y:.078125},{x:.046875,y:.078125},{x:.046875,y:.078125},{x:.078125,y:.078125},{x:.078125,y:.078125},{x:.109375,y:.078125},{x:.109375,y:.078125},{x:.140625,y:.078125},{x:.140625,y:.078125},{x:.171875,y:.078125},{x:.171875,y:.078125},{x:.203125,y:.078125},{x:.203125,y:.078125},{x:.234375,y:.078125},{x:.234375,y:.078125},{x:.265625,y:.078125},{x:.265625,y:.078125},{x:.296875,y:.078125},{x:.296875,y:.078125},{x:.328125,y:.078125},{x:.328125,y:.078125},{x:.359375,y:.078125},{x:.359375,y:.078125},{x:.390625,y:.078125},{x:.390625,y:.078125},{x:.421875,y:.078125},{x:.421875,y:.078125},{x:.453125,y:.078125},{x:.453125,y:.078125},{x:.484375,y:.078125},{x:.484375,y:.078125},{x:.515625,y:.078125},{x:.515625,y:.078125},{x:.546875,y:.078125},{x:.546875,y:.078125},{x:.578125,y:.078125},{x:.578125,y:.078125},{x:.609375,y:.078125},{x:.609375,y:.078125},{x:.640625,y:.078125},{x:.640625,y:.078125},{x:.671875,y:.078125},{x:.671875,y:.078125},{x:.703125,y:.078125},{x:.703125,y:.078125},{x:.734375,y:.078125},{x:.734375,y:.078125},{x:.765625,y:.078125},{x:.765625,y:.078125},{x:.796875,y:.078125},{x:.796875,y:.078125},{x:.828125,y:.078125},{x:.828125,y:.078125},{x:.859375,y:.078125},{x:.859375,y:.078125},{x:.890625,y:.078125},{x:.890625,y:.078125},{x:.921875,y:.078125},{x:.921875,y:.078125},{x:.953125,y:.078125},{x:.953125,y:.078125},{x:.984375,y:.078125},{x:.984375,y:.078125},{x:.015625,y:.109375},{x:.015625,y:.109375},{x:.046875,y:.109375},{x:.046875,y:.109375},{x:.078125,y:.109375},{x:.078125,y:.109375},{x:.109375,y:.109375},{x:.109375,y:.109375},{x:.140625,y:.109375},{x:.140625,y:.109375},{x:.171875,y:.109375},{x:.171875,y:.109375},{x:.203125,y:.109375},{x:.203125,y:.109375},{x:.234375,y:.109375},{x:.234375,y:.109375},{x:.265625,y:.109375},{x:.265625,y:.109375},{x:.296875,y:.109375},{x:.296875,y:.109375},{x:.328125,y:.109375},{x:.328125,y:.109375},{x:.359375,y:.109375},{x:.359375,y:.109375},{x:.390625,y:.109375},{x:.390625,y:.109375},{x:.421875,y:.109375},{x:.421875,y:.109375},{x:.453125,y:.109375},{x:.453125,y:.109375},{x:.484375,y:.109375},{x:.484375,y:.109375},{x:.515625,y:.109375},{x:.515625,y:.109375},{x:.546875,y:.109375},{x:.546875,y:.109375},{x:.578125,y:.109375},{x:.578125,y:.109375},{x:.609375,y:.109375},{x:.609375,y:.109375},{x:.640625,y:.109375},{x:.640625,y:.109375},{x:.671875,y:.109375},{x:.671875,y:.109375},{x:.703125,y:.109375},{x:.703125,y:.109375},{x:.734375,y:.109375},{x:.734375,y:.109375},{x:.765625,y:.109375},{x:.765625,y:.109375},{x:.796875,y:.109375},{x:.796875,y:.109375},{x:.828125,y:.109375},{x:.828125,y:.109375},{x:.859375,y:.109375},{x:.859375,y:.109375},{x:.890625,y:.109375},{x:.890625,y:.109375},{x:.921875,y:.109375},{x:.921875,y:.109375},{x:.953125,y:.109375},{x:.953125,y:.109375},{x:.984375,y:.109375},{x:.984375,y:.109375},{x:.015625,y:.140625},{x:.015625,y:.140625},{x:.046875,y:.140625},{x:.046875,y:.140625},{x:.078125,y:.140625},{x:.078125,y:.140625},{x:.109375,y:.140625},{x:.109375,y:.140625},{x:.140625,y:.140625},{x:.140625,y:.140625},{x:.171875,y:.140625},{x:.171875,y:.140625},{x:.203125,y:.140625},{x:.203125,y:.140625},{x:.234375,y:.140625},{x:.234375,y:.140625},{x:.265625,y:.140625},{x:.265625,y:.140625},{x:.296875,y:.140625},{x:.296875,y:.140625},{x:.328125,y:.140625},{x:.328125,y:.140625},{x:.359375,y:.140625},{x:.359375,y:.140625},{x:.390625,y:.140625},{x:.390625,y:.140625},{x:.421875,y:.140625},{x:.421875,y:.140625},{x:.453125,y:.140625},{x:.453125,y:.140625},{x:.484375,y:.140625},{x:.484375,y:.140625},{x:.515625,y:.140625},{x:.515625,y:.140625},{x:.546875,y:.140625},{x:.546875,y:.140625},{x:.578125,y:.140625},{x:.578125,y:.140625},{x:.609375,y:.140625},{x:.609375,y:.140625},{x:.640625,y:.140625},{x:.640625,y:.140625},{x:.671875,y:.140625},{x:.671875,y:.140625},{x:.703125,y:.140625},{x:.703125,y:.140625},{x:.734375,y:.140625},{x:.734375,y:.140625},{x:.765625,y:.140625},{x:.765625,y:.140625},{x:.796875,y:.140625},{x:.796875,y:.140625},{x:.828125,y:.140625},{x:.828125,y:.140625},{x:.859375,y:.140625},{x:.859375,y:.140625},{x:.890625,y:.140625},{x:.890625,y:.140625},{x:.921875,y:.140625},{x:.921875,y:.140625},{x:.953125,y:.140625},{x:.953125,y:.140625},{x:.984375,y:.140625},{x:.984375,y:.140625},{x:.015625,y:.171875},{x:.015625,y:.171875},{x:.046875,y:.171875},{x:.046875,y:.171875},{x:.078125,y:.171875},{x:.078125,y:.171875},{x:.109375,y:.171875},{x:.109375,y:.171875},{x:.140625,y:.171875},{x:.140625,y:.171875},{x:.171875,y:.171875},{x:.171875,y:.171875},{x:.203125,y:.171875},{x:.203125,y:.171875},{x:.234375,y:.171875},{x:.234375,y:.171875},{x:.265625,y:.171875},{x:.265625,y:.171875},{x:.296875,y:.171875},{x:.296875,y:.171875},{x:.328125,y:.171875},{x:.328125,y:.171875},{x:.359375,y:.171875},{x:.359375,y:.171875},{x:.390625,y:.171875},{x:.390625,y:.171875},{x:.421875,y:.171875},{x:.421875,y:.171875},{x:.453125,y:.171875},{x:.453125,y:.171875},{x:.484375,y:.171875},{x:.484375,y:.171875},{x:.515625,y:.171875},{x:.515625,y:.171875},{x:.546875,y:.171875},{x:.546875,y:.171875},{x:.578125,y:.171875},{x:.578125,y:.171875},{x:.609375,y:.171875},{x:.609375,y:.171875},{x:.640625,y:.171875},{x:.640625,y:.171875},{x:.671875,y:.171875},{x:.671875,y:.171875},{x:.703125,y:.171875},{x:.703125,y:.171875},{x:.734375,y:.171875},{x:.734375,y:.171875},{x:.765625,y:.171875},{x:.765625,y:.171875},{x:.796875,y:.171875},{x:.796875,y:.171875},{x:.828125,y:.171875},{x:.828125,y:.171875},{x:.859375,y:.171875},{x:.859375,y:.171875},{x:.890625,y:.171875},{x:.890625,y:.171875},{x:.921875,y:.171875},{x:.921875,y:.171875},{x:.953125,y:.171875},{x:.953125,y:.171875},{x:.984375,y:.171875},{x:.984375,y:.171875},{x:.015625,y:.203125},{x:.015625,y:.203125},{x:.046875,y:.203125},{x:.046875,y:.203125},{x:.078125,y:.203125},{x:.078125,y:.203125},{x:.109375,y:.203125},{x:.109375,y:.203125},{x:.140625,y:.203125},{x:.140625,y:.203125},{x:.171875,y:.203125},{x:.171875,y:.203125},{x:.203125,y:.203125},{x:.203125,y:.203125},{x:.234375,y:.203125},{x:.234375,y:.203125},{x:.265625,y:.203125},{x:.265625,y:.203125},{x:.296875,y:.203125},{x:.296875,y:.203125},{x:.328125,y:.203125},{x:.328125,y:.203125},{x:.359375,y:.203125},{x:.359375,y:.203125},{x:.390625,y:.203125},{x:.390625,y:.203125},{x:.421875,y:.203125},{x:.421875,y:.203125},{x:.453125,y:.203125},{x:.453125,y:.203125},{x:.484375,y:.203125},{x:.484375,y:.203125},{x:.515625,y:.203125},{x:.515625,y:.203125},{x:.546875,y:.203125},{x:.546875,y:.203125},{x:.578125,y:.203125},{x:.578125,y:.203125},{x:.609375,y:.203125},{x:.609375,y:.203125},{x:.640625,y:.203125},{x:.640625,y:.203125},{x:.671875,y:.203125},{x:.671875,y:.203125},{x:.703125,y:.203125},{x:.703125,y:.203125},{x:.734375,y:.203125},{x:.734375,y:.203125},{x:.765625,y:.203125},{x:.765625,y:.203125},{x:.796875,y:.203125},{x:.796875,y:.203125},{x:.828125,y:.203125},{x:.828125,y:.203125},{x:.859375,y:.203125},{x:.859375,y:.203125},{x:.890625,y:.203125},{x:.890625,y:.203125},{x:.921875,y:.203125},{x:.921875,y:.203125},{x:.953125,y:.203125},{x:.953125,y:.203125},{x:.984375,y:.203125},{x:.984375,y:.203125},{x:.015625,y:.234375},{x:.015625,y:.234375},{x:.046875,y:.234375},{x:.046875,y:.234375},{x:.078125,y:.234375},{x:.078125,y:.234375},{x:.109375,y:.234375},{x:.109375,y:.234375},{x:.140625,y:.234375},{x:.140625,y:.234375},{x:.171875,y:.234375},{x:.171875,y:.234375},{x:.203125,y:.234375},{x:.203125,y:.234375},{x:.234375,y:.234375},{x:.234375,y:.234375},{x:.265625,y:.234375},{x:.265625,y:.234375},{x:.296875,y:.234375},{x:.296875,y:.234375},{x:.328125,y:.234375},{x:.328125,y:.234375},{x:.359375,y:.234375},{x:.359375,y:.234375},{x:.390625,y:.234375},{x:.390625,y:.234375},{x:.421875,y:.234375},{x:.421875,y:.234375},{x:.453125,y:.234375},{x:.453125,y:.234375},{x:.484375,y:.234375},{x:.484375,y:.234375},{x:.515625,y:.234375},{x:.515625,y:.234375},{x:.546875,y:.234375},{x:.546875,y:.234375},{x:.578125,y:.234375},{x:.578125,y:.234375},{x:.609375,y:.234375},{x:.609375,y:.234375},{x:.640625,y:.234375},{x:.640625,y:.234375},{x:.671875,y:.234375},{x:.671875,y:.234375},{x:.703125,y:.234375},{x:.703125,y:.234375},{x:.734375,y:.234375},{x:.734375,y:.234375},{x:.765625,y:.234375},{x:.765625,y:.234375},{x:.796875,y:.234375},{x:.796875,y:.234375},{x:.828125,y:.234375},{x:.828125,y:.234375},{x:.859375,y:.234375},{x:.859375,y:.234375},{x:.890625,y:.234375},{x:.890625,y:.234375},{x:.921875,y:.234375},{x:.921875,y:.234375},{x:.953125,y:.234375},{x:.953125,y:.234375},{x:.984375,y:.234375},{x:.984375,y:.234375},{x:.015625,y:.265625},{x:.015625,y:.265625},{x:.046875,y:.265625},{x:.046875,y:.265625},{x:.078125,y:.265625},{x:.078125,y:.265625},{x:.109375,y:.265625},{x:.109375,y:.265625},{x:.140625,y:.265625},{x:.140625,y:.265625},{x:.171875,y:.265625},{x:.171875,y:.265625},{x:.203125,y:.265625},{x:.203125,y:.265625},{x:.234375,y:.265625},{x:.234375,y:.265625},{x:.265625,y:.265625},{x:.265625,y:.265625},{x:.296875,y:.265625},{x:.296875,y:.265625},{x:.328125,y:.265625},{x:.328125,y:.265625},{x:.359375,y:.265625},{x:.359375,y:.265625},{x:.390625,y:.265625},{x:.390625,y:.265625},{x:.421875,y:.265625},{x:.421875,y:.265625},{x:.453125,y:.265625},{x:.453125,y:.265625},{x:.484375,y:.265625},{x:.484375,y:.265625},{x:.515625,y:.265625},{x:.515625,y:.265625},{x:.546875,y:.265625},{x:.546875,y:.265625},{x:.578125,y:.265625},{x:.578125,y:.265625},{x:.609375,y:.265625},{x:.609375,y:.265625},{x:.640625,y:.265625},{x:.640625,y:.265625},{x:.671875,y:.265625},{x:.671875,y:.265625},{x:.703125,y:.265625},{x:.703125,y:.265625},{x:.734375,y:.265625},{x:.734375,y:.265625},{x:.765625,y:.265625},{x:.765625,y:.265625},{x:.796875,y:.265625},{x:.796875,y:.265625},{x:.828125,y:.265625},{x:.828125,y:.265625},{x:.859375,y:.265625},{x:.859375,y:.265625},{x:.890625,y:.265625},{x:.890625,y:.265625},{x:.921875,y:.265625},{x:.921875,y:.265625},{x:.953125,y:.265625},{x:.953125,y:.265625},{x:.984375,y:.265625},{x:.984375,y:.265625},{x:.015625,y:.296875},{x:.015625,y:.296875},{x:.046875,y:.296875},{x:.046875,y:.296875},{x:.078125,y:.296875},{x:.078125,y:.296875},{x:.109375,y:.296875},{x:.109375,y:.296875},{x:.140625,y:.296875},{x:.140625,y:.296875},{x:.171875,y:.296875},{x:.171875,y:.296875},{x:.203125,y:.296875},{x:.203125,y:.296875},{x:.234375,y:.296875},{x:.234375,y:.296875},{x:.265625,y:.296875},{x:.265625,y:.296875},{x:.296875,y:.296875},{x:.296875,y:.296875},{x:.328125,y:.296875},{x:.328125,y:.296875},{x:.359375,y:.296875},{x:.359375,y:.296875},{x:.390625,y:.296875},{x:.390625,y:.296875},{x:.421875,y:.296875},{x:.421875,y:.296875},{x:.453125,y:.296875},{x:.453125,y:.296875},{x:.484375,y:.296875},{x:.484375,y:.296875},{x:.515625,y:.296875},{x:.515625,y:.296875},{x:.546875,y:.296875},{x:.546875,y:.296875},{x:.578125,y:.296875},{x:.578125,y:.296875},{x:.609375,y:.296875},{x:.609375,y:.296875},{x:.640625,y:.296875},{x:.640625,y:.296875},{x:.671875,y:.296875},{x:.671875,y:.296875},{x:.703125,y:.296875},{x:.703125,y:.296875},{x:.734375,y:.296875},{x:.734375,y:.296875},{x:.765625,y:.296875},{x:.765625,y:.296875},{x:.796875,y:.296875},{x:.796875,y:.296875},{x:.828125,y:.296875},{x:.828125,y:.296875},{x:.859375,y:.296875},{x:.859375,y:.296875},{x:.890625,y:.296875},{x:.890625,y:.296875},{x:.921875,y:.296875},{x:.921875,y:.296875},{x:.953125,y:.296875},{x:.953125,y:.296875},{x:.984375,y:.296875},{x:.984375,y:.296875},{x:.015625,y:.328125},{x:.015625,y:.328125},{x:.046875,y:.328125},{x:.046875,y:.328125},{x:.078125,y:.328125},{x:.078125,y:.328125},{x:.109375,y:.328125},{x:.109375,y:.328125},{x:.140625,y:.328125},{x:.140625,y:.328125},{x:.171875,y:.328125},{x:.171875,y:.328125},{x:.203125,y:.328125},{x:.203125,y:.328125},{x:.234375,y:.328125},{x:.234375,y:.328125},{x:.265625,y:.328125},{x:.265625,y:.328125},{x:.296875,y:.328125},{x:.296875,y:.328125},{x:.328125,y:.328125},{x:.328125,y:.328125},{x:.359375,y:.328125},{x:.359375,y:.328125},{x:.390625,y:.328125},{x:.390625,y:.328125},{x:.421875,y:.328125},{x:.421875,y:.328125},{x:.453125,y:.328125},{x:.453125,y:.328125},{x:.484375,y:.328125},{x:.484375,y:.328125},{x:.515625,y:.328125},{x:.515625,y:.328125},{x:.546875,y:.328125},{x:.546875,y:.328125},{x:.578125,y:.328125},{x:.578125,y:.328125},{x:.609375,y:.328125},{x:.609375,y:.328125},{x:.640625,y:.328125},{x:.640625,y:.328125},{x:.671875,y:.328125},{x:.671875,y:.328125},{x:.703125,y:.328125},{x:.703125,y:.328125},{x:.734375,y:.328125},{x:.734375,y:.328125},{x:.765625,y:.328125},{x:.765625,y:.328125},{x:.796875,y:.328125},{x:.796875,y:.328125},{x:.828125,y:.328125},{x:.828125,y:.328125},{x:.859375,y:.328125},{x:.859375,y:.328125},{x:.890625,y:.328125},{x:.890625,y:.328125},{x:.921875,y:.328125},{x:.921875,y:.328125},{x:.953125,y:.328125},{x:.953125,y:.328125},{x:.984375,y:.328125},{x:.984375,y:.328125},{x:.015625,y:.359375},{x:.015625,y:.359375},{x:.046875,y:.359375},{x:.046875,y:.359375},{x:.078125,y:.359375},{x:.078125,y:.359375},{x:.109375,y:.359375},{x:.109375,y:.359375},{x:.140625,y:.359375},{x:.140625,y:.359375},{x:.171875,y:.359375},{x:.171875,y:.359375},{x:.203125,y:.359375},{x:.203125,y:.359375},{x:.234375,y:.359375},{x:.234375,y:.359375},{x:.265625,y:.359375},{x:.265625,y:.359375},{x:.296875,y:.359375},{x:.296875,y:.359375},{x:.328125,y:.359375},{x:.328125,y:.359375},{x:.359375,y:.359375},{x:.359375,y:.359375},{x:.390625,y:.359375},{x:.390625,y:.359375},{x:.421875,y:.359375},{x:.421875,y:.359375},{x:.453125,y:.359375},{x:.453125,y:.359375},{x:.484375,y:.359375},{x:.484375,y:.359375},{x:.515625,y:.359375},{x:.515625,y:.359375},{x:.546875,y:.359375},{x:.546875,y:.359375},{x:.578125,y:.359375},{x:.578125,y:.359375},{x:.609375,y:.359375},{x:.609375,y:.359375},{x:.640625,y:.359375},{x:.640625,y:.359375},{x:.671875,y:.359375},{x:.671875,y:.359375},{x:.703125,y:.359375},{x:.703125,y:.359375},{x:.734375,y:.359375},{x:.734375,y:.359375},{x:.765625,y:.359375},{x:.765625,y:.359375},{x:.796875,y:.359375},{x:.796875,y:.359375},{x:.828125,y:.359375},{x:.828125,y:.359375},{x:.859375,y:.359375},{x:.859375,y:.359375},{x:.890625,y:.359375},{x:.890625,y:.359375},{x:.921875,y:.359375},{x:.921875,y:.359375},{x:.953125,y:.359375},{x:.953125,y:.359375},{x:.984375,y:.359375},{x:.984375,y:.359375},{x:.015625,y:.390625},{x:.015625,y:.390625},{x:.046875,y:.390625},{x:.046875,y:.390625},{x:.078125,y:.390625},{x:.078125,y:.390625},{x:.109375,y:.390625},{x:.109375,y:.390625},{x:.140625,y:.390625},{x:.140625,y:.390625},{x:.171875,y:.390625},{x:.171875,y:.390625},{x:.203125,y:.390625},{x:.203125,y:.390625},{x:.234375,y:.390625},{x:.234375,y:.390625},{x:.265625,y:.390625},{x:.265625,y:.390625},{x:.296875,y:.390625},{x:.296875,y:.390625},{x:.328125,y:.390625},{x:.328125,y:.390625},{x:.359375,y:.390625},{x:.359375,y:.390625},{x:.390625,y:.390625},{x:.390625,y:.390625},{x:.421875,y:.390625},{x:.421875,y:.390625},{x:.453125,y:.390625},{x:.453125,y:.390625},{x:.484375,y:.390625},{x:.484375,y:.390625},{x:.515625,y:.390625},{x:.515625,y:.390625},{x:.546875,y:.390625},{x:.546875,y:.390625},{x:.578125,y:.390625},{x:.578125,y:.390625},{x:.609375,y:.390625},{x:.609375,y:.390625},{x:.640625,y:.390625},{x:.640625,y:.390625},{x:.671875,y:.390625},{x:.671875,y:.390625},{x:.703125,y:.390625},{x:.703125,y:.390625},{x:.734375,y:.390625},{x:.734375,y:.390625},{x:.765625,y:.390625},{x:.765625,y:.390625},{x:.796875,y:.390625},{x:.796875,y:.390625},{x:.828125,y:.390625},{x:.828125,y:.390625},{x:.859375,y:.390625},{x:.859375,y:.390625},{x:.890625,y:.390625},{x:.890625,y:.390625},{x:.921875,y:.390625},{x:.921875,y:.390625},{x:.953125,y:.390625},{x:.953125,y:.390625},{x:.984375,y:.390625},{x:.984375,y:.390625},{x:.015625,y:.421875},{x:.015625,y:.421875},{x:.046875,y:.421875},{x:.046875,y:.421875},{x:.078125,y:.421875},{x:.078125,y:.421875},{x:.109375,y:.421875},{x:.109375,y:.421875},{x:.140625,y:.421875},{x:.140625,y:.421875},{x:.171875,y:.421875},{x:.171875,y:.421875},{x:.203125,y:.421875},{x:.203125,y:.421875},{x:.234375,y:.421875},{x:.234375,y:.421875},{x:.265625,y:.421875},{x:.265625,y:.421875},{x:.296875,y:.421875},{x:.296875,y:.421875},{x:.328125,y:.421875},{x:.328125,y:.421875},{x:.359375,y:.421875},{x:.359375,y:.421875},{x:.390625,y:.421875},{x:.390625,y:.421875},{x:.421875,y:.421875},{x:.421875,y:.421875},{x:.453125,y:.421875},{x:.453125,y:.421875},{x:.484375,y:.421875},{x:.484375,y:.421875},{x:.515625,y:.421875},{x:.515625,y:.421875},{x:.546875,y:.421875},{x:.546875,y:.421875},{x:.578125,y:.421875},{x:.578125,y:.421875},{x:.609375,y:.421875},{x:.609375,y:.421875},{x:.640625,y:.421875},{x:.640625,y:.421875},{x:.671875,y:.421875},{x:.671875,y:.421875},{x:.703125,y:.421875},{x:.703125,y:.421875},{x:.734375,y:.421875},{x:.734375,y:.421875},{x:.765625,y:.421875},{x:.765625,y:.421875},{x:.796875,y:.421875},{x:.796875,y:.421875},{x:.828125,y:.421875},{x:.828125,y:.421875},{x:.859375,y:.421875},{x:.859375,y:.421875},{x:.890625,y:.421875},{x:.890625,y:.421875},{x:.921875,y:.421875},{x:.921875,y:.421875},{x:.953125,y:.421875},{x:.953125,y:.421875},{x:.984375,y:.421875},{x:.984375,y:.421875},{x:.015625,y:.453125},{x:.015625,y:.453125},{x:.046875,y:.453125},{x:.046875,y:.453125},{x:.078125,y:.453125},{x:.078125,y:.453125},{x:.109375,y:.453125},{x:.109375,y:.453125},{x:.140625,y:.453125},{x:.140625,y:.453125},{x:.171875,y:.453125},{x:.171875,y:.453125},{x:.203125,y:.453125},{x:.203125,y:.453125},{x:.234375,y:.453125},{x:.234375,y:.453125},{x:.265625,y:.453125},{x:.265625,y:.453125},{x:.296875,y:.453125},{x:.296875,y:.453125},{x:.328125,y:.453125},{x:.328125,y:.453125},{x:.359375,y:.453125},{x:.359375,y:.453125},{x:.390625,y:.453125},{x:.390625,y:.453125},{x:.421875,y:.453125},{x:.421875,y:.453125},{x:.453125,y:.453125},{x:.453125,y:.453125},{x:.484375,y:.453125},{x:.484375,y:.453125},{x:.515625,y:.453125},{x:.515625,y:.453125},{x:.546875,y:.453125},{x:.546875,y:.453125},{x:.578125,y:.453125},{x:.578125,y:.453125},{x:.609375,y:.453125},{x:.609375,y:.453125},{x:.640625,y:.453125},{x:.640625,y:.453125},{x:.671875,y:.453125},{x:.671875,y:.453125},{x:.703125,y:.453125},{x:.703125,y:.453125},{x:.734375,y:.453125},{x:.734375,y:.453125},{x:.765625,y:.453125},{x:.765625,y:.453125},{x:.796875,y:.453125},{x:.796875,y:.453125},{x:.828125,y:.453125},{x:.828125,y:.453125},{x:.859375,y:.453125},{x:.859375,y:.453125},{x:.890625,y:.453125},{x:.890625,y:.453125},{x:.921875,y:.453125},{x:.921875,y:.453125},{x:.953125,y:.453125},{x:.953125,y:.453125},{x:.984375,y:.453125},{x:.984375,y:.453125},{x:.015625,y:.484375},{x:.015625,y:.484375},{x:.046875,y:.484375},{x:.046875,y:.484375},{x:.078125,y:.484375},{x:.078125,y:.484375},{x:.109375,y:.484375},{x:.109375,y:.484375},{x:.140625,y:.484375},{x:.140625,y:.484375},{x:.171875,y:.484375},{x:.171875,y:.484375},{x:.203125,y:.484375},{x:.203125,y:.484375},{x:.234375,y:.484375},{x:.234375,y:.484375},{x:.265625,y:.484375},{x:.265625,y:.484375},{x:.296875,y:.484375},{x:.296875,y:.484375},{x:.328125,y:.484375},{x:.328125,y:.484375},{x:.359375,y:.484375},{x:.359375,y:.484375},{x:.390625,y:.484375},{x:.390625,y:.484375},{x:.421875,y:.484375},{x:.421875,y:.484375},{x:.453125,y:.484375},{x:.453125,y:.484375},{x:.484375,y:.484375},{x:.484375,y:.484375},{x:.515625,y:.484375},{x:.515625,y:.484375},{x:.546875,y:.484375},{x:.546875,y:.484375},{x:.578125,y:.484375},{x:.578125,y:.484375},{x:.609375,y:.484375},{x:.609375,y:.484375},{x:.640625,y:.484375},{x:.640625,y:.484375},{x:.671875,y:.484375},{x:.671875,y:.484375},{x:.703125,y:.484375},{x:.703125,y:.484375},{x:.734375,y:.484375},{x:.734375,y:.484375},{x:.765625,y:.484375},{x:.765625,y:.484375},{x:.796875,y:.484375},{x:.796875,y:.484375},{x:.828125,y:.484375},{x:.828125,y:.484375},{x:.859375,y:.484375},{x:.859375,y:.484375},{x:.890625,y:.484375},{x:.890625,y:.484375},{x:.921875,y:.484375},{x:.921875,y:.484375},{x:.953125,y:.484375},{x:.953125,y:.484375},{x:.984375,y:.484375},{x:.984375,y:.484375},{x:.015625,y:.515625},{x:.015625,y:.515625},{x:.046875,y:.515625},{x:.046875,y:.515625},{x:.078125,y:.515625},{x:.078125,y:.515625},{x:.109375,y:.515625},{x:.109375,y:.515625},{x:.140625,y:.515625},{x:.140625,y:.515625},{x:.171875,y:.515625},{x:.171875,y:.515625},{x:.203125,y:.515625},{x:.203125,y:.515625},{x:.234375,y:.515625},{x:.234375,y:.515625},{x:.265625,y:.515625},{x:.265625,y:.515625},{x:.296875,y:.515625},{x:.296875,y:.515625},{x:.328125,y:.515625},{x:.328125,y:.515625},{x:.359375,y:.515625},{x:.359375,y:.515625},{x:.390625,y:.515625},{x:.390625,y:.515625},{x:.421875,y:.515625},{x:.421875,y:.515625},{x:.453125,y:.515625},{x:.453125,y:.515625},{x:.484375,y:.515625},{x:.484375,y:.515625},{x:.515625,y:.515625},{x:.515625,y:.515625},{x:.546875,y:.515625},{x:.546875,y:.515625},{x:.578125,y:.515625},{x:.578125,y:.515625},{x:.609375,y:.515625},{x:.609375,y:.515625},{x:.640625,y:.515625},{x:.640625,y:.515625},{x:.671875,y:.515625},{x:.671875,y:.515625},{x:.703125,y:.515625},{x:.703125,y:.515625},{x:.734375,y:.515625},{x:.734375,y:.515625},{x:.765625,y:.515625},{x:.765625,y:.515625},{x:.796875,y:.515625},{x:.796875,y:.515625},{x:.828125,y:.515625},{x:.828125,y:.515625},{x:.859375,y:.515625},{x:.859375,y:.515625},{x:.890625,y:.515625},{x:.890625,y:.515625},{x:.921875,y:.515625},{x:.921875,y:.515625},{x:.953125,y:.515625},{x:.953125,y:.515625},{x:.984375,y:.515625},{x:.984375,y:.515625},{x:.015625,y:.546875},{x:.015625,y:.546875},{x:.046875,y:.546875},{x:.046875,y:.546875},{x:.078125,y:.546875},{x:.078125,y:.546875},{x:.109375,y:.546875},{x:.109375,y:.546875},{x:.140625,y:.546875},{x:.140625,y:.546875},{x:.171875,y:.546875},{x:.171875,y:.546875},{x:.203125,y:.546875},{x:.203125,y:.546875},{x:.234375,y:.546875},{x:.234375,y:.546875},{x:.265625,y:.546875},{x:.265625,y:.546875},{x:.296875,y:.546875},{x:.296875,y:.546875},{x:.328125,y:.546875},{x:.328125,y:.546875},{x:.359375,y:.546875},{x:.359375,y:.546875},{x:.390625,y:.546875},{x:.390625,y:.546875},{x:.421875,y:.546875},{x:.421875,y:.546875},{x:.453125,y:.546875},{x:.453125,y:.546875},{x:.484375,y:.546875},{x:.484375,y:.546875},{x:.515625,y:.546875},{x:.515625,y:.546875},{x:.546875,y:.546875},{x:.546875,y:.546875},{x:.578125,y:.546875},{x:.578125,y:.546875},{x:.609375,y:.546875},{x:.609375,y:.546875},{x:.640625,y:.546875},{x:.640625,y:.546875},{x:.671875,y:.546875},{x:.671875,y:.546875},{x:.703125,y:.546875},{x:.703125,y:.546875},{x:.734375,y:.546875},{x:.734375,y:.546875},{x:.765625,y:.546875},{x:.765625,y:.546875},{x:.796875,y:.546875},{x:.796875,y:.546875},{x:.828125,y:.546875},{x:.828125,y:.546875},{x:.859375,y:.546875},{x:.859375,y:.546875},{x:.890625,y:.546875},{x:.890625,y:.546875},{x:.921875,y:.546875},{x:.921875,y:.546875},{x:.953125,y:.546875},{x:.953125,y:.546875},{x:.984375,y:.546875},{x:.984375,y:.546875},{x:.015625,y:.578125},{x:.015625,y:.578125},{x:.046875,y:.578125},{x:.046875,y:.578125},{x:.078125,y:.578125},{x:.078125,y:.578125},{x:.109375,y:.578125},{x:.109375,y:.578125},{x:.140625,y:.578125},{x:.140625,y:.578125},{x:.171875,y:.578125},{x:.171875,y:.578125},{x:.203125,y:.578125},{x:.203125,y:.578125},{x:.234375,y:.578125},{x:.234375,y:.578125},{x:.265625,y:.578125},{x:.265625,y:.578125},{x:.296875,y:.578125},{x:.296875,y:.578125},{x:.328125,y:.578125},{x:.328125,y:.578125},{x:.359375,y:.578125},{x:.359375,y:.578125},{x:.390625,y:.578125},{x:.390625,y:.578125},{x:.421875,y:.578125},{x:.421875,y:.578125},{x:.453125,y:.578125},{x:.453125,y:.578125},{x:.484375,y:.578125},{x:.484375,y:.578125},{x:.515625,y:.578125},{x:.515625,y:.578125},{x:.546875,y:.578125},{x:.546875,y:.578125},{x:.578125,y:.578125},{x:.578125,y:.578125},{x:.609375,y:.578125},{x:.609375,y:.578125},{x:.640625,y:.578125},{x:.640625,y:.578125},{x:.671875,y:.578125},{x:.671875,y:.578125},{x:.703125,y:.578125},{x:.703125,y:.578125},{x:.734375,y:.578125},{x:.734375,y:.578125},{x:.765625,y:.578125},{x:.765625,y:.578125},{x:.796875,y:.578125},{x:.796875,y:.578125},{x:.828125,y:.578125},{x:.828125,y:.578125},{x:.859375,y:.578125},{x:.859375,y:.578125},{x:.890625,y:.578125},{x:.890625,y:.578125},{x:.921875,y:.578125},{x:.921875,y:.578125},{x:.953125,y:.578125},{x:.953125,y:.578125},{x:.984375,y:.578125},{x:.984375,y:.578125},{x:.015625,y:.609375},{x:.015625,y:.609375},{x:.046875,y:.609375},{x:.046875,y:.609375},{x:.078125,y:.609375},{x:.078125,y:.609375},{x:.109375,y:.609375},{x:.109375,y:.609375},{x:.140625,y:.609375},{x:.140625,y:.609375},{x:.171875,y:.609375},{x:.171875,y:.609375},{x:.203125,y:.609375},{x:.203125,y:.609375},{x:.234375,y:.609375},{x:.234375,y:.609375},{x:.265625,y:.609375},{x:.265625,y:.609375},{x:.296875,y:.609375},{x:.296875,y:.609375},{x:.328125,y:.609375},{x:.328125,y:.609375},{x:.359375,y:.609375},{x:.359375,y:.609375},{x:.390625,y:.609375},{x:.390625,y:.609375},{x:.421875,y:.609375},{x:.421875,y:.609375},{x:.453125,y:.609375},{x:.453125,y:.609375},{x:.484375,y:.609375},{x:.484375,y:.609375},{x:.515625,y:.609375},{x:.515625,y:.609375},{x:.546875,y:.609375},{x:.546875,y:.609375},{x:.578125,y:.609375},{x:.578125,y:.609375},{x:.609375,y:.609375},{x:.609375,y:.609375},{x:.640625,y:.609375},{x:.640625,y:.609375},{x:.671875,y:.609375},{x:.671875,y:.609375},{x:.703125,y:.609375},{x:.703125,y:.609375},{x:.734375,y:.609375},{x:.734375,y:.609375},{x:.765625,y:.609375},{x:.765625,y:.609375},{x:.796875,y:.609375},{x:.796875,y:.609375},{x:.828125,y:.609375},{x:.828125,y:.609375},{x:.859375,y:.609375},{x:.859375,y:.609375},{x:.890625,y:.609375},{x:.890625,y:.609375},{x:.921875,y:.609375},{x:.921875,y:.609375},{x:.953125,y:.609375},{x:.953125,y:.609375},{x:.984375,y:.609375},{x:.984375,y:.609375},{x:.015625,y:.640625},{x:.015625,y:.640625},{x:.046875,y:.640625},{x:.046875,y:.640625},{x:.078125,y:.640625},{x:.078125,y:.640625},{x:.109375,y:.640625},{x:.109375,y:.640625},{x:.140625,y:.640625},{x:.140625,y:.640625},{x:.171875,y:.640625},{x:.171875,y:.640625},{x:.203125,y:.640625},{x:.203125,y:.640625},{x:.234375,y:.640625},{x:.234375,y:.640625},{x:.265625,y:.640625},{x:.265625,y:.640625},{x:.296875,y:.640625},{x:.296875,y:.640625},{x:.328125,y:.640625},{x:.328125,y:.640625},{x:.359375,y:.640625},{x:.359375,y:.640625},{x:.390625,y:.640625},{x:.390625,y:.640625},{x:.421875,y:.640625},{x:.421875,y:.640625},{x:.453125,y:.640625},{x:.453125,y:.640625},{x:.484375,y:.640625},{x:.484375,y:.640625},{x:.515625,y:.640625},{x:.515625,y:.640625},{x:.546875,y:.640625},{x:.546875,y:.640625},{x:.578125,y:.640625},{x:.578125,y:.640625},{x:.609375,y:.640625},{x:.609375,y:.640625},{x:.640625,y:.640625},{x:.640625,y:.640625},{x:.671875,y:.640625},{x:.671875,y:.640625},{x:.703125,y:.640625},{x:.703125,y:.640625},{x:.734375,y:.640625},{x:.734375,y:.640625},{x:.765625,y:.640625},{x:.765625,y:.640625},{x:.796875,y:.640625},{x:.796875,y:.640625},{x:.828125,y:.640625},{x:.828125,y:.640625},{x:.859375,y:.640625},{x:.859375,y:.640625},{x:.890625,y:.640625},{x:.890625,y:.640625},{x:.921875,y:.640625},{x:.921875,y:.640625},{x:.953125,y:.640625},{x:.953125,y:.640625},{x:.984375,y:.640625},{x:.984375,y:.640625},{x:.015625,y:.671875},{x:.015625,y:.671875},{x:.046875,y:.671875},{x:.046875,y:.671875},{x:.078125,y:.671875},{x:.078125,y:.671875},{x:.109375,y:.671875},{x:.109375,y:.671875},{x:.140625,y:.671875},{x:.140625,y:.671875},{x:.171875,y:.671875},{x:.171875,y:.671875},{x:.203125,y:.671875},{x:.203125,y:.671875},{x:.234375,y:.671875},{x:.234375,y:.671875},{x:.265625,y:.671875},{x:.265625,y:.671875},{x:.296875,y:.671875},{x:.296875,y:.671875},{x:.328125,y:.671875},{x:.328125,y:.671875},{x:.359375,y:.671875},{x:.359375,y:.671875},{x:.390625,y:.671875},{x:.390625,y:.671875},{x:.421875,y:.671875},{x:.421875,y:.671875},{x:.453125,y:.671875},{x:.453125,y:.671875},{x:.484375,y:.671875},{x:.484375,y:.671875},{x:.515625,y:.671875},{x:.515625,y:.671875},{x:.546875,y:.671875},{x:.546875,y:.671875},{x:.578125,y:.671875},{x:.578125,y:.671875},{x:.609375,y:.671875},{x:.609375,y:.671875},{x:.640625,y:.671875},{x:.640625,y:.671875},{x:.671875,y:.671875},{x:.671875,y:.671875},{x:.703125,y:.671875},{x:.703125,y:.671875},{x:.734375,y:.671875},{x:.734375,y:.671875},{x:.765625,y:.671875},{x:.765625,y:.671875},{x:.796875,y:.671875},{x:.796875,y:.671875},{x:.828125,y:.671875},{x:.828125,y:.671875},{x:.859375,y:.671875},{x:.859375,y:.671875},{x:.890625,y:.671875},{x:.890625,y:.671875},{x:.921875,y:.671875},{x:.921875,y:.671875},{x:.953125,y:.671875},{x:.953125,y:.671875},{x:.984375,y:.671875},{x:.984375,y:.671875},{x:.015625,y:.703125},{x:.015625,y:.703125},{x:.046875,y:.703125},{x:.046875,y:.703125},{x:.078125,y:.703125},{x:.078125,y:.703125},{x:.109375,y:.703125},{x:.109375,y:.703125},{x:.140625,y:.703125},{x:.140625,y:.703125},{x:.171875,y:.703125},{x:.171875,y:.703125},{x:.203125,y:.703125},{x:.203125,y:.703125},{x:.234375,y:.703125},{x:.234375,y:.703125},{x:.265625,y:.703125},{x:.265625,y:.703125},{x:.296875,y:.703125},{x:.296875,y:.703125},{x:.328125,y:.703125},{x:.328125,y:.703125},{x:.359375,y:.703125},{x:.359375,y:.703125},{x:.390625,y:.703125},{x:.390625,y:.703125},{x:.421875,y:.703125},{x:.421875,y:.703125},{x:.453125,y:.703125},{x:.453125,y:.703125},{x:.484375,y:.703125},{x:.484375,y:.703125},{x:.515625,y:.703125},{x:.515625,y:.703125},{x:.546875,y:.703125},{x:.546875,y:.703125},{x:.578125,y:.703125},{x:.578125,y:.703125},{x:.609375,y:.703125},{x:.609375,y:.703125},{x:.640625,y:.703125},{x:.640625,y:.703125},{x:.671875,y:.703125},{x:.671875,y:.703125},{x:.703125,y:.703125},{x:.703125,y:.703125},{x:.734375,y:.703125},{x:.734375,y:.703125},{x:.765625,y:.703125},{x:.765625,y:.703125},{x:.796875,y:.703125},{x:.796875,y:.703125},{x:.828125,y:.703125},{x:.828125,y:.703125},{x:.859375,y:.703125},{x:.859375,y:.703125},{x:.890625,y:.703125},{x:.890625,y:.703125},{x:.921875,y:.703125},{x:.921875,y:.703125},{x:.953125,y:.703125},{x:.953125,y:.703125},{x:.984375,y:.703125},{x:.984375,y:.703125},{x:.015625,y:.734375},{x:.015625,y:.734375},{x:.046875,y:.734375},{x:.046875,y:.734375},{x:.078125,y:.734375},{x:.078125,y:.734375},{x:.109375,y:.734375},{x:.109375,y:.734375},{x:.140625,y:.734375},{x:.140625,y:.734375},{x:.171875,y:.734375},{x:.171875,y:.734375},{x:.203125,y:.734375},{x:.203125,y:.734375},{x:.234375,y:.734375},{x:.234375,y:.734375},{x:.265625,y:.734375},{x:.265625,y:.734375},{x:.296875,y:.734375},{x:.296875,y:.734375},{x:.328125,y:.734375},{x:.328125,y:.734375},{x:.359375,y:.734375},{x:.359375,y:.734375},{x:.390625,y:.734375},{x:.390625,y:.734375},{x:.421875,y:.734375},{x:.421875,y:.734375},{x:.453125,y:.734375},{x:.453125,y:.734375},{x:.484375,y:.734375},{x:.484375,y:.734375},{x:.515625,y:.734375},{x:.515625,y:.734375},{x:.546875,y:.734375},{x:.546875,y:.734375},{x:.578125,y:.734375},{x:.578125,y:.734375},{x:.609375,y:.734375},{x:.609375,y:.734375},{x:.640625,y:.734375},{x:.640625,y:.734375},{x:.671875,y:.734375},{x:.671875,y:.734375},{x:.703125,y:.734375},{x:.703125,y:.734375},{x:.734375,y:.734375},{x:.734375,y:.734375},{x:.765625,y:.734375},{x:.765625,y:.734375},{x:.796875,y:.734375},{x:.796875,y:.734375},{x:.828125,y:.734375},{x:.828125,y:.734375},{x:.859375,y:.734375},{x:.859375,y:.734375},{x:.890625,y:.734375},{x:.890625,y:.734375},{x:.921875,y:.734375},{x:.921875,y:.734375},{x:.953125,y:.734375},{x:.953125,y:.734375},{x:.984375,y:.734375},{x:.984375,y:.734375},{x:.015625,y:.765625},{x:.015625,y:.765625},{x:.046875,y:.765625},{x:.046875,y:.765625},{x:.078125,y:.765625},{x:.078125,y:.765625},{x:.109375,y:.765625},{x:.109375,y:.765625},{x:.140625,y:.765625},{x:.140625,y:.765625},{x:.171875,y:.765625},{x:.171875,y:.765625},{x:.203125,y:.765625},{x:.203125,y:.765625},{x:.234375,y:.765625},{x:.234375,y:.765625},{x:.265625,y:.765625},{x:.265625,y:.765625},{x:.296875,y:.765625},{x:.296875,y:.765625},{x:.328125,y:.765625},{x:.328125,y:.765625},{x:.359375,y:.765625},{x:.359375,y:.765625},{x:.390625,y:.765625},{x:.390625,y:.765625},{x:.421875,y:.765625},{x:.421875,y:.765625},{x:.453125,y:.765625},{x:.453125,y:.765625},{x:.484375,y:.765625},{x:.484375,y:.765625},{x:.515625,y:.765625},{x:.515625,y:.765625},{x:.546875,y:.765625},{x:.546875,y:.765625},{x:.578125,y:.765625},{x:.578125,y:.765625},{x:.609375,y:.765625},{x:.609375,y:.765625},{x:.640625,y:.765625},{x:.640625,y:.765625},{x:.671875,y:.765625},{x:.671875,y:.765625},{x:.703125,y:.765625},{x:.703125,y:.765625},{x:.734375,y:.765625},{x:.734375,y:.765625},{x:.765625,y:.765625},{x:.765625,y:.765625},{x:.796875,y:.765625},{x:.796875,y:.765625},{x:.828125,y:.765625},{x:.828125,y:.765625},{x:.859375,y:.765625},{x:.859375,y:.765625},{x:.890625,y:.765625},{x:.890625,y:.765625},{x:.921875,y:.765625},{x:.921875,y:.765625},{x:.953125,y:.765625},{x:.953125,y:.765625},{x:.984375,y:.765625},{x:.984375,y:.765625},{x:.015625,y:.796875},{x:.015625,y:.796875},{x:.046875,y:.796875},{x:.046875,y:.796875},{x:.078125,y:.796875},{x:.078125,y:.796875},{x:.109375,y:.796875},{x:.109375,y:.796875},{x:.140625,y:.796875},{x:.140625,y:.796875},{x:.171875,y:.796875},{x:.171875,y:.796875},{x:.203125,y:.796875},{x:.203125,y:.796875},{x:.234375,y:.796875},{x:.234375,y:.796875},{x:.265625,y:.796875},{x:.265625,y:.796875},{x:.296875,y:.796875},{x:.296875,y:.796875},{x:.328125,y:.796875},{x:.328125,y:.796875},{x:.359375,y:.796875},{x:.359375,y:.796875},{x:.390625,y:.796875},{x:.390625,y:.796875},{x:.421875,y:.796875},{x:.421875,y:.796875},{x:.453125,y:.796875},{x:.453125,y:.796875},{x:.484375,y:.796875},{x:.484375,y:.796875},{x:.515625,y:.796875},{x:.515625,y:.796875},{x:.546875,y:.796875},{x:.546875,y:.796875},{x:.578125,y:.796875},{x:.578125,y:.796875},{x:.609375,y:.796875},{x:.609375,y:.796875},{x:.640625,y:.796875},{x:.640625,y:.796875},{x:.671875,y:.796875},{x:.671875,y:.796875},{x:.703125,y:.796875},{x:.703125,y:.796875},{x:.734375,y:.796875},{x:.734375,y:.796875},{x:.765625,y:.796875},{x:.765625,y:.796875},{x:.796875,y:.796875},{x:.796875,y:.796875},{x:.828125,y:.796875},{x:.828125,y:.796875},{x:.859375,y:.796875},{x:.859375,y:.796875},{x:.890625,y:.796875},{x:.890625,y:.796875},{x:.921875,y:.796875},{x:.921875,y:.796875},{x:.953125,y:.796875},{x:.953125,y:.796875},{x:.984375,y:.796875},{x:.984375,y:.796875},{x:.015625,y:.828125},{x:.015625,y:.828125},{x:.046875,y:.828125},{x:.046875,y:.828125},{x:.078125,y:.828125},{x:.078125,y:.828125},{x:.109375,y:.828125},{x:.109375,y:.828125},{x:.140625,y:.828125},{x:.140625,y:.828125},{x:.171875,y:.828125},{x:.171875,y:.828125},{x:.203125,y:.828125},{x:.203125,y:.828125},{x:.234375,y:.828125},{x:.234375,y:.828125},{x:.265625,y:.828125},{x:.265625,y:.828125},{x:.296875,y:.828125},{x:.296875,y:.828125},{x:.328125,y:.828125},{x:.328125,y:.828125},{x:.359375,y:.828125},{x:.359375,y:.828125},{x:.390625,y:.828125},{x:.390625,y:.828125},{x:.421875,y:.828125},{x:.421875,y:.828125},{x:.453125,y:.828125},{x:.453125,y:.828125},{x:.484375,y:.828125},{x:.484375,y:.828125},{x:.515625,y:.828125},{x:.515625,y:.828125},{x:.546875,y:.828125},{x:.546875,y:.828125},{x:.578125,y:.828125},{x:.578125,y:.828125},{x:.609375,y:.828125},{x:.609375,y:.828125},{x:.640625,y:.828125},{x:.640625,y:.828125},{x:.671875,y:.828125},{x:.671875,y:.828125},{x:.703125,y:.828125},{x:.703125,y:.828125},{x:.734375,y:.828125},{x:.734375,y:.828125},{x:.765625,y:.828125},{x:.765625,y:.828125},{x:.796875,y:.828125},{x:.796875,y:.828125},{x:.828125,y:.828125},{x:.828125,y:.828125},{x:.859375,y:.828125},{x:.859375,y:.828125},{x:.890625,y:.828125},{x:.890625,y:.828125},{x:.921875,y:.828125},{x:.921875,y:.828125},{x:.953125,y:.828125},{x:.953125,y:.828125},{x:.984375,y:.828125},{x:.984375,y:.828125},{x:.015625,y:.859375},{x:.015625,y:.859375},{x:.046875,y:.859375},{x:.046875,y:.859375},{x:.078125,y:.859375},{x:.078125,y:.859375},{x:.109375,y:.859375},{x:.109375,y:.859375},{x:.140625,y:.859375},{x:.140625,y:.859375},{x:.171875,y:.859375},{x:.171875,y:.859375},{x:.203125,y:.859375},{x:.203125,y:.859375},{x:.234375,y:.859375},{x:.234375,y:.859375},{x:.265625,y:.859375},{x:.265625,y:.859375},{x:.296875,y:.859375},{x:.296875,y:.859375},{x:.328125,y:.859375},{x:.328125,y:.859375},{x:.359375,y:.859375},{x:.359375,y:.859375},{x:.390625,y:.859375},{x:.390625,y:.859375},{x:.421875,y:.859375},{x:.421875,y:.859375},{x:.453125,y:.859375},{x:.453125,y:.859375},{x:.484375,y:.859375},{x:.484375,y:.859375},{x:.515625,y:.859375},{x:.515625,y:.859375},{x:.546875,y:.859375},{x:.546875,y:.859375},{x:.578125,y:.859375},{x:.578125,y:.859375},{x:.609375,y:.859375},{x:.609375,y:.859375},{x:.640625,y:.859375},{x:.640625,y:.859375},{x:.671875,y:.859375},{x:.671875,y:.859375},{x:.703125,y:.859375},{x:.703125,y:.859375},{x:.734375,y:.859375},{x:.734375,y:.859375},{x:.765625,y:.859375},{x:.765625,y:.859375},{x:.796875,y:.859375},{x:.796875,y:.859375},{x:.828125,y:.859375},{x:.828125,y:.859375},{x:.859375,y:.859375},{x:.859375,y:.859375},{x:.890625,y:.859375},{x:.890625,y:.859375},{x:.921875,y:.859375},{x:.921875,y:.859375},{x:.953125,y:.859375},{x:.953125,y:.859375},{x:.984375,y:.859375},{x:.984375,y:.859375},{x:.015625,y:.890625},{x:.015625,y:.890625},{x:.046875,y:.890625},{x:.046875,y:.890625},{x:.078125,y:.890625},{x:.078125,y:.890625},{x:.109375,y:.890625},{x:.109375,y:.890625},{x:.140625,y:.890625},{x:.140625,y:.890625},{x:.171875,y:.890625},{x:.171875,y:.890625},{x:.203125,y:.890625},{x:.203125,y:.890625},{x:.234375,y:.890625},{x:.234375,y:.890625},{x:.265625,y:.890625},{x:.265625,y:.890625},{x:.296875,y:.890625},{x:.296875,y:.890625},{x:.328125,y:.890625},{x:.328125,y:.890625},{x:.359375,y:.890625},{x:.359375,y:.890625},{x:.390625,y:.890625},{x:.390625,y:.890625},{x:.421875,y:.890625},{x:.421875,y:.890625},{x:.453125,y:.890625},{x:.453125,y:.890625},{x:.484375,y:.890625},{x:.484375,y:.890625},{x:.515625,y:.890625},{x:.515625,y:.890625},{x:.546875,y:.890625},{x:.546875,y:.890625},{x:.578125,y:.890625},{x:.578125,y:.890625},{x:.609375,y:.890625},{x:.609375,y:.890625},{x:.640625,y:.890625},{x:.640625,y:.890625},{x:.671875,y:.890625},{x:.671875,y:.890625},{x:.703125,y:.890625},{x:.703125,y:.890625},{x:.734375,y:.890625},{x:.734375,y:.890625},{x:.765625,y:.890625},{x:.765625,y:.890625},{x:.796875,y:.890625},{x:.796875,y:.890625},{x:.828125,y:.890625},{x:.828125,y:.890625},{x:.859375,y:.890625},{x:.859375,y:.890625},{x:.890625,y:.890625},{x:.890625,y:.890625},{x:.921875,y:.890625},{x:.921875,y:.890625},{x:.953125,y:.890625},{x:.953125,y:.890625},{x:.984375,y:.890625},{x:.984375,y:.890625},{x:.015625,y:.921875},{x:.015625,y:.921875},{x:.046875,y:.921875},{x:.046875,y:.921875},{x:.078125,y:.921875},{x:.078125,y:.921875},{x:.109375,y:.921875},{x:.109375,y:.921875},{x:.140625,y:.921875},{x:.140625,y:.921875},{x:.171875,y:.921875},{x:.171875,y:.921875},{x:.203125,y:.921875},{x:.203125,y:.921875},{x:.234375,y:.921875},{x:.234375,y:.921875},{x:.265625,y:.921875},{x:.265625,y:.921875},{x:.296875,y:.921875},{x:.296875,y:.921875},{x:.328125,y:.921875},{x:.328125,y:.921875},{x:.359375,y:.921875},{x:.359375,y:.921875},{x:.390625,y:.921875},{x:.390625,y:.921875},{x:.421875,y:.921875},{x:.421875,y:.921875},{x:.453125,y:.921875},{x:.453125,y:.921875},{x:.484375,y:.921875},{x:.484375,y:.921875},{x:.515625,y:.921875},{x:.515625,y:.921875},{x:.546875,y:.921875},{x:.546875,y:.921875},{x:.578125,y:.921875},{x:.578125,y:.921875},{x:.609375,y:.921875},{x:.609375,y:.921875},{x:.640625,y:.921875},{x:.640625,y:.921875},{x:.671875,y:.921875},{x:.671875,y:.921875},{x:.703125,y:.921875},{x:.703125,y:.921875},{x:.734375,y:.921875},{x:.734375,y:.921875},{x:.765625,y:.921875},{x:.765625,y:.921875},{x:.796875,y:.921875},{x:.796875,y:.921875},{x:.828125,y:.921875},{x:.828125,y:.921875},{x:.859375,y:.921875},{x:.859375,y:.921875},{x:.890625,y:.921875},{x:.890625,y:.921875},{x:.921875,y:.921875},{x:.921875,y:.921875},{x:.953125,y:.921875},{x:.953125,y:.921875},{x:.984375,y:.921875},{x:.984375,y:.921875},{x:.015625,y:.953125},{x:.015625,y:.953125},{x:.046875,y:.953125},{x:.046875,y:.953125},{x:.078125,y:.953125},{x:.078125,y:.953125},{x:.109375,y:.953125},{x:.109375,y:.953125},{x:.140625,y:.953125},{x:.140625,y:.953125},{x:.171875,y:.953125},{x:.171875,y:.953125},{x:.203125,y:.953125},{x:.203125,y:.953125},{x:.234375,y:.953125},{x:.234375,y:.953125},{x:.265625,y:.953125},{x:.265625,y:.953125},{x:.296875,y:.953125},{x:.296875,y:.953125},{x:.328125,y:.953125},{x:.328125,y:.953125},{x:.359375,y:.953125},{x:.359375,y:.953125},{x:.390625,y:.953125},{x:.390625,y:.953125},{x:.421875,y:.953125},{x:.421875,y:.953125},{x:.453125,y:.953125},{x:.453125,y:.953125},{x:.484375,y:.953125},{x:.484375,y:.953125},{x:.515625,y:.953125},{x:.515625,y:.953125},{x:.546875,y:.953125},{x:.546875,y:.953125},{x:.578125,y:.953125},{x:.578125,y:.953125},{x:.609375,y:.953125},{x:.609375,y:.953125},{x:.640625,y:.953125},{x:.640625,y:.953125},{x:.671875,y:.953125},{x:.671875,y:.953125},{x:.703125,y:.953125},{x:.703125,y:.953125},{x:.734375,y:.953125},{x:.734375,y:.953125},{x:.765625,y:.953125},{x:.765625,y:.953125},{x:.796875,y:.953125},{x:.796875,y:.953125},{x:.828125,y:.953125},{x:.828125,y:.953125},{x:.859375,y:.953125},{x:.859375,y:.953125},{x:.890625,y:.953125},{x:.890625,y:.953125},{x:.921875,y:.953125},{x:.921875,y:.953125},{x:.953125,y:.953125},{x:.953125,y:.953125},{x:.984375,y:.953125},{x:.984375,y:.953125},{x:.015625,y:.984375},{x:.015625,y:.984375},{x:.046875,y:.984375},{x:.046875,y:.984375},{x:.078125,y:.984375},{x:.078125,y:.984375},{x:.109375,y:.984375},{x:.109375,y:.984375},{x:.140625,y:.984375},{x:.140625,y:.984375},{x:.171875,y:.984375},{x:.171875,y:.984375},{x:.203125,y:.984375},{x:.203125,y:.984375},{x:.234375,y:.984375},{x:.234375,y:.984375},{x:.265625,y:.984375},{x:.265625,y:.984375},{x:.296875,y:.984375},{x:.296875,y:.984375},{x:.328125,y:.984375},{x:.328125,y:.984375},{x:.359375,y:.984375},{x:.359375,y:.984375},{x:.390625,y:.984375},{x:.390625,y:.984375},{x:.421875,y:.984375},{x:.421875,y:.984375},{x:.453125,y:.984375},{x:.453125,y:.984375},{x:.484375,y:.984375},{x:.484375,y:.984375},{x:.515625,y:.984375},{x:.515625,y:.984375},{x:.546875,y:.984375},{x:.546875,y:.984375},{x:.578125,y:.984375},{x:.578125,y:.984375},{x:.609375,y:.984375},{x:.609375,y:.984375},{x:.640625,y:.984375},{x:.640625,y:.984375},{x:.671875,y:.984375},{x:.671875,y:.984375},{x:.703125,y:.984375},{x:.703125,y:.984375},{x:.734375,y:.984375},{x:.734375,y:.984375},{x:.765625,y:.984375},{x:.765625,y:.984375},{x:.796875,y:.984375},{x:.796875,y:.984375},{x:.828125,y:.984375},{x:.828125,y:.984375},{x:.859375,y:.984375},{x:.859375,y:.984375},{x:.890625,y:.984375},{x:.890625,y:.984375},{x:.921875,y:.984375},{x:.921875,y:.984375},{x:.953125,y:.984375},{x:.953125,y:.984375},{x:.984375,y:.984375},{x:.984375,y:.984375},{x:.03125,y:.03125},{x:.03125,y:.03125},{x:.09375,y:.03125},{x:.09375,y:.03125},{x:.15625,y:.03125},{x:.15625,y:.03125},{x:.21875,y:.03125},{x:.21875,y:.03125},{x:.28125,y:.03125},{x:.28125,y:.03125},{x:.34375,y:.03125},{x:.34375,y:.03125},{x:.40625,y:.03125},{x:.40625,y:.03125},{x:.46875,y:.03125},{x:.46875,y:.03125},{x:.53125,y:.03125},{x:.53125,y:.03125},{x:.59375,y:.03125},{x:.59375,y:.03125},{x:.65625,y:.03125},{x:.65625,y:.03125},{x:.71875,y:.03125},{x:.71875,y:.03125},{x:.78125,y:.03125},{x:.78125,y:.03125},{x:.84375,y:.03125},{x:.84375,y:.03125},{x:.90625,y:.03125},{x:.90625,y:.03125},{x:.96875,y:.03125},{x:.96875,y:.03125},{x:.03125,y:.09375},{x:.03125,y:.09375},{x:.09375,y:.09375},{x:.09375,y:.09375},{x:.15625,y:.09375},{x:.15625,y:.09375},{x:.21875,y:.09375},{x:.21875,y:.09375},{x:.28125,y:.09375},{x:.28125,y:.09375},{x:.34375,y:.09375},{x:.34375,y:.09375},{x:.40625,y:.09375},{x:.40625,y:.09375},{x:.46875,y:.09375},{x:.46875,y:.09375},{x:.53125,y:.09375},{x:.53125,y:.09375},{x:.59375,y:.09375},{x:.59375,y:.09375},{x:.65625,y:.09375},{x:.65625,y:.09375},{x:.71875,y:.09375},{x:.71875,y:.09375},{x:.78125,y:.09375},{x:.78125,y:.09375},{x:.84375,y:.09375},{x:.84375,y:.09375},{x:.90625,y:.09375},{x:.90625,y:.09375},{x:.96875,y:.09375},{x:.96875,y:.09375},{x:.03125,y:.15625},{x:.03125,y:.15625},{x:.09375,y:.15625},{x:.09375,y:.15625},{x:.15625,y:.15625},{x:.15625,y:.15625},{x:.21875,y:.15625},{x:.21875,y:.15625},{x:.28125,y:.15625},{x:.28125,y:.15625},{x:.34375,y:.15625},{x:.34375,y:.15625},{x:.40625,y:.15625},{x:.40625,y:.15625},{x:.46875,y:.15625},{x:.46875,y:.15625},{x:.53125,y:.15625},{x:.53125,y:.15625},{x:.59375,y:.15625},{x:.59375,y:.15625},{x:.65625,y:.15625},{x:.65625,y:.15625},{x:.71875,y:.15625},{x:.71875,y:.15625},{x:.78125,y:.15625},{x:.78125,y:.15625},{x:.84375,y:.15625},{x:.84375,y:.15625},{x:.90625,y:.15625},{x:.90625,y:.15625},{x:.96875,y:.15625},{x:.96875,y:.15625},{x:.03125,y:.21875},{x:.03125,y:.21875},{x:.09375,y:.21875},{x:.09375,y:.21875},{x:.15625,y:.21875},{x:.15625,y:.21875},{x:.21875,y:.21875},{x:.21875,y:.21875},{x:.28125,y:.21875},{x:.28125,y:.21875},{x:.34375,y:.21875},{x:.34375,y:.21875},{x:.40625,y:.21875},{x:.40625,y:.21875},{x:.46875,y:.21875},{x:.46875,y:.21875},{x:.53125,y:.21875},{x:.53125,y:.21875},{x:.59375,y:.21875},{x:.59375,y:.21875},{x:.65625,y:.21875},{x:.65625,y:.21875},{x:.71875,y:.21875},{x:.71875,y:.21875},{x:.78125,y:.21875},{x:.78125,y:.21875},{x:.84375,y:.21875},{x:.84375,y:.21875},{x:.90625,y:.21875},{x:.90625,y:.21875},{x:.96875,y:.21875},{x:.96875,y:.21875},{x:.03125,y:.28125},{x:.03125,y:.28125},{x:.09375,y:.28125},{x:.09375,y:.28125},{x:.15625,y:.28125},{x:.15625,y:.28125},{x:.21875,y:.28125},{x:.21875,y:.28125},{x:.28125,y:.28125},{x:.28125,y:.28125},{x:.34375,y:.28125},{x:.34375,y:.28125},{x:.40625,y:.28125},{x:.40625,y:.28125},{x:.46875,y:.28125},{x:.46875,y:.28125},{x:.53125,y:.28125},{x:.53125,y:.28125},{x:.59375,y:.28125},{x:.59375,y:.28125},{x:.65625,y:.28125},{x:.65625,y:.28125},{x:.71875,y:.28125},{x:.71875,y:.28125},{x:.78125,y:.28125},{x:.78125,y:.28125},{x:.84375,y:.28125},{x:.84375,y:.28125},{x:.90625,y:.28125},{x:.90625,y:.28125},{x:.96875,y:.28125},{x:.96875,y:.28125},{x:.03125,y:.34375},{x:.03125,y:.34375},{x:.09375,y:.34375},{x:.09375,y:.34375},{x:.15625,y:.34375},{x:.15625,y:.34375},{x:.21875,y:.34375},{x:.21875,y:.34375},{x:.28125,y:.34375},{x:.28125,y:.34375},{x:.34375,y:.34375},{x:.34375,y:.34375},{x:.40625,y:.34375},{x:.40625,y:.34375},{x:.46875,y:.34375},{x:.46875,y:.34375},{x:.53125,y:.34375},{x:.53125,y:.34375},{x:.59375,y:.34375},{x:.59375,y:.34375},{x:.65625,y:.34375},{x:.65625,y:.34375},{x:.71875,y:.34375},{x:.71875,y:.34375},{x:.78125,y:.34375},{x:.78125,y:.34375},{x:.84375,y:.34375},{x:.84375,y:.34375},{x:.90625,y:.34375},{x:.90625,y:.34375},{x:.96875,y:.34375},{x:.96875,y:.34375},{x:.03125,y:.40625},{x:.03125,y:.40625},{x:.09375,y:.40625},{x:.09375,y:.40625},{x:.15625,y:.40625},{x:.15625,y:.40625},{x:.21875,y:.40625},{x:.21875,y:.40625},{x:.28125,y:.40625},{x:.28125,y:.40625},{x:.34375,y:.40625},{x:.34375,y:.40625},{x:.40625,y:.40625},{x:.40625,y:.40625},{x:.46875,y:.40625},{x:.46875,y:.40625},{x:.53125,y:.40625},{x:.53125,y:.40625},{x:.59375,y:.40625},{x:.59375,y:.40625},{x:.65625,y:.40625},{x:.65625,y:.40625},{x:.71875,y:.40625},{x:.71875,y:.40625},{x:.78125,y:.40625},{x:.78125,y:.40625},{x:.84375,y:.40625},{x:.84375,y:.40625},{x:.90625,y:.40625},{x:.90625,y:.40625},{x:.96875,y:.40625},{x:.96875,y:.40625},{x:.03125,y:.46875},{x:.03125,y:.46875},{x:.09375,y:.46875},{x:.09375,y:.46875},{x:.15625,y:.46875},{x:.15625,y:.46875},{x:.21875,y:.46875},{x:.21875,y:.46875},{x:.28125,y:.46875},{x:.28125,y:.46875},{x:.34375,y:.46875},{x:.34375,y:.46875},{x:.40625,y:.46875},{x:.40625,y:.46875},{x:.46875,y:.46875},{x:.46875,y:.46875},{x:.53125,y:.46875},{x:.53125,y:.46875},{x:.59375,y:.46875},{x:.59375,y:.46875},{x:.65625,y:.46875},{x:.65625,y:.46875},{x:.71875,y:.46875},{x:.71875,y:.46875},{x:.78125,y:.46875},{x:.78125,y:.46875},{x:.84375,y:.46875},{x:.84375,y:.46875},{x:.90625,y:.46875},{x:.90625,y:.46875},{x:.96875,y:.46875},{x:.96875,y:.46875},{x:.03125,y:.53125},{x:.03125,y:.53125},{x:.09375,y:.53125},{x:.09375,y:.53125},{x:.15625,y:.53125},{x:.15625,y:.53125},{x:.21875,y:.53125},{x:.21875,y:.53125},{x:.28125,y:.53125},{x:.28125,y:.53125},{x:.34375,y:.53125},{x:.34375,y:.53125},{x:.40625,y:.53125},{x:.40625,y:.53125},{x:.46875,y:.53125},{x:.46875,y:.53125},{x:.53125,y:.53125},{x:.53125,y:.53125},{x:.59375,y:.53125},{x:.59375,y:.53125},{x:.65625,y:.53125},{x:.65625,y:.53125},{x:.71875,y:.53125},{x:.71875,y:.53125},{x:.78125,y:.53125},{x:.78125,y:.53125},{x:.84375,y:.53125},{x:.84375,y:.53125},{x:.90625,y:.53125},{x:.90625,y:.53125},{x:.96875,y:.53125},{x:.96875,y:.53125},{x:.03125,y:.59375},{x:.03125,y:.59375},{x:.09375,y:.59375},{x:.09375,y:.59375},{x:.15625,y:.59375},{x:.15625,y:.59375},{x:.21875,y:.59375},{x:.21875,y:.59375},{x:.28125,y:.59375},{x:.28125,y:.59375},{x:.34375,y:.59375},{x:.34375,y:.59375},{x:.40625,y:.59375},{x:.40625,y:.59375},{x:.46875,y:.59375},{x:.46875,y:.59375},{x:.53125,y:.59375},{x:.53125,y:.59375},{x:.59375,y:.59375},{x:.59375,y:.59375},{x:.65625,y:.59375},{x:.65625,y:.59375},{x:.71875,y:.59375},{x:.71875,y:.59375},{x:.78125,y:.59375},{x:.78125,y:.59375},{x:.84375,y:.59375},{x:.84375,y:.59375},{x:.90625,y:.59375},{x:.90625,y:.59375},{x:.96875,y:.59375},{x:.96875,y:.59375},{x:.03125,y:.65625},{x:.03125,y:.65625},{x:.09375,y:.65625},{x:.09375,y:.65625},{x:.15625,y:.65625},{x:.15625,y:.65625},{x:.21875,y:.65625},{x:.21875,y:.65625},{x:.28125,y:.65625},{x:.28125,y:.65625},{x:.34375,y:.65625},{x:.34375,y:.65625},{x:.40625,y:.65625},{x:.40625,y:.65625},{x:.46875,y:.65625},{x:.46875,y:.65625},{x:.53125,y:.65625},{x:.53125,y:.65625},{x:.59375,y:.65625},{x:.59375,y:.65625},{x:.65625,y:.65625},{x:.65625,y:.65625},{x:.71875,y:.65625},{x:.71875,y:.65625},{x:.78125,y:.65625},{x:.78125,y:.65625},{x:.84375,y:.65625},{x:.84375,y:.65625},{x:.90625,y:.65625},{x:.90625,y:.65625},{x:.96875,y:.65625},{x:.96875,y:.65625},{x:.03125,y:.71875},{x:.03125,y:.71875},{x:.09375,y:.71875},{x:.09375,y:.71875},{x:.15625,y:.71875},{x:.15625,y:.71875},{x:.21875,y:.71875},{x:.21875,y:.71875},{x:.28125,y:.71875},{x:.28125,y:.71875},{x:.34375,y:.71875},{x:.34375,y:.71875},{x:.40625,y:.71875},{x:.40625,y:.71875},{x:.46875,y:.71875},{x:.46875,y:.71875},{x:.53125,y:.71875},{x:.53125,y:.71875},{x:.59375,y:.71875},{x:.59375,y:.71875},{x:.65625,y:.71875},{x:.65625,y:.71875},{x:.71875,y:.71875},{x:.71875,y:.71875},{x:.78125,y:.71875},{x:.78125,y:.71875},{x:.84375,y:.71875},{x:.84375,y:.71875},{x:.90625,y:.71875},{x:.90625,y:.71875},{x:.96875,y:.71875},{x:.96875,y:.71875},{x:.03125,y:.78125},{x:.03125,y:.78125},{x:.09375,y:.78125},{x:.09375,y:.78125},{x:.15625,y:.78125},{x:.15625,y:.78125},{x:.21875,y:.78125},{x:.21875,y:.78125},{x:.28125,y:.78125},{x:.28125,y:.78125},{x:.34375,y:.78125},{x:.34375,y:.78125},{x:.40625,y:.78125},{x:.40625,y:.78125},{x:.46875,y:.78125},{x:.46875,y:.78125},{x:.53125,y:.78125},{x:.53125,y:.78125},{x:.59375,y:.78125},{x:.59375,y:.78125},{x:.65625,y:.78125},{x:.65625,y:.78125},{x:.71875,y:.78125},{x:.71875,y:.78125},{x:.78125,y:.78125},{x:.78125,y:.78125},{x:.84375,y:.78125},{x:.84375,y:.78125},{x:.90625,y:.78125},{x:.90625,y:.78125},{x:.96875,y:.78125},{x:.96875,y:.78125},{x:.03125,y:.84375},{x:.03125,y:.84375},{x:.09375,y:.84375},{x:.09375,y:.84375},{x:.15625,y:.84375},{x:.15625,y:.84375},{x:.21875,y:.84375},{x:.21875,y:.84375},{x:.28125,y:.84375},{x:.28125,y:.84375},{x:.34375,y:.84375},{x:.34375,y:.84375},{x:.40625,y:.84375},{x:.40625,y:.84375},{x:.46875,y:.84375},{x:.46875,y:.84375},{x:.53125,y:.84375},{x:.53125,y:.84375},{x:.59375,y:.84375},{x:.59375,y:.84375},{x:.65625,y:.84375},{x:.65625,y:.84375},{x:.71875,y:.84375},{x:.71875,y:.84375},{x:.78125,y:.84375},{x:.78125,y:.84375},{x:.84375,y:.84375},{x:.84375,y:.84375},{x:.90625,y:.84375},{x:.90625,y:.84375},{x:.96875,y:.84375},{x:.96875,y:.84375},{x:.03125,y:.90625},{x:.03125,y:.90625},{x:.09375,y:.90625},{x:.09375,y:.90625},{x:.15625,y:.90625},{x:.15625,y:.90625},{x:.21875,y:.90625},{x:.21875,y:.90625},{x:.28125,y:.90625},{x:.28125,y:.90625},{x:.34375,y:.90625},{x:.34375,y:.90625},{x:.40625,y:.90625},{x:.40625,y:.90625},{x:.46875,y:.90625},{x:.46875,y:.90625},{x:.53125,y:.90625},{x:.53125,y:.90625},{x:.59375,y:.90625},{x:.59375,y:.90625},{x:.65625,y:.90625},{x:.65625,y:.90625},{x:.71875,y:.90625},{x:.71875,y:.90625},{x:.78125,y:.90625},{x:.78125,y:.90625},{x:.84375,y:.90625},{x:.84375,y:.90625},{x:.90625,y:.90625},{x:.90625,y:.90625},{x:.96875,y:.90625},{x:.96875,y:.90625},{x:.03125,y:.96875},{x:.03125,y:.96875},{x:.09375,y:.96875},{x:.09375,y:.96875},{x:.15625,y:.96875},{x:.15625,y:.96875},{x:.21875,y:.96875},{x:.21875,y:.96875},{x:.28125,y:.96875},{x:.28125,y:.96875},{x:.34375,y:.96875},{x:.34375,y:.96875},{x:.40625,y:.96875},{x:.40625,y:.96875},{x:.46875,y:.96875},{x:.46875,y:.96875},{x:.53125,y:.96875},{x:.53125,y:.96875},{x:.59375,y:.96875},{x:.59375,y:.96875},{x:.65625,y:.96875},{x:.65625,y:.96875},{x:.71875,y:.96875},{x:.71875,y:.96875},{x:.78125,y:.96875},{x:.78125,y:.96875},{x:.84375,y:.96875},{x:.84375,y:.96875},{x:.90625,y:.96875},{x:.90625,y:.96875},{x:.96875,y:.96875},{x:.96875,y:.96875},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375}],Sme=class{constructor(e){fe(this,"model"),fe(this,"anchors"),fe(this,"anchorsTensor"),fe(this,"inputSize"),fe(this,"inputSizeTensor"),fe(this,"doubleInputSizeTensor"),this.model=e,this.anchors=Ime.map(t=>[t.x,t.y]),this.anchorsTensor=Vn(this.anchors),this.inputSize=this.model&&this.model.inputs&&this.model.inputs[0].shape?this.model.inputs[0].shape[2]:0,this.inputSizeTensor=Lt([this.inputSize,this.inputSize]),this.doubleInputSizeTensor=Lt([this.inputSize*2,this.inputSize*2])}normalizeBoxes(e){const t={};t.boxOffsets=_e(e,[0,0],[-1,2]),t.boxSizes=_e(e,[0,2],[-1,2]),t.div=ge(t.boxOffsets,this.inputSizeTensor),t.boxCenterPoints=ie(t.div,this.anchorsTensor),t.halfBoxSizes=ge(t.boxSizes,this.doubleInputSizeTensor),t.sub=me(t.boxCenterPoints,t.halfBoxSizes),t.startPoints=V(t.sub,this.inputSizeTensor),t.add=ie(t.boxCenterPoints,t.halfBoxSizes),t.endPoints=V(t.add,this.inputSizeTensor);const a=Df([t.startPoints,t.endPoints],1);return Object.keys(t).forEach(r=>ne(t[r])),a}normalizeLandmarks(e,t){const a={};a.reshape=q(e,[-1,7,2]),a.div=ge(a.reshape,this.inputSizeTensor),a.landmarks=ie(a.div,this.anchors[t]);const r=V(a.landmarks,this.inputSizeTensor);return Object.keys(a).forEach(n=>ne(a[n])),r}async predict(e,t){const a={};a.resize=De.resizeBilinear(e,[this.inputSize,this.inputSize]),a.div=ge(a.resize,xt.tf127),a.image=me(a.div,xt.tf1),a.batched=this.model.execute(a.image),a.predictions=ft(a.batched),a.slice=_e(a.predictions,[0,0],[-1,1]),a.sigmoid=Ar(a.slice),a.scores=ft(a.sigmoid);const r=await a.scores.data();a.boxes=_e(a.predictions,[0,1],[-1,4]),a.norm=this.normalizeBoxes(a.boxes),a.nms=await De.nonMaxSuppressionAsync(a.norm,a.scores,3*t.hand.maxDetected,t.hand.iouThreshold,t.hand.minConfidence);const n=await a.nms.array(),s=[];for(const i of n){const o={};o.box=_e(a.norm,[i,0],[1,-1]),o.slice=_e(a.predictions,[i,5],[1,14]),o.norm=this.normalizeLandmarks(o.slice,i),o.palmLandmarks=q(o.norm,[-1,2]);const l=await o.box.data(),d=l.slice(0,2),u=l.slice(2,4),h=await o.palmLandmarks.array(),p={startPoint:d,endPoint:u,palmLandmarks:h,confidence:r[i]},c=xme(p,[e.shape[2]/this.inputSize,e.shape[1]/this.inputSize]);s.push(c),Object.keys(o).forEach(f=>ne(o[f]))}return Object.keys(a).forEach(i=>ne(a[i])),s}},Tme=5,m5=1.65,g5=[0,5,9,13,17,1,2],Cme=0,Nme=2,y5=0,Eme=class{constructor(e,t){fe(this,"handDetector"),fe(this,"handPoseModel"),fe(this,"inputSize"),fe(this,"storedBoxes"),fe(this,"skipped"),fe(this,"detectedHands"),this.handDetector=e,this.handPoseModel=t,this.inputSize=this.handPoseModel&&this.handPoseModel.inputs[0].shape?this.handPoseModel.inputs[0].shape[2]:0,this.storedBoxes=[],this.skipped=Number.MAX_SAFE_INTEGER,this.detectedHands=0}calculateLandmarksBoundingBox(e){const t=e.map(s=>s[0]),a=e.map(s=>s[1]),r=[Math.min(...t),Math.min(...a)],n=[Math.max(...t),Math.max(...a)];return{startPoint:r,endPoint:n}}getBoxForPalmLandmarks(e,t){const a=e.map(n=>f5([...n,1],t)),r=this.calculateLandmarksBoundingBox(a);return Mm(_m(r),Tme)}getBoxForHandLandmarks(e){const t=this.calculateLandmarksBoundingBox(e),a=Mm(_m(t),m5);a.palmLandmarks=[];for(let r=0;r<g5.length;r++)a.palmLandmarks.push(e[g5[r]].slice(0,2));return a}transformRawCoords(e,t,a,r){const n=pA(t),s=[n[0]/this.inputSize,n[1]/this.inputSize,(n[0]+n[1])/this.inputSize/2],i=e.map(p=>[s[0]*(p[0]-this.inputSize/2),s[1]*(p[1]-this.inputSize/2),s[2]*p[2]]),o=c5(a,[0,0]),l=i.map(p=>[...f5(p,o),p[2]]),d=kme(r),u=[...Qc(t),1],h=[vo(u,d[0]),vo(u,d[1])];return l.map(p=>[Math.trunc(p[0]+h[0]),Math.trunc(p[1]+h[1]),Math.trunc(p[2])])}async estimateHands(e,t){let a=!1,r;const n=(t.hand.skipTime||0)>ue()-y5,s=this.skipped<(t.hand.skipFrames||0);t.skipAllowed&&n&&s&&(r=await this.handDetector.predict(e,t),this.skipped=0),t.skipAllowed&&this.skipped++,r&&r.length>0&&(r.length!==this.detectedHands&&this.detectedHands!==t.hand.maxDetected||!t.hand.landmarks)&&(this.detectedHands=0,this.storedBoxes=[...r],this.storedBoxes.length>0&&(a=!0));const i=[];for(let o=0;o<this.storedBoxes.length;o++){const l=this.storedBoxes[o];if(!!l)if(t.hand.landmarks){const d=t.hand.rotation?vme(l.palmLandmarks[Cme],l.palmLandmarks[Nme]):0,u=Qc(l),h=[u[0]/e.shape[2],u[1]/e.shape[1]],p=t.hand.rotation&&Ne.kernels.includes("rotatewithoffset")?De.rotateWithOffset(e,d,0,h):e.clone(),c=c5(-d,u),f=a?this.getBoxForPalmLandmarks(l.palmLandmarks,c):l,m=Ame(f,p,[this.inputSize,this.inputSize]),g=ge(m,xt.tf255);ne(m),ne(p);const[y,A]=this.handPoseModel.execute(g);y5=ue(),ne(g);const x=(await y.data())[0];if(ne(y),x>=t.hand.minConfidence/4){const b=q(A,[-1,3]),v=await b.array();ne(A),ne(b);const T=this.transformRawCoords(v,f,d,c),C=this.getBoxForHandLandmarks(T);this.storedBoxes[o]=Sa(Ze({},C),{confidence:x});const E={landmarks:T,confidence:x,boxConfidence:l.confidence,fingerConfidence:x,box:{topLeft:C.startPoint,bottomRight:C.endPoint}};i.push(E)}else this.storedBoxes[o]=null;ne(A)}else{const d=Mm(_m(l),m5),u={confidence:l.confidence,boxConfidence:l.confidence,fingerConfidence:0,box:{topLeft:d.startPoint,bottomRight:d.endPoint},landmarks:[]};i.push(u)}}return this.storedBoxes=this.storedBoxes.filter(o=>o!==null),this.detectedHands=i.length,i.length>t.hand.maxDetected&&(i.length=t.hand.maxDetected),i}},ur={thumb:0,index:1,middle:2,ring:3,pinky:4,all:[0,1,2,3,4],nameMapping:{0:"thumb",1:"index",2:"middle",3:"ring",4:"pinky"},pointsMapping:{0:[[0,1],[1,2],[2,3],[3,4]],1:[[0,5],[5,6],[6,7],[7,8]],2:[[0,9],[9,10],[10,11],[11,12]],3:[[0,13],[13,14],[14,15],[15,16]],4:[[0,17],[17,18],[18,19],[19,20]]},getName:e=>ur.nameMapping[e],getPoints:e=>ur.pointsMapping[e]},au={none:0,half:1,full:2,nameMapping:{0:"none",1:"half",2:"full"},getName:e=>au.nameMapping[e]},Vt={verticalUp:0,verticalDown:1,horizontalLeft:2,horizontalRight:3,diagonalUpRight:4,diagonalUpLeft:5,diagonalDownRight:6,diagonalDownLeft:7,nameMapping:{0:"verticalUp",1:"verticalDown",2:"horizontalLeft",3:"horizontalRight",4:"diagonalUpRight",5:"diagonalUpLeft",6:"diagonalDownRight",7:"diagonalDownLeft"},getName:e=>Vt.nameMapping[e]},mp=class{constructor(e){fe(this,"name"),fe(this,"curls"),fe(this,"directions"),fe(this,"weights"),fe(this,"weightsRelative"),this.name=e,this.curls={},this.directions={},this.weights=[1,1,1,1,1],this.weightsRelative=[1,1,1,1,1]}curl(e,t,a){typeof this.curls[e]=="undefined"&&(this.curls[e]=[]),this.curls[e].push([t,a])}direction(e,t,a){this.directions[e]||(this.directions[e]=[]),this.directions[e].push([t,a])}weight(e,t){this.weights[e]=t;const a=this.weights.reduce((r,n)=>r+n,0);this.weightsRelative=this.weights.map(r=>r*5/a)}matchAgainst(e,t){let a=0;for(const r in e){const n=e[r],s=this.curls[r];if(typeof s=="undefined"){a+=this.weightsRelative[r];continue}for(const[i,o]of s)if(n===i){a+=o*this.weightsRelative[r];break}}for(const r in t){const n=t[r],s=this.directions[r];if(typeof s=="undefined"){a+=this.weightsRelative[r];continue}for(const[i,o]of s)if(n===i){a+=o*this.weightsRelative[r];break}}return a/10}},{thumb:on,index:as,middle:rs,ring:bl,pinky:vl}=ur,{none:ln,half:Rme,full:un}=au,{verticalUp:gd,verticalDown:jge,horizontalLeft:cA,horizontalRight:Fme,diagonalUpRight:$me,diagonalUpLeft:yd,diagonalDownRight:Hge,diagonalDownLeft:qge}=Vt,ks=new mp("thumbs up");ks.curl(on,ln,1);ks.direction(on,gd,1);ks.direction(on,yd,.25);ks.direction(on,$me,.25);for(const e of[ur.index,ur.middle,ur.ring,ur.pinky])ks.curl(e,un,1),ks.direction(e,cA,1),ks.direction(e,Fme,1);var Yt=new mp("victory");Yt.curl(on,Rme,.5);Yt.curl(on,ln,.5);Yt.direction(on,gd,1);Yt.direction(on,yd,1);Yt.curl(as,ln,1);Yt.direction(as,gd,.75);Yt.direction(as,yd,1);Yt.curl(rs,ln,1);Yt.direction(rs,gd,1);Yt.direction(rs,yd,.75);Yt.curl(bl,un,1);Yt.direction(bl,gd,.2);Yt.direction(bl,yd,1);Yt.direction(bl,cA,.2);Yt.curl(vl,un,1);Yt.direction(vl,gd,.2);Yt.direction(vl,yd,1);Yt.direction(vl,cA,.2);Yt.weight(as,2);Yt.weight(rs,2);var Pi=new mp("point");Pi.curl(on,un,1);Pi.curl(as,ln,.5);Pi.curl(rs,un,.5);Pi.curl(bl,un,.5);Pi.curl(vl,un,.5);Pi.weight(as,2);Pi.weight(rs,2);var Li=new mp("middle finger");Li.curl(on,ln,1);Li.curl(as,un,.5);Li.curl(rs,un,.5);Li.curl(bl,un,.5);Li.curl(vl,un,.5);Li.weight(as,2);Li.weight(rs,2);var Ad=new mp("open palm");Ad.curl(on,ln,.75);Ad.curl(as,ln,.75);Ad.curl(rs,ln,.75);Ad.curl(bl,ln,.75);Ad.curl(vl,ln,.75);var Mme=[ks,Yt,Pi,Li,Ad],_me=.7,Ji={HALF_CURL_START_LIMIT:60,NO_CURL_START_LIMIT:130,DISTANCE_VOTE_POWER:1.1,SINGLE_ANGLE_VOTE_POWER:.9,TOTAL_ANGLE_VOTE_POWER:1.6};function A5(e,t,a,r){const n=(t-r)/(e-a);let s=Math.atan(n)*180/Math.PI;return s<=0?s=-s:s>0&&(s=180-s),s}function Y8(e,t){if(!e||!t)return[0,0];const a=A5(e[0],e[1],t[0],t[1]);if(e.length===2)return a;const r=A5(e[1],e[2],t[1],t[2]);return[a,r]}function x5(e,t=1){let a=0,r=0,n=0;return e>=75&&e<=105?a=1*t:e>=25&&e<=155?r=1*t:n=1*t,[a,r,n]}function zme(e,t,a){const r=e[0]-t[0],n=e[0]-a[0],s=t[0]-a[0],i=e[1]-t[1],o=e[1]-a[1],l=t[1]-a[1],d=e[2]-t[2],u=e[2]-a[2],h=t[2]-a[2],p=Math.sqrt(r*r+i*i+d*d),c=Math.sqrt(n*n+o*o+u*u),f=Math.sqrt(s*s+l*l+h*h);let m=(f*f+p*p-c*c)/(2*f*p);m>1?m=1:m<-1&&(m=-1);let g=Math.acos(m);g=57.2958*g%180;let y;return g>Ji.NO_CURL_START_LIMIT?y=au.none:g>Ji.HALF_CURL_START_LIMIT?y=au.half:y=au.full,y}function J8(e,t,a,r){let n;return r===Math.abs(e)?e>0?n=Vt.horizontalLeft:n=Vt.horizontalRight:r===Math.abs(t)?t>0?n=Vt.horizontalLeft:n=Vt.horizontalRight:a>0?n=Vt.horizontalLeft:n=Vt.horizontalRight,n}function Q8(e,t,a,r){let n;return r===Math.abs(e)?e<0?n=Vt.verticalDown:n=Vt.verticalUp:r===Math.abs(t)?t<0?n=Vt.verticalDown:n=Vt.verticalUp:a<0?n=Vt.verticalDown:n=Vt.verticalUp,n}function Ome(e,t,a,r,n,s,i,o){let l;const d=Q8(e,t,a,r),u=J8(n,s,i,o);return d===Vt.verticalUp?u===Vt.horizontalLeft?l=Vt.diagonalUpLeft:l=Vt.diagonalUpRight:u===Vt.horizontalLeft?l=Vt.diagonalDownLeft:l=Vt.diagonalDownRight,l}function Dme(e,t,a,r){const n=e[0]-t[0],s=e[0]-a[0],i=t[0]-a[0],o=e[1]-t[1],l=e[1]-a[1],d=t[1]-a[1],u=Math.max(Math.abs(n),Math.abs(s),Math.abs(i)),h=Math.max(Math.abs(o),Math.abs(l),Math.abs(d));let p=0,c=0,f=0;const m=h/(u+1e-5);m>1.5?p+=Ji.DISTANCE_VOTE_POWER:m>.66?c+=Ji.DISTANCE_VOTE_POWER:f+=Ji.DISTANCE_VOTE_POWER;const g=Math.sqrt(n*n+o*o),y=Math.sqrt(s*s+l*l),A=Math.sqrt(i*i+d*d),x=Math.max(g,y,A);let b=e[0],v=e[1],T=a[0],C=a[1];x===g?(T=a[0],C=a[1]):x===A&&(b=t[0],v=t[1]);const z=Y8([b,v],[T,C]),F=x5(z,Ji.TOTAL_ANGLE_VOTE_POWER);p+=F[0],c+=F[1],f+=F[2];for(const D of r){const _=x5(D,Ji.SINGLE_ANGLE_VOTE_POWER);p+=_[0],c+=_[1],f+=_[2]}let k;return p===Math.max(p,c,f)?k=Q8(l,o,d,h):f===Math.max(c,f)?k=J8(s,n,i,u):k=Ome(l,o,d,h,s,n,i,u),k}function eS(e){const t=[],a=[],r=[];if(!e)return{curls:a,directions:r};for(const n of ur.all){const s=ur.getPoints(n),i=[],o=[];for(const l of s){const d=e[l[0]],u=e[l[1]],h=Y8(d,u),p=h[0],c=h[1];i.push(p),o.push(c)}t.push(i)}for(const n of ur.all){const s=n===ur.thumb?1:0,i=ur.getPoints(n),o=e[i[s][0]],l=e[i[s+1][1]],d=e[i[3][1]],u=zme(o,l,d),h=Dme(o,l,d,t[n].slice(s));a[n]=u,r[n]=h}return{curls:a,directions:r}}function tS(e){if(!e||e.length===0)return null;const t=eS(e),a={};for(const r of ur.all)a[ur.getName(r)]={curl:au.getName(t.curls[r]),direction:Vt.getName(t.directions[r])};return a}function Pme(e){const t=[];if(!e||e.length===0)return t;const a=eS(e);for(const r of Mme){const n=r.matchAgainst(a.curls,a.directions);n>=_me&&t.push({name:r.name,confidence:n})}return t}var b5={thumb:[1,2,3,4],index:[5,6,7,8],middle:[9,10,11,12],ring:[13,14,15,16],pinky:[17,18,19,20],palm:[0]},Bl,Vl,aS;async function v5(e,t){const a=await aS.estimateHands(e,t);if(!a)return[];const r=[];for(let n=0;n<a.length;n++){const s={};if(a[n].landmarks)for(const u of Object.keys(b5))s[u]=b5[u].map(h=>a[n].landmarks[h]);const i=a[n].landmarks;let o=[Number.MAX_SAFE_INTEGER,Number.MAX_SAFE_INTEGER,0,0],l=[0,0,0,0];if(i&&i.length>0){for(const u of i)u[0]<o[0]&&(o[0]=u[0]),u[1]<o[1]&&(o[1]=u[1]),u[0]>o[2]&&(o[2]=u[0]),u[1]>o[3]&&(o[3]=u[1]);o[2]-=o[0],o[3]-=o[1],l=[o[0]/(e.shape[2]||0),o[1]/(e.shape[1]||0),o[2]/(e.shape[2]||0),o[3]/(e.shape[1]||0)]}else o=a[n].box?[Math.trunc(Math.max(0,a[n].box.topLeft[0])),Math.trunc(Math.max(0,a[n].box.topLeft[1])),Math.trunc(Math.min(e.shape[2]||0,a[n].box.bottomRight[0])-Math.max(0,a[n].box.topLeft[0])),Math.trunc(Math.min(e.shape[1]||0,a[n].box.bottomRight[1])-Math.max(0,a[n].box.topLeft[1]))]:[0,0,0,0],l=[a[n].box.topLeft[0]/(e.shape[2]||0),a[n].box.topLeft[1]/(e.shape[1]||0),(a[n].box.bottomRight[0]-a[n].box.topLeft[0])/(e.shape[2]||0),(a[n].box.bottomRight[1]-a[n].box.topLeft[1])/(e.shape[1]||0)];const d=tS(i);r.push({id:n,score:Math.round(100*a[n].confidence)/100,boxScore:Math.round(100*a[n].boxConfidence)/100,fingerScore:Math.round(100*a[n].fingerConfidence)/100,label:"hand",box:o,boxRaw:l,keypoints:i,annotations:s,landmarks:d})}return r}async function w5(e){var t,a;Ne.initial&&(Bl=null,Vl=null),!Bl||!Vl?[Bl,Vl]=await Promise.all([e.hand.enabled?Wt((t=e.hand.detector)==null?void 0:t.modelPath):null,e.hand.landmarks?Wt((a=e.hand.skeleton)==null?void 0:a.modelPath):null]):(e.debug&&de("cached model:",Bl.modelUrl),e.debug&&de("cached model:",Vl.modelUrl));const r=new Sme(Bl);return aS=new Eme(r,Vl),[Bl,Vl]}var ea=[null,null],Lme=["StatefulPartitionedCall/Postprocessor/Slice","StatefulPartitionedCall/Postprocessor/ExpandDims_1"],As=[[0,0],[0,0]],Wme=["hand","fist","pinch","point","face","tip","pinchtip"],k5=4,I5=1.6,Bme=512,Vme=1.4,tc=Number.MAX_SAFE_INTEGER,zm=0,Bn=[0,0],Bt={boxes:[],hands:[]},S5={thumb:[1,2,3,4],index:[5,6,7,8],middle:[9,10,11,12],ring:[13,14,15,16],pinky:[17,18,19,20],base:[0],palm:[0,17,13,9,5,1,0]};async function Ume(e){var t;if(Ne.initial&&(ea[0]=null),ea[0])e.debug&&de("cached model:",ea[0].modelUrl);else{cS(["tensorlistreserve","enter","tensorlistfromtensor","merge","loopcond","switch","exit","tensorliststack","nextiteration","tensorlistsetitem","tensorlistgetitem","reciprocal","shape","split","where"],e),ea[0]=await Wt((t=e.hand.detector)==null?void 0:t.modelPath);const a=Object.values(ea[0].modelSignature.inputs);As[0][0]=Array.isArray(a)?parseInt(a[0].tensorShape.dim[1].size):0,As[0][1]=Array.isArray(a)?parseInt(a[0].tensorShape.dim[2].size):0}return ea[0]}async function Gme(e){var t;if(Ne.initial&&(ea[1]=null),ea[1])e.debug&&de("cached model:",ea[1].modelUrl);else{ea[1]=await Wt((t=e.hand.skeleton)==null?void 0:t.modelPath);const a=Object.values(ea[1].modelSignature.inputs);As[1][0]=Array.isArray(a)?parseInt(a[0].tensorShape.dim[1].size):0,As[1][1]=Array.isArray(a)?parseInt(a[0].tensorShape.dim[2].size):0}return ea[1]}async function jme(e,t){const a=[];if(!e||!ea[0])return a;const r={},n=(e.shape[2]||1)/(e.shape[1]||1),s=Math.min(Math.round((e.shape[1]||0)/8)*8,Bme),i=Math.round(s*n/8)*8;r.resize=De.resizeBilinear(e,[s,i]),r.cast=pe(r.resize,"int32"),[r.rawScores,r.rawBoxes]=await ea[0].executeAsync(r.cast,Lme),r.boxes=ft(r.rawBoxes,[0,2]),r.scores=ft(r.rawScores,[0]);const o=Ir(r.scores,1);ne(o[k5]),o.splice(k5,1),r.filtered=_a(o,1),ne(o),r.max=Fa(r.filtered,1),r.argmax=Gn(r.filtered,1);let l=0;r.nms=await De.nonMaxSuppressionAsync(r.boxes,r.max,(t.hand.maxDetected||0)+1,t.hand.iouThreshold||0,t.hand.minConfidence||1);const d=await r.nms.data(),u=await r.max.data(),h=await r.argmax.data();for(const p of Array.from(d)){const c=_e(r.boxes,p,1),f=await c.data();ne(c);const m=[f[1],f[0],f[3]-f[1],f[2]-f[0]],g=Xg(m,Vme),y=[Math.trunc(m[0]*Bn[0]),Math.trunc(m[1]*Bn[1]),Math.trunc(m[2]*Bn[0]),Math.trunc(m[3]*Bn[1])],A=u[p],x=Wme[h[p]],b={id:l++,score:A,box:y,boxRaw:g,label:x};a.push(b)}return Object.keys(r).forEach(p=>ne(r[p])),a.sort((p,c)=>c.score-p.score),a.length>(t.hand.maxDetected||1)&&(a.length=t.hand.maxDetected||1),a}async function Om(e,t,a){const r={id:t.id,score:Math.round(100*t.score)/100,boxScore:Math.round(100*t.score)/100,fingerScore:0,box:t.box,boxRaw:t.boxRaw,label:t.label,keypoints:[],landmarks:{},annotations:{}};if(e&&ea[1]&&a.hand.landmarks&&t.score>(a.hand.minConfidence||0)){const n={},s=[t.boxRaw[1],t.boxRaw[0],t.boxRaw[3]+t.boxRaw[1],t.boxRaw[2]+t.boxRaw[0]];n.crop=De.cropAndResize(e,[s],[0],[As[1][0],As[1][1]],"bilinear"),n.div=ge(n.crop,xt.tf255),[n.score,n.keypoints]=ea[1].execute(n.div,["Identity_1","Identity"]);const i=(await n.score.data())[0],o=(100-Math.trunc(100/(1+Math.exp(i))))/100;if(o>=(a.hand.minConfidence||0)){r.fingerScore=o,n.reshaped=q(n.keypoints,[-1,3]);const u=(await n.reshaped.array()).map(h=>[h[0]/As[1][1],h[1]/As[1][0],h[2]||0]).map(h=>[h[0]*t.boxRaw[2],h[1]*t.boxRaw[3],h[2]||0]);r.keypoints=u.map(h=>[Bn[0]*(h[0]+t.boxRaw[0]),Bn[1]*(h[1]+t.boxRaw[1]),h[2]||0]),r.landmarks=tS(r.keypoints);for(const h of Object.keys(S5))r.annotations[h]=S5[h].map(p=>r.landmarks&&r.keypoints[p]?r.keypoints[p]:null)}Object.keys(n).forEach(l=>ne(n[l]))}return r}async function T5(e,t){var a,r;if(!ea[0]||!ea[1]||!((a=ea[0])==null?void 0:a.inputs[0].shape)||!((r=ea[1])==null?void 0:r.inputs[0].shape))return[];Bn=[e.shape[2]||0,e.shape[1]||0],tc++;const n=(t.hand.skipTime||0)>ue()-zm,s=tc<(t.hand.skipFrames||0);return t.skipAllowed&&n&&s?Bt.hands:new Promise(async i=>{const o=3*(t.hand.skipTime||0)>ue()-zm,l=tc<3*(t.hand.skipFrames||0);t.skipAllowed&&Bt.hands.length===t.hand.maxDetected?Bt.hands=await Promise.all(Bt.boxes.map(u=>Om(e,u,t))):t.skipAllowed&&o&&l&&Bt.hands.length>0?Bt.hands=await Promise.all(Bt.boxes.map(u=>Om(e,u,t))):(Bt.boxes=await jme(e,t),zm=ue(),Bt.hands=await Promise.all(Bt.boxes.map(u=>Om(e,u,t))),tc=0);const d=[...Bt.boxes];if(Bt.boxes.length=0,t.cacheSensitivity>0)for(let u=0;u<Bt.hands.length;u++){const h=X0e(Bt.hands[u].keypoints,Bn);if(h.box[2]/(e.shape[2]||1)>.05&&h.box[3]/(e.shape[1]||1)>.05&&Bt.hands[u].fingerScore&&Bt.hands[u].fingerScore>(t.hand.minConfidence||0)){const p=Xg(h.box,I5),c=Xg(h.boxRaw,I5);Bt.boxes.push(Sa(Ze({},d[u]),{box:p,boxRaw:c}))}}for(let u=0;u<Bt.hands.length;u++){const h=fp(Bt.hands[u].keypoints,Bn);Bt.hands[u].box=h.box,Bt.hands[u].boxRaw=h.boxRaw}i(Bt.hands)})}var rr,ac=[],Dm=Number.MAX_SAFE_INTEGER,C5=0,N5=0;async function Hme(e){var t;return Ne.initial&&(rr=null),rr?e.debug&&de("cached model:",rr.modelUrl):rr=await Wt((t=e.face.liveness)==null?void 0:t.modelPath),rr}async function E5(e,t,a,r){var n,s;if(!rr)return 0;const i=(((n=t.face.liveness)==null?void 0:n.skipTime)||0)>ue()-N5,o=Dm<(((s=t.face.liveness)==null?void 0:s.skipFrames)||0);return t.skipAllowed&&i&&o&&C5===r&&ac[a]?(Dm++,ac[a]):(Dm=0,new Promise(async l=>{const d=De.resizeBilinear(e,[(rr==null?void 0:rr.inputs[0].shape)?rr.inputs[0].shape[2]:0,(rr==null?void 0:rr.inputs[0].shape)?rr.inputs[0].shape[1]:0],!1),u=rr==null?void 0:rr.execute(d),h=(await u.data())[0];ac[a]=Math.round(100*h)/100,C5=r,N5=ue(),ne([d,u]),l(ac[a])}))}var rS={};af(rS,{connected:()=>mA,horizontal:()=>nS,kpt:()=>fA,relative:()=>iS,vertical:()=>sS});var fA=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],nS=[["leftEye","rightEye"],["leftEar","rightEar"],["leftShoulder","rightShoulder"],["leftElbow","rightElbow"],["leftWrist","rightWrist"],["leftHip","rightHip"],["leftKnee","rightKnee"],["leftAnkle","rightAnkle"]],sS=[["leftKnee","leftShoulder"],["rightKnee","rightShoulder"],["leftAnkle","leftKnee"],["rightAnkle","rightKnee"]],iS=[[["leftHip","rightHip"],["leftShoulder","rightShoulder"]],[["leftElbow","rightElbow"],["leftShoulder","rightShoulder"]]],mA={leftLeg:["leftHip","leftKnee","leftAnkle"],rightLeg:["rightHip","rightKnee","rightAnkle"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist"],rightArm:["rightShoulder","rightElbow","rightWrist"],head:[]},R5=.005,ir={keypoints:[],padding:[[0,0],[0,0],[0,0],[0,0]]};function oS(e){for(const t of nS){const a=e.keypoints.findIndex(n=>n.part===t[0]),r=e.keypoints.findIndex(n=>n.part===t[1]);if(e.keypoints[a]&&e.keypoints[r]&&e.keypoints[a].position[0]<e.keypoints[r].position[0]){const n=e.keypoints[a];e.keypoints[a]=e.keypoints[r],e.keypoints[r]=n}}for(const t of sS){const a=e.keypoints.findIndex(n=>n&&n.part===t[0]),r=e.keypoints.findIndex(n=>n&&n.part===t[1]);e.keypoints[a]&&e.keypoints[r]&&e.keypoints[a].position[1]<e.keypoints[r].position[1]&&e.keypoints.splice(a,1)}for(const[t,a]of iS){const r=e.keypoints.findIndex(d=>d&&d.part===t[0]),n=e.keypoints.findIndex(d=>d&&d.part===t[1]),s=e.keypoints.findIndex(d=>d&&d.part===a[0]),i=e.keypoints.findIndex(d=>d&&d.part===a[1]);if(!e.keypoints[s]||!e.keypoints[i])continue;const o=e.keypoints[r]?[Math.abs(e.keypoints[s].position[0]-e.keypoints[r].position[0]),Math.abs(e.keypoints[i].position[0]-e.keypoints[r].position[0])]:[0,0],l=e.keypoints[n]?[Math.abs(e.keypoints[i].position[0]-e.keypoints[n].position[0]),Math.abs(e.keypoints[s].position[0]-e.keypoints[n].position[0])]:[0,0];if(o[0]>o[1]||l[0]>l[1]){const d=e.keypoints[r];e.keypoints[r]=e.keypoints[n],e.keypoints[n]=d}}}function qme(e){for(let t=0;t<e.length;t++)if(e[t]&&ir.keypoints[t]){const a=[Math.abs(e[t].positionRaw[0]-ir.keypoints[t].positionRaw[0]),Math.abs(e[t].positionRaw[1]-ir.keypoints[t].positionRaw[1])];a[0]<R5&&a[1]<R5?e[t]=ir.keypoints[t]:ir.keypoints[t]=e[t]}else ir.keypoints[t]=e[t];return e}function Xme(e,t){const a={};if(!e.shape||!e.shape[1]||!e.shape[2])return e;ir.padding=[[0,0],[e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0,e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0],[e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0,e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0],[0,0]],a.pad=kn(e,ir.padding),a.resize=De.resizeBilinear(a.pad,[t,t]);const r=pe(a.resize,"int32");return Object.keys(a).forEach(n=>ne(a[n])),r}function Kme(e,t){e.keypoints=e.keypoints.filter(r=>r&&r.position);for(const r of e.keypoints)r.position=[r.position[0]*(t[0]+ir.padding[2][0]+ir.padding[2][1])/t[0]-ir.padding[2][0],r.position[1]*(t[1]+ir.padding[1][0]+ir.padding[1][1])/t[1]-ir.padding[1][0]],r.positionRaw=[r.position[0]/t[0],r.position[1]/t[1]];const a=fp(e.keypoints.map(r=>r.position),t);return e.box=a.box,e.boxRaw=a.boxRaw,e}var $r,xc=0,Pm=Number.MAX_SAFE_INTEGER,ji={boxes:[],bodies:[],last:0};async function Zme(e){return Ne.initial&&($r=null),$r?e.debug&&de("cached model:",$r.modelUrl):(cS(["size"],e),$r=await Wt(e.body.modelPath)),xc=$r.inputs[0].shape?$r.inputs[0].shape[2]:0,xc<64&&(xc=256),$r}async function Yme(e,t,a){const r=e[0][0],n=[];let s=0;for(let u=0;u<r.length;u++)if(s=r[u][2],s>t.body.minConfidence){const h=[r[u][1],r[u][0]];n.push({score:Math.round(100*s)/100,part:fA[u],positionRaw:h,position:[Math.round((a.shape[2]||0)*h[0]),Math.round((a.shape[1]||0)*h[1])]})}s=n.reduce((u,h)=>h.score>u?h.score:u,0);const i=[],o=fp(n.map(u=>u.position),[a.shape[2],a.shape[1]]),l={};for(const[u,h]of Object.entries(mA)){const p=[];for(let c=0;c<h.length-1;c++){const f=n.find(g=>g.part===h[c]),m=n.find(g=>g.part===h[c+1]);f&&m&&f.score>(t.body.minConfidence||0)&&m.score>(t.body.minConfidence||0)&&p.push([f.position,m.position])}l[u]=p}const d={id:0,score:s,box:o.box,boxRaw:o.boxRaw,keypoints:n,annotations:l};return oS(d),i.push(d),i}async function Jme(e,t,a){const r=[];for(let n=0;n<e[0].length;n++){const s=e[0][n],i=Math.round(100*s[51+4])/100;if(i>t.body.minConfidence){const o=[];for(let h=0;h<17;h++){const p=s[3*h+2];if(p>t.body.minConfidence){const c=[s[3*h+1],s[3*h+0]];o.push({part:fA[h],score:Math.round(100*p)/100,positionRaw:c,position:[Math.round((a.shape[2]||0)*c[0]),Math.round((a.shape[1]||0)*c[1])]})}}const l=fp(o.map(h=>h.position),[a.shape[2],a.shape[1]]),d={};for(const[h,p]of Object.entries(mA)){const c=[];for(let f=0;f<p.length-1;f++){const m=o.find(y=>y.part===p[f]),g=o.find(y=>y.part===p[f+1]);m&&g&&m.score>(t.body.minConfidence||0)&&g.score>(t.body.minConfidence||0)&&c.push([m.position,g.position])}d[h]=c}const u={id:n,score:i,box:l.box,boxRaw:l.boxRaw,keypoints:[...o],annotations:d};oS(u),r.push(u)}}return r.sort((n,s)=>s.score-n.score),r.length>t.body.maxDetected&&(r.length=t.body.maxDetected),r}async function F5(e,t){if(!$r||!($r==null?void 0:$r.inputs[0].shape))return[];t.skipAllowed||(ji.boxes.length=0),Pm++;const a=(t.body.skipTime||0)>ue()-ji.last,r=Pm<(t.body.skipFrames||0);return t.skipAllowed&&a&&r?ji.bodies:new Promise(async n=>{const s={};Pm=0,s.input=Xme(e,xc),s.res=$r==null?void 0:$r.execute(s.input),ji.last=ue();const i=await s.res.array();ji.bodies=s.res.shape[2]===17?await Yme(i,t,e):await Jme(i,t,e);for(const o of ji.bodies)Kme(o,[e.shape[2]||1,e.shape[1]||1]),qme(o.keypoints);Object.keys(s).forEach(o=>ne(s[o])),n(ji.bodies)})}var Kl,rc=[],$5=0,Lm=Number.MAX_SAFE_INTEGER,ef=0,nc=2.5;async function Qme(e){if(!Kl||Ne.initial){Kl=await Wt(e.object.modelPath);const t=Object.values(Kl.modelSignature.inputs);ef=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0}else e.debug&&de("cached model:",Kl.modelUrl);return Kl}async function ege(e,t,a){let r=0,n=[];for(const l of[1,2,4])Z(async()=>{const d=l*13,u=ft(e.find(m=>m.shape[1]===d**2&&(m.shape[2]||0)===Ac.length)),h=ft(e.find(m=>m.shape[1]===d**2&&(m.shape[2]||0)<Ac.length)),c=await h.reshape([-1,4,h.shape[1]/4]).argMax(2).array(),f=await u.array();for(let m=0;m<u.shape[0];m++)for(let g=0;g<u.shape[1];g++){const y=f[m][g];if(y>(a.object.minConfidence||0)&&g!==61){const A=(.5+Math.trunc(m%d))/d,x=(.5+Math.trunc(m/d))/d,b=c[m].map(k=>k*(d/l/ef)),[v,T]=[A-nc/l*b[0],x-nc/l*b[1]],[C,E]=[A+nc/l*b[2]-v,x+nc/l*b[3]-T];let R=[v,T,C,E];R=R.map(k=>Math.max(0,Math.min(k,1)));const z=[R[0]*t[0],R[1]*t[1],R[2]*t[0],R[3]*t[1]],F={id:r++,score:Math.round(100*y)/100,class:g+1,label:Ac[g].label,box:z.map(k=>Math.trunc(k)),boxRaw:R};n.push(F)}}});e.forEach(l=>ne(l));const s=n.map(l=>[l.boxRaw[1],l.boxRaw[0],l.boxRaw[3],l.boxRaw[2]]),i=n.map(l=>l.score);let o=[];if(s&&s.length>0){const l=await De.nonMaxSuppressionAsync(s,i,a.object.maxDetected,a.object.iouThreshold,a.object.minConfidence);o=await l.data(),ne(l)}return n=n.filter((l,d)=>o.includes(d)).sort((l,d)=>d.score-l.score),n}async function M5(e,t){const a=(t.object.skipTime||0)>ue()-$5,r=Lm<(t.object.skipFrames||0);return t.skipAllowed&&a&&r&&rc.length>0?(Lm++,rc):(Lm=0,!Ne.kernels.includes("mod")||!Ne.kernels.includes("sparsetodense")?rc:new Promise(async n=>{const s=[e.shape[2]||0,e.shape[1]||0],i=De.resizeBilinear(e,[ef,ef],!1),o=ge(i,xt.tf255),l=o.transpose([0,3,1,2]);ne(o),ne(i);let d;t.object.enabled&&(d=Kl.execute(l)),$5=ue(),ne(l);const u=await ege(d,s,t);rc=u,n(u)}))}var j0=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],tge=j0.length,tf=j0.reduce((e,t,a)=>(e[t]=a,e),{}),age=[["leftHip","leftShoulder"],["leftElbow","leftShoulder"],["leftElbow","leftWrist"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["rightHip","rightShoulder"],["rightElbow","rightShoulder"],["rightElbow","rightWrist"],["rightHip","rightKnee"],["rightKnee","rightAnkle"],["leftShoulder","rightShoulder"],["leftHip","rightHip"]];age.map(([e,t])=>[tf[e],tf[t]]);var rge=[["nose","leftEye"],["leftEye","leftEar"],["nose","rightEye"],["rightEye","rightEar"],["nose","leftShoulder"],["leftShoulder","leftElbow"],["leftElbow","leftWrist"],["leftShoulder","leftHip"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["nose","rightShoulder"],["rightShoulder","rightElbow"],["rightElbow","rightWrist"],["rightShoulder","rightHip"],["rightHip","rightKnee"],["rightKnee","rightAnkle"]];function nge(e){const t=e.reduce(({maxX:a,maxY:r,minX:n,minY:s},{position:{x:i,y:o}})=>({maxX:Math.max(a,i),maxY:Math.max(r,o),minX:Math.min(n,i),minY:Math.min(s,o)}),{maxX:Number.NEGATIVE_INFINITY,maxY:Number.NEGATIVE_INFINITY,minX:Number.POSITIVE_INFINITY,minY:Number.POSITIVE_INFINITY});return[t.minX,t.minY,t.maxX-t.minX,t.maxY-t.minY]}function sge(e,[t,a],[r,n]){const s=t/r,i=a/n,o=(d,u)=>({id:u,score:d.score,boxRaw:[d.box[0]/n,d.box[1]/r,d.box[2]/n,d.box[3]/r],box:[Math.trunc(d.box[0]*i),Math.trunc(d.box[1]*s),Math.trunc(d.box[2]*i),Math.trunc(d.box[3]*s)],keypoints:d.keypoints.map(({score:h,part:p,position:c})=>({score:h,part:p,position:[Math.trunc(c.x*i),Math.trunc(c.y*s)],positionRaw:[c.x/r,c.y/r]})),annotations:{}});return e.map((d,u)=>o(d,u))}var ige=class{constructor(e,t){fe(this,"priorityQueue"),fe(this,"numberOfElements"),fe(this,"getElementValue"),this.priorityQueue=new Array(e),this.numberOfElements=-1,this.getElementValue=t}enqueue(e){this.priorityQueue[++this.numberOfElements]=e,this.swim(this.numberOfElements)}dequeue(){const e=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,e}empty(){return this.numberOfElements===-1}size(){return this.numberOfElements+1}all(){return this.priorityQueue.slice(0,this.numberOfElements+1)}max(){return this.priorityQueue[0]}swim(e){for(;e>0&&this.less(Math.floor(e/2),e);)this.exchange(e,Math.floor(e/2)),e=Math.floor(e/2)}sink(e){for(;2*e<=this.numberOfElements;){let t=2*e;if(t<this.numberOfElements&&this.less(t,t+1)&&t++,!this.less(e,t))break;this.exchange(e,t),e=t}}getValueAt(e){return this.getElementValue(this.priorityQueue[e])}less(e,t){return this.getValueAt(e)<this.getValueAt(t)}exchange(e,t){const a=this.priorityQueue[e];this.priorityQueue[e]=this.priorityQueue[t],this.priorityQueue[t]=a}};function lS(e,t,a,r){return{y:r.get(e,t,a),x:r.get(e,t,a+tge)}}function uS(e,t,a){const{heatmapY:r,heatmapX:n,id:s}=e,{y:i,x:o}=lS(r,n,s,a);return{x:e.heatmapX*t+o,y:e.heatmapY*t+i}}function _5(e,t,a){return e<t?t:e>a?a:e}function oge(e,t,a,r){const n=a-e,s=r-t;return n*n+s*s}function z5(e,t){return{x:e.x+t.x,y:e.y+t.y}}var Br,lge=["MobilenetV1/offset_2/BiasAdd","MobilenetV1/heatmap_2/BiasAdd","MobilenetV1/displacement_fwd_2/BiasAdd","MobilenetV1/displacement_bwd_2/BiasAdd"],sc=1,Yl=16,uge=50**2;function O5(e,t,a,r,n,s,i=2){const o=y=>({y:s.get(y.y,y.x,e),x:s.get(y.y,y.x,s.shape[2]/2+e)}),l=(y,A,x)=>({y:_5(Math.round(y.y/Yl),0,A-1),x:_5(Math.round(y.x/Yl),0,x-1)}),[d,u]=r.shape,h=l(t.position,d,u),p=o(h);let f=z5(t.position,p);for(let y=0;y<i;y++){const A=l(f,d,u),x=lS(A.y,A.x,a,n);f=z5({x:A.x*Yl,y:A.y*Yl},{x:x.x,y:x.y})}const m=l(f,d,u),g=r.get(m.y,m.x,a);return{position:f,part:j0[a],score:g}}function dge(e,t,a,r,n){const s=rge.map(([p,c])=>[tf[p],tf[c]]),i=s.map(([,p])=>p),o=s.map(([p])=>p),l=t.shape[2],d=i.length,u=new Array(l),h=uS(e.part,Yl,a);u[e.part.id]={score:e.score,part:j0[e.part.id],position:h};for(let p=d-1;p>=0;--p){const c=i[p],f=o[p];u[c]&&!u[f]&&(u[f]=O5(p,u[c],f,t,a,n))}for(let p=0;p<d;++p){const c=o[p],f=i[p];u[c]&&!u[f]&&(u[f]=O5(p,u[c],f,t,a,r))}return u}function hge(e,t,a,r,n){const[s,i]=n.shape;let o=!0;const l=Math.max(a-sc,0),d=Math.min(a+sc+1,s);for(let u=l;u<d;++u){const h=Math.max(r-sc,0),p=Math.min(r+sc+1,i);for(let c=h;c<p;++c)if(n.get(u,c,e)>t){o=!1;break}if(!o)break}return o}function pge(e,t){const[a,r,n]=t.shape,s=new ige(a*r*n,({score:i})=>i);for(let i=0;i<a;++i)for(let o=0;o<r;++o)for(let l=0;l<n;++l){const d=t.get(i,o,l);d<e||hge(l,d,i,o,t)&&s.enqueue({score:d,part:{heatmapY:i,heatmapX:o,id:l}})}return s}function dS(e,{x:t,y:a},r){return e.some(({keypoints:n})=>{var s;const i=(s=n[r])==null?void 0:s.position;return i?oge(a,t,i.y,i.x)<=uge:!1})}function cge(e,t){return t.reduce((r,{position:n,score:s},i)=>(dS(e,n,i)||(r+=s),r),0)/t.length}function fge(e,t,a,r,n,s){const i=[],o=pge(s,t);for(;i.length<n&&!o.empty();){const l=o.dequeue(),d=uS(l.part,Yl,e);if(dS(i,d,l.part.id))continue;let u=dge(l,t,e,a,r);u=u.filter(c=>c.score>s);const h=cge(i,u),p=nge(u);h>s&&i.push({keypoints:u,box:p,score:Math.round(100*h)/100})}return i}async function D5(e,t){const a=Z(()=>{if(!Br.inputs[0].shape)return[];const i=De.resizeBilinear(e,[Br.inputs[0].shape[2],Br.inputs[0].shape[1]]),o=me(ge(pe(i,"float32"),127.5),1),d=Br.execute(o,lge).map(u=>ft(u,[0]));return d[1]=Ar(d[1]),d}),r=await Promise.all(a.map(i=>i.buffer()));for(const i of a)ne(i);const n=await fge(r[0],r[1],r[2],r[3],t.body.maxDetected,t.body.minConfidence);return Br.inputs[0].shape?sge(n,[e.shape[1],e.shape[2]],[Br.inputs[0].shape[2],Br.inputs[0].shape[1]]):[]}async function mge(e){return!Br||Ne.initial?Br=await Wt(e.body.modelPath):e.debug&&de("cached model:",Br.modelUrl),Br}var gn,Wm=!1;async function hS(e){return!gn||Ne.initial?gn=await Wt(e.segmentation.modelPath):e.debug&&de("cached model:",gn.modelUrl),gn}async function gge(e,t,a){var r,n;if(Wm)return{data:[],canvas:null,alpha:null};Wm=!0,gn||await hS(a);const s=await Jc(e,a),i=((r=s.tensor)==null?void 0:r.shape[2])||0,o=((n=s.tensor)==null?void 0:n.shape[1])||0;if(!s.tensor)return{data:[],canvas:null,alpha:null};const l={};l.resize=De.resizeBilinear(s.tensor,[gn.inputs[0].shape?gn.inputs[0].shape[1]:0,gn.inputs[0].shape?gn.inputs[0].shape[2]:0],!1),ne(s.tensor),l.norm=ge(l.resize,xt.tf255),l.res=gn.execute(l.norm),l.squeeze=ft(l.res,0),l.squeeze.shape[2]===2?(l.softmax=Vh(l.squeeze),[l.bg,l.fg]=Ir(l.softmax,2),l.expand=ua(l.fg,2),l.pad=ua(l.expand,0),l.crop=De.cropAndResize(l.pad,[[0,0,.5,.5]],[0],[i,o]),l.data=ft(l.crop,0)):l.data=De.resizeBilinear(l.squeeze,[o,i]);const d=Array.from(await l.data.data());if(Ne.node&&!Ne.Canvas&&typeof ImageData=="undefined")return a.debug&&de("canvas support missing"),Object.keys(l).forEach(y=>ne(l[y])),{data:d,canvas:null,alpha:null};const u=Qr(i,o);Ur&&await Ur.toPixels(l.data,u);const h=u.getContext("2d");a.segmentation.blur&&a.segmentation.blur>0&&(h.filter=`blur(${a.segmentation.blur}px)`);const p=h.getImageData(0,0,i,o),c=Qr(i,o),f=c.getContext("2d");s.canvas&&f.drawImage(s.canvas,0,0),f.globalCompositeOperation="darken",a.segmentation.blur&&a.segmentation.blur>0&&(f.filter=`blur(${a.segmentation.blur}px)`),f.drawImage(u,0,0),f.globalCompositeOperation="source-over",f.filter="none";const m=f.getImageData(0,0,i,o);for(let y=0;y<i*o;y++)m.data[4*y+3]=p.data[4*y+0];f.putImageData(m,0,0);let g=null;if(t&&c){g=Qr(i,o);const y=await Jc(t,a);ne(y.tensor);const A=g.getContext("2d");A.drawImage(y.canvas,0,0,g.width,g.height),A.drawImage(c,0,0)}return Object.keys(l).forEach(y=>ne(l[y])),Wm=!1,{data:d,canvas:c,alpha:u}}var yge=class{constructor(){fe(this,"ssrnetage",null),fe(this,"gear",null),fe(this,"blazeposedetect",null),fe(this,"blazepose",null),fe(this,"centernet",null),fe(this,"efficientpose",null),fe(this,"mobilefacenet",null),fe(this,"emotion",null),fe(this,"facedetect",null),fe(this,"faceiris",null),fe(this,"facemesh",null),fe(this,"faceres",null),fe(this,"ssrnetgender",null),fe(this,"handpose",null),fe(this,"handskeleton",null),fe(this,"handtrack",null),fe(this,"liveness",null),fe(this,"movenet",null),fe(this,"nanodet",null),fe(this,"posenet",null),fe(this,"segmentation",null),fe(this,"antispoof",null)}};function pS(e){for(const t of Object.keys(e.models))e.models[t]=null}async function Age(e){var t,a,r,n,s,i,o,l,d,u,h,p,c,f,m,g,y,A,x,b,v,T,C,E,R,z,F,k,D,_;Ne.initial&&pS(e),e.config.hand.enabled&&(!e.models.handpose&&((a=(t=e.config.hand.detector)==null?void 0:t.modelPath)==null?void 0:a.includes("handdetect"))&&([e.models.handpose,e.models.handskeleton]=await w5(e.config)),!e.models.handskeleton&&e.config.hand.landmarks&&((n=(r=e.config.hand.detector)==null?void 0:r.modelPath)==null?void 0:n.includes("handdetect"))&&([e.models.handpose,e.models.handskeleton]=await w5(e.config))),e.config.body.enabled&&!e.models.blazepose&&((i=(s=e.config.body)==null?void 0:s.modelPath)==null?void 0:i.includes("blazepose"))&&(e.models.blazepose=Y0e(e.config)),e.config.body.enabled&&!e.models.blazeposedetect&&e.config.body.detector&&e.config.body.detector.modelPath&&(e.models.blazeposedetect=Z0e(e.config)),e.config.body.enabled&&!e.models.efficientpose&&((l=(o=e.config.body)==null?void 0:o.modelPath)==null?void 0:l.includes("efficientpose"))&&(e.models.efficientpose=nme(e.config)),e.config.body.enabled&&!e.models.movenet&&((u=(d=e.config.body)==null?void 0:d.modelPath)==null?void 0:u.includes("movenet"))&&(e.models.movenet=Zme(e.config)),e.config.body.enabled&&!e.models.posenet&&((p=(h=e.config.body)==null?void 0:h.modelPath)==null?void 0:p.includes("posenet"))&&(e.models.posenet=mge(e.config)),e.config.face.enabled&&!e.models.facedetect&&(e.models.facedetect=U0e(e.config)),e.config.face.enabled&&((c=e.config.face.antispoof)==null?void 0:c.enabled)&&!e.models.antispoof&&(e.models.antispoof=T0e(e.config)),e.config.face.enabled&&((f=e.config.face.liveness)==null?void 0:f.enabled)&&!e.models.liveness&&(e.models.liveness=Hme(e.config)),e.config.face.enabled&&((m=e.config.face.description)==null?void 0:m.enabled)&&!e.models.faceres&&(e.models.faceres=yme(e.config)),e.config.face.enabled&&((g=e.config.face.emotion)==null?void 0:g.enabled)&&!e.models.emotion&&(e.models.emotion=ome(e.config)),e.config.face.enabled&&((y=e.config.face.iris)==null?void 0:y.enabled)&&!e.models.faceiris&&(e.models.faceiris=dme(e.config)),e.config.face.enabled&&((A=e.config.face.mesh)==null?void 0:A.enabled)&&!e.models.facemesh&&(e.models.facemesh=fme(e.config)),e.config.face.enabled&&((x=e.config.face.gear)==null?void 0:x.enabled)&&!e.models.gear&&(e.models.gear=w0e(e.config)),e.config.face.enabled&&((b=e.config.face.ssrnet)==null?void 0:b.enabled)&&!e.models.ssrnetage&&(e.models.ssrnetage=I0e(e.config)),e.config.face.enabled&&((v=e.config.face.ssrnet)==null?void 0:v.enabled)&&!e.models.ssrnetgender&&(e.models.ssrnetgender=S0e(e.config)),e.config.face.enabled&&((T=e.config.face.mobilefacenet)==null?void 0:T.enabled)&&!e.models.mobilefacenet&&(e.models.mobilefacenet=lme(e.config)),e.config.hand.enabled&&!e.models.handtrack&&((E=(C=e.config.hand.detector)==null?void 0:C.modelPath)==null?void 0:E.includes("handtrack"))&&(e.models.handtrack=Ume(e.config)),e.config.hand.enabled&&e.config.hand.landmarks&&!e.models.handskeleton&&((z=(R=e.config.hand.detector)==null?void 0:R.modelPath)==null?void 0:z.includes("handtrack"))&&(e.models.handskeleton=Gme(e.config)),e.config.object.enabled&&!e.models.centernet&&((k=(F=e.config.object)==null?void 0:F.modelPath)==null?void 0:k.includes("centernet"))&&(e.models.centernet=ame(e.config)),e.config.object.enabled&&!e.models.nanodet&&((_=(D=e.config.object)==null?void 0:D.modelPath)==null?void 0:_.includes("nanodet"))&&(e.models.nanodet=Qme(e.config)),e.config.segmentation.enabled&&!e.models.segmentation&&(e.models.segmentation=hS(e.config));for await(const P of Object.keys(e.models))e.models[P]&&typeof e.models[P]!="undefined"&&(e.models[P]=await e.models[P])}async function xge(e){const t=["const","placeholder","noop","pad","squeeze","add","sub","mul","div"];for(const a of Object.keys(e.models)){const r=e.models[a];if(!r)continue;const n=[],s=r==null?void 0:r.executor;if(s&&s.graph.nodes)for(const o of Object.values(s.graph.nodes)){const l=o.op.toLowerCase();n.includes(l)||n.push(l)}else!s&&e.config.debug&&de("model signature not determined:",a);const i=[];for(const o of n)!t.includes(o)&&!e.env.kernels.includes(o)&&!e.env.kernels.includes(o.replace("_",""))&&!e.env.kernels.includes(o.replace("native",""))&&!e.env.kernels.includes(o.replace("v2",""))&&i.push(o);e.config.debug&&i.length>0&&de("model validation failed:",a,i)}}var St={name:"humangl",priority:999,canvas:null,gl:null,extensions:[],webGLattr:{alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!1,desynchronized:!0}};function bge(){const e=St.gl;!e||(St.extensions=e.getSupportedExtensions())}async function vge(e){var t;if(e.config.backend==="humangl"&&(St.name in sr().registry&&(!St.gl||!St.gl.getParameter(St.gl.VERSION))&&(de("error: humangl backend invalid context"),pS(e)),!a3(St.name))){try{St.canvas=await Qr(100,100)}catch(r){de("error: cannot create canvas:",r);return}try{if(St.gl=(t=St.canvas)==null?void 0:t.getContext("webgl2",St.webGLattr),!St.gl.getParameter(St.gl.VERSION).includes("2.0")){de("override: using fallback webgl backend as webgl 2.0 is not detected"),e.config.backend="webgl";return}St.canvas&&(St.canvas.addEventListener("webglcontextlost",async n=>{throw de("error: humangl:",n.type),de("possible browser memory leak using webgl or conflict with multiple backend registrations"),e.emit("error"),new Error("backend error: webgl context lost")}),St.canvas.addEventListener("webglcontextrestored",n=>{de("error: humangl context restored:",n)}),St.canvas.addEventListener("webglcontextcreationerror",n=>{de("error: humangl context create:",n)}))}catch(r){de("error: cannot get WebGL context:",r);return}try{Vy(2,St.gl)}catch(r){de("error: cannot set WebGL context:",r);return}try{const r=new Zd(St.gl);Zu(St.name,()=>new _0(r),St.priority)}catch(r){de("error: cannot register WebGL backend:",r);return}try{uo("webgl").forEach(n=>{const s=Sa(Ze({},n),{backendName:St.name});An(s)})}catch(r){de("error: cannot update WebGL backend registration:",r);return}const a=Es().getGPGPUContext?Es().getGPGPUContext().gl:null;if(a)de(`humangl webgl version:${a.getParameter(a.VERSION)} renderer:${a.getParameter(a.RENDERER)}`);else{de("error: no current gl context:",a,St.gl);return}try{Pn.set("WEBGL_VERSION",2)}catch(r){de("error: cannot set WebGL backend flags:",r);return}bge(),de("backend registered:",St.name)}}function wge(){if(!Ne.kernels.includes("mod")){const e={kernelName:"Mod",backendName:_r(),kernelFunc:t=>Z(()=>me(t.inputs.a,V(ge(t.inputs.a,t.inputs.b),t.inputs.b)))};An(e),Ne.kernels.push("mod")}if(!Ne.kernels.includes("floormod")){const e={kernelName:"FloorMod",backendName:_r(),kernelFunc:t=>Z(()=>_f(t.inputs.a/t.inputs.b)*t.inputs.b+jf(t.inputs.a,t.inputs.b))};An(e),Ne.kernels.push("floormod")}}async function Bm(e,t=!1){if(e.state="backend",t||Ne.initial||e.config.backend&&e.config.backend.length>0&&_r()!==e.config.backend){const a=ue();if(e.config.backend&&e.config.backend.length>0){if(typeof window=="undefined"&&typeof WorkerGlobalScope!="undefined"&&e.config.debug&&e.config.debug&&de("running inside web worker"),Ne.browser&&e.config.backend==="tensorflow"&&(e.config.debug&&de("override: backend set to tensorflow while running in browser"),e.config.backend="humangl"),Ne.node&&(e.config.backend==="webgl"||e.config.backend==="humangl")&&(e.config.debug&&de(`override: backend set to ${e.config.backend} while running in nodejs`),e.config.backend="tensorflow"),Ne.browser&&e.config.backend==="webgpu")if(typeof navigator=="undefined"||typeof navigator.gpu=="undefined")de("override: backend set to webgpu but browser does not support webgpu"),e.config.backend="humangl";else{const n=await navigator.gpu.requestAdapter();e.config.debug&&de("enumerated webgpu adapter:",n)}e.config.backend==="humangl"&&await vge(e);const r=Object.keys(sr().registryFactory);if(e.config.debug&&de("available backends:",r),r.includes(e.config.backend)||(de(`error: backend ${e.config.backend} not found in registry`),e.config.backend=Ne.node?"tensorflow":"webgl",e.config.debug&&de(`override: setting backend ${e.config.backend}`)),e.config.debug&&de("setting backend:",e.config.backend),e.config.backend==="wasm"){if(e.config.debug&&de("wasm path:",e.config.wasmPath),typeof(Qd==null?void 0:Qd.setWasmPaths)!="undefined")await D8(e.config.wasmPath,e.config.wasmPlatformFetch);else throw new Error("backend error: attempting to use wasm backend but wasm path is not set");const n=await J().getAsync("WASM_HAS_SIMD_SUPPORT"),s=await J().getAsync("WASM_HAS_MULTITHREAD_SUPPORT");e.config.debug&&de(`wasm execution: ${n?"SIMD":"no SIMD"} ${s?"multithreaded":"singlethreaded"}`),e.config.debug&&!n&&de("warning: wasm simd support is not enabled")}try{await t3(e.config.backend),await $c(),k0e()}catch(n){return de("error: cannot set backend:",e.config.backend,n),!1}}if(_r()==="humangl"&&(Pn.set("CHECK_COMPUTATION_FOR_ERRORS",!1),Pn.set("WEBGL_CPU_FORWARD",!0),Pn.set("WEBGL_USE_SHAPES_UNIFORMS",!0),Pn.set("CPU_HANDOFF_SIZE_THRESHOLD",256),typeof e.config.deallocate!="undefined"&&e.config.deallocate&&(de("changing webgl: WEBGL_DELETE_TEXTURE_THRESHOLD:",!0),Pn.set("WEBGL_DELETE_TEXTURE_THRESHOLD",0)),Es().getGPGPUContext)){const r=await Es().getGPGPUContext().gl;e.config.debug&&de(`gl version:${r.getParameter(r.VERSION)} renderer:${r.getParameter(r.RENDERER)}`)}_r()==="webgpu",Qv(),await $c(),e.performance.initBackend=Math.trunc(ue()-a),e.config.backend=_r(),await Ne.updateBackend(),wge()}return!0}function cS(e,t){for(const a of e){const r={kernelName:a,backendName:t.backend,kernelFunc:()=>{t.debug&&de("kernelFunc",a,t.backend)}};An(r)}Ne.kernels=uo(_r()).map(a=>a.kernelName.toLowerCase())}var Wi={color:"rgba(173, 216, 230, 0.6)",labelColor:"rgba(173, 216, 230, 1)",shadowColor:"black",font:'small-caps 16px "Segoe UI"',lineHeight:18,lineWidth:4,pointSize:2,roundRect:8,drawPoints:!1,drawLabels:!0,drawBoxes:!0,drawGestures:!0,drawPolygons:!0,drawGaze:!0,fillPolygons:!1,useDepth:!0,useCurves:!1},Vm=0,wl=e=>{if(!e)de("draw error: invalid canvas");else if(!e.getContext)de("draw error: canvas context not defined");else{const t=e.getContext("2d");if(!t)de("draw error: cannot get canvas context");else return t}return null},Ul=e=>Math.round(e*180/Math.PI);function gA(e,t,a,r,n){r=r||0,e.fillStyle=n.useDepth&&r?`rgba(${127.5+2*r}, ${127.5-2*r}, 255, 0.3)`:n.color,e.beginPath(),e.arc(t,a,n.pointSize,0,2*Math.PI),e.fill()}function gp(e,t,a,r,n,s){if(e.beginPath(),e.lineWidth=s.lineWidth,s.useCurves){const i=(t+t+r)/2,o=(a+a+n)/2;e.ellipse(i,o,r/2,n/2,0,0,2*Math.PI)}else e.moveTo(t+s.roundRect,a),e.lineTo(t+r-s.roundRect,a),e.quadraticCurveTo(t+r,a,t+r,a+s.roundRect),e.lineTo(t+r,a+n-s.roundRect),e.quadraticCurveTo(t+r,a+n,t+r-s.roundRect,a+n),e.lineTo(t+s.roundRect,a+n),e.quadraticCurveTo(t,a+n,t,a+n-s.roundRect),e.lineTo(t,a+s.roundRect),e.quadraticCurveTo(t,a,t+s.roundRect,a),e.closePath();e.stroke()}function fS(e,t,a){if(!(t.length<2)){e.beginPath(),e.moveTo(t[0][0],t[0][1]);for(const r of t){const n=r[2]||0;e.strokeStyle=a.useDepth&&n!==0?`rgba(${127.5+2*n}, ${127.5-2*n}, 255, 0.3)`:a.color,e.fillStyle=a.useDepth&&n!==0?`rgba(${127.5+2*n}, ${127.5-2*n}, 255, 0.3)`:a.color,e.lineTo(r[0],Math.round(r[1]))}e.stroke(),a.fillPolygons&&(e.closePath(),e.fill())}}function kge(e,t,a){if(!(t.length<2)){if(e.lineWidth=a.lineWidth,!a.useCurves||t.length<=2){fS(e,t,a);return}e.moveTo(t[0][0],t[0][1]);for(let r=0;r<t.length-2;r++){const n=(t[r][0]+t[r+1][0])/2,s=(t[r][1]+t[r+1][1])/2;e.quadraticCurveTo(t[r][0],t[r][1],n,s)}e.quadraticCurveTo(t[t.length-2][0],t[t.length-2][1],t[t.length-1][0],t[t.length-1][1]),e.stroke(),a.fillPolygons&&(e.closePath(),e.fill())}}function P5(e,t,a,r=5){let n,s,i;e.beginPath(),e.moveTo(t[0],t[1]),e.lineTo(a[0],a[1]),n=Math.atan2(a[1]-t[1],a[0]-t[0]),s=r*Math.cos(n)+a[0],i=r*Math.sin(n)+a[1],e.moveTo(s,i),n+=1/3*(2*Math.PI),s=r*Math.cos(n)+a[0],i=r*Math.sin(n)+a[1],e.lineTo(s,i),n+=1/3*(2*Math.PI),s=r*Math.cos(n)+a[0],i=r*Math.sin(n)+a[1],e.lineTo(s,i),e.closePath(),e.stroke(),e.fill()}async function mS(e,t,a){const r=or(Wi,a);if(!(!t||!e)&&r.drawGestures){const n=wl(e);if(!n)return;n.font=r.font,n.fillStyle=r.color;let s=1;for(let i=0;i<t.length;i++){let o=[],l=[];if([o,l]=Object.entries(t[i]),l.length>1&&l[1].length>0){const d=o[1]>0?`#${o[1]}`:"",u=`${o[0]} ${d}: ${l[1]}`;r.shadowColor&&r.shadowColor!==""&&(n.fillStyle=r.shadowColor,n.fillText(u,8,2+s*r.lineHeight)),n.fillStyle=r.labelColor,n.fillText(u,6,0+s*r.lineHeight),s+=1}}}}async function gS(e,t,a){var r,n,s,i,o;const l=or(Wi,a);if(!t||!e)return;const d=wl(e);if(!!d)for(const u of t){if(d.font=l.font,d.strokeStyle=l.color,d.fillStyle=l.color,l.drawBoxes&&gp(d,u.box[0],u.box[1],u.box[2],u.box[3],l),l.drawLabels){const h=[];if(h.push(`face: ${Math.trunc(100*u.score)}%`),u.genderScore&&h.push(`${u.gender||""} ${Math.trunc(100*u.genderScore)}%`),u.age&&h.push(`age: ${u.age||""}`),u.iris&&h.push(`distance: ${u.iris}`),u.real&&h.push(`real: ${Math.trunc(100*u.real)}%`),u.live&&h.push(`live: ${Math.trunc(100*u.live)}%`),u.emotion&&u.emotion.length>0){const p=u.emotion.map(c=>`${Math.trunc(100*c.score)}% ${c.emotion}`);p.length>3&&(p.length=3),h.push(p.join(" "))}u.rotation&&u.rotation.angle&&u.rotation.gaze&&(u.rotation.angle.roll&&h.push(`roll: ${Ul(u.rotation.angle.roll)}\xB0 yaw:${Ul(u.rotation.angle.yaw)}\xB0 pitch:${Ul(u.rotation.angle.pitch)}\xB0`),u.rotation.gaze.bearing&&h.push(`gaze: ${Ul(u.rotation.gaze.bearing)}\xB0`)),h.length===0&&h.push("face"),d.fillStyle=l.color;for(let p=h.length-1;p>=0;p--){const c=Math.max(u.box[0],0),f=p*l.lineHeight+u.box[1];l.shadowColor&&l.shadowColor!==""&&(d.fillStyle=l.shadowColor,d.fillText(h[p],c+5,f+16)),d.fillStyle=l.labelColor,d.fillText(h[p],c+4,f+15)}}if(d.lineWidth=2,u.mesh&&u.mesh.length>0){if(l.drawPoints)for(const h of u.mesh)gA(d,h[0],h[1],h[2],l);if(l.drawPolygons){if(u.mesh.length>450)for(let h=0;h<Ud.length/3;h++){const p=[Ud[h*3+0],Ud[h*3+1],Ud[h*3+2]].map(c=>u.mesh[c]);fS(d,p,l)}if(u.annotations&&u.annotations.leftEyeIris&&u.annotations.leftEyeIris[0]){d.strokeStyle=l.useDepth?"rgba(255, 200, 255, 0.3)":l.color,d.beginPath();const h=Math.abs(u.annotations.leftEyeIris[3][0]-u.annotations.leftEyeIris[1][0])/2,p=Math.abs(u.annotations.leftEyeIris[4][1]-u.annotations.leftEyeIris[2][1])/2;d.ellipse(u.annotations.leftEyeIris[0][0],u.annotations.leftEyeIris[0][1],h,p,0,0,2*Math.PI),d.stroke(),l.fillPolygons&&(d.fillStyle=l.useDepth?"rgba(255, 255, 200, 0.3)":l.color,d.fill())}if(u.annotations&&u.annotations.rightEyeIris&&u.annotations.rightEyeIris[0]){d.strokeStyle=l.useDepth?"rgba(255, 200, 255, 0.3)":l.color,d.beginPath();const h=Math.abs(u.annotations.rightEyeIris[3][0]-u.annotations.rightEyeIris[1][0])/2,p=Math.abs(u.annotations.rightEyeIris[4][1]-u.annotations.rightEyeIris[2][1])/2;d.ellipse(u.annotations.rightEyeIris[0][0],u.annotations.rightEyeIris[0][1],h,p,0,0,2*Math.PI),d.stroke(),l.fillPolygons&&(d.fillStyle=l.useDepth?"rgba(255, 255, 200, 0.3)":l.color,d.fill())}if(l.drawGaze&&((r=u.rotation)==null?void 0:r.angle)&&typeof Path2D!="undefined"){d.strokeStyle="pink";const h=u.box[0]+u.box[2]/2-u.box[3]*Ul(u.rotation.angle.yaw)/90,p=u.box[1]+u.box[3]/2+u.box[2]*Ul(u.rotation.angle.pitch)/90,c=new Path2D(`
            M ${u.box[0]+u.box[2]/2} ${u.box[1]}
            C
              ${h} ${u.box[1]},
              ${h} ${u.box[1]+u.box[3]},
              ${u.box[0]+u.box[2]/2} ${u.box[1]+u.box[3]}
          `),f=new Path2D(`
            M ${u.box[0]} ${u.box[1]+u.box[3]/2}
            C 
              ${u.box[0]} ${p},
              ${u.box[0]+u.box[2]} ${p},
              ${u.box[0]+u.box[2]} ${u.box[1]+u.box[3]/2}
          `);d.stroke(f),d.stroke(c)}if(l.drawGaze&&((s=(n=u.rotation)==null?void 0:n.gaze)==null?void 0:s.strength)&&((o=(i=u.rotation)==null?void 0:i.gaze)==null?void 0:o.bearing)&&u.annotations.leftEyeIris&&u.annotations.rightEyeIris&&u.annotations.leftEyeIris[0]&&u.annotations.rightEyeIris[0]){d.strokeStyle="pink",d.fillStyle="pink";const h=[u.annotations.leftEyeIris[0][0]+Math.sin(u.rotation.gaze.bearing)*u.rotation.gaze.strength*u.box[3],u.annotations.leftEyeIris[0][1]+Math.cos(u.rotation.gaze.bearing)*u.rotation.gaze.strength*u.box[2]];P5(d,[u.annotations.leftEyeIris[0][0],u.annotations.leftEyeIris[0][1]],[h[0],h[1]],4);const p=[u.annotations.rightEyeIris[0][0]+Math.sin(u.rotation.gaze.bearing)*u.rotation.gaze.strength*u.box[3],u.annotations.rightEyeIris[0][1]+Math.cos(u.rotation.gaze.bearing)*u.rotation.gaze.strength*u.box[2]];P5(d,[u.annotations.rightEyeIris[0][0],u.annotations.rightEyeIris[0][1]],[p[0],p[1]],4)}}}}}async function yS(e,t,a){var r;const n=or(Wi,a);if(!t||!e)return;const s=wl(e);if(!!s){s.lineJoin="round";for(let i=0;i<t.length;i++){if(s.strokeStyle=n.color,s.fillStyle=n.color,s.lineWidth=n.lineWidth,s.font=n.font,n.drawBoxes&&t[i].box&&((r=t[i].box)==null?void 0:r.length)===4&&(gp(s,t[i].box[0],t[i].box[1],t[i].box[2],t[i].box[3],n),n.drawLabels&&(n.shadowColor&&n.shadowColor!==""&&(s.fillStyle=n.shadowColor,s.fillText(`body ${100*t[i].score}%`,t[i].box[0]+3,1+t[i].box[1]+n.lineHeight,t[i].box[2])),s.fillStyle=n.labelColor,s.fillText(`body ${100*t[i].score}%`,t[i].box[0]+2,0+t[i].box[1]+n.lineHeight,t[i].box[2]))),n.drawPoints&&t[i].keypoints)for(let o=0;o<t[i].keypoints.length;o++)!t[i].keypoints[o].score||t[i].keypoints[o].score===0||(s.fillStyle=n.useDepth&&t[i].keypoints[o].position[2]?`rgba(${127.5+2*(t[i].keypoints[o].position[2]||0)}, ${127.5-2*(t[i].keypoints[o].position[2]||0)}, 255, 0.5)`:n.color,gA(s,t[i].keypoints[o].position[0],t[i].keypoints[o].position[1],0,n));if(n.drawLabels&&t[i].keypoints){s.font=n.font;for(const o of t[i].keypoints)!o.score||o.score===0||(s.fillStyle=n.useDepth&&o.position[2]?`rgba(${127.5+2*o.position[2]}, ${127.5-2*o.position[2]}, 255, 0.5)`:n.color,s.fillText(`${o.part} ${Math.trunc(100*o.score)}%`,o.position[0]+4,o.position[1]+4))}if(n.drawPolygons&&t[i].keypoints&&t[i].annotations)for(const o of Object.values(t[i].annotations))for(const l of o)kge(s,l,n)}}}async function AS(e,t,a){const r=or(Wi,a);if(!t||!e)return;const n=wl(e);if(!!n){n.lineJoin="round",n.font=r.font;for(const s of t){if(r.drawBoxes&&(n.strokeStyle=r.color,n.fillStyle=r.color,gp(n,s.box[0],s.box[1],s.box[2],s.box[3],r),r.drawLabels&&(r.shadowColor&&r.shadowColor!==""&&(n.fillStyle=r.shadowColor,n.fillText(`hand:${Math.trunc(100*s.score)}%`,s.box[0]+3,1+s.box[1]+r.lineHeight,s.box[2])),n.fillStyle=r.labelColor,n.fillText(`hand:${Math.trunc(100*s.score)}%`,s.box[0]+2,0+s.box[1]+r.lineHeight,s.box[2])),n.stroke()),r.drawPoints&&s.keypoints&&s.keypoints.length>0)for(const i of s.keypoints)n.fillStyle=r.useDepth?`rgba(${127.5+2*(i[2]||0)}, ${127.5-2*(i[2]||0)}, 255, 0.5)`:r.color,gA(n,i[0],i[1],0,r);if(r.drawLabels&&s.annotations){const i=(o,l)=>{if(!o||o.length===0||!o[0])return;const d=o[o.length-1][2]||0;n.fillStyle=r.useDepth?`rgba(${127.5+2*d}, ${127.5-2*d}, 255, 0.5)`:r.color,n.fillText(l,o[o.length-1][0]+4,o[o.length-1][1]+4)};n.font=r.font,i(s.annotations.index,"index"),i(s.annotations.middle,"middle"),i(s.annotations.ring,"ring"),i(s.annotations.pinky,"pinky"),i(s.annotations.thumb,"thumb"),i(s.annotations.palm,"palm")}if(r.drawPolygons&&s.annotations){const i=o=>{if(!(!o||o.length===0||!o[0]))for(let l=0;l<o.length;l++){n.beginPath();const d=o[l][2]||0;n.strokeStyle=r.useDepth?`rgba(${127.5+l*d}, ${127.5-l*d}, 255, 0.5)`:r.color,n.moveTo(o[l>0?l-1:0][0],o[l>0?l-1:0][1]),n.lineTo(o[l][0],o[l][1]),n.stroke()}};n.lineWidth=r.lineWidth,i(s.annotations.index),i(s.annotations.middle),i(s.annotations.ring),i(s.annotations.pinky),i(s.annotations.thumb)}}}}async function xS(e,t,a){const r=or(Wi,a);if(!t||!e)return;const n=wl(e);if(!!n){n.lineJoin="round",n.font=r.font;for(const s of t)if(r.drawBoxes){if(n.strokeStyle=r.color,n.fillStyle=r.color,gp(n,s.box[0],s.box[1],s.box[2],s.box[3],r),r.drawLabels){const i=`${s.label} ${Math.round(100*s.score)}%`;r.shadowColor&&r.shadowColor!==""&&(n.fillStyle=r.shadowColor,n.fillText(i,s.box[0]+3,1+s.box[1]+r.lineHeight,s.box[2])),n.fillStyle=r.labelColor,n.fillText(i,s.box[0]+2,0+s.box[1]+r.lineHeight,s.box[2])}n.stroke()}}}async function Ige(e,t,a){const r=or(Wi,a);if(!t||!e)return;const n=wl(e);if(!!n){n.lineJoin="round",n.font=r.font;for(let s=0;s<t.length;s++)if(r.drawBoxes){if(n.strokeStyle=r.color,n.fillStyle=r.color,gp(n,t[s].box[0],t[s].box[1],t[s].box[2],t[s].box[3],r),r.drawLabels){const i=`person #${s}`;r.shadowColor&&r.shadowColor!==""&&(n.fillStyle=r.shadowColor,n.fillText(i,t[s].box[0]+3,1+t[s].box[1]+r.lineHeight,t[s].box[2])),n.fillStyle=r.labelColor,n.fillText(i,t[s].box[0]+2,0+t[s].box[1]+r.lineHeight,t[s].box[2])}n.stroke()}}}async function Sge(e,t){if(!e||!t)return;const a=wl(t);!a||a.drawImage(e,0,0)}async function Tge(e,t,a){if(!t||!t.performance||!t||!e)return null;const r=ue(),n=or(Wi,a),s=Promise.all([gS(e,t.face,n),yS(e,t.body,n),AS(e,t.hand,n),xS(e,t.object,n),mS(e,t.gesture,n)]);return Vm=Ne.perfadd?Vm+Math.round(ue()-r):Math.round(ue()-r),t.performance.draw=Vm,s}var ic=.1,Um=.5;function Cge(e,t,a){let r=!1,n=a.length-1;for(let s=0;s<a.length;n=s++)a[s].y>t!=a[n].y>t&&e<(a[n].x-a[s].x)*(t-a[s].y)/(a[n].y-a[s].y)+a[s].x&&(r=!r);return r}async function Nge(e){if(!e.tensor||!e.mesh||e.mesh.length<100)return e.tensor;const t=e.tensor.shape[2]||0,a=e.tensor.shape[1]||0,r=await e.tensor.buffer();let n=[];for(const i of Hn.silhouette)n.push({x:(e.mesh[i][0]-e.box[0])/e.box[2],y:(e.mesh[i][1]-e.box[1])/e.box[3]});n=n.map(i=>({x:i.x>.5?i.x+ic:i.x-ic,y:i.y>.5?i.y+ic:i.y-ic}));for(let i=0;i<t;i++)for(let o=0;o<a;o++)Cge(i/t,o/t,n)||(r.set(Um*r.get(0,o,i,0),0,o,i,0),r.set(Um*r.get(0,o,i,1),0,o,i,1),r.set(Um*r.get(0,o,i,2),0,o,i,2));const s=r.toTensor();return ne(r),s}var Ege=e=>{const t=(h,p)=>Math.atan2(h[1]-p[1],h[0]-p[0]);if(!e.annotations.rightEyeIris||!e.annotations.leftEyeIris)return{bearing:0,strength:0};const a=[0,-.1],r=1,n=(e.mesh[33][2]||0)>(e.mesh[263][2]||0),s=n?e.mesh[473]:e.mesh[468],i=n?[(e.mesh[133][0]+e.mesh[33][0])/2,(e.mesh[133][1]+e.mesh[33][1])/2]:[(e.mesh[263][0]+e.mesh[362][0])/2,(e.mesh[263][1]+e.mesh[362][1])/2],o=n?[e.mesh[133][0]-e.mesh[33][0],e.mesh[23][1]-e.mesh[27][1]]:[e.mesh[263][0]-e.mesh[362][0],e.mesh[253][1]-e.mesh[257][1]],l=[(i[0]-s[0])/o[0]-a[0],r*(s[1]-i[1])/o[1]-a[1]];let d=Math.sqrt(l[0]**2+l[1]**2);return d=Math.min(d,e.boxRaw[2]/2,e.boxRaw[3]/2),{bearing:(t([0,0],l)+Math.PI/2)%Math.PI,strength:d}},Rge=(e,t)=>{const a=m=>{const g=Math.sqrt(m[0]*m[0]+m[1]*m[1]+m[2]*m[2]);return m[0]/=g,m[1]/=g,m[2]/=g,m},r=(m,g)=>{const y=m[0]-g[0],A=m[1]-g[1],x=m[2]-g[2];return[y,A,x]},n=(m,g)=>{const y=m[1]*g[2]-m[2]*g[1],A=m[2]*g[0]-m[0]*g[2],x=m[0]*g[1]-m[1]*g[0];return[y,A,x]},s=m=>{const[g,y,A,x,b,v,T,C,E]=m;let R,z,F;return x<1?x>-1?(F=Math.asin(x),z=Math.atan2(-T,g),R=Math.atan2(-v,b)):(F=-Math.PI/2,z=-Math.atan2(C,E),R=0):(F=Math.PI/2,z=Math.atan2(C,E),R=0),isNaN(R)&&(R=0),isNaN(z)&&(z=0),isNaN(F)&&(F=0),{pitch:2*-R,yaw:2*-z,roll:2*-F}},i=e.meshRaw;if(!i||i.length<300)return{angle:{pitch:0,yaw:0,roll:0},matrix:[1,0,0,0,1,0,0,0,1],gaze:{bearing:0,strength:0}};const o=Math.max(e.boxRaw[2]*t[0],e.boxRaw[3]*t[1])/1.5,l=[i[10],i[152],i[234],i[454]].map(m=>[m[0]*t[0]/o,m[1]*t[1]/o,m[2]]),d=a(r(l[1],l[0]));let u=a(r(l[3],l[2]));const h=a(n(u,d));u=n(d,h);const p=[u[0],u[1],u[2],d[0],d[1],d[2],h[0],h[1],h[2]],c=s(p),f=i.length===478?Ege(e):{bearing:0,strength:0};return{angle:c,matrix:p,gaze:f}},L5=async(e,t)=>{var a,r,n,s,i,o,l,d,u,h,p,c,f,m,g,y,A,x,b,v,T,C;let E=ue(),R,z,F,k,D,_,P,j;const L=[];e.state="run:face";const B=await cme(t,e.config);if(e.performance.face=Ne.perfadd?(e.performance.face||0)+Math.trunc(ue()-E):Math.trunc(ue()-E),!t.shape||t.shape.length!==4)return[];if(!B)return[];for(let W=0;W<B.length;W++){if(e.analyze("Get Face"),!B[W].tensor||B[W].tensor.isDisposedInternal){de("Face object is disposed:",B[W].tensor);continue}if((a=e.config.face.detector)==null?void 0:a.mask){const ae=await Nge(B[W]);ne(B[W].tensor),B[W].tensor=ae}const ee=B[W].mesh&&B[W].mesh.length>200?Rge(B[W],[t.shape[2],t.shape[1]]):null;e.analyze("Start Emotion:"),e.config.async?k=((r=e.config.face.emotion)==null?void 0:r.enabled)?e5(B[W].tensor||lt([]),e.config,W,B.length):[]:(e.state="run:emotion",E=ue(),k=((n=e.config.face.emotion)==null?void 0:n.enabled)?await e5(B[W].tensor||lt([]),e.config,W,B.length):[],e.performance.emotion=Ne.perfadd?(e.performance.emotion||0)+Math.trunc(ue()-E):Math.trunc(ue()-E)),e.analyze("End Emotion:"),e.analyze("Start AntiSpoof:"),e.config.async?_=((s=e.config.face.antispoof)==null?void 0:s.enabled)?Ob(B[W].tensor||lt([]),e.config,W,B.length):0:(e.state="run:antispoof",E=ue(),_=((i=e.config.face.antispoof)==null?void 0:i.enabled)?await Ob(B[W].tensor||lt([]),e.config,W,B.length):0,e.performance.antispoof=Ne.perfadd?(e.performance.antispoof||0)+Math.trunc(ue()-E):Math.trunc(ue()-E)),e.analyze("End AntiSpoof:"),e.analyze("Start Liveness:"),e.config.async?P=((o=e.config.face.liveness)==null?void 0:o.enabled)?E5(B[W].tensor||lt([]),e.config,W,B.length):0:(e.state="run:liveness",E=ue(),P=((l=e.config.face.liveness)==null?void 0:l.enabled)?await E5(B[W].tensor||lt([]),e.config,W,B.length):0,e.performance.liveness=Ne.perfadd?(e.performance.antispoof||0)+Math.trunc(ue()-E):Math.trunc(ue()-E)),e.analyze("End Liveness:"),e.analyze("Start GEAR:"),e.config.async?z=((d=e.config.face.gear)==null?void 0:d.enabled)?Cb(B[W].tensor||lt([]),e.config,W,B.length):null:(e.state="run:gear",E=ue(),z=((u=e.config.face.gear)==null?void 0:u.enabled)?await Cb(B[W].tensor||lt([]),e.config,W,B.length):null,e.performance.gear=Math.trunc(ue()-E)),e.analyze("End GEAR:"),e.analyze("Start SSRNet:"),e.config.async?(R=((h=e.config.face.ssrnet)==null?void 0:h.enabled)?Rb(B[W].tensor||lt([]),e.config,W,B.length):null,F=((p=e.config.face.ssrnet)==null?void 0:p.enabled)?Mb(B[W].tensor||lt([]),e.config,W,B.length):null):(e.state="run:ssrnet",E=ue(),R=((c=e.config.face.ssrnet)==null?void 0:c.enabled)?await Rb(B[W].tensor||lt([]),e.config,W,B.length):null,F=((f=e.config.face.ssrnet)==null?void 0:f.enabled)?await Mb(B[W].tensor||lt([]),e.config,W,B.length):null,e.performance.ssrnet=Math.trunc(ue()-E)),e.analyze("End SSRNet:"),e.analyze("Start MobileFaceNet:"),e.config.async?D=((m=e.config.face.mobilefacenet)==null?void 0:m.enabled)?n5(B[W].tensor||lt([]),e.config,W,B.length):null:(e.state="run:mobilefacenet",E=ue(),D=((g=e.config.face.mobilefacenet)==null?void 0:g.enabled)?await n5(B[W].tensor||lt([]),e.config,W,B.length):null,e.performance.mobilefacenet=Math.trunc(ue()-E)),e.analyze("End MobileFaceNet:"),e.analyze("Start Description:"),e.config.async?j=((y=e.config.face.description)==null?void 0:y.enabled)?d5(B[W].tensor||lt([]),e.config,W,B.length):null:(e.state="run:description",E=ue(),j=((A=e.config.face.description)==null?void 0:A.enabled)?await d5(B[W].tensor||lt([]),e.config,W,B.length):null,e.performance.description=Ne.perfadd?(e.performance.description||0)+Math.trunc(ue()-E):Math.trunc(ue()-E)),e.analyze("End Description:"),e.config.async&&([R,F,k,D,j,z,_,P]=await Promise.all([R,F,k,D,j,z,_,P])),e.analyze("Finish Face:"),((x=e.config.face.ssrnet)==null?void 0:x.enabled)&&R&&F&&(j=Sa(Ze({},j),{age:R.age,gender:F.gender,genderScore:F.genderScore})),((b=e.config.face.gear)==null?void 0:b.enabled)&&z&&(j=Sa(Ze({},j),{age:z.age,gender:z.gender,genderScore:z.genderScore,race:z.race})),((v=e.config.face.mobilefacenet)==null?void 0:v.enabled)&&D&&(j.descriptor=D),!((T=e.config.face.iris)==null?void 0:T.enabled);const te=B[W].annotations&&B[W].annotations.leftEyeIris&&B[W].annotations.leftEyeIris[0]&&B[W].annotations.rightEyeIris&&B[W].annotations.rightEyeIris[0]&&B[W].annotations.leftEyeIris.length>0&&B[W].annotations.rightEyeIris.length>0&&B[W].annotations.leftEyeIris[0]!==null&&B[W].annotations.rightEyeIris[0]!==null?Math.max(Math.abs(B[W].annotations.leftEyeIris[3][0]-B[W].annotations.leftEyeIris[1][0]),Math.abs(B[W].annotations.rightEyeIris[4][1]-B[W].annotations.rightEyeIris[2][1]))/t.shape[2]:0,re=((C=e.config.face.detector)==null?void 0:C.return)?ft(B[W].tensor):null;ne(B[W].tensor),B[W].tensor&&delete B[W].tensor;const Y=Sa(Ze({},B[W]),{id:W});(j==null?void 0:j.age)&&(Y.age=j.age),(j==null?void 0:j.gender)&&(Y.gender=j.gender),(j==null?void 0:j.genderScore)&&(Y.genderScore=j==null?void 0:j.genderScore),(j==null?void 0:j.descriptor)&&(Y.embedding=j==null?void 0:j.descriptor),(j==null?void 0:j.race)&&(Y.race=j==null?void 0:j.race),k&&(Y.emotion=k),_&&(Y.real=_),P&&(Y.live=P),te&&te!==0&&(Y.iris=Math.trunc(500/te/11.7)/100),ee&&(Y.rotation=ee),re&&(Y.tensor=re),L.push(Y),e.analyze("End Face")}return e.analyze("End FaceMesh:"),e.config.async&&(e.performance.face&&delete e.performance.face,e.performance.age&&delete e.performance.age,e.performance.gender&&delete e.performance.gender,e.performance.emotion&&delete e.performance.emotion),L},Fge=e=>{if(!e)return[];const t=[];for(let a=0;a<e.length;a++){const r=e[a].keypoints.find(l=>l.part==="leftWrist"),n=e[a].keypoints.find(l=>l.part==="rightWrist"),s=e[a].keypoints.find(l=>l.part==="nose");s&&r&&n&&r.position[1]<s.position[1]&&n.position[1]<s.position[1]?t.push({body:a,gesture:"i give up"}):s&&r&&r.position[1]<s.position[1]?t.push({body:a,gesture:"raise left hand"}):s&&n&&n.position[1]<s.position[1]&&t.push({body:a,gesture:"raise right hand"});const i=e[a].keypoints.find(l=>l.part==="leftShoulder"),o=e[a].keypoints.find(l=>l.part==="rightShoulder");i&&o&&Math.abs(i.positionRaw[1]-o.positionRaw[1])>.1&&t.push({body:a,gesture:`leaning ${i.position[1]>o.position[1]?"left":"right"}`})}return t},$ge=e=>{if(!e)return[];const t=[];for(let a=0;a<e.length;a++)if(e[a].mesh&&e[a].mesh.length>450){const r=(e[a].mesh[33][2]||0)-(e[a].mesh[263][2]||0),n=e[a].mesh[33][0]-e[a].mesh[263][0];Math.abs(r/n)<=.15?t.push({face:a,gesture:"facing center"}):t.push({face:a,gesture:`facing ${r<0?"left":"right"}`}),Math.abs(e[a].mesh[374][1]-e[a].mesh[386][1])/Math.abs(e[a].mesh[443][1]-e[a].mesh[450][1])<.2&&t.push({face:a,gesture:"blink left eye"}),Math.abs(e[a].mesh[145][1]-e[a].mesh[159][1])/Math.abs(e[a].mesh[223][1]-e[a].mesh[230][1])<.2&&t.push({face:a,gesture:"blink right eye"});const o=Math.min(100,500*Math.abs(e[a].mesh[13][1]-e[a].mesh[14][1])/Math.abs(e[a].mesh[10][1]-e[a].mesh[152][1]));o>10&&t.push({face:a,gesture:`mouth ${Math.trunc(o)}% open`});const l=e[a].mesh[152][2]||0;Math.abs(l)>10&&t.push({face:a,gesture:`head ${l<0?"up":"down"}`})}return t},Mge=e=>{if(!e)return[];const t=[];for(let a=0;a<e.length;a++){if(!e[a].annotations||!e[a].annotations.leftEyeIris||!e[a].annotations.leftEyeIris[0]||!e[a].annotations.rightEyeIris||!e[a].annotations.rightEyeIris[0])continue;const r=e[a].annotations.leftEyeIris[3][0]-e[a].annotations.leftEyeIris[1][0],n=e[a].annotations.leftEyeIris[4][1]-e[a].annotations.leftEyeIris[2][1],s=Math.abs(r*n),i=e[a].annotations.rightEyeIris[3][0]-e[a].annotations.rightEyeIris[1][0],o=e[a].annotations.rightEyeIris[4][1]-e[a].annotations.rightEyeIris[2][1],l=Math.abs(i*o);let d=!1;Math.abs(s-l)/Math.max(s,l)<.25&&(d=!0,t.push({iris:a,gesture:"facing center"}));const h=Math.abs(e[a].mesh[263][0]-e[a].annotations.leftEyeIris[0][0])/e[a].box[2],p=Math.abs(e[a].mesh[33][0]-e[a].annotations.rightEyeIris[0][0])/e[a].box[2];(h>.06||p>.06)&&(d=!1),h>p?h>.05&&t.push({iris:a,gesture:"looking right"}):p>.05&&t.push({iris:a,gesture:"looking left"});const c=Math.abs(e[a].mesh[145][1]-e[a].annotations.rightEyeIris[0][1])/e[a].box[3],f=Math.abs(e[a].mesh[374][1]-e[a].annotations.leftEyeIris[0][1])/e[a].box[3];(f<.01||c<.01||f>.022||c>.022)&&(d=!1),(f<.01||c<.01)&&t.push({iris:a,gesture:"looking down"}),(f>.022||c>.022)&&t.push({iris:a,gesture:"looking up"}),d&&t.push({iris:a,gesture:"looking center"})}return t},_ge=e=>{if(!e)return[];const t=[];for(let a=0;a<e.length;a++){const r=[];if(e[a].annotations)for(const[n,s]of Object.entries(e[a].annotations))n!=="palmBase"&&Array.isArray(s)&&s[0]&&r.push({name:n.toLowerCase(),position:s[0]});if(r&&r.length>0){const n=r.reduce((i,o)=>(i.position[2]||0)<(o.position[2]||0)?i:o);t.push({hand:a,gesture:`${n.name} forward`});const s=r.reduce((i,o)=>i.position[1]<o.position[1]?i:o);t.push({hand:a,gesture:`${s.name} up`})}if(e[a].keypoints){const n=Pme(e[a].keypoints);for(const s of n)t.push({hand:a,gesture:s.name})}}return t},Te={face:[],body:[],hand:[],gesture:[],object:[],persons:[],performance:{},timestamp:0,error:null},Gm=0;function zge(e,t){var a,r,n,s,i,o,l,d,u,h,p,c,f,m,g,y,A,x,b,v,T,C,E,R,z,F,k;const D=ue();if(!e)return{face:[],body:[],hand:[],gesture:[],object:[],persons:[],performance:{},timestamp:0,error:null};const _=Date.now()-e.timestamp,P=_<1e3?8-Math.log(_+1):1;if(e.canvas&&(Te.canvas=e.canvas),e.error&&(Te.error=e.error),!Te.body||e.body.length!==Te.body.length)Te.body=JSON.parse(JSON.stringify(e.body));else for(let L=0;L<e.body.length;L++){const B=e.body[L].box.map((Y,ae)=>((P-1)*Te.body[L].box[ae]+Y)/P),W=e.body[L].boxRaw.map((Y,ae)=>((P-1)*Te.body[L].boxRaw[ae]+Y)/P),ee=e.body[L].keypoints.map((Y,ae)=>{var le,xe,ye,ke,Ee,Me,Oe,je,Pe;return{score:Y.score,part:Y.part,position:[Te.body[L].keypoints[ae]?((P-1)*(Te.body[L].keypoints[ae].position[0]||0)+(Y.position[0]||0))/P:Y.position[0],Te.body[L].keypoints[ae]?((P-1)*(Te.body[L].keypoints[ae].position[1]||0)+(Y.position[1]||0))/P:Y.position[1],Te.body[L].keypoints[ae]?((P-1)*(Te.body[L].keypoints[ae].position[2]||0)+(Y.position[2]||0))/P:Y.position[2]],positionRaw:[Te.body[L].keypoints[ae]?((P-1)*(Te.body[L].keypoints[ae].positionRaw[0]||0)+(Y.positionRaw[0]||0))/P:Y.positionRaw[0],Te.body[L].keypoints[ae]?((P-1)*(Te.body[L].keypoints[ae].positionRaw[1]||0)+(Y.positionRaw[1]||0))/P:Y.positionRaw[1],Te.body[L].keypoints[ae]?((P-1)*(Te.body[L].keypoints[ae].positionRaw[2]||0)+(Y.positionRaw[2]||0))/P:Y.positionRaw[2]],distance:[Te.body[L].keypoints[ae]?((P-1)*(((le=Te.body[L].keypoints[ae].distance)==null?void 0:le[0])||0)+(((xe=Y.distance)==null?void 0:xe[0])||0))/P:(ye=Y.distance)==null?void 0:ye[0],Te.body[L].keypoints[ae]?((P-1)*(((ke=Te.body[L].keypoints[ae].distance)==null?void 0:ke[1])||0)+(((Ee=Y.distance)==null?void 0:Ee[1])||0))/P:(Me=Y.distance)==null?void 0:Me[1],Te.body[L].keypoints[ae]?((P-1)*(((Oe=Te.body[L].keypoints[ae].distance)==null?void 0:Oe[2])||0)+(((je=Y.distance)==null?void 0:je[2])||0))/P:(Pe=Y.distance)==null?void 0:Pe[2]]}}),te={};let re={connected:{}};((r=(a=t.body)==null?void 0:a.modelPath)==null?void 0:r.includes("efficientpose"))?re=q8:((s=(n=t.body)==null?void 0:n.modelPath)==null?void 0:s.includes("blazepose"))?re=G8:((o=(i=t.body)==null?void 0:i.modelPath)==null?void 0:o.includes("movenet"))&&(re=rS);for(const[Y,ae]of Object.entries(re.connected)){const le=[];for(let xe=0;xe<ae.length-1;xe++){const ye=ee.find(Ee=>Ee.part===ae[xe]),ke=ee.find(Ee=>Ee.part===ae[xe+1]);ye&&ke&&le.push([ye.position,ke.position])}te[Y]=le}Te.body[L]=Sa(Ze({},e.body[L]),{box:B,boxRaw:W,keypoints:ee,annotations:te})}if(!Te.hand||e.hand.length!==Te.hand.length)Te.hand=JSON.parse(JSON.stringify(e.hand));else for(let L=0;L<e.hand.length;L++){const B=e.hand[L].box.map((re,Y)=>((P-1)*Te.hand[L].box[Y]+re)/P),W=e.hand[L].boxRaw.map((re,Y)=>((P-1)*Te.hand[L].boxRaw[Y]+re)/P);Te.hand[L].keypoints.length!==e.hand[L].keypoints.length&&(Te.hand[L].keypoints=e.hand[L].keypoints);const ee=e.hand[L].keypoints&&e.hand[L].keypoints.length>0?e.hand[L].keypoints.map((re,Y)=>re.map((ae,le)=>((P-1)*(Te.hand[L].keypoints[Y][le]||1)+(ae||0))/P)):[];let te={};if(Object.keys(Te.hand[L].annotations).length!==Object.keys(e.hand[L].annotations).length)Te.hand[L].annotations=e.hand[L].annotations,te=Te.hand[L].annotations;else if(e.hand[L].annotations)for(const re of Object.keys(e.hand[L].annotations))te[re]=e.hand[L].annotations[re]&&e.hand[L].annotations[re][0]?e.hand[L].annotations[re].map((Y,ae)=>Y.map((le,xe)=>((P-1)*Te.hand[L].annotations[re][ae][xe]+le)/P)):null;Te.hand[L]=Sa(Ze({},e.hand[L]),{box:B,boxRaw:W,keypoints:ee,annotations:te})}if(!Te.face||e.face.length!==Te.face.length)Te.face=JSON.parse(JSON.stringify(e.face));else for(let L=0;L<e.face.length;L++){const B=e.face[L].box.map((ee,te)=>((P-1)*Te.face[L].box[te]+ee)/P),W=e.face[L].boxRaw.map((ee,te)=>((P-1)*Te.face[L].boxRaw[te]+ee)/P);if(e.face[L].rotation){const ee={matrix:[0,0,0,0,0,0,0,0,0],angle:{roll:0,yaw:0,pitch:0},gaze:{bearing:0,strength:0}};ee.matrix=(l=e.face[L].rotation)==null?void 0:l.matrix,ee.angle={roll:((P-1)*(((u=(d=Te.face[L].rotation)==null?void 0:d.angle)==null?void 0:u.roll)||0)+(((p=(h=e.face[L].rotation)==null?void 0:h.angle)==null?void 0:p.roll)||0))/P,yaw:((P-1)*(((f=(c=Te.face[L].rotation)==null?void 0:c.angle)==null?void 0:f.yaw)||0)+(((g=(m=e.face[L].rotation)==null?void 0:m.angle)==null?void 0:g.yaw)||0))/P,pitch:((P-1)*(((A=(y=Te.face[L].rotation)==null?void 0:y.angle)==null?void 0:A.pitch)||0)+(((b=(x=e.face[L].rotation)==null?void 0:x.angle)==null?void 0:b.pitch)||0))/P},ee.gaze={bearing:((P-1)*(((T=(v=Te.face[L].rotation)==null?void 0:v.gaze)==null?void 0:T.bearing)||0)+(((E=(C=e.face[L].rotation)==null?void 0:C.gaze)==null?void 0:E.bearing)||0))/P,strength:((P-1)*(((z=(R=Te.face[L].rotation)==null?void 0:R.gaze)==null?void 0:z.strength)||0)+(((k=(F=e.face[L].rotation)==null?void 0:F.gaze)==null?void 0:k.strength)||0))/P},Te.face[L]=Sa(Ze({},e.face[L]),{rotation:ee,box:B,boxRaw:W})}Te.face[L]=Sa(Ze({},e.face[L]),{box:B,boxRaw:W})}if(!Te.object||e.object.length!==Te.object.length)Te.object=JSON.parse(JSON.stringify(e.object));else for(let L=0;L<e.object.length;L++){const B=e.object[L].box.map((ee,te)=>((P-1)*Te.object[L].box[te]+ee)/P),W=e.object[L].boxRaw.map((ee,te)=>((P-1)*Te.object[L].boxRaw[te]+ee)/P);Te.object[L]=Sa(Ze({},e.object[L]),{box:B,boxRaw:W})}if(e.persons){const L=e.persons;if(!Te.persons||L.length!==Te.persons.length)Te.persons=JSON.parse(JSON.stringify(L));else for(let B=0;B<L.length;B++)Te.persons[B].box=L[B].box.map((W,ee)=>((P-1)*Te.persons[B].box[ee]+W)/P)}e.gesture&&(Te.gesture=e.gesture);const j=ue();return Gm=Ne.perfadd?Gm+Math.round(j-D):Math.round(j-D),e.performance&&(Te.performance=Sa(Ze({},e.performance),{interpolate:Gm})),Te}function yA(e,t,a={order:2,multiplier:25}){let r=0;for(let n=0;n<e.length;n++){const s=!a.order||a.order===2?e[n]-t[n]:Math.abs(e[n]-t[n]);r+=!a.order||a.order===2?s*s:s**a.order}return(a.multiplier||20)*r}var bS=(e,t,a,r)=>{if(e===0)return 1;const n=t===2?Math.sqrt(e):e**(1/t),s=(1-n/100-a)/(r-a);return Math.max(Math.min(s,1),0)};function Oge(e,t,a={order:2,multiplier:25,min:.2,max:.8}){const r=yA(e,t,a);return bS(r,a.order||2,a.min||0,a.max||1)}function Dge(e,t,a={order:2,multiplier:25,threshold:0,min:.2,max:.8}){if(!Array.isArray(e)||!Array.isArray(t)||e.length<64||t.length===0||e.length!==t[0].length)return{index:-1,distance:Number.POSITIVE_INFINITY,similarity:0};let r=Number.MAX_SAFE_INTEGER,n=-1;for(let i=0;i<t.length;i++){const o=yA(e,t[i],a);if(o<r&&(r=o,n=i),r<(a.threshold||0))break}const s=bS(r,a.order||2,a.min||0,a.max||1);return{index:n,distance:r,similarity:s}}function Pge(e,t,a,r,n){var s,i,o,l,d,u,h,p,c,f,m,g,y,A,x,b;let v=0;const T=[];for(const C of e){const E={id:v++,face:C,body:null,hands:{left:null,right:null},gestures:[],box:[0,0,0,0]};for(const _ of t)C.box[0]>_.box[0]&&C.box[0]<_.box[0]+_.box[2]&&C.box[1]+C.box[3]>_.box[1]&&C.box[1]+C.box[3]<_.box[1]+_.box[3]&&(E.body=_);if(E.body)for(const _ of a)_.box[0]+_.box[2]>E.body.box[0]&&_.box[0]+_.box[2]<E.body.box[0]+E.body.box[2]&&_.box[1]+_.box[3]>E.body.box[1]&&_.box[1]+_.box[3]<E.body.box[1]+E.body.box[3]&&E.hands&&(E.hands.left=_),_.box[0]<E.body.box[0]+E.body.box[2]&&_.box[0]>E.body.box[0]&&_.box[1]+_.box[3]>E.body.box[1]&&_.box[1]+_.box[3]<E.body.box[1]+E.body.box[3]&&E.hands&&(E.hands.right=_);for(const _ of r)_.face!==void 0&&_.face===C.id?(s=E.gestures)==null||s.push(_):_.iris!==void 0&&_.iris===C.id?(i=E.gestures)==null||i.push(_):_.body!==void 0&&_.body===((o=E.body)==null?void 0:o.id)?(l=E.gestures)==null||l.push(_):_.hand!==void 0&&_.hand===((u=(d=E.hands)==null?void 0:d.left)==null?void 0:u.id)?(h=E.gestures)==null||h.push(_):_.hand!==void 0&&_.hand===((c=(p=E.hands)==null?void 0:p.right)==null?void 0:c.id)&&((f=E.gestures)==null||f.push(_));const R=[],z=[],F=_=>{_&&_.length===4&&(R.push(_[0],_[0]+_[2]),z.push(_[1],_[1]+_[3]))};F((m=E.face)==null?void 0:m.box),F((g=E.body)==null?void 0:g.box),F((A=(y=E.hands)==null?void 0:y.left)==null?void 0:A.box),F((b=(x=E.hands)==null?void 0:x.right)==null?void 0:b.box);const k=Math.min(...R),D=Math.min(...z);E.box=[k,D,Math.max(...R)-k,Math.max(...z)-D],n&&n[1]&&n[2]&&(E.boxRaw=[E.box[0]/n[2],E.box[1]/n[1],E.box[2]/n[2],E.box[3]/n[1]]),T.push(E)}return T}var AA=`
/9j/4AAQSkZJRgABAQEAYABgAAD/4QBoRXhpZgAATU0AKgAAAAgABAEaAAUAAAABAAAAPgEbAAUA
AAABAAAARgEoAAMAAAABAAIAAAExAAIAAAARAAAATgAAAAAAAABgAAAAAQAAAGAAAAABcGFpbnQu
bmV0IDQuMi4xMwAA/9sAQwAGBAUGBQQGBgUGBwcGCAoQCgoJCQoUDg8MEBcUGBgXFBYWGh0lHxob
IxwWFiAsICMmJykqKRkfLTAtKDAlKCko/9sAQwEHBwcKCAoTCgoTKBoWGigoKCgoKCgoKCgoKCgo
KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgo/8AAEQgBAAEAAwEhAAIRAQMRAf/E
AB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAE
EQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZH
SElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1
tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEB
AQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXET
IjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFla
Y2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
x8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A+qaKACigApGOKAML
Xp8xlF5A7V4X8RtYs7PzfNImnx8sa8Kp9z3q2tEgp6angWs62ZZ5CTGoJ6DArGNz5p+UrID6EUrF
PUlW1EuN0XNW7PQ2L5j3JnoKXN0KijqNP0eYoqXBdgPuuo+ZPeupisWn2Jd4+0r924XgsQOCff3/
AJ1FzRKxDqGii6m3siiQ8F1XGfXI6YNWLfRbiRQMkcZI9fpTDluT2/h6Qy8gDPbtmtG38JeY480Z
5zSLUTZg8M28YwYxjAArXtdPt402qgHbpSaLWhma3o0Uqk7Nx9DWLaaVblgPs6qRyds2M/gRSQp9
zZOni2iWS2hlQ+kjYz9OMGrdjq89vIPPVhj+8M/lQyDq9P1WOYBlMZz1AOD+VdDaTiReOKulK0jO
tHmi0WDTlr0TyxRVhT8tJjIX+9SUxHXUV553BRQAVBcPhSBTSuxPY86+IGti0s5I7dsORy9fM3i6
8e8mfDO5P90ZrWWiJicNPpZZtxV/xrW0jQt4DOv6Vk2dEEdTY6BHuB25rpbPSo0QARjP0qTRI17W
wA/hFaMWmoQMgflQXYsDS142rU9tpqqenfNA7GgtihxkdKuRW6qMY/GkDZY8sY4Ap4hXbyB+VArk
EtuH4wPyrk/EGkOm+a3jw3suRQLc5i38SX9hJ9nnY+XnBUdPyNdFY6pa3KkkAE9l6f8AfJ/pSJT6
GhDmI+Zb4ZRycdv6ium0nUhKFydrelTsNnS2829RnrVgV6NKXNG55lWPLIM81Op+WrZkRMfmNNzT
A7GivPO4KKAEY4XNYWt3vkwPg4OK0giJdjw/xrqhm87Zs8tc7pX5A+leSajf6aHYJ50kn4AZpTep
rBWRm2Vobm4BXfyehPFdnpmnBFUY5rI2SN63tlToK0YI+KZpFF+3QdavwoKTLtoW0Toaswpk5pCb
LCxipAhoIuP2dKevHXoaYDylRyxhlwRQI4nxVoCXWZI1GfpXGtbSWjYPGP73+NIGupt6TqMsLruZ
ih4xnP5V09mQ+JLd8gn0xSYJnVaVdkook69K34zuUGunDS3Rx4qOzHVIp4rrOMY3NJQI7GivPO8K
KAILt9kZrz3xlebYiu8KCCWb0XvW0NFch6ysfO3jLVjfXLIn+pQkKorl7WxNxIPl71g2dUUdpo+l
pBGvHPet23iC8ihFosrxirkHQUFo0IF4FXI1O726CpKLacCrMJoJLYHAPpTwucHpSRJJ5e4AZI9x
UqpxzVpCuOC8cUpQUMRnXttuB4rjNdsYyeVwfXpmpGmcvcQyafMCFJjPY10eg34BUg4DcZP8jUO4
HaRq3lLNF+IHet7R7jz7c56rwa2wz9+xhiVeFy/T1PFegeaNPWigDsc0ZrzzvDNIaAM7VpNqdegr
xL4l6kywyRhseZ19lrdfAZL4jxYg3Fw20d63tJsdrDI5rm3Z3R0R0Mce1eKnQYAplIkWrMJ45oZS
NO3PHbNXIyfpSGWowSOasxLUiZdjFSqtNEMkUemKlAGKsRJjAppFAiORMjmsTVrNZEO4cfSoZSOD
1eJ7WXBUzQZ+7nkfSo7e2Ei+ZaMzxntjBX2NSU1Y6/wxqojiEFzkA8KTXYaUoWRyv3W5rSjpNHPX
+BmpSg8V6J5gUUAdhRXnneFFAGHrTfu5PpXzj8S70/aZtxzztXFbv4DKHxHI+H4GZiz9zxXXW8G3
GBXMjvLRXAx0oPGPSmMVeOnWrMTYpFI0bcg1fh54xmgovRcD3qxETSIZcRvzp+/BpEkqsBUqsM9K
q4Em4Gkxk0yRGXrVW6i8yFhkg+tJjRxGsWrxllkUMh9eK5uMz6bcebbnfG33kPcVkay2OntPKuo0
nhXI67c8qa7Lw3c+adjcEDGK1paSRhVV4s6A0or0jyRRQ1AHX0V553hRQBz+vNtt5z3xXzX8Qbdm
uic5YnOMdK3l8JnTXvlbwpYl+WySOgrp5YfLOOB9O1c62O7qQkc+9RsKChFPWp4DluOlSykaNruH
ArUgHShFNF2NT1qxGO3NBmyxGcE1N2560CFzjrUysO9JAPDDjFOVuKoQuSRTWouBkazbCa3cd8cV
wF7IISQccHBzUSWpV9C3o1x5b5GAjdQD1rs9DjC3kckbEhqKfxIzn8LOupRXqnkPccBSkUAzraK8
87wooA5rxMSI3HqK8B8bQl9Q8sffY5b/AAraXwkUviNrw9pH2W1ViMMRTdRjw4HpWNtDti9TPc4P
FQs2M5qdyyMHLcfjV63HTAoBGtap0wK0YxigpsuRDtVhVYd6GQydVwwIqdRnqKCR23I5pCMUW6gD
YNKuetAEise9KTxQBWuFyhrznxNZkXjFeN3I+tTIZg2OqmzmxNF0PO3vXp/g2+hukVl4zyPanTXv
JmVR+60dpThXpnlPceopWFAbnV0V553hSGgRynjC5FujOey14Ssp1HxNmTnc+a3kvcIpv37HoEYQ
QmMdVHSsnVbYJF5jVk0dsNzlruVIsl2wKxbjWrVHILjg1CRbZJb+ILHPzyhfStODWLQgFJFYd+el
UJM27HUIXxhga1Y5lLVLKLkMnoauxnPPrSEx7ShF+Y/n2qrc6xBbhizDAqkK1zJuvG9nbg8ZA681
ly/Ei052RO3uKAsZlx8QGd8xxvt9Aa1NH8dK7AXMcip64zigdkdrZX8F7EJLdwwNXMkrz1qRMRly
CK4TxmpidWI49felPYSOMmi80NIoOV6qRzXYeA5SskYPfirpfEjGr8LPWVHyD6U4CvQPL3ZItOYc
UDOoNFeed4Uhpks4H4iE/Z5MeleMeGULeLgjds10S+BGdL+Jc9OSBU2Huc5Nc74yvUtrcDBrJnZF
63PJdXvLy/lKWw46bvQVz82jXhkLO5Y+9ZlsYthcRnbIjY9R3q3awTRkEM3WmJI6C0ea3dGRsr1x
XY6TqW9FLHnjrUs0izpLK5DDjofSta3ckH09KRUkZuuTvFGdvPauE1Y3U6Mqbssf/rUxHPTaJPK2
ZmJPbBqzY6DCZh5xJC9s9aBJHU6dpemJjfEmfetJtI0+VPkUr/unFOxdiextHs33W07YHQHk11mk
Xb3KbZ1xIvcd6LEyWho4Nct41sTPYb16ipexCPPZN+wYGCvH1rrPAEJmvkPoc1VL4kZVvgZ6yFwK
cBXoHkkqinFaVyzo80GuE7WJRQSziPiGdthK5HQV4x4J/wBI8WPIewNdEvgRNL42emO/yj1UHNef
eNpRczbC+I17DvWT2OqJxc0sMK4TCisy41q0hfEkqj8aixdwTXNOlwvmqD9anS9tXH7uVG+hosO4
/wC0oOhrR0+6G4YNIEzsNEuCxAPNdjZruA4xxUmjINSjURksOlcbqFykbnjFA1sYGoassaknCqO5
rl7rxhGm7yBnBxuJq0rkSlYpw+NLlsfd5P8AerVsvHEqSBHwPVgcgVpyMyVXU3rXxcHYETAk+hru
/DWti6ZSTyOKzZqndHaxvvUGq2rQ+dYyqR24qWI8dvbr7LqDxyDAzXpvw6FvIxePGSM06Xxoyr/A
zviKFHNegeX1J41zUhXioGbuaSuM6wpCaBHG/EcA6HN/exxXjXw2jL67cv8A3Qa6H8CFR+NnoWpO
I4XI44rxLxrqjQzSEsQM1gdSPM9U1uR1YbmWIdXHf2rmpIb67YS28UrRlsLI3c/jW0VZGUpO5pW1
jfLNOjahawzwReYI5cjzMkDavHJ5/SrVv9uhtPtVxCPLBwzxnlT9KGghLU3tKvvPjHzbl7EGuisJ
GRxWLOg7nRXJEbDjmvSNK+aFSfSoZr0KutRkphc4NcRrdkVjL9aVio7Hk3iqS8ubhrWzUlsZY9kG
cZNc5D4aee5MclzJIFTzHAO0MfatqSOWu7bFS1srDUZEis0vIZoUxPvfcC+4/dx2xjr712XiTwXb
WmlQ6hol3cRhoFd4rlg3zY5wR0GelavQwjq7GD4etdVvSnk2wAB+9v8A8mvcfA2kXiRo0/UdcDis
ZnTTulqeoWqbUAJqWUb42X1FZlnjfjSwlGrr5S/eNdD4RkvLAAQ4yRyaUZcruVKl7TQ9I0G+mnzH
ckFwM8VuIK7ac3KF2eXiKapz5UWYxipNtMyNejNch0jSar3cjR27uoyQCRVRWom9DxTx54gu5fMi
lbKdMVjfCZPNlv5v9rFbVHpYqjGzbOn8SzFI9o715L4u0r7arYzk+lYdTqSujy7U/C0u4vHk+WwO
xuh9q3J9dgvbdVukMV1EwbDDgn04rZMwlHoZ+orZ6hfQ3RWVnQYCgZAq+8U0ln5NtBsV2yxYcfgK
JtW0CnB31LlroVwJ1nQLGDjeP7w+lb0dsFxjrWB0tHS6NuWPJ6A16ToUm63T3Gallr4S7cxiTjrX
PaxaF7dlVeSMUhxZ5jd+H7qCa4eF3DSE5x3zXN3Wk6jbyeaiFWUY6ZyPStYS5SalPmVipFbX0E4c
W0alvmPHJrag0rVvEE6LdljGpG2NRtQD+tW5XMI0uU9M8NeFo9PiQhecDIIrtrOMIoG3H4VlJm9t
C6CB06VPGM1IHLeItGS6uw+ORT7e3jsbQvj7gzUNam0JaWE+HN7NqOqX80n3FO1RXo8YzXdS+BHk
4z+KyzGPapcU2YIv7qQtiuaxvcaWqG4O6FwfSrS1JbPnrxoxkv7qIfejcitj4V2f2exumI+8+aKn
xHTT+G5d8Txlm4rjLxMsQwzWT3OiK0Mm6sEkVsAcjFc1d+FEmlGwEDPQVopaEuOpr6f4ZWNAu3tW
vHpAj5ZQcUFIWaDjGMVUMQ3cVDBmvbhY7QAV2nh+T/R1yeKhlrY31+b61FcQK6nIoJMi401WblRi
qr6PCw5UYq9y+YgOgWzNkRrx3xWjp+nx2v3FQcelAbmko9anQ4GBUNisPHWr1qMrQhS2K11HvmYV
hamcxSRZ5xRIqluS/DKAQQXZxyXrvo2FdlL4EeZjH+/ZbjNSZpswLNBrE1Gt7VE4ODVIlnh/j61F
j4lmeTGyUbq6LwdEqWbeX0YbhSqfEddP4Bddj4JIrhL5d8h7VjI6oLQqKNzelWre3yc4/ClFjaL6
wqBxxUUxwCKu5BmXRA6c+9ZjP83FSBoQuPs4BrsNBlUW659KmRrDY6G1lyQtW3Hy0lqQ1qVJnAbm
oy3b9KYJCqRj3o4zRctIlhjLHmpSuOBRbQOpLGpPFaES7UqkZzKN1KsEc87/AHUUmvPLTVGv72aQ
k7WJwKmRrQ3ud74Ltilgz4++2a6iNDXdS0gjyMU71my7GpqTbxSbMki3SViajTTHqkSeR/GeyZmg
nQHkEE1S+F+oPPavBL96I4/Cia1udVF+4dVrkW+Fq8+v4tjMDWUkdVJ6WM0cNV+F+MVmjUcZgqnP
1qpNNnkcVRLiZtxIS1UzzIF7mghlxUZpVQdq6nTVdAoAOKzkbQWhvwM6gMM1twOJYx3NOJE11Kt1
H1/pVVlwBkk+9NocXoOQ45FPj+fkUJFF2NSB700v/hTEty5ZpkjvVyUgcCq6GM9zC14/8Se6GcZQ
1574Xs5WkI2HBPHFQ1dm1KSSZ7Rotn9l0+KPHIHNacae1dy0Vjxaj5ptlhVp+2s2CJ9ppCKzuWNx
zSFc1SYrHNeNdIGpaYw25ZeRXmvheyk0jVpEdcLJ0q3ZxNKTa0O3vQHg/DNcHrsJDmsmjspnNzNt
fFIJ24GazOhC+azDmgZIOOKBsp3J2qSaZodubq58yQ4QAnmhGT3NO18pb7BORmu205LfYpyKVkWp
Oxr5gKYWoIZWgfGfloFq1qTPLubnGO1RPtxg4P0oBAkY/hBz6VNDDkZ6AU0W2WSdqkdKr9ZOaGSj
VtcLHmnOcgmmYvcz7mBLy3MbdD1q9ouiRK6bUAVeelOC1InPlidSsWMDFOCEdq3uefykqrinYqGy
rFvApMVka2DAowKAsMkRXQqwyDXn/iWyitNQ3qPl6itIvRoF8RXinW4tQ6HI6GuW8SIVBPalc6qe
5x9x97r3qruwTjrWZ0ksZ9TUmcDNAmZ9/wAoao63rR0+w22MLPtAzt6mghmfofiB76LdJBJBIp5D
d/oa7bSdWLIPnpDi9TM8TeKdas51XTbIyxd3J/pXS+E/EFxqNoFu7do5OmD60maHWrnZyDRkn/69
MlEyOR0xntVoNx+FUgYjPxg4FLCuWDZyKQr2RoRnP0qO+nEFpJITgAUzLqZnhu6+0rknOTXpOmwJ
Fbrt5yMmnHYyr6Oxb2ijaKLnPYMClwKQWK3n0hn+lachHOJ9pNNN0apQFzsY10a4v4hXQh0xpieQ
MA1XLZNjhK80cT8OdV+3Wl3A7ZZJCw+hrR1qLcjZ/CsbnfHRnFXseHJArOYYbrUs1uPhYbuatqFP
ByfSkMq3UIINYkto+87Tx6GkSxfsDbflGD7CtTw/pk4nzITtPIFMFudsukh4Rxz71paTpKwP5jcn
0qTRy0NORMDgVCqewoJTJgAoxjntTiTu7fWmFxAcnn1q3EPl+X8KZMi4gKqB1Peob/Tv7Us5bfeU
yOoq4R5nYxqT5I8xieH9J1DTbvyJELRg8ODwa9Ms5mSFV9BWiptbnNVrKdmif7Q1KLg96XIZc5Is
pNL5pqeUrmMtZs0jzV08phchaY00zH1p2ZNxjS1g+LdJOt6U9ssmxjyGp2urDjLlaZzng/wUPDqz
TSTmWeTrjpVjVk3Rvjr2rnqQ5dDvo1XUd2cTqSNk9OKxXGCeKxZ1DAxHTr2q5C/y8GokUhsz54qu
uCxzSQjQ0+FZblR2ro4bZYiMVQ0dBb7Qi5x0qzuG5QOh71LYErDufpSeWrHnimIXbjkUjLkH1Hem
gGxryc+tXI19KYmWegq9YLiLJ7mtqS945cS7QsWehqxA9dEjz4krPSxyZqbFFhGxUm6smjRM55Lk
HvSvNxXTY57kLT+9MNwKdhXGm5FIbkU7Bca1wMEVhaiuQcVhXWiZ14R6tHGanGBI2OtYkqEHjgVy
s9ErEeo6UBsHipKEZs5qpPdRxcbhx70NCSuybTNWihc5brW9Fq6vjMnFSdEIdDRi8RRKygZbHFbu
m6nb3RA3gMegNJhOm0jbXGOoxTuCc1Rz3FyoGKawz9KaAVcZqeMgCmIkB4FaUTbYwB6V00Fuzixb
0SFMuDU8Mlbs4UPeXHeiOXkUrDuXYnyKk3cVk0ap6HMxxketSMhrcwRC0dMMZFMQ3yzSeVQAeUaz
9Vj8uPd271nVV4m+GdpnHX67pCeKyLtBtNcR6xlk9RVeWTb3qRnO6trgttyIfm71z7ai8j7/AJmN
DNqUVa5Yi1AnjynHuBV+11YJhWWXcP8AZNSzqgmaEerSsf3NtIQP4mGKtRavdRgMIpVI9KjU0a7n
R6T43uYQI7qN2Tpkqciu503VVuQGAYZHQjFVc4alPlZrpKGAznpTwxOc9+lWjIlUACnM4XApiLNk
nmvnsK0NvpXZRVonmYqV52GsmanhXitTmFkSiJTSAvwrxUxXIrJ7miOfjf1pzNWxkRlqYWpgJupu
6gQbuahvIxPA6eo4pNXVioS5WmefakGhndH4INZs5DJXA10PaTurmLO21uKpSZqGMoXGnRzBiyjd
9Kx5rcQS428fSkjanLoaOliHGZFB56VswW+mtPufcBsGOAfmxz+tFkd8HpoaUx09FAtFY8DO71qb
Sms/Nb7RbecG6AEjFLS5c78t+p0djpVs9wsyQiJAdyr1rW+zqjErzSe559Sbk9S3C+MA1bjbgE1S
MSXzMVG0vNUI2tPKrAuCMnrVzNd0PhR49W/O2xrHmp4TxVMzQshpIzzQBehqesnuaI5VGzT2bitz
FEbNTC1ADS1JupgG6l3UAc14s04yR/aYRll+8BXCtLncDXFWjys9TCz5oW7GddH5qqNzWDOgQnC8
VSuo1kHzAGkPYopEY2+RWxV23Vzj5G/Kg3jWaNazhZuqNXS6TaKhB2c0jR1nJWOlhOxRxU4YkCgx
Y0OQatQyDbyaaFYe8uF4NY3iC9ltbVGj43NTIL3h7WzMihjzXVQXYYDdW9Cf2WcOJpfaRZ3g9KsQ
mupnCLIabGeaAL0LcVY3cVmzRHIxtUhetzEjZqjLUAIWpN1ArhupwagAfDKQ3Q1594v0c2bm6tx+
5Y8j+6ayrR5onThp8s7dzkZjuqAAmuBnqC7c0iwgtzSA0rWzjfGRW3ZadDu4AoNYo2rfS4v7orSh
05UA2r0pDbsTm29KRottBNyJ0wpJ9KhD7f6U0ikNWffIFBz60zVUW52ow4UcUN6EPcx44WsbgOmd
ua7TT5Bd24KHnFKnLlZFSN4koluLdueRWvp14swweG9DXoxldHlTjYtzGoo25qzEvwtUxas2jRPQ
5CNqkLVsYoYzUzdQA3dSFqBBmnqaBhuqhriCXTpVIzxUz+Fl03aSPI9QTypW2/dz0qKNw3SvOPZR
Mqin8VLKRcs3O4Cuk0w/MDjt1NBtHY6O2IIHY1pxgFaETIRwMkjtVSUEk4570MlFW5bap6dKzWm8
1tqH8aY+hp2FvGoGayNevVt7/ap4xzUvYjqTLtvLPcvJxSaVcyWsxTnFZlnT2t15xHmCtOBYwQy4
B9q7cPO+jPPxFO2qLEj5HWo42+aus4HpoX4W4FTF+KlotbHII9SFuK0MUNZqiLUDE3UbqBBupwag
Bc1DefPbyD/ZND2KjujyPWlKzuPesRZjHJXms9lMuw3StjnmphKDSLTJ7OfE3JrpbO4GQc9qlnRA
3LO82k5NbFvdADkjBoCSHyXIIIzgVQvdRigT7wzjgUzO1jHknlvG7qnp61etYFQDIpCZoqVijzXn
3iC8EmsOuaCGb/heR/s0ijkVv6fbxy3QMg5xmsnuX0Ldzut3+UYTPWk+2GJSe+M1pFtamcldalmx
1eO4XaThhWnC+TXqR2PHqL3maUJ4qRjxSEjj42qXdxVmaGs1MJoATfSbqBAG5p6mgAzTJTmNvpQU
tzzHXY83D/U1zF5FhjgV5r3Pa6FMsV5HWnLe7RhqBRdmTwagN2d2K2rPU1C5LAnPrUs6Iysbdrq6
f3gK0BrUKj/WClY05iM6xLOcQAj3NT29uznfKSzHuadzNu7NSBFjHNSm5VO9IRnajqoWMhTzXFtA
bvUfMduSeg702Qz0rS7FbTToQFwzjJqaGTFyfK5PQViyzUuFmuIdgGABya5u/vTaN5cnUHFUmLoZ
zyskwlgJweSK6zQdUEwVJeGr0aUrxPLxEfe0OrhPAqVjxWhznGRtUwatDK4jNxURbmkAm6jNABup
6tQAFqhupNtu59qUnZFwV5JHnWsHdIx96w5lz15rzT2uhRmt85xWbcxMnUGmZlB0bdxmrNvFIcfM
350mWjbs7YkDJY/jW5ZWW4jikWkdNp9mqYJFaJdEHHakUULu/VB1rLn1Ld/FgetMGYd/qWSQmSa0
/AemS32pfa7piLeLkg9z6UmQtz0W7uQ2cZx0A9BVzR7cAea6j2rPqX0L99KRat5A6Dk1wOoKZ52a
YfMORTYRLujiGWEq6/NWza2yKQVHNdOHerRy4laJo6TTnbbtb8KuM3Fdh5z3OJjbmpt3FaMxAtUZ
agBN1GaQBzTwaAAms3VbjERUGsa07RsdeFpuUuY4jUjljWTKK4j02RE4IpJYFk6imQkVl0xWarsO
mAEcUi0bNnZBR0rWtoguMCkUi21wI161mXuocEKaYXMS4u+pY/hVCSWSY4HT0pEmlouiSahdpEBl
mOceleiwWcNjClvHgJH97Hc1EmVFFi3Czy7mwIl/WtJbjP7uLgd/apQ2VNVvtsBhiPzdK5S4nAuR
nqOCaTGi9pcytPlU+XpmumtWII44rah8ZjiNIXRuWeNvvViQ/LXpJWPJbu7nCRvVkNxVsxBmqJmo
EPiXca0YLMuOlJsuKuPlsSi5IrNuG8s4HWs5VEkbwoOTKsk+FJY4rC1K53k1xTk5O7PSpwVNWRzt
4cms+WpKICtSLTETQj5q0YeBSGiys23pUguGxQMq3E59ayrm4x3yaAKiRtO2WPHcmhruKFxFajzZ
ScA44qRHoXhuMaLpxaUg6hcDLMf4F9KlhuDeXGASIl+8azZslYma68y48m1+7nFW5rtbRNhb5z1p
iMKbUg0zuW4A4rPgb7VdKXOMmpA7HRbMS7nUYiUda0lkQOBngVrS+JGdbWLRt2bAx5BqeQ/LXpnj
PQ4GJ+ashuK0MhWaoWcA0AaOmASMK7jRNPWYBmHyiuepO2x10qfcv6vYxCzYqoGK4HVYVTJrmb5l
c6oaM5TUJ8EgGsG4kLNUHT0M64OaqMMikSRsuKbnFMRLG3zVehOaGNE445NNlnVFpDMu6uie9Vo1
8z5mOAOST2pDK91cNN+5tsrH3PrW54a06KxT7fdrlh/q1Pc+tJ6IUdZGvHPLezMcnBOWbsPap5r3
ylFtbdT1xUWNWzU0/Zbwlgfmx8zGsHWtRHmMqE59aAMyNifvHPc1f0gtPdqkY5JosJHeNci2tktY
euPnNY+oXWZEVJNrZ9aun8SIq/CzodHuriIokhDIR1ronbKZr0o6o8ipoz//2Q==`,xA=`
/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAsICAoIBwsKCQoNDAsNERwSEQ8PESIZGhQcKSQrKigk
JyctMkA3LTA9MCcnOEw5PUNFSElIKzZPVU5GVEBHSEX/2wBDAQwNDREPESESEiFFLicuRUVFRUVF
RUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUX/wAARCASwBLADASIA
AhEBAxEB/8QAGwABAAIDAQEAAAAAAAAAAAAAAAEDAgQFBgf/xABDEAEAAgECBAMECQIDBgUFAQAA
AQIDBBEFEiExE0FRBiJhcRQjMkJSgZGhsWLBJDNyFSVTY3OSNEPR4fAHFjWCokT/xAAYAQEAAwEA
AAAAAAAAAAAAAAAAAQIDBP/EACARAQEBAQADAQEBAQEBAAAAAAABAhEDITFBEjJRIhP/2gAMAwEA
AhEDEQA/APqYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAKNTq8OkxzfNkisQC8eb1XtRNbzXT4q7eU2nu0MntRq/D8StMccvW29ZmdvgjsTyvZjxOLj
+s8WLxn8TFPXs6Oj9oct7c14rkxz22nrB2I49KOdTjelmszfmpMeUxv/AA28OqwZ4icWWtt/SUi4
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmdo3nsPNe0Pt
Fh09Z0+DNWL7+9O/7A3eJcZppsV5raI27esvH6jX5ddM25p79Ilo59VbUZOe2Tm/PeGvfPfT2iKR
PLv1+DO678XmW/a97U6TtOyzTbTF538/T9WjTNecm9a7126tqk3rSYxY5ta1plRZqZNXGjyZcPXl
mZmsx+qjBrsuO16xM7eXRt04JrdTltk5OWJnfaWf0a2lty5MdZnfzSn+WOHiOutFpjHa9e8bQ2fp
+alYy462pk7zXbuxjPesbRS0f6ZZV1ET1tErzXFLHo+A+1ddZf6NrI8PJHa1vN6iJi0bxMTHwfOa
zhzd61v1846utwniM6DUdb3nBaNrVmd9vjC/ZVePYirBqMWppz4rxaPgtEAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAItaK1m09ojcHnvarjM8P0vh49+a/eY8ng9D
h1fGM1rxjtGPfvbzdbjuTJxHX48cTPNltM/KsS9Dw7S49Jp6UpHaGe2vjz1y9J7LYK13vHWe7bj2
ex1tvM80ekuxW3RnW3Vm6P5jRx8H0+OYmMcb+bapo8GKPdpC6bQwtdHU8JpWkdJ/JweL6e23iU67
d4dubSqyVi9Zi0bwIs68XGp36TtEq7ZJmZmevzdbifCKWtbJinkt6eTgZPFw32t+sRurbWVzxs1y
Rv6T8V1NZNPtfq0seTm+Kevr+SZuxXjvaPiV8N4viycto9HseG6+uu08W6Rkj7UPmFck1tE1nlmP
Ld3eA8V8HVVi1pjq6Ma/pnqce/ERMTETHaUrKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAADW19+TQ5p/p2bLS4v04Zmt5VjeQeJ4bjnLqsupv+Ka1+ERLv4reTmcNxcuC
vy3l0qdI2hlr66sT02ot0ZV7qqrInruzrVZLGSZ37JjqgYTG0K5lbaFVhDT1Ub456RPweY4hixWi
eSdpjvD1eWejz3FNHWYtkpvFo9EIseb3tS3SerOms22rfpPqZKzvvHSYUz70TExG6Gdbs2rljeJ/
Mx5L0vEzPaelnOi98c9J2bFNTFpit47+a+PVUvx9T9nOIfT+GV5p3yY/ds67wvsXqpxau+G09Lx+
r3TqrEAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADV4ljnLw3U0jvO
O0fs2lWqyUw6XLkyfYrWZkHldBEV09eveG3Fq1mI3jd4vPrOIaid8G9MP3Y38k6fNrt/rMk9Ou8s
tfXXn49rGWInuy8SO/k5Gl1E3rG/fzbOe94wTy99mbRvTrMOOvNfJWsesywniukrG/jU6fF43WYN
TmtEeJtEQ06aSmK2+bNtEd+qfSO17unF9Hmvy1y13XWyVmN4tExLxVK8PmNq5NrT58zawam+m/yc
0Xj8NpRYSvQZ7xEOdqI3rPozxayNRXe0ct/ON03jmrKB5nV4q1yTO20Obmv4c+cx8HoeI6WZpNoj
q83niYmYscU0r8aJ6T1n49zeJ+Meqm1drb9J+Kd5p136StGVem9l9TbHxLDFp7W7+sS+q1nesT6w
+PcAzVjiGHftzQ+v4f8AJpv6On8jH9ZgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAABp8VrW/C9TW0ztOO3b5Nxp8VmI4bn37TWYB8f1HFtTfUfR9FWJmsdZ9I7MtJxDX5s
d8ta1y0xzteaR2277rcuhycP12SceLxMeWNpjttHwlu8I0mfQ1y+D7k5YmJmY36T36Ka43z/AF1t
cI1ds+qxVj7/AEej19PCw9HJ4NoK4OIU5Y35YmZdzVTGebVZabx5jJS+Tmns81rNLm1Wrzc9rVw4
Yibbem72mXTTS0w0M3BvEta1bWrM95ie5EanY87wXgNOL6XPfxraXLhra/W28bR/dzYzarBqJxRe
bzE7Rt5vWU9n8mPHOGmS0Ypnea1naJb+k9ncNLR7u2y/WcxXO4TOoyUrN6zD0FaW5Y3hu49FiwUi
KxCvLMR0hlW0jn6ukWw3iXjOJzbDlneOj3GaN6zDzfFOH+LE7SRGo83XNSZ2lbG2/WfdlvaT2cy6
rNFInlrv1mfJ37cK4PwTTxOoidRm2+/2/KFuyMp47XB4LivXiunrH2b2iH2qn2K/J8x4fGDNxTSZ
9Nh8OviRvTyfT6xtWI+DeXs9MNZubypASqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAOZx6/LoOWPvWiHTcf2hiZ0e8fc2mf1E5+vP/AEeuSd7RC2uKtI6QjHfeINTfwtPf
Jvty9WPfbt/lucP03gxfJf7d/wBoReYpm97zaNeLb4Ims9Nt94auDjem1Wo5PFi1onylS+1o7l8V
bxvtupjDMdNkYtXS1+Stt+m63xImEJ4xjHER2ZxMUjeUTO3VRmydBbjLJqPi08mbeVOXJPq1sl5Q
Vbkz9+rRy35rxHqzmZlVEe/Ez5LRlW5iyfR6zffaIjq1OSNZps2a21rZInafSPJhxGMl9LStLRWM
lorM/A4dkrWbYfLZC2W/7K6eubX6b4RzT+W76K8b7G6X62cu3Sten59nsm3j+OXz3/0ANGIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0OIYfpOHPijvNNo+fdvtXJO18k/
/OwPFYbz2ls3jx8VqW6xMdWPEdP9D4lkx/dt79flLLHbkxTPwY6nt2512ORTRzE2x4/dpE7cvkme
E4IrW3hRMxO8THRtU1FKWtvtvK2upx22rzRCtXkqzh2jtF7ZbT122b01ndnpuWuP3Z3+Ky20qDVv
fauzVy3mejZzNK8dVjqi87KLRLYtXruqvXzkQp7Qoid88R6rcl+WGlW0/Sa22mfhCZOq2x082ix6
jkm822pO8VrPdr4dNObVeDo8XW3uzMbzK+mvxT7szE27cvnu9j7PcNjSaXx8mOIzZevbrEeic5tN
+SZnpt8J4fHD9HXHO3PPW0x/DeBtJxx29vaAJQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAKNRim9Z5e89Nl4DzXtVh5babURHrSf7f3ec1+qnDorWrvvt5Pccb0n0zhmWk
Rvevv1+cPE2rGTFNZU26PFfxwa5dVkjelI2772nZnX6bbrEUq3o0d678u8wmuDL2ittvVjXdneeK
cGv4jpJ6U56+kS7+j118+GLXpakzHaWlp9NNY3tv+bbiYiNoQy1y30uyZJlrWmZnuym6q1iIJnop
yW2Te8bdWnnypQqzZOadokiIpSZntWN5lrxki19vNRxrUeBwnNNd+fJEY6/OejXLn3Xe/wDp9wyn
E8uo4lqqxblv7lJ26T6vpD5X7G8QycKzeBMbzMRM1/FH/wA/h9QwZ6ajDXLitvWzRgsAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeL45w+dDrZvWv1OWd4+E+j2jX
12jx67TWw5Y6T2nzifU+rZ1y9eHwzDYxxEy18+DJodXfT5o96vafWPVbjyxDn1OOzHudbM0rt2UW
iI69mVtRXZq5tREb9VUoy2iIlRbJ0UX1VZ6btTLrI7V6yk62M2oisT1c7JmtkttVMUyZp6x0beDS
RWOvdKijDimvWd3G9pNRMfRcNfvZOb9Hpb0itJeP47k/3hgjaZnbaP1XxWW3T0movbNS0W645nbf
0nrMPpXs3xamoxdJiLbe/X1n8Uf3fKsOTw4jbaXo+EarJhtGTHMxeJ6xH7Sti9Zaj6x3HM4NxXFx
DS1mtoi8dJrv2l011QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AGjxLhODieOIye7kr9m8d4eM4to9RwjPXFa0ZIvG9bR0fQXmPbDFvTTZPOJmEWS/V8bs9R43NxLL
G8eFbePg1bajU5/s0l1ceKLx1hbjwRE9mOpx0y2uRTSZsm3PMw2aaKtIjo6kYo9EXpET0hVLXxYK
xC6MZvyx1lFs0RHfaPiCnU12pLyHGNDbUajBekWma2npWN3p8+opa20e9LSyZLxExTlpM+vdOdcZ
a9tPS8MyUvFrzWlI6727u1pYxYrbVmb7x+TQx6au3Nqcl7/0rcmW9axGnwZJj1novmxnZXV0fFp4
ZxLBPgTGK8xzXr5fOH0bFlpmxVyY7Rato3iYfNuG2x56Wrqa8s2jz+7Lu8O12bS6jkwzN6THNNI6
tvrN68Y4rxlx1vHa0bskAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAA4XtTTm0OKfTJ/aXdcL2pyRGjwU362yb7fkJz9eTxxyZJjyltRXzUZK7TFtl9Lbwy06YzrHwa+
fJFd/wCVt8m0bQ0eS2qzcm+1K/an+zNZFL5M1pjFXeI72ky48eGnPkvNp27+TPU6nHpMfLXaIjpE
erk5dRMxOfN1mPeisfshW1ne1a1577Y6x5R3U0zze31FOWI6ze0byU098kRlzbxM9qrMlPDpyRMR
Md5Vt/Ihp5898mWZm1pjftE91uCt7fCI7dWeHDEW3t723l6rslqxWZnasR+SYhFbzhnfxJ2jyeq9
lcGXWZcmW0zWKxHLaI7794eJx5fpfEKabT8t8l5isddo3l9S4VjrwrRUwzSJt3tav3pdOL6Y6dXD
j8HFWm+/KsU4NRXPvtWazHquWVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAa+fXYNP9u8b+kdZBsDkZOO135cWOZn4y5Wu4xqctbe9y19Kp4njt6vi+PDm8DFMWybbzPlV
5PiGtz67UxbNbeKTtWIjaIXYpnwuaftT5tXJT3vmi1pMsrU5qIrG1V1a+5DCa7b9GFbRr5J6Wnbt
Cu+Wmk0m8956z8ZWZNorbfzcbX5rZslazPux3hUt41NTntktObJ13+zX1bek01r4/HzVm0bxPXy/
+bNfDgjVa2uOY92kdfg6ufJOKvLXtttVVSqbcta2vM7zXtHpLQy5ZtMd+vWd+7Zy3mdJHXra3f0c
vUarw7zFY5rT2hH1Lavnrgx81p3U49Pk4nE5L35MO/StfNRXR5tXnrS8W67WvfyiPSPi7uLHFK1p
jrtSsbR5Lc4RzsXBaYreP4l45esRD2HD9fnw6evvWvO3Tfr0aGk0U55ra0TFInv6uzgrXFXlx0i0
77RPlC83Yj+JW7oddqr6vHzTTw9/f6dod+L1t9m0T8pcbFSmPHER3892W0zPuz+jSbVvidkcqmfP
Sel7bekrI4n4dZnPWIrHeYnZee2Wpy8dEaml4npNZblw5qzb8M9JbYgAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAABEzFYmZnaI7yCXL1XGa0jJXT0571nbee27DiXEprp8nhbxG20W8
5cbD0ikfnKO+urTPvjoZdXqctdsmTaPSvRpWmsdZ6yztfaGplvv3lWW1tyRlz1x0vkn7Vo5atTNe
Y0+1o79V2KsZsvX7Ne5mwxnyTNvsx2iGneM/rCdRSuOsTasTt5kRFtpjqmOH4t4nk7estiMNa97R
Hwhna0iuKTEdmGWa4672nZtRele1N59Zlq6vLOSsYorEc07qcW65euzRvtXvPZy52naZ7ujr6fXV
rWdukREK8+njHgmZmPc67bq6ivVWhxxgxZLztNrT1mZ/SP4VZs0zaOvfp84WUtNsXLvtv3699+rU
z7+Jtt5qURqMnPpctaR1rMSw4ZoK57eNk6xHaJRh97Ltt7lo5Z+L1HAPZvVauZ2nFTSzMTzeJEz8
to6xPfvsZntPZ9rXxabmxzefdrv0j1dXh/BcmstW1qxTHHasR3+b0GPhGl+kWmd64dNEVjf73T7X
y8vy+Ddx6O3iRakxTH5RXrMw1/lX+3Itw2MFIraN48qRHdZi0cUjmmPen9noox1iO0fNzdXEYrTt
stcmd9aX0bJ+HePmiKTitO8TMLZ1cVjrMfqpz6ys4pjfrPRWZ9rXXptUit6zO+23VyaRHEc05L1/
w9J9ys/en1ljqdVbwYw452tlnl3jyjzbmmiMeKtYjpEbLeTXPUU8ee/+qjJpsV5rbkrFqzE1tEbT
DpYNbW21Mnu29fKWna0KbqTdjXXjld0cvQ63ltGHNPSfs2n+HUbS9c2s2UASqAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAOVxPWe99HpP8ArmP4b+r1EabT3yT3iOkesvMVtN7za07zad5l
XV5GmM9vVfEstvDx0jtaVVMlq+UJ18b5cMRvPeSuK87bUt+i2Z3PtG7zXpjkzXt6R+TXyTMzvM7t
ydHqZ+zhv1+Cv/ZuqvPTHMfOYaTMil1a1K2vHSLTELq2v+KWzThGo84rH5rq8JzedqR+ZeI7WnOS
34pYTafWXR/2Pln/AMyrKOCWnvmiPyR6O1y9585lhWJvl557Q6eo4T4dYiMvW3b3UanhldHpJtGX
e09unmjsT7eb1l4trI2t0hsZfrdNO0bzy+nzU20/+NmkzO9esz+TZxWis9dttvPv+Tn21jjaW8zn
26bTG3mp1M/Wzv3t0jyWXiKZJmsTERaZhXXDbNl8WaztWenxZLstPp5pau8frDtVrNMM5cfTfpMf
3aunxxbes9d/R09Dp8ebJi09ptFr3jtt2WyrW9wy1Jx132mK+Xq9PotT0iIU19ntLtExa3T47T+q
6nBaYvsZstZ+cT/LeMnUi0TXffo1s2m8Ws2/OIMWk5Jib5L328rS2t94Sh5TV4ppklpW6PT6rh+P
NbebTHyas8E081mZy5P2W6OFhjxNTE/hr/LoRO0Kvo9dPqctKzMxEx1la5t3tdnjnMs4noievcrO
yZjeFF1OSnNV0OG62cn1GWffj7Mz5w05joovzY7xes7TE7w0xrjPeex6Ua+j1UarBFu1o6Wj0lsN
3JfQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACrU5o0+nvlt92P3BxuM6nxNRGCs+7Tv8
2hToxm1r3m9utrTvMsonqyt7XTmcja0u3O6FMfi5t/u0/lzdJM81p9O3zdvHTwsUR5+bfPqOfX1h
dqV+3O7bs1+T31oqmI3TEM4rvCdkDGIIhlFd2daboS0NXG2bD6bufxXU1vlmu/u4us/N0+L1tTSx
kr9qk7w89j1FNZMV3jxLzvaJ8mer+LSOZqK2xZotbvljfr/89U453rXt9lse081xZtNjx7TGKu0t
DHlrevSevaN5Y6+tJ8c7VRNMt63n3ub+6/R54rERMztDYy4a5omclYmfxKcenrjtHLvtPrCnVmdb
eFe3JXmjy6eS/DrMuLVYsta9Mdt++6qLxO+0dEc8UmInr18iUfReHcXrqccb9Z27Q61Lb13eJ9nc
1Z35rTvE9avY4bTkpG8xEfB05vYxqybc07R281naGMREdoT5JQqy9mply7Q3bV3iXG1eXw7TWSka
c258t7+tpT5/BjT7MfHqndz12Z+M4lMMKyziUJJiN1WSu9fku23RaOgKNJqbaTU1t9yelo+D0cTE
xEx1iXmM1Nt3W4PqvFweDaffx9vjDbGvxz+TP66QDRiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAOJxzU73rp6z296zsZMkYsdr2naKxvLyObNOfNfJbvad1dXkaeOdpvsc2yuZVzfbfqybutwu
s5s8R92J3dvJb3tnO4HSMegtmt3nfZvYp8SZl0z45NfSK7onH1bNcfRFqnUKJr0Y7dVtq7prjEsK
0XVpEM6028mW20IHK41aPo3J6zs4ODhdcvPnvExFevNXpMOrxi/PlrTee7PLX6Pwa09uaNlKtHg9
dM3z5d7ReOu02nu0JzZMfblrv5R5uvrcdImZ26T1mYhxs1Os7RH93PZ7axuafNfLitvbaYU3yZYt
PXs9NwHhui1HBa5LVicsb81onrEuVqNNSuS8Y67dZ6xPZa59Il9uX41vEitImZme3q2Kxbxora0T
Md/ROSa4Ztkj7c9OafL5LuGYubmyX3iu/TfbdSfVnpvZLT/XZK233+Mbbva1xRXyiPk8pwbH4N6T
adq5a71n0tD1WDL4tPe6Xr0tDpz8YVnJHWEXYxbqlBedoef4tW0XraO09HdyztSZcbUz43C+ee9b
SVMaeOfqq7+jGckQ1Yz7+7v2RN/WXPXZPjci2+2yyJaVMuy+uSJlA2d+pNoVRbeDcSxyTE+TDDlt
pdRXLTynrHrDOyiyZeVFnY9TjvXJjres71tG8MnJ4Nqt4tp7T1jrV1nRL1x2cvABKAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAHJ49qfD09cNZ97JPX5PPw2uI6j6Vrsl/ux7tfk1mWr7dOM8iLdm
vfebREefRsWldw7SxqNbWbR7lPesrn3Vteo7dYjDpMGCvfbeXQ0uLlxRLRxROfUc34p6fCHYrXlr
EejqrjY8uzCYW7MZjdVKqK9VlaxCYrsnYExBMRMJRPZA8/xPHtmpP9W2xx76vhWOInvt/C7ike7N
vwzE9kcapGfhlevTaFbFo8RqJ5vy8/RoW09ek0msxHfp3dzNoLzp4zUmZpMbT8HJyYJi20X2n0lh
ZY1li/RaidBF4w2mK3jrHaFGp1lN+tptPp5IjBkid5mIp16TKu0abBPv33vPlM7z+iPdFNcWXU5I
tkrNce/b1W5db1nTaf3ax9q0fxDW1ebNk2phty1mOu09VOm8W19orEz23j1TwfSeERFuEYMddptW
d43dvBn21eKJ75KbW+cf/JcTgMxXTb3nbljz+TpcPmc2uyZO1KRtVtGVdi0bx07qJnllsRO6rNTe
N4XVamsy8mnvPwc3R2jPwe8TPbdlxXNOPSZfhWWpwO85OFzv57qrODkzeHntSe8Sn6Rv0a3EZ218
8nXekfr1a0ZLVnqx19dWb6demXybOO7lYMvNMdW9S/VVLo0us7tPHdtUtEwJiZU3jq2Jhham8CVG
PNODNTJXvWd3qcWSubFXJWd4tG8PK3pPd1OB6veLaa89Y61/u2xfxh5c/rsgNHOAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAANLimq+i6O0xPv392rdeZ4rq/pOqnlnelOkIt5F8Z7Wj27I2I6sb25YY
V1ImY3dbQ08LRc23vZp2j5OJG+XJWle9p2h6HHtbJXFT7OOIpX+7TxT31j5rycdTh+Dpz+XaG/sw
w18PHWseULN2trBE9UcrJKBhFU7JAQi0dEomegNDUYovM7x3jb5tO1ZvpbaTLtzRExWfWPJ08kbT
Ex5NXWYYyV5omYtHWJieyeDzuizfRs19Jn6TM7Ru1uMcJxZqTkw+5f4ebqa7SV1MR4tdrx2vEfy1
axqsNOTLjnLXytVXi3Xj8+nmsxTLM16d5npPyUzpekTtSK+U7vS6vQ/SYmK1vWPS1HOn2dvvvvE/
tDO5XlcO+LbfHSd/W3o6/BdDOXPTnj3Kz38rS6Wm4FNrRyRzTH3p6RH/AKvR8L4dXSzE3jmtHn5I
mbfqLV+m4dbLSsZInHjr3iI6zLpYaxS01rHuxHRHiT9mv6s67Vj1aqL6326MrWiYa+/Q54BxPaGe
XRZpj8MquB4+Xg8zPnB7SX30to379GxpK1xcHiKz5IS8xr8PLPixH2bftLTy05o6dHYyVjLhy0t1
izjZa3pMVv3iO/qz1G2L+NbSajbNyW7xLsY8kTDz+fJXFqKZN4iZnafi6WHL0iYlStI7OO+7axW2
crFl7dW9jvE9ULN+J3ZbdFGOy+AYWpEqN7afNXLj+1Wd23KrJVMvCzseh0+auow1yU7WhY4fCdV4
OadPefcvPuz6S7jol649Tl4AJVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAV581NPhtkvO0R+4NPi2
r8DB4dJ9+/7Q83Po2NTqLanNbLfvPaPSFDHV66sZ5ET0hRknyW2lTtMyouz0c8usx2n7s7vScKwx
zc1vu/y85p+maJh6Th+SOWeveXR4/wDLm8v+nX5mUWa9bbrInolmu5jdTNkxYFk2Isr3TuCzeGMz
+THdEyDDJO9Ja823rt2XWnya946pGvktDXta0ztWu/ybvLE9dkcoOf4GbJPWK1j49VmLh9JtE33v
Mevb9G7WsW8l1ccREISophiJ2jpDYpijbaOjOuOJ8ujOdqxsgVcsUjaETYvbaFFrgu5lVsm0yUtu
ryg43H5m+GIj1XcJzePoL4pnrWGtxmfchr8JvfHS1622if3QljzTTLes+qrNjrkiYtCzPMxnm095
YZJ6boS5teB49Tqscza97VtvWvlv8V/FOF34RrIxTM2xXjelp/eHoeA6XnzReY3ivX/0dfivDcfE
9HbDbaLx1pb0lOs+jO7K8Lis3cN+0NKcd9PmthzV5clJ2mF9J9GHHVL108dm1SznYr/Ft0tuhLb8
mNohFbMhLWy0mJ3rPXvDvcO1karBG8/WV6Wj+7kWrvDDBlvpdRGSnbzj1hpjX4z8mOx6UYYstc2O
uSk71tG7Ns5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZ2jeXneJ62dVl5KT9VTt8Z9W9xbWclPo+O
fft9qfSHEU1pv48ftYST23ZTDC/p0YtlVuvVjMbM5+LCZjYGWGdrTPxiHY4ffaf3cjTxz1v6xMS6
Olty2iXVj/Dk8n+ndrkhnGRo1v8AFdW3RCrZ5uiYsqrboncSu508yjmZRYQt50TfowYTbYGVrKrT
uTZjvukQnYhMIGVY2ZxPVWyrHVCWzXpVXkt3TE7Va+W4K7X3jv1auTNy3jdba0RZpamfroQN7Hk3
6wr1GTaN2OOJiu6Mu98NvgDi8Wy74d/yZ8PiPAiO2zU4nb6qIn1bugjfFE/ASp1ke9u15mbbRDZ1
Mb823kx0Ontn1OOkedoJCvT8I03gaKsz9q/WW+isRWsVjtHRKyrhe0XCfpWL6Vgr9fjjrEfeh5fF
feH0V5Dj3DPoOo+k4a/U5J6xH3ZZ7z3228evytOk7NvFbo0cdols47bSybt7HbddHVqUs2aW3Qnq
xVeu8LILR3SlZw3V/R8nhXn6u0/pLuPMXjeHT4Zruf6jLPvR9mZ8/g1xrvpz+TH7HUAaMAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAABRq9VXSYJyW79qx6yvmdo3l5viGs+maqYrO+OnSvx+KLeLZz2te1rZL2v
ed7WneZYWnZl5K72YV1xEyxmeqJljzIEWlVkszvbZp5soN3h2SJz3pP3odCnuWmPRxuERfJrZmtZ
mtY96fR28kbX3dXj/wAuTyf6bmK+9YX1s0cNtm3Sd4LFY2K23W1s16StiUJW7bp22RW3RluBuruz
mWEgrmCGWyNkoExKE1QlPmsqRDKeyBjaejWy2W3ttDUyz1QKslvehVqKTNosyyTvELabXptIJpaP
B39Ia2mz+JGpr51jdZefDx2hzuHZObNq58poJaGtjxJ2+LoaKP8ADRPo5+T3skx5OhpOmC0fBNQ0
5yTbn+bt8A0u9raiY6RHLVwY62mI6zMvaaHBGn0mPHt1iN5+aYVsACBXqMFNTgviyxvW0bSsAeE1
mkvw7V2w5Ote9besJx2er4rw2nEdNNekZa9aW9JeQjnxZLYskTW9Z2mJY7zz26fHrrdpbZsY7NGt
mxjvso1b9NmUwpx33XRO4K7VUTE1nmrvEx1bVo2VWiJE/XY4frY1WPlt0y17x6/FuPM0m+HJGTHO
1qu9pNVXVYt46Xj7VfRtnXXL5MfzexsALsgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHM4jxOMFJphmJv529Dq
ZLfjDjPEIx450+K3v2+1MeUOHSOWFc3nJkmZnf4yujpVlqunOeFpV2nctLCZUXRM7MJtsWlRkv3Q
ky5NmpWt9RnrixVm17TtEQnJabXisRMzPSIew9n+CRoccajURvqLx5/chfOest642OGcIpoOG2w7
ROW9d72+LQvXevyejcPUU5M+SvpLeOataraw2a0dLbLqTtK1G3Es4lVWWUSoldFtmcXUbpidgXzK
GEW3TuCUSncnsDFMMLSms9EC6J6FpVzbZE5ALy0809ZbFr9GtfrEoFMzuuwz0Ueey3HbaBLDXe7i
tMOfwWnP9I+NZbuttvhs1uBRtXPb4SDm3iIvf57N7Dbl0VrS5+XrltEd+Z1Jx7cNms9N4TURRw3T
+PrcO3WszEvZOD7P6aYiMlvu16S7y1QAIAABxOPcLnUY/pWCv1tI96I+9DtgmXl68Biy7/NtUu3+
O8HnFa2s0tfd75KR5fFyMWTdhrPHVnX9R0cd21S3Rzsdm1iuqs256wrmGcT0RYSx5d047X02SMmO
esd49YRE9WcdSXhZ2O1p89NRji9J+cei1xMc3wXi+KZj1j1dTTaqmor06WjvWW+ddcu8XK8BZmAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAMMmWmKu952UZ9XFZmuP3revlDTtzWnmvO8q3XGmfHb9ZanV3yxtWeWn7y4es
vPNtDqZJ6Ts5mppvdl/XXRMyfGvSNlu/RVvtOzLfoipLT1VTKbSpvfogRkvtDVyZOhkyvQcA4Dzz
XV6yvTvTHMfvK+c9U3rkW+zvA/D21urr789cdZ8vi9KDb45rejl8Rry6iJ/FV1HP4vXbBTJEfYt1
+UpiHM295bXsqrO9l8QkZ0lZEqqLeyBZHZLGvZkhIndADKJ3TMoqWQMZ6pjsxll2jsCLSrmU2lFY
36gieyu0LJk3jbsga0wdqzK20QpyztQGprL/AFMrOE05NLkt6qdVWZxNrSe5o9vWBLiUjnzXn0vL
q555dHt8HOwV928/1z/LpzXxbYccRvzTB+jucOwxh0dI22mY3ltIrHLWIjyjZKyoAAAAACJiJjaY
3iXleM8InR5J1GniZw2n3oj7s/8Ao9Wi9a3rNbRE1mNpifNFnVs65XhcWTdt47bnFuF24dm8TFEz
p7T0/pn0a+HJux1OOrOux08d1ndqY7tillVkzExLOk7yd4YxGwluViJhE45raL0na0dtlWO0+bZr
1TKi+2zptZGTamT3b/tLacvJjiY3XaTWdYxZZ6/dtPm1zrv1z78fPcbwC7EAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABhkyV
xUm152iAZWtFazNp2iGhm1Vss8uP3aevnKrNntqLdelI7VRHRnrX/HRjx/tZREVjZXeybW6KbWZt
pCZ6S08tN7Nmbb7zCrJtyoS5145bSx5mWafelr3tsKmS/o08uXyhlly7RPV2+AcBnPNdZrK+53pS
fP4ytnPVda4y4BwHxOXV6uvu96Unz+MvVxG0bQRG0bR2G0nHLb2gCUDX12LxtFmpHeazt82wT1gH
mMN4tWs+rcr2aEV8DU5sM/cvO3yb+O0csLUTSdrLphRE8tlkZI7Atr2ZMazDJVKTYSCawi7Ksq7z
1QERvLK3ZGPrKbyCrbdnMcsbeaa18/RhvvM7oGEwTG0JmYYTIML22a2e28xELM19oURPNO4lOem+
n3ZY5+prVnMc2GYU4/L4A0a15cNf6rz/AC6fC6+NxCPOuOu/5tHJTbHj+F5/l1+BYumXJMd9o3/d
MRXYASgAAAAAAABhlxUz4rY8lYtS0bTEvH8R4ffhmo6bzhtPu29Pg9mq1Gnx6rDbFmrzVsizq2df
zXkMWTeIbNL7tbXaHLwzUctvexWn3bmPL8WFnHVL326VZ91MfFVjvvVlz79kLrcf2m7j7bNHH3bl
J2SirLQoy4t1++7G0dBC/RanxI8PJPv18/WG241+alovSdrV6w6mDNGfFF4/OPSW2b1zeTPL1aAs
zAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAVZ9RXBTe3WZ7R6iZOpzZq4ac1p+UermZMl89+a/byj0Ra9815ted59PQ32hlrXXRjH
DpCLX6ML5NlNsm/ZRqstfdXzbsZt06sLZNvNB1Za8RDWyZdo7q8udq5Mu/mIMt4md2lmy7JzZuWJ
dHgfBL8RvGo1MTXTxPSPx/8AstJ1XWpIs4BwSdbeNVqq/URPu0n73/s9hEREbRG0QUpWlYrWIisR
tER5JbSccur2gCUAAAAPM8Sry8Uyz67fwuxbzVPGsE49XGbvF42V4M0TEL33ERnktsxpk3sumK2j
admFdPFZ33VS2Mdui2J3UU6LYlFSsN2O5NkCyJ6K7T1TEsbAsxdpReerKkTFGMxvYEz0rsqtbbpC
b2VT1QEzuwtbaGUxspuJU3neWdKoiu8rq12gCI92YatLcublnzbEz1aOptyZqTuDHLfxN6R0+t5X
qdJhjBp6UiPLeXl9NSMnEKxHa1+bb8nrlvxUAAAAAAAAAAABTqtNj1eC2LLXeto/R43VabJw/VTh
ydY+7b1h7ho8V4dXiGlmvbJXrS3xRZ1fGv5rzeHN02bEW3cys3xZJx5ImtqztMS3MeTeGFjqlb2O
8btql3NpbZtYsnSBLeiWfdTjtutid+ghherHS5p0+f3vsX6T8Fkw181d4lMvEWdnHaGnw/UeNh5L
T7+PpPxbjdyWcvAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAo1Oprgr63ntAmTqdRqK4K9etp7Q5d7Wy2m953lNrWyWm953mVd77R0
Za1104xxlN9lV8qnJl2a9s3xUXX2ybsJyRDWtl3YWydEC+2VRkzeW6q+T4tbJm+KRdfK1cmWZnlr
vNp7RC/R6HU8SycmCk7ed57Q9ZwvgOn4fEXtHi5/O9o7fJaZ6z1uRyOEezVstq6jiEbV71xevzer
rWtKxWsRFY6REeSRrJxz22gCUAAAAAANbX6aNVpL0npMRvWfSXlKamsRMVvXm+EvZXjmpaPWHzfL
oNRjzXicfWJ8phfPxFejx72x7xMzK+sXiNoiXlq+Pi6fWV/VfTNqfLJl/WTg9Pji8R70LqvMV1Gq
j/zcv6yz+lanzzZP1lWpelTET6S81Gp1P/Gyf90s412rjtnyfqql6asREdWM9+jz9eJ6yP8Az7uh
odZqMt458tpB1JvEViI3/RhzRt13/R1MNaziiZiJn5K9ZNceKZiIiQcu/WekT+iYrWI3lzdTrs+8
8uW0fJzcur1Np/zsn6g79phVaIeetqNR/wAXJ/3SwnUaj/i5P+6UD0ldonum161h5mNRqP8Ai5P1
lNtRqJjacuT9Qd22WN5aGeZyZd/KHJy59RHbLf8AVq31Gp/4uT9ZEvS8Lr/vSs2npzRtL1z53wK+
oza/HW2XJNd99pmX0Rb8VAAAAAAAAAAAAAAcHj/C5yV+l4I9+v24jzj1cLFk8nu5jeNpeW41wmdL
knU6ev1Vp96sfdn/ANFdTrXG+eq1q5F2LLtbZoY8m8d11bbSydErsYsm+zZrO/zcnBm226uhiyRK
EtrvCrJDOJTeu8A1MWX6Lqq5N/dnpb5O5ExMbx2cPNTeJb/DM/iYPDtPvY+nzhri/jDy5/W6AuwA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAa2p1UYo5adbz+xbxMlvqJ1OqjDHLXree0ejmzNrWm953tPmTPWbWneZ7yoy5YhjrXXTjH8s75N
mtkyxt0VZM2/m175N1V03yTKubMLXVXybeYLLX2VXy7eam+b0bOg4VquJW+rry4/O9uyZOq3UjVm
9r25axMzPaIdvhns1kzbZddM0p5Y47z8/R2+HcF03Doi1a8+Xzvbv+TotJnjDXkt+K8ODHp8cY8N
IpSO0RCwF2YAAAAAAAAACvUZYw6fJkntWN3k8dfHz2vLucdz8mkjFE9bz1+UOZosX1UzPm0nqI/W
MYo9FlcPNklfFGeH/NshLGun+Cz6PtHZtVZWlRLS+jxPkRpIn7rdoupHTdA5s6SI+7H6Mfo+32Y2
+To3neSIiZ7A0IjPXpXLePlMotGW3272t85datKzHZjbTVnsDj+FG/2Y/RlGP4R+jo20u7H6N1Ql
o+H8I/REY957R+jpfReiK6eOYHLtj2tttH6KrY/6Y/R2c+kjeJiFVtLG24hxpw7/AHY/RRkw9O37
O99Hrt1YX0tfOBLjcGp4XF8c+u8fs9c4dcVcGemSI61nd3IneN1orQAAAAAAAAAAAAABFqxes1tE
TE9JiUgPKcX4RbRXnNgiZwWnrH4XPi28PdXpW9JraImsxtMS8pxXhF9DecuGJtgmf+1TWW2N/la1
L7N7T5e3Vy6W3hsYcvLbqzbO9jvvCzvDR0+XeO7crO6FmGSvRThy/RtVXJ92elvk2rRvDUzU7pl4
izsd2J3jeBpcNz+Lg5LT7+Pp+Xk3W7js5eAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADs0NTrN96Yp6edkW8Wzm6+LNTq4pvTHO9vOfRoWtt
1mes95YWvs1s2fZldddOczLPLn2ju0MmebT3YZc2/mpm3qqllN1drsbZIhr3yzvtHf4AsvlYYseb
V5Yx4KTe0+UQ6nDvZ3UazbJqd8OKeu33peq0eh0+hxcmnxxWPOfOfm0mP+steT/ji8N9mKY9suum
L37+HHaPm9DSlaVitKxWsdohI0Y22gAgAAAAAAAAAABXnyRhw3yT92Nwef4xm8bVzET0rPJH5d12
CvLhho3rN9RWs9Z23n5y6O21YhrVYbdGOCfrrLPJRpv863zVS6FS09SvZj3lVZZRdPSqmnSWdrIE
ebOkK4ldTsgW1WKqd1oMZhEVZyRAImOjGI6rJ7IiATNd46qL02bHkiaxaoNGY2n4ImPgtyV2n0Vo
Gvlx7x2beiyTk08RPevSVUxux00+Fn2n7N+n5rRFb4AAAAAAAAAAAAAAACLVres1tETWekxKQHlu
L8InR2nPp43wz3j8P/s5dLveWrFqzW0bxPeJeV4xwmdFec+CJnDM9Y/CrY1xv8qvTZ+WYdbDk5oh
5zHk283U0eo3jaZZ2N5XYjrCnLSJhOK+8d1kxvCqzSwZvousrb7k9LfJ3nB1OLeJdLhufx9LEWn3
6e7LXN9Ofy5/W4AuxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAETaKxMzO0Qi9646Ta07RDmZ9VbPbaOlI7Qi3i+c3TPUaqcu9adKfy0722ZXvFa9
XO1OrjrESxt66ZJmcjPUanlidmhkzTZVfLN5VWvsC2b7R3U3yqrZZtO1esz2h2+F+zWTUcuXXTNM
feKR3n5+iZLVbqRzNJo9TxHLyaekz62ntD1fDOA6fQbZL7Zc/wCKY6R8odLBgxabFGPDSKUjyiFj
SZkYa3aALKAAAAAAAAAAAAAADQ4pl2pTFH3p3n5Q33E12Tn1eSfKscsLZ+orS00eJqbW+Lfnu1tF
XaJnZsz3WpCfsyp00fWSvmPdVYOmSUDd8kR3InoQosy7JmUX7MdwZ17ro7KKT1XRPRAsrO0rYndr
79V1ZBaQiJ6JgCSIJASwrO07MpV2nqBlrv1a1o2bf2qtfLXaQUTO0sb05o3jv3ZXhjS20xEphW5h
yeJjjf7UdJWNKLziyRePsz0lux1SgAQAAAAAAAAAAAAAADG9K5KTS8Rato2mJZAPIcU4ZbQZuekT
OC3afT4NXFkmlntc2GmoxWx5K71tG0vHa/RX0GpmlutJ61t6wrY2xr8dXS5uesN+tt4ef0eaa223
2dnHk3juyreM81OaFGiy/RtZET9jJ7s/2bdutd2jqKeic3iNTsd8a2h1H0jTVtP2o6W+bZbOO+gA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABje9cdJt
adohGTLXFTmvO0fy52bJfU23t0pHaqLeL5xdK9Rnvqb+cUjtCi94xxvK3JetKuHrdZvaa1ljb10y
cnIs1Wt3naJc++TmVWvMz1YWybfMGdsm3eWek0mo4jm8PT0mfW3lDf4V7P5tdMZdRviwfvZ6/TaX
DpMMYsFIpWPTzXmf+steT8jn8L4Dp+HxF77Zc/4pjpHydYGjC3oAAAAAAAAAAAAAAAAADG9opS1p
7RG7zszN6WtPe0zLua+3Joss/wBOzhzG2OsL5+IrY09dsSyYRijbHEMvOChb7KjF0yS2LQ169Mso
S24noyrPVXWejNVKbTuw3T3REdQWU6LYlVvsyiUDPfqupPRr79VuOQX1lZEqoZxIMksd0gT2VT0l
bPZVbuCaW8i8bwr32WxbcGnkjaZa9p2ndv5qbw5+aNugLItF6TEtvTX5sMb969HMpfazc0d9stqe
vVZDdAQAAAAAAAAAAAAAAAADV1+iprtPOO/2u9bektoB4TJTJpNRbHkja1Z6uto8viVht+0HDvpG
H6Tjj6zHHvbecONw7Ltfkmeqmo6Ma69DXbbZTkr1mGWO3RneOaGbZRoM30fVzSelMnT83aef1FZ7
x3h1tBqfpGnjmn369LNc3sc3kzy9bQCzIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAa+q1dNNXr7157VhGp1Xh70x+9f9ocy283m1p5rz3mVbrjXHjt91lz
5c9+fJ1nyjyhdM8lZlOOIiqrUXikd+kMreunnI5XEdX4dZiZcG+XmtNl/F83PeeWWHDOGanieSKY
q+5H2rz2hMzWd1Iqx1yajJXHhrNrW6REeb1nCPZumn2z62Ivl7xTyr/6uhwzhGn4Zj2xxzZJ+1kn
vLoNJnjHW7TbbsAszAAAAAAAAAAAAAAAAAAAAaPFrbaSK/itEOXt0rDf4xb/ACa/GZacRvaF58Q2
IjasQnzPIhCU92tMbZGzHmotG10C6nZkwpPRmipIllEbMIZIE7solgmJBnCyk9VMM6z1BtVllEqK
z0WRILYlluriWcSDJVbusV27gwInaSWM9ECyZ3hqamnSWxFmOSOaqRx725bNnSZNs9J+OynVY+WZ
YYr7TE+nVaIr0Ais81Yn1hKAAAAAAAAAAAAAAAAAABExvG09peU4nov9n66L0j6q/WPg9Y1OJaON
ZpL0+9HWs/EWzeVz9PbmrEtnyc3h9reHy26TWdnSr2YX6657ijLXpLX0+onSamL/AHJ6W+Tbv2aW
ekTv16JzeI1Ox6KJiYiY7Slz+E6jxdN4dp3vj6fl5Og2clnKACAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZ2jeQRMxEbzO0Q08uqtkma4ulfO3r8lefUePMxWf
cjy9WvlzVxV6T1Z61/x0Y8f7Wc7Ur1lqVy+LqOWJ2hp6rXddon5rOF1tfmz5OkT0qzb8dWbxjp1c
biuuilJ5Z6r+IcQrixzEy8zl1E6rNt1tMztFY81sztU1eRucN4ffi2p5esRM72n0h7rS6XFo8FcO
CkVpX082nwXh3+z9FWLxHi36328vg6TZyW9ABAAAAAAAAAAAAAAAAAAAAAADj8Unm1tK/hqppHvw
y1k8/EMk+m0GOPeafiFpCZYwolnXspvHvLa9mF46gmnZmwozRUiUCBKYYsoBLOFbKAX0llEqqyzi
QXRLOJVRLOOwLIljZMEgrlhKyYYTAK5nZPN0RZjugUanHzVlz6xtLq361c+9eXItPpXX0dubTU+E
bL2lw2++O1fSW6m/VYAISAAAAAAAAAAAAAAAAAp1GbwcfTreelYEydcuMcRrM/L9nnlsV6wqpi2r
tv133mfWVkRyRtEdGFva7MzkYZNoamWN4bV4mYa9qztKIujhVppxGI8r1mJegeZpknBqKZY+7L0t
LRekWrO8TG8Ns/HJ5ZypAWZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAADS12fp4VJ6z9qVuq1HgUiI+3bpDl589cOKZmevqprXPTbx477rDJlrhr1nq4+s182tMRP
RqaziXiZJrWekNG17ZbxWJ336M5LXRbI3dLTJrs07RMY6fan1dHLrowY+X7MVjt6N3R6Kul0EbWm
s7bz8Z+LnabQX43r7Y53php/mXj+Dnv0f1JO1x/8ZxbUzj02O15mfLtD13AvZqnDds+pmMmo26el
XX0Wh0/D8EYtNjilY7+s/NstpOOTW7QBKgAAAAAAAAAAAAAAAAAAAAAADG88tLW9I3BwJtz6nNf1
vK/DHVqYJ3pzT5y3MPZeojOWMQylEKpTVjZnDCwkqzYQyRRICATCITAJZQxhMAshnEq4ZQC2srKq
qrIBZCWNZZgwswmFloVyCu0dFcx1WyrtCBhv5NTPHXds2U5o3hIz4ffbPt+KHUcTSW5c9Jme0u2v
VYAKpAAAAAAAAAAAAAAAAYZctcVOa35R6tLrltN795/YvknNqrfhpPLH92V5isd9mWq6fHjk6rn0
ZxG8KK5Jm/wbVZiYZtqrmkqL023bkxvCiY3lJHNyRG81mHS4Rn5sNsNp64+3yaWaNrzOzHBl+i6q
mT7s9J+S+ay8mex6EIneN47SNXKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAImYiJme0JafEs3h6fkidrZOn5eaLeJk7eOdm1Hi2vmtPTry/CHmOJcUvmvOPF1n09Pm
6HF9ZGm01qxO3R5vSY7XwzmzTy47zzTEd7en5Mfvt2/PURWdo3tvPrPlKymbktFqTtMTvHzbOLDG
f63JXbFX7FdnoODcDprZpq9TjiMMTvSn4vj8l5fxnrk91saPSa7i2hpOfbTVt5x1m0fLydzR6PDo
dPGHBXasd585n1lsRERG0dIF5OOe6tAEqgAAAAAAAAAAAAAAAAAAAAAAADX11+TRZrf0y2Gjxe22
gtH4piP3TPpXKwxtjhuYo9xq442iIblI2pC1RET2ILd9kxCqRjZmwlCSEohIJAQAAJZISDKGUd2M
MoBnVbVVCyAWVWeSuqyOwIlXZZKue4MJV2WWYT2QKbKL9YlfdRdIo35b7/Hd3KTzUrPrDh27uxpb
c2mpPwX/ABX9XAKpAAAAAAAAAAAAAACekTIp1eTwtJmv+GkyJn1oafeazbfpMzLR4jq/o8b823zX
6XNF8ERCvTcNpxLV5LauvPhx9Irv3lhztdtv8TtaWLicXrt03jzjzb2k1nid56ty3s/w+a7Uwzjn
1raejlarhmbhl/FpbxMO/fzj5p/ixSeXOvTtRfeI280ZI26tfDm3pWe63LaZx7qtGvniJ6tPLvOK
fOa9WzbJvTbza02jl3n5SSljscK1MajSxWZ96nSW88xw/VfQ9XMT9nfa3yemid43jtLeXsce88qQ
EqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADia3UTm1l4j7OP3Y/u
7Vp2rM+kPJW1PhYcmS0+9MzKm/jbwz31weMzbV8UppazPL9q0/BF4rk1GLDSNqxPWPhCnHmnNrtT
qPKteWPm6U6OdHaZvO+SaRNvhv12Ub/q3FhtrNVj0uKOt56z6R5y9zix1w4qY6RtWsREOJ7L6OKa
S2rvX6zNM7T6Vh3mmZyOfya7eACzIAAAAAAAAAAAAAAAAAAAAAAAAAAczjVvqMVfW/8AZ03I41bf
Lp6/OVs/UVrY47NyOzUxd4bUJpEbb3Z7IiOrKIVSjZhMLJYyhKIgmGUQSDESIEbJEgQmCITEAmGU
IiGUAyhZVhDOoM4Wx2VQtqBKuyyWEgqlhKyyuyBVaGtkbNmvk7A15l1eH2300R6TMORPSXT4ZO+O
8fFefEX63gEAAAAAAAAAAAAAAAq1WPxdLlp+Kkx+y1Fvsz8gjhaDauGK8sx07y3OE3m1tT6RaP4c
vU6yMNKUx73zT0ilY3l2eF6a+m0kRl/zbzz3+Ez5M8z26fJruW6wzYq5sV8d43raNpZjRzPPaTmx
5b6bJ9rHO3zb2WJ8GWPEscY9bgzxH2t62n19GWW0eHOzHU5XbjXZ1x8WTnz2iZ7S2M1IjH2+LX0V
KTqs8zO9ot0j8nUthi1J3UaOFMTfLFo6xMbS9BwHWTqdHOO8+/hnln5eTjYMFo1WTH5VnePzXcIm
2k4zlpPSmXy/hfF5eMfJns69OA2cgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAADG/2LfJ874rW845mubliY7bPoto5qzHrDz0+yePNF41OotaJ7RWNtpV1OtfHqZ715fhu
j8adNpcVfeyzE2/vLuanhOu1nEctIxTTFa/+ZPbZ3eHcF0vDbTfFE2yzG03t32+DokynXl9+leDB
TTYKYccbUpWIhYCzEAAAAAAAAAAAAAAAAAAAAAAAAAAAAcXjE/4zDH9M/wAu04XF5/3jj/0f3Wz9
RUYmzDWxS2I7FSyjuzY1ZKpRKEygEwiWUIkGIk2QJNhKQhMIhkCYZQxhlAMoZwwZwgWQshVCyATL
CWc9ldpBhZXLOVdpQK7NfJPRdaWvknoDVvPvOnwuel4+TlXn3nS4VPvXj4QtEV0wAAAAAAAAAAAA
AAAAAVV02CmTxK4qRf8AFFeq0AAAanEsfPpZmO9Ji0NDLfkwdOsulrumiyzHlVzJrz4Ovoy26vB8
cTBa9NffLtMY77Rv8Yegx5ImkKdJoY1HC81Y+3OSbVn0mGGkmbY45u6tnrrTOu2xGO0RxCd+nNVj
qKxTV1vH2pjaGtnyzXXYdo96ZmGXEMk15b7/AGZiVerWPTYckZcNbx5wzc7hGbnxXxzPWk7x8pdF
0S9jh1OXgAlUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAcPjEf4/FP9H93ccXjMf4vDP9Mx+62fqKrx+S+GvibEFSsqyYwlVK
ZYsmIMoRKYJQIPIEiQ2ATCUQygCGUIhMAyhnDCGUIFkLIV1ZxIMpVWWSrsCuyqyyyq09ECq8tfJK
66jJ2Bp5J6upwn7dv9Lk5J951uE/av8AJaIrqAAAAAAAAAAAAAAAAAAAAAAq1Mc2myxPnWf4cmtu
XT9fR0tffk0WSe28bfq5Wbamm3326MtunwfK6PCv/AxPraZ/dz9PO97/AOqf5dHhdZrw7Dv3mOb9
XOxRFM+avpe38mvkPHf/AFWlrKba7Tzt99ZxKkfR7euyNXMTrtPHfa0z+zPiM/UR8Zj+Wbdu8HpN
M2bfzrV13M4dO2pyR61dNvj44/J/oAWZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADj8bj63BPzdhyeNx0wz8ZWz9RWri7Nmv
VrYu0NmqaRZHZlDGGSiwxZSgCEkCBCQSCQBMJRCYgEsoYx3Z17AlMIhlCBnDOGEM4AlhZZKq4KrK
7LLKrIFN2vdfZReAaObu6/CO9vk5OePR1uEd7fJeIrqAIAAAAAAAAAAAAAAAAAAAAGtxCk5NFliI
3mI32+XVyNTyZOHTee946PQKPoeDffw4777eW/yVs60xv+ZxOnr4Okx1t05KRv8Ao41Z5q3yed5m
XY1szXRZ5jvFJ/hxItP0aOSN9q7yrtr4f2tHFM5+KT16Yq/vK/iGSbXw4vO14UcPx5MGfNbPG18m
1oj4THRsTw7VanPXVYpi3gzMcnrvCnG11JOupwuN8+a3pEQ6jT4divjxWnJExa09pbjbM5HHu90A
JUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAHM41H1GOf6nTc/jEf4Ws+lls/UX45uGekNujTwdm5RNIthKIZKLDFlsiQIShIC
EgCUJ7AmGTGO7IDzZQhMSDJMMYZQgZwzhhDOATuqssmVdgVWVWWyqtCBTeVF19lF+wNLNG7q8I+9
8nLyupwnt+S8RXUAQAAAAAAAAAAAAAAAAAAAAAAItWL1mto3iY2lyrcLyUxzix2ia2nvPeK+jrCL
OrTVnxpanhuPPemSs8l6RtE7dJj0ldpNP9GwRSZ3neZmV4cR/Vs4AJQAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANHi1d9H
M+kt5ra+vPoskfDdOfqK4mn7Q3aNHBPZu0W0RdDOGFWcKLCJZeTGQQlCQSgASBsCYZQxhlAJTAmA
TsmAgGcM4YQyjsgRLC3VnaVcgwsrt3Z2V2QK7tbJ1bN5a9waeWO7p8Knt8nNyebpcK8vkvlFdQBA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK9RXmwZI+ErEWjesx6wQeZwejeo0cccuW8
elpblJaaRGxVnCuss4ZrMvJEgCAASISCQIBlCYYpieoM0wx8k7gzIRueYM4Z79FcSy3QEsLJmWFp
BjaVVpZWlXMoGNmvkXXlr3kGtknu6XCf7OXkl1OEdl8orqgIAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAHmskcmtzV/rls0U62OXiWX4zErcc9GmkRfWVkSqqziWayxCPIANwBIhIJSxS
CRG6dwZwlhEs4BluMdzfqgZxLLdXuy3AmVdpZTKuZBjaVVpWWV2QlhZRdfZRcGpl7urwfrzfJy8r
rcH61vPyWitdMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHA4nHLxKZ9awnH2ZcY
jbW459aq8fZpfiI2IZwrqzhmsz3Ebm4JN0AMhCQSIASndiAziWUSriWcAyRujc80DM3RCfIETLCW
UsZEsJYSslXZAwlTddPZTkBp5e7r8Gj6rJPxhx8k9Xa4PG2C8/FaK10QAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAcfjcbZMFvnDWx9m5x2PqcNvS+zSxT7sNPxH62YZQwqzhRZO6UCB
KUAJTux3SDIRuAncQAmJZRLBMSgZ7iIAZRKd2DICUSlAljLCYWMLIFVukNfI2bNbIDTyT7zu8Ijb
Sz/qcG/2nf4T/wCE/wD2WnxWt4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHL9oL
+Hw2cm28VvEuPptfgyVj6yIn0no7/FtJfW8NzYMe3PaPd39d3iMug1WktNc2C9dvPbeP1aZ9xF+v
T471tHu2iflK2HkqWmvaZj5Surqc9Ps5bx+alTHqYHm68S1Vf/NmfnC2vGNTXvyT84Ql6A3cSvHM
sfaxVn5Ssrxyv3sM/lKB1xza8bwT3pePyWV4tpZ+/MfOEjfGrXiGlt2zV/PotrqcN/s5aT/+wLRj
FontMSlAlKEgndO6IAZQljDIEgeQljLCzOVdkCu/SGrkbF56NPNeKxMzMRHxENe0+89DwuNtHHzl
5PJr8NcnLW3Pbf7r1nCZm2gpae8zMrz4i/W6AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAETETG0xukB4HVaeMHEtRi26RedvkyjBSfX9W77QYvC4xz7dMlYlrU7M929dWJLFc6aPK0q
7YLxPS0S22FlP6q38Zac0yR92s/KVc3tHfFf8tpbcsLRvB/dR/8ALLVnU0r9uL1+dZI1mnmdvGpv
6TOy6ym+Oto2tWJ+cJ/tW+KLK5KW+zes/KU7tG+h01p64qx8Y6NXNo6Y+uPJlp8rLf0rfG7MXtHa
0x8pZxqs9e2a8f8A7Oj7HaTHn0+f6RWM23LETfr6vRW4PoL99NT8ui7F4+vEdXXtnt+fVbXjGsr/
AOZE/OsPS29nuH27YrV+VpeV9pdPXhOtw49NG9Mld55+vXcTPd42I47qo7xSfyWV9oM8d8VJ/VxM
d8l46xWF9cV7en6o/qLfxp2I9ob+eCv/AHMo9op89P8A/wBORGmyT5R+qfo2X8P7n9Q/jTsx7RR5
6ef+4/8AuHftg/8A6cWcOSO9J/WEbWr3pY7Efzp2Lcfv5YK/9zWy8d1E/ZpSv5Oba1/+Hb9lc+LP
bFt87I7E/wAabWbiurvEx4nL/pjZzc2bJkn372t85ZXx55/BX85lucC0vPxnTxlnnjm32mOiZqUu
LJ2p4TwnVavNWaYbRTfre0bQ99pcH0bT0xb78vmtiIiNojaErMwAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAHnfarF7umzRHaZrLjYrdIen9ocPi8JyTt1xzF4eUw23rCm3R4r6bMy
wt6kdTaWLdjswmNoZontsCm0K5XWjopnuDC0dGpqG5bs08/daKV672MjbSaif6oh6Z5f2LtvptRX
0tEvUN3Jfo8f7cYve0eX4zV7B5z20xc/C8eSPuZIRficfXlcPaG7ino08HWIbePpLF2NuiyOyrHK
3fZFSwuovHVfaVF4QK5YWTM9UT0EKry6Ps1Tn4zjn8NZn9nOtLseydObiWW34cf918fWfk+PYANn
KAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAq1WKM+ly4p+/WYeBxTNd6zG0xO0
vobw3FcP0bi2em20Tbmj5Srr418V9sa2Z7qKyzi07MXUylhaU7yjqhLCeiq3ddaFNxFYW7NLNG8t
zya+WO6Va9J7FW66mvwidnrXiPY3Ny8RyUn71Jj9Ht3RPjk19HK9pMHj8D1ER3rHN+jqqtTjjNps
uOe16zAifXzfTz7kNyndpYazS9qT0mszDdoxrsi6m8LazMq6zDOsq1ZEyrt1WWlXaUCqyq0rbKbi
Fdp6PReyFd8uqv8ACsfy83aXrPZHHto89/xX2/SP/dpj6y8vx6EBq5gAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAB5n2q03LfDqqx39y39npmlxbS/TOG5se29tuavzgWzeV4mtui2
O3RRSY2hdVhqO2MvI36iu9lUsrSrvDHn6spnmSiq5jooyV6tq1VV69RC32byTh43h8otMx+r6I+Z
aK/g8TwX7bXh9Mid4iW+fjl8n1ICWb57xLBOm4zqse20Tbmj8+qKdnS9q8PhcTw5tumSm0/OHMxz
0Za+uzx3sX1t0Zxurr1ZxvspWiZYWZbsbT0QK7KLrZVZJFaqt5vbezNOTg9J/FaZeJns93wCvLwb
T/GJn92uGHldIBowAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADuAPA67F9H4l
qMW20VvO3yRWW97T4fC4rXJHSMtI/WGhVlue3b473K2KzMML4+62tujG9pnozXaOSOVFMnVbmq1t
trJRW5E7wwvUxTvCyY6CHOt7moxz6Wh9PxTzYaT61h8x1MbZK/OH0zTf+Fxf6I/htj45vL9WgLMn
mvbPFvocGWO9L7fq85p5maw9d7VYvE4JkmPu2if3eW0+PasdFNOnxfF1Y2hlykRsmY+LJ0MZjZXa
eq2eyi8oQTO0KLdZWzPRjWu6VaqtHR73g0bcI0sf0Q8Nkq93wqNuFaWP+XDTDDytwBowAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAef9q8HNpcGaI60vtPyl56k9Iew49j8ThGe
PwxFv0l4zH2U26fDfTYiyJljvsjf4sm6vJ1hrXjq2MkqLdZEVbgbMx0auGdmzNt6iHN1Ub5af6of
TdPG2nxx6Vj+HzaaTm1+nx/iyVj930ysbViPRrj45vL9SAuyc7j1efguqj+jd4/T33rD3HEcPj8O
1GP8WOY/Z4TTT7sKadHhbcsZnaCJ3TPZk6VdrKbTutmP0U2nqgrGOsr8deiuI2X09EqKM1dt3uuG
f/jdN/06/wAPE546S9rwud+Gaaf+XH8NMMPK2wGjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAABrcRp4nDtRWPPHP8PCYusPoWSvNjtX1iYfPuWaXtX8MzCuvjfw32siu8ptXoxi
0wy5t4YulReqmazu2skbquURWFInddM7VYRGyL291KFnCcfj8e0le/Lbmn8n0N4b2Ur4nHLWmPsY
5e5a5+OXyXugBZmiY3iY9Xz7NjnTa3Ph/BeYj5PoTxftFg8Hjk2iOmWkW/Psrr418V5WrWd2faFc
V2jdnEMXWxntupmN7NiYU27iWML6dVMVnddjgVqMsdHr+CW5uE6f4Rt+7yuSsTDv+zWXn0WTHP3L
/tK+GHl+O0A1c4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8Dn93W56/wDM
t/L3z59qp24jn+OS38lnpr4r7ZxHQ2TEstt3PXUrt27K57rr1VT0BjKnJPRbMqMs7QlV2fYvHvrd
VknyrEfu9m8f7FZI8fVU85iJewbT45NfQBKo817W4eulzxHaZrL0rje09ItwqbfhtBVs3leai8RD
KLw1sduesL606dWFdsZT1jdhNeq6K9DlhCVUU6s4jZnt1YzAhnM71dH2bycmszY/K1d/0c6OzY4R
fwuK4p8rTstn6z8k7HrwGzkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHz3
Vxvr80/8y38voTwGpj/F5/8AqT/JfjTx/WVeyY6FPspc9dZPVXaOq2WEwIUTVRmjo2rNfLHRI3vZ
DJycXtX8dZh7t879nsnhcbwz23tt+r6I2nxyb+gCVBzuPY/E4PqI9K7ui19fTxNBnp60n+Aj5/pJ
3jZu1aOnnltMNussdfXbm+l3ZM9URHREdZVXTuT1Nk7boQiOkJw28PU47/htEp5eivJPLMTCZ9Vv
x7mJ3iJ9UqNHk8XR4b+tIXuhxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD
weqjbWZ4/wCZP8vePCaz/wDIaiP+Zb+UX408f0r9lOxWOifJhXWjfyYWllPRXYQxnrCrJHRd3YZI
6A1NJecHEsN/S0T+76bE7xE+r5dk93LW3pL6ZpMni6PDf8VIn9m2fjm8s9rgFmQxvHNS0esbMiew
PnHLyai9fS0w2aNfUTtrs3+uf5bGPqy068fF227KtSsdFlKqNGMV6myyY6sbdIQI8tlOWOi6Jhhk
j3RD0vA8nicMx9etZmHRcT2Zyb6XNT8N9/2dt0T449T2AJVAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAHhdfG3E9TH9cvdPEcXjk4zqI/q3L8aeP6xr2TsxpLOekMK6mFo6qpXSrm
OqBixvHSVmzC4OfqK7S9/wAByeLwbTW9K7fo8Fqo6Paeyl+fglI/Da0NcMPK7QC7AAB8313TiOf/
AKk/y2MHWrX4jG3E9R/1Lfyv0/aFNOrHxuU7LI7MMayGTVlHWUXhNe6Z6wIUsb9d1m20q7dkDpez
N9tRqKT5xEvRvKez9+Xis1/FSYerb5+OTyf6AFlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAB43j9eXjN/jWJ/Z7J5L2mry8Upb8VIF8f6aGOey2eynHvOy7bowrrYSxZSwQJ2YXZ
92N4BoanrEvVexmTm4blr+HJ/aHltRHSXofYm/1Wrp5RaJaYY+X49WA0c4AD51xONuKan/qW/lbp
+0MOLRtxbU/9SU4J7KadWPjep2WQrr2WRPRk1TvsndXMpiRCb9FNu0rbTuqvKBscCjfi9PhWZeue
V9n434rafTHL1TfPxy+T/QAszAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHmv
avHtfTZfnV6VxPajHzcNrf8ABeJFs/XnMcr4no18c+6vr2YadkY2YM57sEDLyY37Mo7MMnYGlqO0
vQ+xNfqNVb1tEfs87qZ2rL0/sVX/AHdnt65P7Q0wx8vx6UBo5wAHz/jUbcX1PT78qtO2vaCnJxjP
8Zif2amnnspp04+OjWejKJ6MKdmcMmyJn4m5ZHzEVPMwtJv0VZLbQDqezcb8RzT6Y/7vUPM+ytZt
n1OTyiIh6Ztn45N/6AFlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABocbxeLw
nUR5xXm/Rvq8+OMuDJjntaswEeBxT0bNZ6NatZpNqz3rO0rqsdO3PxlaWEMpY+aqWXkryT0ZT2V3
7A0dVPuy9f7G124NM/iyT/Z4zWT7sw957MYfB4Fp4/FE2/WWmGHldcBowAAeM9qKcvFeb8VIly9P
0nq7ntbTbVYL+tJj93CwT76unR4/jo0nozhhTsy3Y1sWljM9Ce7HyQIm3RRlttVbaWrnt0Sh6n2U
x8vD8mSfv3/h3XN4Bi8Lg2nj8Uc36y6TeOPXugCUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAPD8RxeBxXUU26Tbmj8+quro+02Lw+I4ssdslNvzhzazvDPbq8d7GW7Dfqz2VzG
0s2qd+iu/Zn5Ksk9BVztX1mI8930zh2LwOHabH+HHWP2fNYp4+vwYvxXiP3fUqxtWIjyjZtj45/L
faQFmQADzftfj3w6fJ6WmHmsP23rvaqnNwqLfhvEvIYZ+sV038bo0noy36MK9oZQxrdMyrlnMbMZ
QKrS1M07zEestq/RRjr4utwY/wAV4j91p9V18fQdJj8LR4ccfdpEfsuREbREJbuMAAAAAAAAAAAA
BAJAAAAEAJEAJQAJQAJEAJQAJQAJEACUJAQlAJEAJQAJQJAAAEAJEAJBAAAJAABAJEJAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwvanDzaPFmjvjv8A
tLztJ3h7HjGHx+FainnFeaPnHV4vFbeIU038VbHeGF+kso7Mb9mTdhKnLK3dRm7SIrHhGPxeP6Sv
9cT/AHfSnz72Zx+J7Q45/BWZ/Z9BbZ+OXyfQBZQABzeP4/E4NqI9Ii36S8Ng/wAx9C4jTxOH6ivr
jn+Hz3B/mQi/GvjdCnWNlsdI2V07LIlg6USrt2ZzZXMoFV+zPhGLxeOaavpbm/RVltEN72Yx+Jxm
b7dKUmf7L5+s9/HtRA2cqRACRACRACRACUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQCQQCRACRACRCQBCQBCQB
ACRACRACRACRACL1i9LVntMbPATTwdRkxT3pea/u+gPE8Xx+DxrPHlaYt+qNfGvjvtXXsi0dOrKk
dEXjZg6VMtbP2bMtXUdpEV0/Y2nNxbNf8OP+727xvsXH+N1U/wBEfy9k3nxyb+gCVQAGOWvNivX1
rMPnGGOXNNfOJ2fSZ6w+dZKeHxDPX8N7R+6L8a+L63KdoZ7q6zvEMpnowdKJ6ywmWUyqvIKM0vQ+
x+D6rU55+9aKx+TzWa36vbezmDwODYenW+95/Nphj5L6dQBo5wAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAEiAAAEoA
AAAAAAAAAAAAAEAkEAkRuAkQbgkQAkQAkQAkQAl5T2nx8nEMOT8dNv0l6pwfarHvpcGWPu32/WCr
YvK4mOem6b9mGKd4Z3idmFdka0y1c892zfpMtLPaNpEV6D2Kj/Eauf6YeweQ9ieuTVz8K/3evbT4
5NfQBKoAA8FxCvJxrUx/XMvevD8Zry8fz/Haf2RfjTx/6RSOnRMyypHu9kXjowrqVSrvPRnZVl6V
kK0775MsUjvadn0nT4ow6bFijtSsVfPuFYvpPGtNTy54mfy6vorXDm8l9pEC7JIgBIgBIgBIgBIg
BIgBIhIAgBIhIAgBIgBIIBIAAhIAhIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAAAAAAAAAAAAA
AAAAAAAAABAJQkAEAAAAAAAAAAjc3BIjdG4Mkbo5kcwMjdhzHMDPc3V8xzAs3N1fMjmBZubq+Y5g
Wbm6vmOYFm5ur5jmBZubq+Y5gWbm6vmOYFm5ur5jmBZubq+Y5gWbm6vmTzAz3N2HMnmBlu5ftFTx
OEZJ/DMW/d0t2rxKni8N1FPWkiZ9eS08e7Cy8dGGn6UhZaJljXZGnmc3UT3dPP2cnUT78xCIV6j2
H/8A9c/6f7vXPI+w8bU1U+vL/d63du5NfUiDcVSIAS8b7RV5eOb/AIqRL2TyXtNX/e2KfXH/AHlF
+NPH/pr4+2xcxx0hFpY11K7R16KM32ZWz3UaidqSgrc9kcPicWyZJjfw6T+727y3sXh2xarN+K0V
h6lvPjj3e0ASqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJQAAAAAkQAkQAkAAAAAAAAAAAAAAA
EgAAAAAAAAAAAAAAAAAAAAAgAAABKDcAN0bgkY8xzAyRux5kcwM9zdXNkTcFm6OZXzMeYFvMibKu
ZHMC2bo51U2RuC2bom6rc3BZzom6sBZzI52ADPnOdggFnMc6skFnMc6rc3BbznOp3RzAv50c6nml
HMC/nOf4qOY5wX85zqOc5wbHOc7X5znBsc6edr85zg2ec52vzpi4NjmY5bROG+/bllVzsNTk5dLl
n0pP8BHmMHWNmzt0aum8obm08vVjfrtnxztR0mXHzTvaZdjVRMTLkZo6yiFen9iZ2pqY/wBP93rN
3kPY+/LfPX1rE/u9XzN3HfqzdO6vmTuIZ7m7Hc3Bnu8t7TR/vHBP9E/y9Pu837SV31umn+if5Rfi
/j/01MMb1hjkrtKzBG0bMsmOZY11tOYamr6Und0LUc7XT7u3rJPqL8er9lcPhcFpbzyWm39v7O00
+FYvA4Zpsc94xxu227jv1IAgAAAAAAAAABKAAAASgASgBIgBIgBIgBIhIAAAAAAAAAAAAAAAAAAC
UACUJAAAAAAAAAAAABIAAAAAAAAAAAAAAAAAAAAg3AEbomQZbo3YzLGbAz3RNlc3YzcFs2YzdVN2
M2Bdzom6nmNwW86JurTAMuY3REJ2BB1ZRVMVBhsbSsiqeUFXLucq3lTygp5TlXcpygp5TlXcpygp
5TlXcqOUFXKjlXcrGYBXysdlswiYBVMdUTCyY6sZBWxlnMMZgGLGZZSwkDdHMiWO4MuY5mEyjcFn
N1OdVzHMC3nTzqeY5gX85zqOZPMC+Lqdbk20eb/RKOZr8QybaK/XvtH7iZ9aGlp2luzT3fg19NHS
OjbmPcYX67XH1XSZ9XIzRvMuzrK7zLkZYmYnciunb9lZ5dTk+OP+71cXeP8AZnJ/ip2nf3J/l6iL
/Fu5L9bMWZczXi6YuIbEWTzKIuyiwLt3nuO25uI4a/hx7/rLuczg8TicvFLbfdpEK6+NPH/phhjo
stLGkctUWnoxrrU3j1cnWTzZq1jzl1clo5Zcu8c+txR63iP3Tn6pv4+g4o5cVI9IiGe7CJ2iE7t3
GyN2O6dwSINwSISAlAAlACRAAlAAlACRACRCQAAAAAAAAAASgASISAAAAAAAAAAAAACQAAAAAAAA
AAAAAASAAAAAAAAAAAAAAAAIAAAQCAJljuljsCJlhMs9mOwMJYys5TkBVsjZdyHICrZPKt5E8oK4
qmKrOVOwMIqyirPY2Bjyp2ZbAI2NmSARsbMgEbI2ZAMdjZICNkbMkSCNmOzJEgx2YyzljMAwlhKy
WEwCuWErJhhMArlhLOWEgxljMpljIImWMyTKJA3N0IBO5vux3NwZbnMx3NwZczT4jf3MdPW27a3a
fJOq1XNP2KdIRfi+J2trSYfcjeF+Wm1OicVeWIiN9kai8xjY12ORqultnI1Ecsujq79XP1FovWYI
rTgeq+j8QrWZ+3Mx+r2UXeC0WG2Ti2kiN5mL807eUREvbzbaejefHJv62Iv8WUXa0WTFhVtRdlF2
rz9WUXBtc7jR9dqc2T1ttHyhvZMvJitb0jdq6XHNcNenWVN3028U99WRj6Kb02be3Tq18/SN2Lpc
3UdN9nOmZrqKX/DaJ/d0svvTLRzV3jomK6+Pd1vvWJj0ZczT0mXxNJht60hfFnQ4qu3N1cWTEgs3
Tur5k7gz3N2O5uDM3Y7m4MtxBuCQASIASIASAAAAAAACRCQAAAAAAAAEoSAAAAAAAAAAAlAAlCQA
AAAAAAAAAAASAAAAAAAAAAAAIASgAAAEJAQJQCNkbMgGOyOVnsAw5TlZ7GwMOVPKy2NgY7GzIBGx
skA2AAAAAAAAAAQkBAEghEskAxYzDPZGwK5hjMLJhjMAqmGEwumrCagomFcw2JqqtUFEsLLrV82F
o7gqljKyYYTGwMZRKUSCAQAboJnaN5Bjkneu0d5W4ccViIiOzHFWbTzNumP1Zarr8eeRMbxDW1Mx
NO67NbkhzNVnmInqzaOZrL93JyZeV0M1++7S02jvxDWxhxx033tPpC8Z6rrezWjmZyazJG2/u03h
2vFibTHoqvamiwVwY+nLGzV0+SZ1Mx8G0/45tOhzJ5lXMc3UVXRdlF1HP+iYsDPLPPy49/tz1+Te
pSIr0ho6ak5Ms5J8o2q6NImOrHV7XX488ypzTtHXo0s9t6zG7c1G1qz6ubeZiZ3UatXJG3yauSO7
cvMTEx5tPLb3prPRMVr0HB8vicNxf0+7+kt+LOJwTJyY/Bnz3tH93X36N58cWvq6LSyiyndMSlC7
mZcymLJiwLosmJVRLKLAtiU7q4lMSCzc3YxJuDMRuAlKAEgAAAlAkAAAAAABKAEgAAAAAJAAAAAA
AAAAAAAEgAAAAAAAAAAAAAkAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAhIAAACAAAASgAAAAAAEAAAA
hGzJAImGMwzQDDZjNVuyNgUTVhNGxysZqDVmiu1G5NN2M4waM0+DCaN2cbGcQNGaMZq3JxMJxA1J
qx2bU4kU09slorWNwa20z02RXHbJbl26QvtFovbHWkxEdJt5y2MOHlr2U1W3jx+1hiw8vSO63lmI
XRTaEWmtY6snRHO1VpmJ+DjavpSZl2s8b7y4HFcnh0n0gha5ebJN55KRM2mdoiPN6fh+kpwXh0Wy
RHj5Otp/s5Ps1p62y31+em9aTMYt/OfVfxTiPjZ52naI7fBrI5t66xz5+a1rW7yx0eSL6iZjtEOX
qNbSletom3lENjh2fbHzbbWt3iVozruc+5ztWubf4M4ybpQ2Oboyrva0Vjza8WdDR4OkXt3n9ldX
kaePP9VtYqctYhdvt5oivTeCZ2YOxXk6ubqMfV0b9mrljfqlFcq88k7z2U5axeItDa1OPessuC8P
ya7XRWYnwqdbT/ZMilvIu4dpslNdixXja8Y5tt85djZdbDWnGOesRtXFtuw6T27No5Kx2OrKYQlC
ExKJgBnEpiyvdlEgsizKLKollFgWxLKJVRLKJBbEp3VxLKJBnuMWQJEbpBIAAAJAAAABIAAAAAAA
lAJAAAAAAAAAAAAAASAAAAAAAAAAAAAJAAAABAJABAlAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAA
AAABAJQAAAAgAABAAI2EoBGyJhkgGPKxmqxAKpownHC+YRMdN5BrTj67R3bOn01o7p01Iv71u89o
b9a7LfBTfS1vWI2jf12VfQPSW8KX2mas+NC2iv6xMNfJpMnLtEbuuxtMRCtzF55NR5rPps1N/ctP
y6uHreE6nXZ4pak48X3rT06fB7fNeI33cbX6mI32R/MWu7XF116aDSRhxbRERs8f499bkyZeeKae
kzE2mdon81/tfxDLGOunwbzlzbx08oaHBvZHJlx48mrvaa94pu04y617576rNGLRRM0397JEd/lu
9Dw/S3x4qxffo6mm4NjwUiKY4iI9Ib1dHFY6QIaNabbrYrLfrpJtaK1rMzPZb/s+05IpP59OyLeJ
k7eNfRaOc1ue32I7fGXYpi5Y77M8OGMeOKxHSFsU3Y29deZMzirl6dlVvhLatCjJHeYQv1rXnps1
8k9/VsW6qLVmZIi1rzitlvFKRvaZ2h6TSaenC9FFY+3brM+sqeG8Prp4+kZ+lvuxPkr1mqm95nfp
DXM459676a2q1dsV7XietvNno78+CJn1cjX6mOeIm0bR33dfRU5NJjidt9t5afjG/V6JZ7I2QMNh
nyo2BhsMuVG3wAhMSbbQRAMolnE+iuGUSCyJZRKuGUSCyJZK4llEgyZMYTuCUsYSCQASISAAAlCQ
AAAAAAEoASCASAAAAAAAAAAAAlACRACQAAAAAAAAAEgCEoASCAAAAAAAAAAAAAAAAAAAAAAABAAA
AAAAAAAISAIAAAAAAQAAACASgAAAQJAQAAhIDHZhln3do7z0WS18mWsajHjmes7pg3dNi5aRMNqO
yvDHTpPRaigHZhN4hHRlaVN59JY3zRENLUavaO+yq0iNVlitJ6vNcR1MVi0zO0era1/Ea0rPvbz5
PM5MWp45qvo2GZrhmfrsnpHpHzTCseEcM/2vrr8Q1Eb4qzy44nziPN63HpYiIiI7LNHoqabBTFii
IpSNohuVxrKtWMEejPwY9G1FFmHB4mWJn7MdfnIM9JpIx15to5pbUaas/a6rqViI7MxPxqX0UT1r
O3wVzpbR2hviP5i03Y5s6a879FNtHljydhExCv8AMTPJXBnRZbz0iG5ptFjwe/l96zctMVamTJtE
yTMibu1VrdTzRMR0j0ed4lr64MVpm0RERvMz5NvX62uOJ69XhOKX1HH9bHDtFvNYnfJeOy0Z2ojX
6jjnEq6fRUmccTvN/J9H0eKcOnx45neaxEbubwHgOHg+milI3vP2resu3Wu0JQmITsmISDHZHKz2
JgFc1RMLJhGwK9iIZ7MZgEdgmAEwyiWCdwWRLKJVxKYsC2JTuriWUSDNlEsIlMAySx3SCRCQSIAS
AAACRACQAAAAAAASIASAAAAAAAAAAAAAAACRACRACQASIAAAAAAAAAAAAAAAAAAAAAAAAQCUAAAA
AAAAAAIAAAAAAAAQAAAAAACBICBICAAEJAQJQCJcLjuS2ny6fPG/LWdpd1o8T0X07SXx/e7wCdJx
Wa0jmneHQpxPDMdZmJfNtZm49weZrh0/j4o7VtSZ2+Uw0/8A7o49k92vBLc/ntFohFW9PqGXimOI
6Tu1L8T3eCx6r2t1O3JwvHjifO99v7t/Bwf2l1PXU6rS6eJ8qUm8x+so5TsekzcSjbvs4mt4rzW5
K2mbT0itesy2cHsvbvqtbmyz5xERWP2jd1tJwrTaONsOKtZ8585+cnDrzmn4Rq+IZObUROHD32n7
Vv8A0ej0uhxaXFGPFSK1j0bkY4jyZRVZVXFGUVWbGwKsk8mObekNrSW3pWf1a2aYjHbm7bNnQ1id
PW0TvuDdhJEbQABMsLW2R0ZTMQrvfbz2YWzVhpanUxEd0dWkW5c8R5uXxDX1w4pnfr5Q19XxKuOJ
2neXltVqtVxbV/RdJ715+1bypANfiOu1HENV9C0MTfNeesx2rD1PAeBYuE6aKx72W3W9/WVnBuB4
eF4dqRzZbdb5J72l160WVK02ZxCYhOwI23TsnY2BGxsnYBjsiYZsZBjMMZZSgGEolMsQDdG6NwZ7
piVe6YkFsSziVMWZRILolMSriWUSCyJTuwhMSDMRCQSI3SAlACRCQAAEoAEoASAAAAAAAAACUACR
ACQAAAAAAAAAAAAASAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAABAAAAAAAAAAAAACBKAAAAAAAQ
JQAAAhICEbJAYTWJ7wx8KvpC0BV4ceieWGewDHlNmWwCNjZICNhIDmcZredBecdpiY69FXCOLW+i
UiZidukulmxxlx2paN4mNng+K4+I8Hy2yaTfl37TXetoCPfRxfp1qi3F48ofKMvtvxak8s6LDv61
rZji9rPaLUf5PC+bfttS0q8q3p9W/wBrRMdpUZuKdN99nzvFqPbTVz7nD8OKs+do2/mW3h4D7Xaq
ZnPrtNpqz35aRaYOHY9Zk4pNt9rR+rl6zi+OnS+WN57Rv1lXp/YrNaYtruL6zNPnGO3hxP6O5w/2
f0HDuun09Yv55Le9afznqcOvO4tBreMTHu30unnva0bWt8on+70nDuE4OHYYx4Kbesz3tPrMuhGO
IjpDOKrK9YVpsyiGUQnYGOyUgI2SlAIEmwMWMs9kTAMJYzDOYRMArmGErZhhMArlHmzmGMwDE3Ts
bAbs4swj5pgFkSziVcM4BZEsolXDKAZwyhjCYBkACQhIAAAAAAAJAAAAAAAAAAAAAAAAAAAShIAA
AAAAAAJAAAAAAAAAAAAAABAJEAAAAAAAAAAAAAAAIEoBKAAAAAAAAAAAAAAABAlAAAAAAAIAAAAA
BAkBAkBAkBAlACEgMZjdjbFW8bWrEx8YWANb6Fp+bfwab+vLDKMFK9qxH5L0bAr8OPRPKz2AY7J2
SbAjYZAI2E7AIEgIEgIEgMdkSy2NgY7MdlmyNoBXsxmFuyNgVTVjNV3KjlBRNTlXTVHKCrlIqt5T
lBhEMohlFerLlBjEMohMVTEARDKCITsAk2AEgAAAkAAAAAAAAAAAAAAAAAAAAAAAASAAAAAAAAD/
2Q==`;async function Lge(e){const t=(n,s="application/octet-stream")=>fetch(`data:${s};base64,${n}`).then(i=>i.blob());let a,r;switch(e.config.warmup){case"face":a=await t(AA);break;case"body":case"full":a=await t(xA);break;default:a=null}if(a){const n=await createImageBitmap(a);r=await e.detect(n,e.config),n.close()}return r}async function Wge(e){return new Promise(t=>{let a;switch(e.config.warmup){case"face":a="data:image/jpeg;base64,"+AA;break;case"full":case"body":a="data:image/jpeg;base64,"+xA;break;default:a=null}let r;if(typeof Image!="undefined")r=new Image;else if(Ne.Image)r=new Ne.Image;else return;r.onload=async()=>{const n=Qr(r.naturalWidth,r.naturalHeight);if(!n)de("Warmup: Canvas not found"),t(void 0);else{const s=n.getContext("2d");s&&s.drawImage(r,0,0);const i=await e.image(n),o=await e.detect(i.tensor,e.config);t(o)}},a?r.src=a:t(void 0)})}async function Bge(e){const t=n=>Buffer.from(n,"base64");let a;e.config.warmup==="face"?a=t(AA):a=t(xA);let r;if("node"in Qd){const n=(void 0).decodeJpeg(a),s=n.expandDims(0);e.tf.dispose(n),r=await e.detect(s,e.config),e.tf.dispose(s)}else e.config.debug&&de("Warmup tfjs-node not loaded");return r}async function Vge(e,t){const a=ue();if(e.state="warmup",t&&(e.config=or(e.config,t)),!e.config.warmup||e.config.warmup.length===0||e.config.warmup==="none")return{face:[],body:[],hand:[],gesture:[],object:[],performance:e.performance,timestamp:ue(),persons:[],error:null};let r;return new Promise(async n=>{typeof createImageBitmap=="function"?r=await Lge(e):typeof Image!="undefined"||Ne.Canvas!==void 0?r=await Wge(e):r=await Bge(e);const s=ue();e.config.debug&&de("Warmup",e.config.warmup,Math.round(s-a),"ms"),e.emit("warmup"),n(r)})}var jd,bc,vc,Kg,Xge=class{constructor(e){fe(this,"version"),fe(this,"config"),fe(this,"result"),fe(this,"state"),fe(this,"process"),fe(this,"tf"),fe(this,"env"),fe(this,"draw"),fe(this,"models"),fe(this,"events"),fe(this,"faceTriangulation"),fe(this,"faceUVMap"),fe(this,"performance"),Mp(this,jd,void 0),Mp(this,bc,void 0),Mp(this,vc,void 0),fe(this,"gl"),fe(this,"analyze",(...t)=>{if(!$p(this,bc))return;const a=this.tf.engine().state.numTensors,r=$p(this,jd);_p(this,jd,a);const n=a-r;n!==0&&de(...t,n)}),Mp(this,Kg,t=>{if(!$p(this,vc))return null;if(!t)return"input is not defined";if(this.env.node&&!(t instanceof et))return"input must be a tensor";try{this.tf.getBackend()}catch{return"backend not loaded"}return null}),fe(this,"similarity",Oge),fe(this,"distance",yA),fe(this,"match",Dge),fe(this,"emit",t=>{var a;this.events&&this.events.dispatchEvent&&((a=this.events)==null||a.dispatchEvent(new Event(t)))}),this.env=Ne,Ml.wasmPath=hA["tfjs-core"].includes("-")?"https://vladmandic.github.io/tfjs/dist/":`https://cdn.jsdelivr.net/npm/@tensorflow/tfjs-backend-wasm@${Jv}/dist/`,Ml.modelBasePath=Ne.browser?"../models/":"file://models/",Ml.backend=Ne.browser?"humangl":"tensorflow",this.version=Ib,Object.defineProperty(this,"version",{value:Ib}),this.config=JSON.parse(JSON.stringify(Ml)),Object.seal(this.config),e&&(this.config=or(this.config,e)),this.config.cacheModels=typeof indexedDB!="undefined",x0e(this.config),this.tf=Qd,this.state="idle",_p(this,jd,0),_p(this,bc,!1),_p(this,vc,!1),this.performance={},this.events=typeof EventTarget!="undefined"?new EventTarget:void 0,this.models=new yge,this.draw={options:Wi,canvas:(t,a)=>Sge(t,a),face:(t,a,r)=>gS(t,a,r),body:(t,a,r)=>yS(t,a,r),hand:(t,a,r)=>AS(t,a,r),gesture:(t,a,r)=>mS(t,a,r),object:(t,a,r)=>xS(t,a,r),person:(t,a,r)=>Ige(t,a,r),all:(t,a,r)=>Tge(t,a,r)},this.result={face:[],body:[],hand:[],gesture:[],object:[],performance:{},timestamp:0,persons:[],error:null},this.process={tensor:null,canvas:null},this.faceTriangulation=mme,this.faceUVMap=gme,this.gl=St,this.emit("create")}reset(){const e=this.config.backend;this.config=JSON.parse(JSON.stringify(Ml)),this.config.backend=e}validate(e){return V5(Ml,e||this.config)}now(){return ue()}image(e,t=!0){return Jc(e,this.config,t)}async segmentation(e,t){return gge(e,t,this.config)}enhance(e){return Z8(e)}compare(e,t){return g0e(this.config,e,t)}async init(){await Bm(this,!0),await this.tf.ready()}async load(e){this.state="load";const t=ue(),a=Object.values(this.models).filter(s=>s).length;e&&(this.config=or(this.config,e)),this.env.initial&&(this.config.debug&&de(`version: ${this.version}`),this.config.debug&&de(`tfjs version: ${this.tf.version["tfjs-core"]}`),await Bm(this)||de("error: backend check failed"),await $c(),this.env.browser&&(this.config.debug&&de("configuration:",this.config),this.config.debug&&de("environment:",this.env),this.config.debug&&de("tf flags:",this.tf.ENV.flags))),await Age(this),this.env.initial&&this.config.debug&&de("tf engine state:",this.tf.engine().state.numBytes,"bytes",this.tf.engine().state.numTensors,"tensors"),this.env.initial=!1,Object.values(this.models).filter(s=>s).length!==a&&(await xge(this),this.emit("load"));const n=Math.trunc(ue()-t);n>(this.performance.loadModels||0)&&(this.performance.loadModels=this.env.perfadd?(this.performance.loadModels||0)+n:n)}next(e=this.result){return zge(e,this.config)}async warmup(e){const t=ue(),a=await Vge(this,e),r=ue();return this.performance.warmup=Math.trunc(r-t),a}async profile(e,t){const a=await this.tf.profile(()=>this.detect(e,t)),r={};for(const i of a.kernels)r[i.name]?r[i.name]+=i.kernelTimeMs:r[i.name]=i.kernelTimeMs;const n=[];Object.entries(r).forEach(i=>n.push({name:i[0],ms:i[1]})),n.sort((i,o)=>o.ms-i.ms),n.length=20;const s={};for(const i of n)s[i.name]=i.ms;return s}async detect(e,t){return this.state="detect",new Promise(async a=>{var r,n,s,i,o,l,d,u,h,p,c,f,m,g,y,A,x,b,v,T,C,E;this.state="config";let R;this.config=or(this.config,t),this.state="check";const z=$p(this,Kg).call(this,e);z&&(de(z,e),this.emit("error"),a({face:[],body:[],hand:[],gesture:[],object:[],performance:this.performance,timestamp:ue(),persons:[],error:z}));const F=ue();await Bm(this),await this.load(),R=ue(),this.state="image";const k=await Jc(e,this.config);if(this.process=k,this.performance.inputProcess=this.env.perfadd?(this.performance.inputProcess||0)+Math.trunc(ue()-R):Math.trunc(ue()-R),this.analyze("Get Image:"),!k.tensor){this.config.debug&&de("could not convert input to tensor"),this.emit("error"),a({face:[],body:[],hand:[],gesture:[],object:[],performance:this.performance,timestamp:ue(),persons:[],error:"could not convert input to tensor"});return}this.emit("image"),R=ue(),this.config.skipAllowed=await m0e(this.config,k.tensor),this.performance.totalFrames||(this.performance.totalFrames=0),this.performance.cachedFrames||(this.performance.cachedFrames=0),this.performance.totalFrames++,this.config.skipAllowed&&this.performance.cachedFrames++,this.performance.cacheCheck=this.env.perfadd?(this.performance.cacheCheck||0)+Math.trunc(ue()-R):Math.trunc(ue()-R),this.analyze("Check Changed:");let D=[],_=[],P=[],j=[];this.state="detect:face",this.config.async?(D=this.config.face.enabled?L5(this,k.tensor):[],this.performance.face&&delete this.performance.face):(R=ue(),D=this.config.face.enabled?await L5(this,k.tensor):[],this.performance.face=this.env.perfadd?(this.performance.face||0)+Math.trunc(ue()-R):Math.trunc(ue()-R)),this.config.async&&(this.config.body.maxDetected===-1||this.config.hand.maxDetected===-1)&&(D=await D),this.analyze("Start Body:"),this.state="detect:body";const L=this.config.body.maxDetected===-1?or(this.config,{body:{maxDetected:this.config.face.enabled?1*D.length:1}}):this.config;this.config.async?(((r=this.config.body.modelPath)==null?void 0:r.includes("posenet"))?_=this.config.body.enabled?D5(k.tensor,L):[]:((n=this.config.body.modelPath)==null?void 0:n.includes("blazepose"))?_=this.config.body.enabled?qb(k.tensor,L):[]:((s=this.config.body.modelPath)==null?void 0:s.includes("efficientpose"))?_=this.config.body.enabled?Yb(k.tensor,L):[]:((i=this.config.body.modelPath)==null?void 0:i.includes("movenet"))&&(_=this.config.body.enabled?F5(k.tensor,L):[]),this.performance.body&&delete this.performance.body):(R=ue(),((o=this.config.body.modelPath)==null?void 0:o.includes("posenet"))?_=this.config.body.enabled?await D5(k.tensor,L):[]:((l=this.config.body.modelPath)==null?void 0:l.includes("blazepose"))?_=this.config.body.enabled?await qb(k.tensor,L):[]:((d=this.config.body.modelPath)==null?void 0:d.includes("efficientpose"))?_=this.config.body.enabled?await Yb(k.tensor,L):[]:((u=this.config.body.modelPath)==null?void 0:u.includes("movenet"))&&(_=this.config.body.enabled?await F5(k.tensor,L):[]),this.performance.body=this.env.perfadd?(this.performance.body||0)+Math.trunc(ue()-R):Math.trunc(ue()-R)),this.analyze("End Body:"),this.analyze("Start Hand:"),this.state="detect:hand";const B=this.config.hand.maxDetected===-1?or(this.config,{hand:{maxDetected:this.config.face.enabled?2*D.length:1}}):this.config;this.config.async?(((p=(h=this.config.hand.detector)==null?void 0:h.modelPath)==null?void 0:p.includes("handdetect"))?P=this.config.hand.enabled?v5(k.tensor,B):[]:((f=(c=this.config.hand.detector)==null?void 0:c.modelPath)==null?void 0:f.includes("handtrack"))&&(P=this.config.hand.enabled?T5(k.tensor,B):[]),this.performance.hand&&delete this.performance.hand):(R=ue(),((g=(m=this.config.hand.detector)==null?void 0:m.modelPath)==null?void 0:g.includes("handdetect"))?P=this.config.hand.enabled?await v5(k.tensor,B):[]:((A=(y=this.config.hand.detector)==null?void 0:y.modelPath)==null?void 0:A.includes("handtrack"))&&(P=this.config.hand.enabled?await T5(k.tensor,B):[]),this.performance.hand=this.env.perfadd?(this.performance.hand||0)+Math.trunc(ue()-R):Math.trunc(ue()-R)),this.analyze("End Hand:"),this.analyze("Start Object:"),this.state="detect:object",this.config.async?(((x=this.config.object.modelPath)==null?void 0:x.includes("nanodet"))?j=this.config.object.enabled?M5(k.tensor,this.config):[]:((b=this.config.object.modelPath)==null?void 0:b.includes("centernet"))&&(j=this.config.object.enabled?Kb(k.tensor,this.config):[]),this.performance.object&&delete this.performance.object):(R=ue(),((v=this.config.object.modelPath)==null?void 0:v.includes("nanodet"))?j=this.config.object.enabled?await M5(k.tensor,this.config):[]:((T=this.config.object.modelPath)==null?void 0:T.includes("centernet"))&&(j=this.config.object.enabled?await Kb(k.tensor,this.config):[]),this.performance.object=this.env.perfadd?(this.performance.object||0)+Math.trunc(ue()-R):Math.trunc(ue()-R)),this.analyze("End Object:"),this.state="detect:await",this.config.async&&([D,_,P,j]=await Promise.all([D,_,P,j])),this.state="detect:gesture";let W=[];this.config.gesture.enabled&&(R=ue(),W=[...$ge(D),...Fge(_),..._ge(P),...Mge(D)],this.config.async?this.performance.gesture&&delete this.performance.gesture:this.performance.gesture=this.env.perfadd?(this.performance.gesture||0)+Math.trunc(ue()-R):Math.trunc(ue()-R)),this.performance.total=this.env.perfadd?(this.performance.total||0)+Math.trunc(ue()-F):Math.trunc(ue()-F);const ee=((E=(C=this.process)==null?void 0:C.tensor)==null?void 0:E.shape)||[];this.result={face:D,body:_,hand:P,gesture:W,object:j,performance:this.performance,canvas:this.process.canvas,timestamp:Date.now(),error:null,get persons(){return Pge(D,_,P,W,ee)}},ne(k.tensor),this.emit("detect"),this.state="idle",a(this.result)})}};jd=new WeakMap;bc=new WeakMap;vc=new WeakMap;Kg=new WeakMap;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * Human main module
 * @default Human Library
 * @summary <https://github.com/vladmandic/human>
 * @author <https://github.com/vladmandic>
 * @copyright <https://github.com/vladmandic>
 * @license MIT
 *//**
* @license
* Copyright 2018 Google LLC. All Rights Reserved.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* =============================================================================
*//** @license See the LICENSE file. */export{Xge as H};
